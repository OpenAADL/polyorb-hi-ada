(* Module for axiomatizing type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_short_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -128 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  127
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short_short_integer__ref #"system.ads" 1 0 0# =
  { mutable short_short_integer__content "model_trace:" : short_short_integer }
 
 function short_short_integer__ref___projection #"system.ads" 1 0 0# 
   (a : short_short_integer__ref) : short_short_integer =
  a.short_short_integer__content
 
 meta "model_projection" function short_short_integer__ref___projection
 
 meta "inline : no" function short_short_integer__ref___projection
 
 val short_short_integer__havoc #"system.ads" 1 0 0# 
   (x : short_short_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -32768 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  32767
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short_integer__ref #"system.ads" 1 0 0# =
  { mutable short_integer__content "model_trace:" : short_integer }
 
 function short_integer__ref___projection #"system.ads" 1 0 0# 
   (a : short_integer__ref) : short_integer =
  a.short_integer__content
 
 meta "model_projection" function short_integer__ref___projection
 
 meta "inline : no" function short_integer__ref___projection
 
 val short_integer__havoc #"system.ads" 1 0 0# 
   (x : short_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer__ref #"system.ads" 1 0 0# =
  { mutable integer__content "model_trace:" : integer }
 
 function integer__ref___projection #"system.ads" 1 0 0# 
   (a : integer__ref) : integer =
  a.integer__content
 
 meta "model_projection" function integer__ref___projection
 
 meta "inline : no" function integer__ref___projection
 
 val integer__havoc #"system.ads" 1 0 0# 
   (x : integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long_integer__ref #"system.ads" 1 0 0# =
  { mutable long_integer__content "model_trace:" : long_integer }
 
 function long_integer__ref___projection #"system.ads" 1 0 0# 
   (a : long_integer__ref) : long_integer =
  a.long_integer__content
 
 meta "model_projection" function long_integer__ref___projection
 
 meta "inline : no" function long_integer__ref___projection
 
 val long_integer__havoc #"system.ads" 1 0 0# 
   (x : long_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_long_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long_long_integer__ref #"system.ads" 1 0 0# =
  { mutable long_long_integer__content "model_trace:" : long_long_integer }
 
 function long_long_integer__ref___projection #"system.ads" 1 0 0# 
   (a : long_long_integer__ref) : long_long_integer =
  a.long_long_integer__content
 
 meta "model_projection" function long_long_integer__ref___projection
 
 meta "inline : no" function long_long_integer__ref___projection
 
 val long_long_integer__havoc #"system.ads" 1 0 0# 
   (x : long_long_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
 use import "_gnatprove_standard".Main
 use import "int".Int

 type natural #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = natural, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type natural__ref #"system.ads" 1 0 0# =
  { mutable natural__content "model_trace:" : natural }
 
 function natural__ref___projection #"system.ads" 1 0 0# 
   (a : natural__ref) : natural =
  a.natural__content
 
 meta "model_projection" function natural__ref___projection
 
 meta "inline : no" function natural__ref___projection
 
 val natural__havoc #"system.ads" 1 0 0# 
   (x : natural__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type positive__ref #"system.ads" 1 0 0# =
  { mutable positive__content "model_trace:" : positive }
 
 function positive__ref___projection #"system.ads" 1 0 0# 
   (a : positive__ref) : positive =
  a.positive__content
 
 meta "model_projection" function positive__ref___projection
 
 meta "inline : no" function positive__ref___projection
 
 val positive__havoc #"system.ads" 1 0 0# 
   (x : positive__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type short_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = short_float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type short_float__ref #"system.ads" 1 0 0# =
  { mutable short_float__content "model_trace:" : short_float }
 
 function short_float__ref___projection #"system.ads" 1 0 0# 
   (a : short_float__ref) : short_float =
  a.short_float__content
 
 meta "model_projection" function short_float__ref___projection
 
 meta "inline : no" function short_float__ref___projection
 
 val short_float__havoc #"system.ads" 1 0 0# 
   (x : short_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type float__ref #"system.ads" 1 0 0# =
  { mutable float__content "model_trace:" : float }
 
 function float__ref___projection #"system.ads" 1 0 0# 
   (a : float__ref) : float =
  a.float__content
 
 meta "model_projection" function float__ref___projection
 
 meta "inline : no" function float__ref___projection
 
 val float__havoc #"system.ads" 1 0 0# 
   (x : float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type long_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_float, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type long_float__ref #"system.ads" 1 0 0# =
  { mutable long_float__content "model_trace:" : long_float }
 
 function long_float__ref___projection #"system.ads" 1 0 0# 
   (a : long_float__ref) : long_float =
  a.long_float__content
 
 meta "model_projection" function long_float__ref___projection
 
 meta "inline : no" function long_float__ref___projection
 
 val long_float__havoc #"system.ads" 1 0 0# 
   (x : long_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type long_long_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_long_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type long_long_float__ref #"system.ads" 1 0 0# =
  { mutable long_long_float__content "model_trace:" : long_long_float }
 
 function long_long_float__ref___projection #"system.ads" 1 0 0# 
   (a : long_long_float__ref) : long_long_float =
  a.long_long_float__content
 
 meta "model_projection" function long_long_float__ref___projection
 
 meta "inline : no" function long_long_float__ref___projection
 
 val long_long_float__havoc #"system.ads" 1 0 0# 
   (x : long_long_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  255
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type character__ref #"system.ads" 1 0 0# =
  { mutable character__content "model_trace:" : character }
 
 function character__ref___projection #"system.ads" 1 0 0# 
   (a : character__ref) : character =
  a.character__content
 
 meta "model_projection" function character__ref___projection
 
 meta "inline : no" function character__ref___projection
 
 val character__havoc #"system.ads" 1 0 0# 
   (x : character__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  65535
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wide_character__ref #"system.ads" 1 0 0# =
  { mutable wide_character__content "model_trace:" : wide_character }
 
 function wide_character__ref___projection #"system.ads" 1 0 0# 
   (a : wide_character__ref) : wide_character =
  a.wide_character__content
 
 meta "model_projection" function wide_character__ref___projection
 
 meta "inline : no" function wide_character__ref___projection
 
 val wide_character__havoc #"system.ads" 1 0 0# 
   (x : wide_character__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_wide_character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wide_wide_character__ref #"system.ads" 1 0 0# =
  { mutable wide_wide_character__content "model_trace:" : wide_wide_character }
 
 function wide_wide_character__ref___projection #"system.ads" 1 0 0# 
   (a : wide_wide_character__ref) : wide_wide_character =
  a.wide_wide_character__content
 
 meta "model_projection" function wide_wide_character__ref___projection
 
 meta "inline : no" function wide_wide_character__ref___projection
 
 val wide_wide_character__havoc #"system.ads" 1 0 0# 
   (x : wide_wide_character__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__integer
 use        Standard__positive
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 function to_string #"system.ads" 1 0 0# 
   (x : Main.__image) : string
 
 function from_string #"system.ads" 1 0 0# 
   (x : string) : Main.__image
 
 type string__ref #"system.ads" 1 0 0# =
  { mutable string__content "model_trace:" : string }
 
 function string__ref___projection #"system.ads" 1 0 0# 
   (a : string__ref) : string =
  a.string__content
 
 meta "model_projection" function string__ref___projection
 
 meta "inline : no" function string__ref___projection
 
 val string__havoc #"system.ads" 1 0 0# 
   (x : string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__wide_character.wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_character
 use        Array__Int__Standard__wide_character

 type component_type #"system.ads" 1 0 0# =
  Standard__wide_character.wide_character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_string__ref #"system.ads" 1 0 0# =
  { mutable wide_string__content "model_trace:" : wide_string }
 
 function wide_string__ref___projection #"system.ads" 1 0 0# 
   (a : wide_string__ref) : wide_string =
  a.wide_string__content
 
 meta "model_projection" function wide_string__ref___projection
 
 meta "inline : no" function wide_string__ref___projection
 
 val wide_string__havoc #"system.ads" 1 0 0# 
   (x : wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__wide_wide_character.wide_wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_wide_character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wide_wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_wide_character
 use        Array__Int__Standard__wide_wide_character

 type component_type #"system.ads" 1 0 0# =
  Standard__wide_wide_character.wide_wide_character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_wide_string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_wide_string__ref #"system.ads" 1 0 0# =
  { mutable wide_wide_string__content "model_trace:" : wide_wide_string }
 
 function wide_wide_string__ref___projection #"system.ads" 1 0 0# 
   (a : wide_wide_string__ref) : wide_wide_string =
  a.wide_wide_string__content
 
 meta "model_projection" function wide_wide_string__ref___projection
 
 meta "inline : no" function wide_wide_string__ref___projection
 
 val wide_wide_string__havoc #"system.ads" 1 0 0# 
   (x : wide_wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type duration #"system.ads" 1 0 0# 
 
 function inv_small #"system.ads" 1 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"system.ads" 1 0 0# 
   : Main.__fixed =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : Main.__fixed =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type duration__ref #"system.ads" 1 0 0# =
  { mutable duration__content "model_trace:" : duration }
 
 function duration__ref___projection #"system.ads" 1 0 0# 
   (a : duration__ref) : duration =
  a.duration__content
 
 meta "model_projection" function duration__ref___projection
 
 meta "inline : no" function duration__ref___projection
 
 val duration__havoc #"system.ads" 1 0 0# 
   (x : duration__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -128 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  127
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_8__ref #"system.ads" 1 0 0# =
  { mutable integer_8__content "model_trace:" : integer_8 }
 
 function integer_8__ref___projection #"system.ads" 1 0 0# 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref___projection
 
 meta "inline : no" function integer_8__ref___projection
 
 val integer_8__havoc #"system.ads" 1 0 0# 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -32768 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  32767
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_16__ref #"system.ads" 1 0 0# =
  { mutable integer_16__content "model_trace:" : integer_16 }
 
 function integer_16__ref___projection #"system.ads" 1 0 0# 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref___projection
 
 meta "inline : no" function integer_16__ref___projection
 
 val integer_16__havoc #"system.ads" 1 0 0# 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_32__ref #"system.ads" 1 0 0# =
  { mutable integer_32__content "model_trace:" : integer_32 }
 
 function integer_32__ref___projection #"system.ads" 1 0 0# 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref___projection
 
 meta "inline : no" function integer_32__ref___projection
 
 val integer_32__havoc #"system.ads" 1 0 0# 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_64__ref #"system.ads" 1 0 0# =
  { mutable integer_64__content "model_trace:" : integer_64 }
 
 function integer_64__ref___projection #"system.ads" 1 0 0# 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref___projection
 
 meta "inline : no" function integer_64__ref___projection
 
 val integer_64__havoc #"system.ads" 1 0 0# 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type universal_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = universal_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type universal_integer__ref #"system.ads" 1 0 0# =
  { mutable universal_integer__content "model_trace:" : universal_integer }
 
 function universal_integer__ref___projection #"system.ads" 1 0 0# 
   (a : universal_integer__ref) : universal_integer =
  a.universal_integer__content
 
 meta "model_projection" function universal_integer__ref___projection
 
 meta "inline : no" function universal_integer__ref___projection
 
 val universal_integer__havoc #"system.ads" 1 0 0# 
   (x : universal_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "universal_real", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_real
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type universal_real #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = universal_real, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type universal_real__ref #"system.ads" 1 0 0# =
  { mutable universal_real__content "model_trace:" : universal_real }
 
 function universal_real__ref___projection #"system.ads" 1 0 0# 
   (a : universal_real__ref) : universal_real =
  a.universal_real__content
 
 meta "model_projection" function universal_real__ref___projection
 
 meta "inline : no" function universal_real__ref___projection
 
 val universal_real__havoc #"system.ads" 1 0 0# 
   (x : universal_real__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "name" defined at system.ads:46, created in Gnat2Why.Types.Translate_Type *)
module System__name
 use import "_gnatprove_standard".Main
 use import "int".Int

 type name #"system.ads" 46 0 0# 
 
 function first #"system.ads" 46 0 0# 
   : int =
  0
 
 function last #"system.ads" 46 0 0# 
   : int =
  0
 
 predicate in_range #"system.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = name, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type name__ref #"system.ads" 46 0 0# =
  { mutable name__content "model_trace:" : name }
 
 function name__ref___projection #"system.ads" 46 0 0# 
   (a : name__ref) : name =
  a.name__content
 
 meta "model_projection" function name__ref___projection
 
 meta "inline : no" function name__ref___projection
 
 val name__havoc #"system.ads" 46 0 0# 
   (x : name__ref) : unit
  writes {x}

end

(* Module for defining the constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module System__system_name
 use import "_gnatprove_standard".Main

 function system_name #"system.ads" 47 0 0# "model" "model_trace:4794" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 46 0 0# 
   : int

end

(* Module for axiomatizing type "address" defined at system.ads:134, created in Gnat2Why.Types.Translate_Type *)
module System__address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type address #"system.ads" 134 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"system.ads" 134 0 0# 
   : BV64.t
 
 function first #"system.ads" 134 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"system.ads" 134 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"system.ads" 134 0 0# 
   : int =
  0
 
 function last_int #"system.ads" 134 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"system.ads" 134 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"system.ads" 134 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type address__ref #"system.ads" 134 0 0# =
  { mutable address__content "model_trace:" : address }
 
 function address__ref___projection #"system.ads" 134 0 0# 
   (a : address__ref) : address =
  a.address__content
 
 meta "model_projection" function address__ref___projection
 
 meta "inline : no" function address__ref___projection
 
 val address__havoc #"system.ads" 134 0 0# 
   (x : address__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_address" defined at system.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module System__null_address
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function null_address #"system.ads" 69 0 0# "model" "model_trace:4916" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module for defining the constant "left" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function left #"system.ads" 77 0 0# "model" "model_trace:4961" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function right #"system.ads" 77 0 0# "model" "model_trace:4968" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Olt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function olt #"system.ads" 77 0 0# 
   (left : BV64.t) (right : BV64.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function left #"system.ads" 78 0 0# "model" "model_trace:4988" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function right #"system.ads" 78 0 0# "model" "model_trace:4995" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ole
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function ole #"system.ads" 78 0 0# 
   (left : BV64.t) (right : BV64.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function left #"system.ads" 79 0 0# "model" "model_trace:5015" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function right #"system.ads" 79 0 0# "model" "model_trace:5022" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ogt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function ogt #"system.ads" 79 0 0# 
   (left : BV64.t) (right : BV64.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function left #"system.ads" 80 0 0# "model" "model_trace:5042" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function right #"system.ads" 80 0 0# "model" "model_trace:5049" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oge
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function oge #"system.ads" 80 0 0# 
   (left : BV64.t) (right : BV64.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function left #"system.ads" 81 0 0# "model" "model_trace:5069" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function right #"system.ads" 81 0 0# "model" "model_trace:5076" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oeq
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function oeq #"system.ads" 81 0 0# 
   (left : BV64.t) (right : BV64.t) : bool

end

(* Module for axiomatizing type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Translate_Type *)
module System__bit_order
 use import "_gnatprove_standard".Main
 use import "int".Int

 type bit_order #"system.ads" 91 0 0# 
 
 function first #"system.ads" 91 0 0# 
   : int =
  0
 
 function last #"system.ads" 91 0 0# 
   : int =
  1
 
 predicate in_range #"system.ads" 91 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = bit_order, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type bit_order__ref #"system.ads" 91 0 0# =
  { mutable bit_order__content "model_trace:" : bit_order }
 
 function bit_order__ref___projection #"system.ads" 91 0 0# 
   (a : bit_order__ref) : bit_order =
  a.bit_order__content
 
 meta "model_projection" function bit_order__ref___projection
 
 meta "inline : no" function bit_order__ref___projection
 
 val bit_order__havoc #"system.ads" 91 0 0# 
   (x : bit_order__ref) : unit
  writes {x}

end

(* Module for defining the constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_bit_order
 use import "_gnatprove_standard".Main

 function default_bit_order #"system.ads" 92 0 0# "model" "model_trace:5143" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 91 0 0# 
   : int

end

(* Module for defining the constant "max_interrupt_priority" defined at system.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_interrupt_priority
 use import "_gnatprove_standard".Main

 function max_interrupt_priority #"system.ads" 121 0 0# "model" "model_trace:5159" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "max_priority" defined at system.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_priority
 use import "_gnatprove_standard".Main

 function max_priority #"system.ads" 122 0 0# "model" "model_trace:5169" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "any_priority" defined at system.ads:124, created in Gnat2Why.Types.Translate_Type *)
module System__any_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type any_priority #"system.ads" 124 0 0# 
 
 function first #"system.ads" 124 0 0# 
   : int =
  0
 
 function last #"system.ads" 124 0 0# 
   : int =
  63
 
 predicate in_range #"system.ads" 124 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = any_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type any_priority__ref #"system.ads" 124 0 0# =
  { mutable any_priority__content "model_trace:" : any_priority }
 
 function any_priority__ref___projection #"system.ads" 124 0 0# 
   (a : any_priority__ref) : any_priority =
  a.any_priority__content
 
 meta "model_projection" function any_priority__ref___projection
 
 meta "inline : no" function any_priority__ref___projection
 
 val any_priority__havoc #"system.ads" 124 0 0# 
   (x : any_priority__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "priority" defined at system.ads:125, created in Gnat2Why.Types.Translate_Type *)
module System__priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type priority #"system.ads" 125 0 0# 
 
 function first #"system.ads" 125 0 0# 
   : int =
  0
 
 function last #"system.ads" 125 0 0# 
   : int =
  62
 
 predicate in_range #"system.ads" 125 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type priority__ref #"system.ads" 125 0 0# =
  { mutable priority__content "model_trace:" : priority }
 
 function priority__ref___projection #"system.ads" 125 0 0# 
   (a : priority__ref) : priority =
  a.priority__content
 
 meta "model_projection" function priority__ref___projection
 
 meta "inline : no" function priority__ref___projection
 
 val priority__havoc #"system.ads" 125 0 0# 
   (x : priority__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "interrupt_priority" defined at system.ads:126, created in Gnat2Why.Types.Translate_Type *)
module System__interrupt_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type interrupt_priority #"system.ads" 126 0 0# 
 
 function first #"system.ads" 126 0 0# 
   : int =
  63
 
 function last #"system.ads" 126 0 0# 
   : int =
  63
 
 predicate in_range #"system.ads" 126 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = interrupt_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type interrupt_priority__ref #"system.ads" 126 0 0# =
  { mutable interrupt_priority__content "model_trace:" : interrupt_priority }
 
 function interrupt_priority__ref___projection #"system.ads" 126 0 0# 
   (a : interrupt_priority__ref) : interrupt_priority =
  a.interrupt_priority__content
 
 meta "model_projection" function interrupt_priority__ref___projection
 
 meta "inline : no" function interrupt_priority__ref___projection
 
 val interrupt_priority__havoc #"system.ads" 126 0 0# 
   (x : interrupt_priority__ref) : unit
  writes {x}

end

(* Module for defining the constant "default_priority" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_priority
 use import "_gnatprove_standard".Main

 function default_priority #"system.ads" 129 0 0# "model" "model_trace:5227" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 125 0 0# 
   : int

end

(* Module for defining the constant "backend_divide_checks" defined at system.ads:147, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_divide_checks
 use import "_gnatprove_standard".Main

 function backend_divide_checks #"system.ads" 147 0 0# "model" "model_trace:5265" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 147 0 0# 
   : int

end

(* Module for defining the constant "backend_overflow_checks" defined at system.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_overflow_checks
 use import "_gnatprove_standard".Main

 function backend_overflow_checks #"system.ads" 148 0 0# "model" "model_trace:5275" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 148 0 0# 
   : int

end

(* Module for defining the constant "command_line_args" defined at system.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module System__command_line_args
 use import "_gnatprove_standard".Main

 function command_line_args #"system.ads" 149 0 0# "model" "model_trace:5285" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 149 0 0# 
   : int

end

(* Module for defining the constant "configurable_run_time" defined at system.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module System__configurable_run_time
 use import "_gnatprove_standard".Main

 function configurable_run_time #"system.ads" 150 0 0# "model" "model_trace:5295" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 150 0 0# 
   : int

end

(* Module for defining the constant "denorm" defined at system.ads:151, created in Gnat2Why.Decls.Translate_Constant *)
module System__denorm
 use import "_gnatprove_standard".Main

 function denorm #"system.ads" 151 0 0# "model" "model_trace:5305" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 151 0 0# 
   : int

end

(* Module for defining the constant "duration_32_bits" defined at system.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module System__duration_32_bits
 use import "_gnatprove_standard".Main

 function duration_32_bits #"system.ads" 152 0 0# "model" "model_trace:5315" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 152 0 0# 
   : int

end

(* Module for defining the constant "exit_status_supported" defined at system.ads:153, created in Gnat2Why.Decls.Translate_Constant *)
module System__exit_status_supported
 use import "_gnatprove_standard".Main

 function exit_status_supported #"system.ads" 153 0 0# "model" "model_trace:5325" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 153 0 0# 
   : int

end

(* Module for defining the constant "fractional_fixed_ops" defined at system.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module System__fractional_fixed_ops
 use import "_gnatprove_standard".Main

 function fractional_fixed_ops #"system.ads" 154 0 0# "model" "model_trace:5335" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 154 0 0# 
   : int

end

(* Module for defining the constant "frontend_layout" defined at system.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_layout
 use import "_gnatprove_standard".Main

 function frontend_layout #"system.ads" 155 0 0# "model" "model_trace:5345" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 155 0 0# 
   : int

end

(* Module for defining the constant "machine_overflows" defined at system.ads:156, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_overflows
 use import "_gnatprove_standard".Main

 function machine_overflows #"system.ads" 156 0 0# "model" "model_trace:5355" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 156 0 0# 
   : int

end

(* Module for defining the constant "machine_rounds" defined at system.ads:157, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_rounds
 use import "_gnatprove_standard".Main

 function machine_rounds #"system.ads" 157 0 0# "model" "model_trace:5365" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 157 0 0# 
   : int

end

(* Module for defining the constant "preallocated_stacks" defined at system.ads:158, created in Gnat2Why.Decls.Translate_Constant *)
module System__preallocated_stacks
 use import "_gnatprove_standard".Main

 function preallocated_stacks #"system.ads" 158 0 0# "model" "model_trace:5375" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 158 0 0# 
   : int

end

(* Module for defining the constant "signed_zeros" defined at system.ads:159, created in Gnat2Why.Decls.Translate_Constant *)
module System__signed_zeros
 use import "_gnatprove_standard".Main

 function signed_zeros #"system.ads" 159 0 0# "model" "model_trace:5385" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 159 0 0# 
   : int

end

(* Module for defining the constant "stack_check_default" defined at system.ads:160, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_default
 use import "_gnatprove_standard".Main

 function stack_check_default #"system.ads" 160 0 0# "model" "model_trace:5395" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 160 0 0# 
   : int

end

(* Module for defining the constant "stack_check_probes" defined at system.ads:161, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_probes
 use import "_gnatprove_standard".Main

 function stack_check_probes #"system.ads" 161 0 0# "model" "model_trace:5405" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 161 0 0# 
   : int

end

(* Module for defining the constant "stack_check_limits" defined at system.ads:162, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_limits
 use import "_gnatprove_standard".Main

 function stack_check_limits #"system.ads" 162 0 0# "model" "model_trace:5415" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 162 0 0# 
   : int

end

(* Module for defining the constant "support_aggregates" defined at system.ads:163, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_aggregates
 use import "_gnatprove_standard".Main

 function support_aggregates #"system.ads" 163 0 0# "model" "model_trace:5425" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 163 0 0# 
   : int

end

(* Module for defining the constant "support_atomic_primitives" defined at system.ads:164, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_atomic_primitives
 use import "_gnatprove_standard".Main

 function support_atomic_primitives #"system.ads" 164 0 0# "model" "model_trace:5435" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 164 0 0# 
   : int

end

(* Module for defining the constant "support_composite_assign" defined at system.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_assign
 use import "_gnatprove_standard".Main

 function support_composite_assign #"system.ads" 165 0 0# "model" "model_trace:5445" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 165 0 0# 
   : int

end

(* Module for defining the constant "support_composite_compare" defined at system.ads:166, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_compare
 use import "_gnatprove_standard".Main

 function support_composite_compare #"system.ads" 166 0 0# "model" "model_trace:5455" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 166 0 0# 
   : int

end

(* Module for defining the constant "support_long_shifts" defined at system.ads:167, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_long_shifts
 use import "_gnatprove_standard".Main

 function support_long_shifts #"system.ads" 167 0 0# "model" "model_trace:5465" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 167 0 0# 
   : int

end

(* Module for defining the constant "always_compatible_rep" defined at system.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module System__always_compatible_rep
 use import "_gnatprove_standard".Main

 function always_compatible_rep #"system.ads" 168 0 0# "model" "model_trace:5475" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 168 0 0# 
   : int

end

(* Module for defining the constant "suppress_standard_library" defined at system.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module System__suppress_standard_library
 use import "_gnatprove_standard".Main

 function suppress_standard_library #"system.ads" 169 0 0# "model" "model_trace:5485" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 169 0 0# 
   : int

end

(* Module for defining the constant "use_ada_main_program_name" defined at system.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module System__use_ada_main_program_name
 use import "_gnatprove_standard".Main

 function use_ada_main_program_name #"system.ads" 170 0 0# "model" "model_trace:5495" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 170 0 0# 
   : int

end

(* Module for defining the constant "frontend_exceptions" defined at system.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_exceptions
 use import "_gnatprove_standard".Main

 function frontend_exceptions #"system.ads" 171 0 0# "model" "model_trace:5505" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 171 0 0# 
   : int

end

(* Module for defining the constant "zcx_by_default" defined at system.ads:172, created in Gnat2Why.Decls.Translate_Constant *)
module System__zcx_by_default
 use import "_gnatprove_standard".Main

 function zcx_by_default #"system.ads" 172 0 0# "model" "model_trace:5515" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 172 0 0# 
   : int

end

(* Module for defining the constant "s" defined at polyorb_hi-output_low_level.ads:40, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output_low_level__put__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"polyorb_hi-output_low_level.ads" 40 0 0# "model_projected" "model_trace:22201" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at polyorb_hi-output_low_level.ads:40, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output_low_level__put__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Ttask_storage_sizeB" defined at s-parame.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__Ttask_storage_sizeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ttask_storage_sizeB #"s-parame.ads" 58 0 0# 
 
 function first #"s-parame.ads" 58 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-parame.ads" 58 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-parame.ads" 58 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ttask_storage_sizeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ttask_storage_sizeB__ref #"s-parame.ads" 58 0 0# =
  { mutable ttask_storage_sizeB__content "model_trace:" : ttask_storage_sizeB }
 
 function ttask_storage_sizeB__ref___projection #"s-parame.ads" 58 0 0# 
   (a : ttask_storage_sizeB__ref) : ttask_storage_sizeB =
  a.ttask_storage_sizeB__content
 
 meta "model_projection" function ttask_storage_sizeB__ref___projection
 
 meta "inline : no" function ttask_storage_sizeB__ref___projection
 
 val ttask_storage_sizeB__havoc #"s-parame.ads" 58 0 0# 
   (x : ttask_storage_sizeB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "task_storage_size" defined at s-parame.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__task_storage_size
 use import "_gnatprove_standard".Main
 use import "int".Int

 type task_storage_size #"s-parame.ads" 58 0 0# 
 
 function first #"s-parame.ads" 58 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-parame.ads" 58 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-parame.ads" 58 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = task_storage_size, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type task_storage_size__ref #"s-parame.ads" 58 0 0# =
  { mutable task_storage_size__content "model_trace:" : task_storage_size }
 
 function task_storage_size__ref___projection #"s-parame.ads" 58 0 0# 
   (a : task_storage_size__ref) : task_storage_size =
  a.task_storage_size__content
 
 meta "model_projection" function task_storage_size__ref___projection
 
 meta "inline : no" function task_storage_size__ref___projection
 
 val task_storage_size__havoc #"s-parame.ads" 58 0 0# 
   (x : task_storage_size__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tsize_typeB" defined at s-parame.ads:61, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__Tsize_typeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tsize_typeB #"s-parame.ads" 61 0 0# 
 
 function first #"s-parame.ads" 61 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-parame.ads" 61 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-parame.ads" 61 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tsize_typeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tsize_typeB__ref #"s-parame.ads" 61 0 0# =
  { mutable tsize_typeB__content "model_trace:" : tsize_typeB }
 
 function tsize_typeB__ref___projection #"s-parame.ads" 61 0 0# 
   (a : tsize_typeB__ref) : tsize_typeB =
  a.tsize_typeB__content
 
 meta "model_projection" function tsize_typeB__ref___projection
 
 meta "inline : no" function tsize_typeB__ref___projection
 
 val tsize_typeB__havoc #"s-parame.ads" 61 0 0# 
   (x : tsize_typeB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "size_type" defined at s-parame.ads:61, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__size_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type size_type #"s-parame.ads" 61 0 0# 
 
 function first #"s-parame.ads" 61 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-parame.ads" 61 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-parame.ads" 61 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = size_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type size_type__ref #"s-parame.ads" 61 0 0# =
  { mutable size_type__content "model_trace:" : size_type }
 
 function size_type__ref___projection #"s-parame.ads" 61 0 0# 
   (a : size_type__ref) : size_type =
  a.size_type__content
 
 meta "model_projection" function size_type__ref___projection
 
 meta "inline : no" function size_type__ref___projection
 
 val size_type__havoc #"s-parame.ads" 61 0 0# 
   (x : size_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "unspecified_size" defined at s-parame.ads:64, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__unspecified_size
 use import "_gnatprove_standard".Main

 function unspecified_size #"s-parame.ads" 64 0 0# "model" "model_trace:11607" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module for axiomatizing type "percentage" defined at s-parame.ads:67, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__percentage
 use import "_gnatprove_standard".Main
 use import "int".Int

 type percentage #"s-parame.ads" 67 0 0# 
 
 function first #"s-parame.ads" 67 0 0# 
   : int =
  ( -1 )
 
 function last #"s-parame.ads" 67 0 0# 
   : int =
  100
 
 predicate in_range #"s-parame.ads" 67 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = percentage, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type percentage__ref #"s-parame.ads" 67 0 0# =
  { mutable percentage__content "model_trace:" : percentage }
 
 function percentage__ref___projection #"s-parame.ads" 67 0 0# 
   (a : percentage__ref) : percentage =
  a.percentage__content
 
 meta "model_projection" function percentage__ref___projection
 
 meta "inline : no" function percentage__ref___projection
 
 val percentage__havoc #"s-parame.ads" 67 0 0# 
   (x : percentage__ref) : unit
  writes {x}

end

(* Module for defining the constant "dynamic" defined at s-parame.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__dynamic
 use import "_gnatprove_standard".Main

 function dynamic #"s-parame.ads" 68 0 0# "model" "model_trace:11634" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module for defining the constant "sec_stack_percentage" defined at s-parame.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__sec_stack_percentage
 use import "_gnatprove_standard".Main

 function sec_stack_percentage #"s-parame.ads" 75 0 0# "model" "model_trace:11645" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 67 0 0# 
   : int

end

(* Module for defining the constant "sec_stack_dynamic" defined at s-parame.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__sec_stack_dynamic
 use import "_gnatprove_standard".Main

 function sec_stack_dynamic #"s-parame.ads" 78 0 0# "model" "model_trace:11655" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 78 0 0# 
   : int

end

(* Module for possibly declaring a logic function for "default_stack_size" defined at s-parame.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__default_stack_size
 use import "_gnatprove_standard".Main

 function default_stack_size #"s-parame.ads" 81 0 0# 
   (__void_param : unit) : int

end

(* Module for possibly declaring a logic function for "minimum_stack_size" defined at s-parame.ads:84, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__minimum_stack_size
 use import "_gnatprove_standard".Main

 function minimum_stack_size #"s-parame.ads" 84 0 0# 
   (__void_param : unit) : int

end

(* Module for defining the constant "size" defined at s-parame.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__adjust_storage_size__size
 use import "_gnatprove_standard".Main

 function size #"s-parame.ads" 87 0 0# "model" "model_trace:11694" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at s-parame.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__parameters__adjust_storage_size__size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "adjust_storage_size" defined at s-parame.ads:87, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__adjust_storage_size
 use import "_gnatprove_standard".Main

 function adjust_storage_size #"s-parame.ads" 87 0 0# 
   (size : int) : int

end

(* Module for defining the constant "default_env_stack_size" defined at s-parame.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__default_env_stack_size
 use import "_gnatprove_standard".Main

 function default_env_stack_size #"s-parame.ads" 96 0 0# "model" "model_trace:11708" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module for defining the constant "stack_grows_down" defined at s-parame.ads:101, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__stack_grows_down
 use import "_gnatprove_standard".Main

 function stack_grows_down #"s-parame.ads" 101 0 0# "model" "model_trace:11718" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 101 0 0# 
   : int

end

(* Module for axiomatizing type "c_address" defined at s-parame.ads:116, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__c_address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type c_address #"s-parame.ads" 116 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-parame.ads" 116 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function first #"s-parame.ads" 116 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-parame.ads" 116 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-parame.ads" 116 0 0# 
   : int =
  0
 
 function last_int #"s-parame.ads" 116 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-parame.ads" 116 0 0# 
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int #"s-parame.ads" 116 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt64 with
 type t = c_address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type c_address__ref #"s-parame.ads" 116 0 0# =
  { mutable c_address__content "model_trace:" : c_address }
 
 function c_address__ref___projection #"s-parame.ads" 116 0 0# 
   (a : c_address__ref) : c_address =
  a.c_address__content
 
 meta "model_projection" function c_address__ref___projection
 
 meta "inline : no" function c_address__ref___projection
 
 val c_address__havoc #"s-parame.ads" 116 0 0# 
   (x : c_address__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T1s" defined at s-parame.ads:119, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__T1s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-parame.ads" 116 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  13
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "c_malloc_linkname" defined at s-parame.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__c_malloc_linkname
 use import "_gnatprove_standard".Main
 use        Standard__string

 function c_malloc_linkname #"s-parame.ads" 119 0 0# "model_projected" "model_trace:11761" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "garbage_collected" defined at s-parame.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__garbage_collected
 use import "_gnatprove_standard".Main

 function garbage_collected #"s-parame.ads" 142 0 0# "model" "model_trace:11771" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 142 0 0# 
   : int

end

(* Module for defining the constant "single_lock" defined at s-parame.ads:157, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__single_lock
 use import "_gnatprove_standard".Main

 function single_lock #"s-parame.ads" 157 0 0# "model" "model_trace:11781" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 157 0 0# 
   : int

end

(* Module for defining the constant "no_abort" defined at s-parame.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__no_abort
 use import "_gnatprove_standard".Main

 function no_abort #"s-parame.ads" 170 0 0# "model" "model_trace:11791" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 170 0 0# 
   : int

end

(* Module for defining the constant "runtime_traces" defined at s-parame.ads:190, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__runtime_traces
 use import "_gnatprove_standard".Main

 function runtime_traces #"s-parame.ads" 190 0 0# "model" "model_trace:11810" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 190 0 0# 
   : int

end

(* Module for axiomatizing type "Tbig_stringP1" defined at s-stalib.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__Tbig_stringP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tbig_stringP1 #"s-stalib.ads" 62 0 0# 
 
 function first #"s-stalib.ads" 62 0 0# 
   : int =
  1
 
 function last #"s-stalib.ads" 62 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-stalib.ads" 62 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tbig_stringP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tbig_stringP1__ref #"s-stalib.ads" 62 0 0# =
  { mutable tbig_stringP1__content "model_trace:" : tbig_stringP1 }
 
 function tbig_stringP1__ref___projection #"s-stalib.ads" 62 0 0# 
   (a : tbig_stringP1__ref) : tbig_stringP1 =
  a.tbig_stringP1__content
 
 meta "model_projection" function tbig_stringP1__ref___projection
 
 meta "inline : no" function tbig_stringP1__ref___projection
 
 val tbig_stringP1__havoc #"s-stalib.ads" 62 0 0# 
   (x : tbig_stringP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "big_string" defined at s-stalib.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__big_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-stalib.ads" 62 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "source" defined at a-unccon.ads:17 instantiated at s-stalib.ads:76, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__to_ptrGP4411__source
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type source #"a-unccon.ads" 17 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-unccon.ads" 17 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function first #"a-unccon.ads" 17 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"a-unccon.ads" 17 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"a-unccon.ads" 17 0 0# 
   : int =
  0
 
 function last_int #"a-unccon.ads" 17 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"a-unccon.ads" 17 0 0# 
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int #"a-unccon.ads" 17 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt64 with
 type t = source, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type source__ref #"a-unccon.ads" 17 0 0# =
  { mutable source__content "model_trace:" : source }
 
 function source__ref___projection #"a-unccon.ads" 17 0 0# 
   (a : source__ref) : source =
  a.source__content
 
 meta "model_projection" function source__ref___projection
 
 meta "inline : no" function source__ref___projection
 
 val source__havoc #"a-unccon.ads" 17 0 0# 
   (x : source__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at a-unccon.ads:20 instantiated at s-stalib.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__to_ptrGP4411__to_ptr__s
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function s #"a-unccon.ads" 20 0 0# "model" "model_trace:22515" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"a-unccon.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-unccon.ads:20 instantiated at s-stalib.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__to_ptrGP4411__to_ptr__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T2s" defined at s-stalib.ads:142, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T2s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"a-unccon.ads" 17 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  17
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "constraint_error_name" defined at s-stalib.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__constraint_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function constraint_error_name #"s-stalib.ads" 142 0 0# "model_projected" "model_trace:18743" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T3s" defined at s-stalib.ads:143, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "program_error_name" defined at s-stalib.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__program_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function program_error_name #"s-stalib.ads" 143 0 0# "model_projected" "model_trace:18757" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T4s" defined at s-stalib.ads:144, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "storage_error_name" defined at s-stalib.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__storage_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function storage_error_name #"s-stalib.ads" 144 0 0# "model_projected" "model_trace:18771" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T5s" defined at s-stalib.ads:145, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "tasking_error_name" defined at s-stalib.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__tasking_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function tasking_error_name #"s-stalib.ads" 145 0 0# "model_projected" "model_trace:18785" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T6s" defined at s-stalib.ads:146, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T6s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "abort_signal_name" defined at s-stalib.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__abort_signal_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function abort_signal_name #"s-stalib.ads" 146 0 0# "model_projected" "model_trace:18799" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T7s" defined at s-stalib.ads:148, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "numeric_error_name" defined at s-stalib.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__numeric_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function numeric_error_name #"s-stalib.ads" 148 0 0# "model_projected" "model_trace:18813" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "exception_trace_kind" defined at s-stalib.ads:218, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__exception_trace_kind
 use import "_gnatprove_standard".Main
 use import "int".Int

 type exception_trace_kind #"s-stalib.ads" 218 0 0# 
 
 function first #"s-stalib.ads" 218 0 0# 
   : int =
  0
 
 function last #"s-stalib.ads" 218 0 0# 
   : int =
  3
 
 predicate in_range #"s-stalib.ads" 218 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = exception_trace_kind, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type exception_trace_kind__ref #"s-stalib.ads" 218 0 0# =
  { mutable exception_trace_kind__content "model_trace:" : exception_trace_kind }
 
 function exception_trace_kind__ref___projection #"s-stalib.ads" 218 0 0# 
   (a : exception_trace_kind__ref) : exception_trace_kind =
  a.exception_trace_kind__content
 
 meta "model_projection" function exception_trace_kind__ref___projection
 
 meta "inline : no" function exception_trace_kind__ref___projection
 
 val exception_trace_kind__havoc #"s-stalib.ads" 218 0 0# 
   (x : exception_trace_kind__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "traceback_entry" defined at s-traent.ads:50, created in Gnat2Why.Types.Translate_Type *)
module System__traceback_entries__traceback_entry
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type traceback_entry #"s-traent.ads" 50 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-traent.ads" 50 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function first #"s-traent.ads" 50 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-traent.ads" 50 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-traent.ads" 50 0 0# 
   : int =
  0
 
 function last_int #"s-traent.ads" 50 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-traent.ads" 50 0 0# 
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int #"s-traent.ads" 50 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt64 with
 type t = traceback_entry, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type traceback_entry__ref #"s-traent.ads" 50 0 0# =
  { mutable traceback_entry__content "model_trace:" : traceback_entry }
 
 function traceback_entry__ref___projection #"s-traent.ads" 50 0 0# 
   (a : traceback_entry__ref) : traceback_entry =
  a.traceback_entry__content
 
 meta "model_projection" function traceback_entry__ref___projection
 
 meta "inline : no" function traceback_entry__ref___projection
 
 val traceback_entry__havoc #"s-traent.ads" 50 0 0# 
   (x : traceback_entry__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_tb_entry" defined at s-traent.ads:53, created in Gnat2Why.Decls.Translate_Constant *)
module System__traceback_entries__null_tb_entry
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function null_tb_entry #"s-traent.ads" 53 0 0# "model" "model_trace:19267" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-traent.ads" 50 0 0# 
   : int

end

(* Module for axiomatizing the array theory associated to type "tracebacks_array" defined at s-traent.ads:56, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__System__traceback_entries__traceback_entry
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__traceback_entries__traceback_entry

 function index_I1_one #"s-traent.ads" 50 0 0# 
   : int =
  1
 
 type component_type #"s-traent.ads" 50 0 0# =
  System__traceback_entries__traceback_entry.traceback_entry
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"s-traent.ads" 50 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_BV64_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = System__traceback_entries__traceback_entry.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "tracebacks_array" defined at s-traent.ads:56, created in Gnat2Why.Types.Translate_Type *)
module System__traceback_entries__tracebacks_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        System__traceback_entries__traceback_entry
 use        Array__Int__System__traceback_entries__traceback_entry

 type component_type #"s-traent.ads" 50 0 0# =
  System__traceback_entries__traceback_entry.traceback_entry
 
 function index_1_id #"s-traent.ads" 50 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__traceback_entries__traceback_entry.map, 
 function array_bool_eq = Array__Int__System__traceback_entries__traceback_entry.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tracebacks_array #"s-traent.ads" 56 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tracebacks_array__ref #"s-traent.ads" 56 0 0# =
  { mutable tracebacks_array__content "model_trace:" : tracebacks_array }
 
 function tracebacks_array__ref___projection #"s-traent.ads" 56 0 0# 
   (a : tracebacks_array__ref) : tracebacks_array =
  a.tracebacks_array__content
 
 meta "model_projection" function tracebacks_array__ref___projection
 
 meta "inline : no" function tracebacks_array__ref___projection
 
 val tracebacks_array__havoc #"s-traent.ads" 56 0 0# 
   (x : tracebacks_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "tb_entry" defined at s-traent.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module System__traceback_entries__pc_for__tb_entry
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function tb_entry #"s-traent.ads" 58 0 0# "model" "model_trace:19298" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-traent.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "tb_entry" defined at s-traent.ads:58, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__traceback_entries__pc_for__tb_entry___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "pc_for" defined at s-traent.ads:58, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__traceback_entries__pc_for
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function pc_for #"s-traent.ads" 58 0 0# 
   (tb_entry : BV64.t) : BV64.t

end

(* Module for defining the constant "pc" defined at s-traent.ads:63, created in Gnat2Why.Decls.Translate_Constant *)
module System__traceback_entries__tb_entry_for__pc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function pc #"s-traent.ads" 63 0 0# "model" "model_trace:19323" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at s-traent.ads:63, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__traceback_entries__tb_entry_for__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "tb_entry_for" defined at s-traent.ads:63, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__traceback_entries__tb_entry_for
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function tb_entry_for #"s-traent.ads" 63 0 0# 
   (pc : BV64.t) : BV64.t

end

(* Module for axiomatizing the record theory associated to type "exception_id" defined at a-except.ads:58, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Ada__exceptions__exception_id__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 type __split_fields #"s-traent.ads" 50 0 0# =
  { rec__ada__exceptions__exception_id "model_trace:.17570" : Main.__private }
 
 function __split_fields_Exception_Id__projection #"a-except.ads" 58 0 0# "model_trace:.17570" 
   (a : __split_fields) : Main.__private =
  a.rec__ada__exceptions__exception_id
 
 meta "model_projection" function __split_fields_Exception_Id__projection
 
 meta "inline : no" function __split_fields_Exception_Id__projection
 
 type __split_fields__ref #"a-except.ads" 58 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref___projection #"a-except.ads" 58 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___projection
 
 meta "inline : no" function __split_fields__ref___projection
 
 val __split_fields__havoc #"a-except.ads" 58 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"a-except.ads" 58 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep___projection #"a-except.ads" 58 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep___projection
 
 meta "inline : no" function __rep___projection
 
 function to_base #"a-except.ads" 58 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"a-except.ads" 58 0 0# 
   (a : __rep) : __rep =
  a
 
 val rec__ada__exceptions__exception_id_ #"a-except.ads" 58 0 0# 
   (a : __rep) : Main.__private
  requires { true }
  ensures { (result = a.__split_fields.rec__ada__exceptions__exception_id) }
 
 function bool_eq #"a-except.ads" 58 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if ((a.__split_fields.rec__ada__exceptions__exception_id = b.__split_fields.rec__ada__exceptions__exception_id)) then (
   True) else (
   False))
 
 function user_eq #"a-except.ads" 58 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "exception_id" defined at a-except.ads:58, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_id
 use export Ada__exceptions__exception_id__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type exception_id #"a-except.ads" 58 0 0# =
  __rep
 
 function value__size #"a-except.ads" 58 0 0# 
   : int
 
 function object__size #"a-except.ads" 58 0 0# 
   (a : exception_id) : int
 
 function value__alignment #"a-except.ads" 58 0 0# 
   : int
 
 function object__alignment #"a-except.ads" 58 0 0# 
   (a : exception_id) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : exception_id.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : exception_id.
   ((object__alignment a) >= 0))
 
 function dummy #"a-except.ads" 58 0 0# 
   : exception_id
 
 type exception_id__ref #"a-except.ads" 58 0 0# =
  { mutable exception_id__content "model_trace:" : exception_id }
 
 function exception_id__ref___projection #"a-except.ads" 58 0 0# 
   (a : exception_id__ref) : exception_id =
  a.exception_id__content
 
 meta "model_projection" function exception_id__ref___projection
 
 meta "inline : no" function exception_id__ref___projection
 
 val exception_id__havoc #"a-except.ads" 58 0 0# 
   (x : exception_id__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_id" defined at a-except.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__null_id
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function null_id #"a-except.ads" 61 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "null_id" defined at a-except.ads:61, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__null_id___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T5s" defined at a-except.ads:297, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_occurrence__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t5s #"a-except.ads" 297 0 0# 
 
 function first #"a-except.ads" 297 0 0# 
   : int =
  1
 
 function last #"a-except.ads" 297 0 0# 
   : int =
  200
 
 predicate in_range #"a-except.ads" 297 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t5s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t5s__ref #"a-except.ads" 297 0 0# =
  { mutable t5s__content "model_trace:" : t5s }
 
 function t5s__ref___projection #"a-except.ads" 297 0 0# 
   (a : t5s__ref) : t5s =
  a.t5s__content
 
 meta "model_projection" function t5s__ref___projection
 
 meta "inline : no" function t5s__ref___projection
 
 val t5s__havoc #"a-except.ads" 297 0 0# 
   (x : t5s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T6s" defined at a-except.ads:297, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_occurrence__T6s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"a-except.ads" 297 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  200
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T7s" defined at a-except.ads:312, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_occurrence__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t7s #"a-except.ads" 312 0 0# 
 
 function first #"a-except.ads" 312 0 0# 
   : int =
  0
 
 function last #"a-except.ads" 312 0 0# 
   : int =
  50
 
 predicate in_range #"a-except.ads" 312 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t7s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t7s__ref #"a-except.ads" 312 0 0# =
  { mutable t7s__content "model_trace:" : t7s }
 
 function t7s__ref___projection #"a-except.ads" 312 0 0# 
   (a : t7s__ref) : t7s =
  a.t7s__content
 
 meta "model_projection" function t7s__ref___projection
 
 meta "inline : no" function t7s__ref___projection
 
 val t7s__havoc #"a-except.ads" 312 0 0# 
   (x : t7s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Ttracebacks_arrayP1" defined at a-except.ads:283, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__Ttracebacks_arrayP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ttracebacks_arrayP1 #"a-except.ads" 283 0 0# 
 
 function first #"a-except.ads" 283 0 0# 
   : int =
  1
 
 function last #"a-except.ads" 283 0 0# 
   : int =
  50
 
 predicate in_range #"a-except.ads" 283 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ttracebacks_arrayP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ttracebacks_arrayP1__ref #"a-except.ads" 283 0 0# =
  { mutable ttracebacks_arrayP1__content "model_trace:" : ttracebacks_arrayP1 }
 
 function ttracebacks_arrayP1__ref___projection #"a-except.ads" 283 0 0# 
   (a : ttracebacks_arrayP1__ref) : ttracebacks_arrayP1 =
  a.ttracebacks_arrayP1__content
 
 meta "model_projection" function ttracebacks_arrayP1__ref___projection
 
 meta "inline : no" function ttracebacks_arrayP1__ref___projection
 
 val ttracebacks_arrayP1__havoc #"a-except.ads" 283 0 0# 
   (x : ttracebacks_arrayP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "tracebacks_array" defined at a-except.ads:283, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__tracebacks_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__traceback_entries__traceback_entry
 use        Array__Int__System__traceback_entries__traceback_entry

 type component_type #"a-except.ads" 283 0 0# =
  System__traceback_entries__traceback_entry.traceback_entry
 
 function first #"s-traent.ads" 50 0 0# 
   : int =
  1
 
 function last #"s-traent.ads" 50 0 0# 
   : int =
  50
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__System__traceback_entries__traceback_entry.map, 
 function array_bool_eq = Array__Int__System__traceback_entries__traceback_entry.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "exception_occurrence" defined at a-except.ads:63, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Ada__exceptions__exception_occurrence__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 type __split_fields #"s-traent.ads" 50 0 0# =
  { rec__ada__exceptions__exception_occurrence "model_trace:.17591" : Main.__private }
 
 function __split_fields_Exception_Occurrence__projection #"a-except.ads" 63 0 0# "model_trace:.17591" 
   (a : __split_fields) : Main.__private =
  a.rec__ada__exceptions__exception_occurrence
 
 meta "model_projection" function __split_fields_Exception_Occurrence__projection
 
 meta "inline : no" function __split_fields_Exception_Occurrence__projection
 
 type __split_fields__ref #"a-except.ads" 63 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_2__projection #"a-except.ads" 63 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_2__projection
 
 meta "inline : no" function __split_fields__ref_2__projection
 
 val __split_fields__havoc #"a-except.ads" 63 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"a-except.ads" 63 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_2__projection #"a-except.ads" 63 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_2__projection
 
 meta "inline : no" function __rep_2__projection
 
 function to_base #"a-except.ads" 63 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"a-except.ads" 63 0 0# 
   (a : __rep) : __rep =
  a
 
 val rec__ada__exceptions__exception_occurrence_ #"a-except.ads" 63 0 0# 
   (a : __rep) : Main.__private
  requires { true }
  ensures { (result = a.__split_fields.rec__ada__exceptions__exception_occurrence) }
 
 function bool_eq #"a-except.ads" 63 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if ((a.__split_fields.rec__ada__exceptions__exception_occurrence = b.__split_fields.rec__ada__exceptions__exception_occurrence)) then (
   True) else (
   False))
 
 function user_eq #"a-except.ads" 63 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "exception_occurrence" defined at a-except.ads:63, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_occurrence
 use export Ada__exceptions__exception_occurrence__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type exception_occurrence #"a-except.ads" 63 0 0# =
  __rep
 
 function value__size #"a-except.ads" 63 0 0# 
   : int
 
 function object__size #"a-except.ads" 63 0 0# 
   (a : exception_occurrence) : int
 
 function value__alignment #"a-except.ads" 63 0 0# 
   : int
 
 function object__alignment #"a-except.ads" 63 0 0# 
   (a : exception_occurrence) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : exception_occurrence.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : exception_occurrence.
   ((object__alignment a) >= 0))
 
 function dummy #"a-except.ads" 63 0 0# 
   : exception_occurrence
 
 type exception_occurrence__ref #"a-except.ads" 63 0 0# =
  { mutable exception_occurrence__content "model_trace:" : exception_occurrence }
 
 function exception_occurrence__ref___projection #"a-except.ads" 63 0 0# 
   (a : exception_occurrence__ref) : exception_occurrence =
  a.exception_occurrence__content
 
 meta "model_projection" function exception_occurrence__ref___projection
 
 meta "inline : no" function exception_occurrence__ref___projection
 
 val exception_occurrence__havoc #"a-except.ads" 63 0 0# 
   (x : exception_occurrence__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_occurrence" defined at a-except.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__null_occurrence
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function null_occurrence #"a-except.ads" 68 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "null_occurrence" defined at a-except.ads:68, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__null_occurrence___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at a-except.ads:70, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_name__id
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function id #"a-except.ads" 70 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at a-except.ads:70, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_name__id___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_name" defined at a-except.ads:70, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 function exception_name #"a-except.ads" 70 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__string.string

end

(* Module for defining the constant "x" defined at a-except.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_name__2__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 72 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:72, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_name__2__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_name__2" defined at a-except.ads:72, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_name__2
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function exception_name__2 #"a-except.ads" 72 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string

end

(* Module for defining the constant "id" defined at a-except.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__wide_exception_name__id
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function id #"a-except.ads" 75 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at a-except.ads:75, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__wide_exception_name__id___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "wide_exception_name" defined at a-except.ads:74, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__wide_exception_name
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Ada__exceptions__exception_id

 function wide_exception_name #"a-except.ads" 74 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__wide_string.wide_string

end

(* Module for defining the constant "x" defined at a-except.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__wide_exception_name__2__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 79 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__wide_exception_name__2__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "wide_exception_name__2" defined at a-except.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__wide_exception_name__2
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Ada__exceptions__exception_occurrence

 function wide_exception_name__2 #"a-except.ads" 78 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__wide_string.wide_string

end

(* Module for defining the constant "id" defined at a-except.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__wide_wide_exception_name__id
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function id #"a-except.ads" 83 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at a-except.ads:83, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__wide_wide_exception_name__id___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "wide_wide_exception_name" defined at a-except.ads:82, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__wide_wide_exception_name
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Ada__exceptions__exception_id

 function wide_wide_exception_name #"a-except.ads" 82 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__wide_wide_string.wide_wide_string

end

(* Module for defining the constant "x" defined at a-except.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__wide_wide_exception_name__2__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 87 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__wide_wide_exception_name__2__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "wide_wide_exception_name__2" defined at a-except.ads:86, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__wide_wide_exception_name__2
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Ada__exceptions__exception_occurrence

 function wide_wide_exception_name__2 #"a-except.ads" 86 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__wide_wide_string.wide_wide_string

end

(* Module for defining the constant "e" defined at a-except.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_exception__e
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function e #"a-except.ads" 90 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at a-except.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_exception__e___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "message" defined at a-except.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_exception__message
 use import "_gnatprove_standard".Main
 use        Standard__string

 function message #"a-except.ads" 90 0 0# "model_projected" "model_trace:17768" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "message" defined at a-except.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_exception__message___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_message__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 94 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_message__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_message" defined at a-except.ads:94, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_message
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function exception_message #"a-except.ads" 94 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string

end

(* Module for defining the constant "x" defined at a-except.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__reraise_occurrence__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 96 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__reraise_occurrence__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_identity__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 102 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_identity__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_identity" defined at a-except.ads:102, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_identity
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_occurrence

 function exception_identity #"a-except.ads" 102 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Ada__exceptions__exception_id.exception_id

end

(* Module for defining the constant "x" defined at a-except.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_information__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 104 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_information__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_information" defined at a-except.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_information
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function exception_information #"a-except.ads" 104 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string

end

(* Module for defining the constant "source" defined at a-except.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__save_occurrence__source
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function source #"a-except.ads" 125 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at a-except.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__save_occurrence__source___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "source" defined at a-except.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__save_occurrence__2__source
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function source #"a-except.ads" 128 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at a-except.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__save_occurrence__2__source___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "code_loc" defined at a-except.ads:159, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__code_loc
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type code_loc #"a-except.ads" 159 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-except.ads" 159 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function first #"a-except.ads" 159 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"a-except.ads" 159 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"a-except.ads" 159 0 0# 
   : int =
  0
 
 function last_int #"a-except.ads" 159 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"a-except.ads" 159 0 0# 
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int #"a-except.ads" 159 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt64 with
 type t = code_loc, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type code_loc__ref #"a-except.ads" 159 0 0# =
  { mutable code_loc__content "model_trace:" : code_loc }
 
 function code_loc__ref___projection #"a-except.ads" 159 0 0# 
   (a : code_loc__ref) : code_loc =
  a.code_loc__content
 
 meta "model_projection" function code_loc__ref___projection
 
 meta "inline : no" function code_loc__ref___projection
 
 val code_loc__havoc #"a-except.ads" 159 0 0# 
   (x : code_loc__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_loc" defined at a-except.ads:164, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__null_loc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function null_loc #"a-except.ads" 164 0 0# "model" "model_trace:17960" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 159 0 0# 
   : int

end

(* Module for defining the constant "x" defined at a-except.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__eid_to_string__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function x #"a-except.ads" 169 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:169, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__eid_to_string__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "eid_to_string" defined at a-except.ads:169, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__eid_to_string
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 function eid_to_string #"a-except.ads" 169 0 0# 
   (x : Ada__exceptions__exception_id.exception_id) : Standard__string.string

end

(* Module for defining the constant "s" defined at a-except.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__string_to_eid__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"a-except.ads" 170 0 0# "model_projected" "model_trace:18010" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-except.ads:170, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__string_to_eid__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "string_to_eid" defined at a-except.ads:170, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__string_to_eid
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 function string_to_eid #"a-except.ads" 170 0 0# 
   (s : Standard__string.string) : Ada__exceptions__exception_id.exception_id

end

(* Module for defining the constant "x" defined at a-except.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_name_simple__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 180 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_name_simple__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_name_simple" defined at a-except.ads:180, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_name_simple
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function exception_name_simple #"a-except.ads" 180 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string

end

(* Module for defining the constant "e" defined at a-except.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_exception_always__e
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function e #"a-except.ads" 188 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at a-except.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_exception_always__e___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "message" defined at a-except.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_exception_always__message
 use import "_gnatprove_standard".Main
 use        Standard__string

 function message #"a-except.ads" 188 0 0# "model_projected" "model_trace:18075" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "message" defined at a-except.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_exception_always__message___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "e" defined at a-except.ads:198, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_from_signal_handler__e
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function e #"a-except.ads" 198 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at a-except.ads:198, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_from_signal_handler__e___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "m" defined at a-except.ads:199, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_from_signal_handler__m
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function m #"a-except.ads" 199 0 0# "model" "model_trace:18115" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "m" defined at a-except.ads:199, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_from_signal_handler__m___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:216, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_from_controlled_operation__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 216 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:216, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_from_controlled_operation__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:231, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__reraise_occurrence_always__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 231 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:231, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__reraise_occurrence_always__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__reraise_occurrence_no_defer__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 238 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:238, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__reraise_occurrence_no_defer__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "triggered_by_abort" defined at a-except.ads:245, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__triggered_by_abort
 use import "_gnatprove_standard".Main

 function triggered_by_abort #"a-except.ads" 245 0 0# 
   (__void_param : unit) : bool

end

(* Module for defining the constant "left" defined at a-except.ads:319, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__Oeq__left
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function left #"a-except.ads" 319 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-except.ads:319, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__Oeq__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-except.ads:319, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__Oeq__right
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function right #"a-except.ads" 319 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-except.ads:319, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__Oeq__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq" defined at a-except.ads:319, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__Oeq
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function oeq #"a-except.ads" 319 0 0# 
   (left : Ada__exceptions__exception_occurrence.exception_occurrence) (right : Ada__exceptions__exception_occurrence.exception_occurrence) : bool

end

(* Module for defining the constant "x" defined at a-except.ads:326, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__get_exception_machine_occurrence__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 326 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:326, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__get_exception_machine_occurrence__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_exception_machine_occurrence" defined at a-except.ads:325, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__get_exception_machine_occurrence
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Ada__exceptions__exception_occurrence

 function get_exception_machine_occurrence #"a-except.ads" 325 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : BV64.t

end

(* Module for defining the constant "x" defined at a-except.ads:334, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__eo_to_string__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 334 0 0# 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:334, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__eo_to_string__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "eo_to_string" defined at a-except.ads:334, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__eo_to_string
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function eo_to_string #"a-except.ads" 334 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string

end

(* Module for defining the constant "s" defined at a-except.ads:335, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__string_to_eo__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"a-except.ads" 335 0 0# "model_projected" "model_trace:18481" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-except.ads:335, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__string_to_eo__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "string_to_eo" defined at a-except.ads:335, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__string_to_eo
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function string_to_eo #"a-except.ads" 335 0 0# 
   (s : Standard__string.string) : Ada__exceptions__exception_occurrence.exception_occurrence

end

(* Module for axiomatizing type "T9s" defined at a-except.ads:343, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__T9s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t9s #"a-except.ads" 343 0 0# 
 
 function first #"a-except.ads" 343 0 0# 
   : int =
  1
 
 function last #"a-except.ads" 343 0 0# 
   : int =
  200
 
 predicate in_range #"a-except.ads" 343 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t9s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t9s__ref #"a-except.ads" 343 0 0# =
  { mutable t9s__content "model_trace:" : t9s }
 
 function t9s__ref___projection #"a-except.ads" 343 0 0# 
   (a : t9s__ref) : t9s =
  a.t9s__content
 
 meta "model_projection" function t9s__ref___projection
 
 meta "inline : no" function t9s__ref___projection
 
 val t9s__havoc #"a-except.ads" 343 0 0# 
   (x : t9s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T10s" defined at a-except.ads:343, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__T10s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"a-except.ads" 343 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  200
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T11s" defined at a-except.ads:347, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__T11s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t11s #"a-except.ads" 347 0 0# 
 
 function first #"a-except.ads" 347 0 0# 
   : int =
  1
 
 function last #"a-except.ads" 347 0 0# 
   : int =
  50
 
 predicate in_range #"a-except.ads" 347 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t11s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t11s__ref #"a-except.ads" 347 0 0# =
  { mutable t11s__content "model_trace:" : t11s }
 
 function t11s__ref___projection #"a-except.ads" 347 0 0# 
   (a : t11s__ref) : t11s =
  a.t11s__content
 
 meta "model_projection" function t11s__ref___projection
 
 meta "inline : no" function t11s__ref___projection
 
 val t11s__havoc #"a-except.ads" 347 0 0# 
   (x : t11s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T12s" defined at a-except.ads:347, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__T12s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__traceback_entries__traceback_entry
 use        Array__Int__System__traceback_entries__traceback_entry

 type component_type #"a-except.ads" 347 0 0# =
  System__traceback_entries__traceback_entry.traceback_entry
 
 function first #"s-traent.ads" 50 0 0# 
   : int =
  1
 
 function last #"s-traent.ads" 50 0 0# 
   : int =
  50
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__System__traceback_entries__traceback_entry.map, 
 function array_bool_eq = Array__Int__System__traceback_entries__traceback_entry.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "scope_type" defined at s-tasinf.ads:75, created in Gnat2Why.Types.Translate_Type *)
module System__task_info__scope_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type scope_type #"s-tasinf.ads" 75 0 0# 
 
 function first #"s-tasinf.ads" 75 0 0# 
   : int =
  0
 
 function last #"s-tasinf.ads" 75 0 0# 
   : int =
  2
 
 predicate in_range #"s-tasinf.ads" 75 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = scope_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type scope_type__ref #"s-tasinf.ads" 75 0 0# =
  { mutable scope_type__content "model_trace:" : scope_type }
 
 function scope_type__ref___projection #"s-tasinf.ads" 75 0 0# 
   (a : scope_type__ref) : scope_type =
  a.scope_type__content
 
 meta "model_projection" function scope_type__ref___projection
 
 meta "inline : no" function scope_type__ref___projection
 
 val scope_type__havoc #"s-tasinf.ads" 75 0 0# 
   (x : scope_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "task_info_typeB" defined at s-tasinf.ads:84, created in Gnat2Why.Types.Translate_Type *)
module System__task_info__task_info_typeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type task_info_typeB #"s-tasinf.ads" 84 0 0# 
 
 function first #"s-tasinf.ads" 84 0 0# 
   : int =
  0
 
 function last #"s-tasinf.ads" 84 0 0# 
   : int =
  2
 
 predicate in_range #"s-tasinf.ads" 84 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = task_info_typeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type task_info_typeB__ref #"s-tasinf.ads" 84 0 0# =
  { mutable task_info_typeB__content "model_trace:" : task_info_typeB }
 
 function task_info_typeB__ref___projection #"s-tasinf.ads" 84 0 0# 
   (a : task_info_typeB__ref) : task_info_typeB =
  a.task_info_typeB__content
 
 meta "model_projection" function task_info_typeB__ref___projection
 
 meta "inline : no" function task_info_typeB__ref___projection
 
 val task_info_typeB__havoc #"s-tasinf.ads" 84 0 0# 
   (x : task_info_typeB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "task_info_type" defined at s-tasinf.ads:84, created in Gnat2Why.Types.Translate_Type *)
module System__task_info__task_info_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type task_info_type #"s-tasinf.ads" 84 0 0# 
 
 function first #"s-tasinf.ads" 84 0 0# 
   : int =
  0
 
 function last #"s-tasinf.ads" 84 0 0# 
   : int =
  2
 
 predicate in_range #"s-tasinf.ads" 84 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = task_info_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type task_info_type__ref #"s-tasinf.ads" 84 0 0# =
  { mutable task_info_type__content "model_trace:" : task_info_type }
 
 function task_info_type__ref___projection #"s-tasinf.ads" 84 0 0# 
   (a : task_info_type__ref) : task_info_type =
  a.task_info_type__content
 
 meta "model_projection" function task_info_type__ref___projection
 
 meta "inline : no" function task_info_type__ref___projection
 
 val task_info_type__havoc #"s-tasinf.ads" 84 0 0# 
   (x : task_info_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "unspecified_task_info" defined at s-tasinf.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_info__unspecified_task_info
 use import "_gnatprove_standard".Main

 function unspecified_task_info #"s-tasinf.ads" 90 0 0# "model" "model_trace:19411" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-tasinf.ads" 84 0 0# 
   : int

end

(* Module for axiomatizing type "Tstorage_offsetB" defined at s-stoele.ads:54, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__Tstorage_offsetB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tstorage_offsetB #"s-stoele.ads" 54 0 0# 
 
 function first #"s-stoele.ads" 54 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"s-stoele.ads" 54 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"s-stoele.ads" 54 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tstorage_offsetB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tstorage_offsetB__ref #"s-stoele.ads" 54 0 0# =
  { mutable tstorage_offsetB__content "model_trace:" : tstorage_offsetB }
 
 function tstorage_offsetB__ref___projection #"s-stoele.ads" 54 0 0# 
   (a : tstorage_offsetB__ref) : tstorage_offsetB =
  a.tstorage_offsetB__content
 
 meta "model_projection" function tstorage_offsetB__ref___projection
 
 meta "inline : no" function tstorage_offsetB__ref___projection
 
 val tstorage_offsetB__havoc #"s-stoele.ads" 54 0 0# 
   (x : tstorage_offsetB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "storage_offset" defined at s-stoele.ads:54, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__storage_offset
 use import "_gnatprove_standard".Main
 use import "int".Int

 type storage_offset #"s-stoele.ads" 54 0 0# 
 
 function first #"s-stoele.ads" 54 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"s-stoele.ads" 54 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"s-stoele.ads" 54 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = storage_offset, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type storage_offset__ref #"s-stoele.ads" 54 0 0# =
  { mutable storage_offset__content "model_trace:" : storage_offset }
 
 function storage_offset__ref___projection #"s-stoele.ads" 54 0 0# 
   (a : storage_offset__ref) : storage_offset =
  a.storage_offset__content
 
 meta "model_projection" function storage_offset__ref___projection
 
 meta "inline : no" function storage_offset__ref___projection
 
 val storage_offset__havoc #"s-stoele.ads" 54 0 0# 
   (x : storage_offset__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "storage_count" defined at s-stoele.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__storage_count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type storage_count #"s-stoele.ads" 62 0 0# 
 
 function first #"s-stoele.ads" 62 0 0# 
   : int =
  0
 
 function last #"s-stoele.ads" 62 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"s-stoele.ads" 62 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = storage_count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type storage_count__ref #"s-stoele.ads" 62 0 0# =
  { mutable storage_count__content "model_trace:" : storage_count }
 
 function storage_count__ref___projection #"s-stoele.ads" 62 0 0# 
   (a : storage_count__ref) : storage_count =
  a.storage_count__content
 
 meta "model_projection" function storage_count__ref___projection
 
 meta "inline : no" function storage_count__ref___projection
 
 val storage_count__havoc #"s-stoele.ads" 62 0 0# 
   (x : storage_count__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "storage_element" defined at s-stoele.ads:64, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__storage_element
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type storage_element #"s-stoele.ads" 64 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-stoele.ads" 64 0 0# 
   : BV8.t
 
 function first #"s-stoele.ads" 64 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"s-stoele.ads" 64 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"s-stoele.ads" 64 0 0# 
   : int =
  0
 
 function last_int #"s-stoele.ads" 64 0 0# 
   : int =
  255
 
 predicate in_range #"s-stoele.ads" 64 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"s-stoele.ads" 64 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = storage_element, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type storage_element__ref #"s-stoele.ads" 64 0 0# =
  { mutable storage_element__content "model_trace:" : storage_element }
 
 function storage_element__ref___projection #"s-stoele.ads" 64 0 0# 
   (a : storage_element__ref) : storage_element =
  a.storage_element__content
 
 meta "model_projection" function storage_element__ref___projection
 
 meta "inline : no" function storage_element__ref___projection
 
 val storage_element__havoc #"s-stoele.ads" 64 0 0# 
   (x : storage_element__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "storage_array" defined at s-stoele.ads:70, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__System__storage_elements__storage_element
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_elements__storage_element

 function index_I1_one #"s-stoele.ads" 64 0 0# 
   : int =
  1
 
 type component_type #"s-stoele.ads" 64 0 0# =
  System__storage_elements__storage_element.storage_element
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"s-stoele.ads" 64 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_BV8_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = System__storage_elements__storage_element.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "storage_array" defined at s-stoele.ads:70, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__storage_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_elements__Tstorage_offsetB
 use        System__storage_elements__storage_offset
 use        System__storage_elements__storage_element
 use        Array__Int__System__storage_elements__storage_element

 type component_type #"s-stoele.ads" 64 0 0# =
  System__storage_elements__storage_element.storage_element
 
 function index_1_id #"s-stoele.ads" 64 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__storage_elements__storage_element.map, 
 function array_bool_eq = Array__Int__System__storage_elements__storage_element.bool_eq, 
 type index_base_type = System__storage_elements__Tstorage_offsetB.tstorage_offsetB, 
 type index_rep_type = int, 
 function to_rep = System__storage_elements__Tstorage_offsetB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = System__storage_elements__Tstorage_offsetB.in_range, 
 predicate index_dynamic_property = System__storage_elements__storage_offset.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type storage_array #"s-stoele.ads" 70 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type storage_array__ref #"s-stoele.ads" 70 0 0# =
  { mutable storage_array__content "model_trace:" : storage_array }
 
 function storage_array__ref___projection #"s-stoele.ads" 70 0 0# 
   (a : storage_array__ref) : storage_array =
  a.storage_array__content
 
 meta "model_projection" function storage_array__ref___projection
 
 meta "inline : no" function storage_array__ref___projection
 
 val storage_array__havoc #"s-stoele.ads" 70 0 0# 
   (x : storage_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "left" defined at s-stoele.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Oadd__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function left #"s-stoele.ads" 76 0 0# "model" "model_trace:20929" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at s-stoele.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Oadd__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at s-stoele.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Oadd__right
 use import "_gnatprove_standard".Main

 function right #"s-stoele.ads" 76 0 0# "model" "model_trace:20938" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-stoele.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at s-stoele.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Oadd__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd" defined at s-stoele.ads:76, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__storage_elements__Oadd
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function oadd #"s-stoele.ads" 76 0 0# 
   (left : BV64.t) (right : int) : BV64.t

end

(* Module for defining the constant "left" defined at s-stoele.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Oadd__2__left
 use import "_gnatprove_standard".Main

 function left #"s-stoele.ads" 81 0 0# "model" "model_trace:20971" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-stoele.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at s-stoele.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Oadd__2__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at s-stoele.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Oadd__2__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function right #"s-stoele.ads" 81 0 0# "model" "model_trace:20980" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at s-stoele.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Oadd__2__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd__2" defined at s-stoele.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__storage_elements__Oadd__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function oadd__2 #"s-stoele.ads" 81 0 0# 
   (left : int) (right : BV64.t) : BV64.t

end

(* Module for defining the constant "left" defined at s-stoele.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Osubtract__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function left #"s-stoele.ads" 86 0 0# "model" "model_trace:21013" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at s-stoele.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Osubtract__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at s-stoele.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Osubtract__right
 use import "_gnatprove_standard".Main

 function right #"s-stoele.ads" 86 0 0# "model" "model_trace:21022" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-stoele.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at s-stoele.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Osubtract__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Osubtract" defined at s-stoele.ads:86, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__storage_elements__Osubtract
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function osubtract #"s-stoele.ads" 86 0 0# 
   (left : BV64.t) (right : int) : BV64.t

end

(* Module for defining the constant "left" defined at s-stoele.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Osubtract__2__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function left #"s-stoele.ads" 91 0 0# "model" "model_trace:21055" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at s-stoele.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Osubtract__2__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at s-stoele.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Osubtract__2__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function right #"s-stoele.ads" 91 0 0# "model" "model_trace:21062" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at s-stoele.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Osubtract__2__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Osubtract__2" defined at s-stoele.ads:91, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__storage_elements__Osubtract__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function osubtract__2 #"s-stoele.ads" 91 0 0# 
   (left : BV64.t) (right : BV64.t) : int

end

(* Module for defining the constant "left" defined at s-stoele.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Omod__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function left #"s-stoele.ads" 97 0 0# "model" "model_trace:21096" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at s-stoele.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Omod__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at s-stoele.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Omod__right
 use import "_gnatprove_standard".Main

 function right #"s-stoele.ads" 98 0 0# "model" "model_trace:21105" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-stoele.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at s-stoele.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Omod__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Omod" defined at s-stoele.ads:96, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__storage_elements__Omod
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function omod #"s-stoele.ads" 96 0 0# 
   (left : BV64.t) (right : int) : int

end

(* Module for axiomatizing type "integer_address" defined at s-stoele.ads:105, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__integer_address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type integer_address #"s-stoele.ads" 105 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-stoele.ads" 105 0 0# 
   : BV64.t
 
 function first #"s-stoele.ads" 105 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-stoele.ads" 105 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-stoele.ads" 105 0 0# 
   : int =
  0
 
 function last_int #"s-stoele.ads" 105 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-stoele.ads" 105 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-stoele.ads" 105 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = integer_address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_address__ref #"s-stoele.ads" 105 0 0# =
  { mutable integer_address__content "model_trace:" : integer_address }
 
 function integer_address__ref___projection #"s-stoele.ads" 105 0 0# 
   (a : integer_address__ref) : integer_address =
  a.integer_address__content
 
 meta "model_projection" function integer_address__ref___projection
 
 meta "inline : no" function integer_address__ref___projection
 
 val integer_address__havoc #"s-stoele.ads" 105 0 0# 
   (x : integer_address__ref) : unit
  writes {x}

end

(* Module for defining the constant "value" defined at s-stoele.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__to_address__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"s-stoele.ads" 107 0 0# "model" "model_trace:21148" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-stoele.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-stoele.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__to_address__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_address" defined at s-stoele.ads:107, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__storage_elements__to_address
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function to_address #"s-stoele.ads" 107 0 0# 
   (value : BV64.t) : BV64.t

end

(* Module for defining the constant "value" defined at s-stoele.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__to_integer__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"s-stoele.ads" 112 0 0# "model" "model_trace:21181" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-stoele.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__to_integer__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_integer" defined at s-stoele.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__storage_elements__to_integer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function to_integer #"s-stoele.ads" 112 0 0# 
   (value : BV64.t) : BV64.t

end

(* Module for axiomatizing the record theory associated to type "stack_info" defined at s-stache.ads:50, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__stack_checking__stack_info__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address
 use        System__storage_elements__storage_offset

 type __split_fields #"s-stoele.ads" 105 0 0# =
  { rec__system__stack_checking__stack_info__limit "model_trace:.20707" : System__address.address; rec__system__stack_checking__stack_info__base "model_trace:.20722" : System__address.address; rec__system__stack_checking__stack_info__size "model_trace:.20737" : System__storage_elements__storage_offset.storage_offset }
 
 function __split_fields_Limit__projection #"s-stoele.ads" 54 0 0# "model_trace:.20707" 
   (a : __split_fields) : System__address.address =
  a.rec__system__stack_checking__stack_info__limit
 
 meta "model_projection" function __split_fields_Limit__projection
 
 meta "inline : no" function __split_fields_Limit__projection
 
 function __split_fields_Base__projection #"s-stache.ads" 50 0 0# "model_trace:.20722" 
   (a : __split_fields) : System__address.address =
  a.rec__system__stack_checking__stack_info__base
 
 meta "model_projection" function __split_fields_Base__projection
 
 meta "inline : no" function __split_fields_Base__projection
 
 function __split_fields_Size__projection #"s-stache.ads" 50 0 0# "model_trace:.20737" 
   (a : __split_fields) : System__storage_elements__storage_offset.storage_offset =
  a.rec__system__stack_checking__stack_info__size
 
 meta "model_projection" function __split_fields_Size__projection
 
 meta "inline : no" function __split_fields_Size__projection
 
 type __split_fields__ref #"s-stache.ads" 50 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_3__projection #"s-stache.ads" 50 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_3__projection
 
 meta "inline : no" function __split_fields__ref_3__projection
 
 val __split_fields__havoc #"s-stache.ads" 50 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-stache.ads" 50 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_3__projection #"s-stache.ads" 50 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_3__projection
 
 meta "inline : no" function __rep_3__projection
 
 function to_base #"s-stache.ads" 50 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-stache.ads" 50 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__stack_checking__stack_info__limit__pred #"s-stache.ads" 50 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_checking__stack_info__limit_ #"s-stache.ads" 50 0 0# 
   (a : __rep) : System__address.address
  requires { (system__stack_checking__stack_info__limit__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_checking__stack_info__limit) }
 
 predicate system__stack_checking__stack_info__base__pred #"s-stache.ads" 50 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_checking__stack_info__base_ #"s-stache.ads" 50 0 0# 
   (a : __rep) : System__address.address
  requires { (system__stack_checking__stack_info__base__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_checking__stack_info__base) }
 
 predicate system__stack_checking__stack_info__size__pred #"s-stache.ads" 50 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_checking__stack_info__size_ #"s-stache.ads" 50 0 0# 
   (a : __rep) : System__storage_elements__storage_offset.storage_offset
  requires { (system__stack_checking__stack_info__size__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_checking__stack_info__size) }
 
 function bool_eq #"s-stache.ads" 50 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ((System__address.to_rep a.__split_fields.rec__system__stack_checking__stack_info__limit) = (System__address.to_rep b.__split_fields.rec__system__stack_checking__stack_info__limit)) /\ ((System__address.to_rep a.__split_fields.rec__system__stack_checking__stack_info__base) = (System__address.to_rep b.__split_fields.rec__system__stack_checking__stack_info__base)) ) /\ ((System__storage_elements__storage_offset.to_rep a.__split_fields.rec__system__stack_checking__stack_info__size) = (System__storage_elements__storage_offset.to_rep b.__split_fields.rec__system__stack_checking__stack_info__size)) )) then (
   True) else (
   False))
 
 function user_eq #"s-stache.ads" 50 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "stack_info" defined at s-stache.ads:50, created in Gnat2Why.Types.Translate_Type *)
module System__stack_checking__stack_info
 use export System__stack_checking__stack_info__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type stack_info #"s-stache.ads" 50 0 0# =
  __rep
 
 function value__size #"s-stache.ads" 50 0 0# 
   : int
 
 function object__size #"s-stache.ads" 50 0 0# 
   (a : stack_info) : int
 
 function value__alignment #"s-stache.ads" 50 0 0# 
   : int
 
 function object__alignment #"s-stache.ads" 50 0 0# 
   (a : stack_info) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : stack_info.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : stack_info.
   ((object__alignment a) >= 0))
 
 function system__stack_checking__stack_info__limit__first__bit #"s-stache.ads" 50 0 0# 
   : int
 
 function system__stack_checking__stack_info__limit__last__bit #"s-stache.ads" 50 0 0# 
   : int
 
 function system__stack_checking__stack_info__limit__position #"s-stache.ads" 50 0 0# 
   : int
 
 axiom system__stack_checking__stack_info__limit__first__bit_axiom :
  ((system__stack_checking__stack_info__limit__first__bit ) >= 0)
 
 axiom system__stack_checking__stack_info__limit__last__bit_axiom :
  ((system__stack_checking__stack_info__limit__last__bit ) > (system__stack_checking__stack_info__limit__first__bit ))
 
 axiom system__stack_checking__stack_info__limit__position_axiom :
  ((system__stack_checking__stack_info__limit__position ) >= 0)
 
 function system__stack_checking__stack_info__base__first__bit #"s-stache.ads" 51 0 0# 
   : int
 
 function system__stack_checking__stack_info__base__last__bit #"s-stache.ads" 51 0 0# 
   : int
 
 function system__stack_checking__stack_info__base__position #"s-stache.ads" 51 0 0# 
   : int
 
 axiom system__stack_checking__stack_info__base__first__bit_axiom :
  ((system__stack_checking__stack_info__base__first__bit ) >= 0)
 
 axiom system__stack_checking__stack_info__base__last__bit_axiom :
  ((system__stack_checking__stack_info__base__last__bit ) > (system__stack_checking__stack_info__base__first__bit ))
 
 axiom system__stack_checking__stack_info__base__position_axiom :
  ((system__stack_checking__stack_info__base__position ) >= 0)
 
 function system__stack_checking__stack_info__size__first__bit #"s-stache.ads" 52 0 0# 
   : int
 
 function system__stack_checking__stack_info__size__last__bit #"s-stache.ads" 52 0 0# 
   : int
 
 function system__stack_checking__stack_info__size__position #"s-stache.ads" 52 0 0# 
   : int
 
 axiom system__stack_checking__stack_info__size__first__bit_axiom :
  ((system__stack_checking__stack_info__size__first__bit ) >= 0)
 
 axiom system__stack_checking__stack_info__size__last__bit_axiom :
  ((system__stack_checking__stack_info__size__last__bit ) > (system__stack_checking__stack_info__size__first__bit ))
 
 axiom system__stack_checking__stack_info__size__position_axiom :
  ((system__stack_checking__stack_info__size__position ) >= 0)
 
 function dummy #"s-stache.ads" 53 0 0# 
   : stack_info
 
 type stack_info__ref #"s-stache.ads" 50 0 0# =
  { mutable stack_info__content "model_trace:" : stack_info }
 
 function stack_info__ref___projection #"s-stache.ads" 50 0 0# 
   (a : stack_info__ref) : stack_info =
  a.stack_info__content
 
 meta "model_projection" function stack_info__ref___projection
 
 meta "inline : no" function stack_info__ref___projection
 
 val stack_info__havoc #"s-stache.ads" 50 0 0# 
   (x : stack_info__ref) : unit
  writes {x}

end

(* Module for defining the constant "multi_processor" defined at s-stache.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_checking__multi_processor
 use import "_gnatprove_standard".Main

 function multi_processor #"s-stache.ads" 68 0 0# "model" "model_trace:20764" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-stache.ads" 68 0 0# 
   : int

end

(* Module for axiomatizing type "eo" defined at s-soflin.ads:49, created in Gnat2Why.Types.Translate_Type *)
module System__soft_links__eo
 use export Ada__exceptions__exception_occurrence__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type eo #"s-soflin.ads" 49 0 0# =
  __rep
 
 function value__size #"s-soflin.ads" 49 0 0# 
   : int
 
 function object__size #"s-soflin.ads" 49 0 0# 
   (a : eo) : int
 
 function value__alignment #"s-soflin.ads" 49 0 0# 
   : int
 
 function object__alignment #"s-soflin.ads" 49 0 0# 
   (a : eo) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : eo.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : eo.
   ((object__alignment a) >= 0))
 
 function dummy #"s-soflin.ads" 49 0 0# 
   : eo
 
 type eo__ref #"s-soflin.ads" 49 0 0# =
  { mutable eo__content "model_trace:" : eo }
 
 function eo__ref___projection #"s-soflin.ads" 49 0 0# 
   (a : eo__ref) : eo =
  a.eo__content
 
 meta "model_projection" function eo__ref___projection
 
 meta "inline : no" function eo__ref___projection
 
 val eo__havoc #"s-soflin.ads" 49 0 0# 
   (x : eo__ref) : unit
  writes {x}

end

(* Module for possibly declaring a logic function for "current_target_exception" defined at s-soflin.ads:51, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__current_target_exception
 use import "_gnatprove_standard".Main
 use        System__soft_links__eo

 function current_target_exception #"s-soflin.ads" 51 0 0# 
   (__void_param : unit) : System__soft_links__eo.eo

end

(* Module for possibly declaring a logic function for "check_abort_status_nt" defined at s-soflin.ads:146, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__check_abort_status_nt
 use import "_gnatprove_standard".Main

 function check_abort_status_nt #"s-soflin.ads" 146 0 0# 
   (__void_param : unit) : int

end

(* Module for defining the constant "excep" defined at s-soflin.ads:156, created in Gnat2Why.Decls.Translate_Constant *)
module System__soft_links__task_termination_nt__excep
 use import "_gnatprove_standard".Main
 use        System__soft_links__eo

 function excep #"s-soflin.ads" 156 0 0# 
   : System__soft_links__eo.eo
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 49 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "excep" defined at s-soflin.ads:156, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__task_termination_nt__excep___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_jmpbuf_address_nt" defined at s-soflin.ads:225, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__get_jmpbuf_address_nt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function get_jmpbuf_address_nt #"s-soflin.ads" 225 0 0# 
   (__void_param : unit) : BV64.t

end

(* Module for defining the constant "addr" defined at s-soflin.ads:226, created in Gnat2Why.Decls.Translate_Constant *)
module System__soft_links__set_jmpbuf_address_nt__addr
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function addr #"s-soflin.ads" 226 0 0# "model" "model_trace:20135" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "addr" defined at s-soflin.ads:226, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__set_jmpbuf_address_nt__addr___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_sec_stack_addr_nt" defined at s-soflin.ads:231, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__get_sec_stack_addr_nt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function get_sec_stack_addr_nt #"s-soflin.ads" 231 0 0# 
   (__void_param : unit) : BV64.t

end

(* Module for defining the constant "addr" defined at s-soflin.ads:232, created in Gnat2Why.Decls.Translate_Constant *)
module System__soft_links__set_sec_stack_addr_nt__addr
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function addr #"s-soflin.ads" 232 0 0# "model" "model_trace:20188" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "addr" defined at s-soflin.ads:232, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__set_sec_stack_addr_nt__addr___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "current_master_nt" defined at s-soflin.ads:253, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__current_master_nt
 use import "_gnatprove_standard".Main

 function current_master_nt #"s-soflin.ads" 253 0 0# 
   (__void_param : unit) : int

end

(* Module for possibly declaring a logic function for "task_name_nt" defined at s-soflin.ads:274, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__task_name_nt
 use import "_gnatprove_standard".Main
 use        Standard__string

 function task_name_nt #"s-soflin.ads" 274 0 0# 
   (__void_param : unit) : Standard__string.string

end

(* Module for possibly declaring a logic function for "get_gnat_exception" defined at s-soflin.ads:357, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__get_gnat_exception
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function get_gnat_exception #"s-soflin.ads" 357 0 0# 
   (__void_param : unit) : Ada__exceptions__exception_id.exception_id

end

(* Module for possibly declaring a logic function for "get_jmpbuf_address_soft" defined at s-soflin.ads:368, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__get_jmpbuf_address_soft
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function get_jmpbuf_address_soft #"s-soflin.ads" 368 0 0# 
   (__void_param : unit) : BV64.t

end

(* Module for defining the constant "addr" defined at s-soflin.ads:369, created in Gnat2Why.Decls.Translate_Constant *)
module System__soft_links__set_jmpbuf_address_soft__addr
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function addr #"s-soflin.ads" 369 0 0# "model" "model_trace:20569" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "addr" defined at s-soflin.ads:369, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__set_jmpbuf_address_soft__addr___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_sec_stack_addr_soft" defined at s-soflin.ads:373, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__get_sec_stack_addr_soft
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function get_sec_stack_addr_soft #"s-soflin.ads" 373 0 0# 
   (__void_param : unit) : BV64.t

end

(* Module for defining the constant "addr" defined at s-soflin.ads:374, created in Gnat2Why.Decls.Translate_Constant *)
module System__soft_links__set_sec_stack_addr_soft__addr
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function addr #"s-soflin.ads" 374 0 0# "model" "model_trace:20605" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "addr" defined at s-soflin.ads:374, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__set_sec_stack_addr_soft__addr___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing the record theory associated to type "dummy_communication_block" defined at s-soflin.ads:393, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__soft_links__dummy_communication_block__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address

 type __split_fields #"system.ads" 134 0 0# =
  { rec__system__soft_links__dummy_communication_block__comp_1 "model_trace:.20634" : System__address.address; rec__system__soft_links__dummy_communication_block__comp_2 "model_trace:.20644" : bool; rec__system__soft_links__dummy_communication_block__comp_3 "model_trace:.20654" : bool }
 
 function __split_fields_Comp_1__projection #"s-soflin.ads" 393 0 0# "model_trace:.20634" 
   (a : __split_fields) : System__address.address =
  a.rec__system__soft_links__dummy_communication_block__comp_1
 
 meta "model_projection" function __split_fields_Comp_1__projection
 
 meta "inline : no" function __split_fields_Comp_1__projection
 
 function __split_fields_Comp_2__projection #"s-soflin.ads" 393 0 0# "model_trace:.20644" 
   (a : __split_fields) : bool =
  a.rec__system__soft_links__dummy_communication_block__comp_2
 
 meta "model_projection" function __split_fields_Comp_2__projection
 
 meta "inline : no" function __split_fields_Comp_2__projection
 
 function __split_fields_Comp_3__projection #"s-soflin.ads" 393 0 0# "model_trace:.20654" 
   (a : __split_fields) : bool =
  a.rec__system__soft_links__dummy_communication_block__comp_3
 
 meta "model_projection" function __split_fields_Comp_3__projection
 
 meta "inline : no" function __split_fields_Comp_3__projection
 
 type __split_fields__ref #"s-soflin.ads" 393 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_4__projection #"s-soflin.ads" 393 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_4__projection
 
 meta "inline : no" function __split_fields__ref_4__projection
 
 val __split_fields__havoc #"s-soflin.ads" 393 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-soflin.ads" 393 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_4__projection #"s-soflin.ads" 393 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_4__projection
 
 meta "inline : no" function __rep_4__projection
 
 function to_base #"s-soflin.ads" 393 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-soflin.ads" 393 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__soft_links__dummy_communication_block__comp_1__pred #"s-soflin.ads" 393 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__soft_links__dummy_communication_block__comp_1_ #"s-soflin.ads" 393 0 0# 
   (a : __rep) : System__address.address
  requires { (system__soft_links__dummy_communication_block__comp_1__pred a) }
  ensures { (result = a.__split_fields.rec__system__soft_links__dummy_communication_block__comp_1) }
 
 predicate system__soft_links__dummy_communication_block__comp_2__pred #"s-soflin.ads" 393 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__soft_links__dummy_communication_block__comp_2_ #"s-soflin.ads" 393 0 0# 
   (a : __rep) : bool
  requires { (system__soft_links__dummy_communication_block__comp_2__pred a) }
  ensures { (result = a.__split_fields.rec__system__soft_links__dummy_communication_block__comp_2) }
 
 predicate system__soft_links__dummy_communication_block__comp_3__pred #"s-soflin.ads" 393 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__soft_links__dummy_communication_block__comp_3_ #"s-soflin.ads" 393 0 0# 
   (a : __rep) : bool
  requires { (system__soft_links__dummy_communication_block__comp_3__pred a) }
  ensures { (result = a.__split_fields.rec__system__soft_links__dummy_communication_block__comp_3) }
 
 function bool_eq #"s-soflin.ads" 393 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ((System__address.to_rep a.__split_fields.rec__system__soft_links__dummy_communication_block__comp_1) = (System__address.to_rep b.__split_fields.rec__system__soft_links__dummy_communication_block__comp_1)) /\ (a.__split_fields.rec__system__soft_links__dummy_communication_block__comp_2 = b.__split_fields.rec__system__soft_links__dummy_communication_block__comp_2) ) /\ (a.__split_fields.rec__system__soft_links__dummy_communication_block__comp_3 = b.__split_fields.rec__system__soft_links__dummy_communication_block__comp_3) )) then (
   True) else (
   False))
 
 function user_eq #"s-soflin.ads" 393 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "dummy_communication_block" defined at s-soflin.ads:393, created in Gnat2Why.Types.Translate_Type *)
module System__soft_links__dummy_communication_block
 use export System__soft_links__dummy_communication_block__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type dummy_communication_block #"s-soflin.ads" 393 0 0# =
  __rep
 
 function value__size #"s-soflin.ads" 393 0 0# 
   : int
 
 function object__size #"s-soflin.ads" 393 0 0# 
   (a : dummy_communication_block) : int
 
 function value__alignment #"s-soflin.ads" 393 0 0# 
   : int
 
 function object__alignment #"s-soflin.ads" 393 0 0# 
   (a : dummy_communication_block) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : dummy_communication_block.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : dummy_communication_block.
   ((object__alignment a) >= 0))
 
 function system__soft_links__dummy_communication_block__comp_1__first__bit #"s-soflin.ads" 393 0 0# 
   : int
 
 function system__soft_links__dummy_communication_block__comp_1__last__bit #"s-soflin.ads" 393 0 0# 
   : int
 
 function system__soft_links__dummy_communication_block__comp_1__position #"s-soflin.ads" 393 0 0# 
   : int
 
 axiom system__soft_links__dummy_communication_block__comp_1__first__bit_axiom :
  ((system__soft_links__dummy_communication_block__comp_1__first__bit ) >= 0)
 
 axiom system__soft_links__dummy_communication_block__comp_1__last__bit_axiom :
  ((system__soft_links__dummy_communication_block__comp_1__last__bit ) > (system__soft_links__dummy_communication_block__comp_1__first__bit ))
 
 axiom system__soft_links__dummy_communication_block__comp_1__position_axiom :
  ((system__soft_links__dummy_communication_block__comp_1__position ) >= 0)
 
 function system__soft_links__dummy_communication_block__comp_2__first__bit #"s-soflin.ads" 394 0 0# 
   : int
 
 function system__soft_links__dummy_communication_block__comp_2__last__bit #"s-soflin.ads" 394 0 0# 
   : int
 
 function system__soft_links__dummy_communication_block__comp_2__position #"s-soflin.ads" 394 0 0# 
   : int
 
 axiom system__soft_links__dummy_communication_block__comp_2__first__bit_axiom :
  ((system__soft_links__dummy_communication_block__comp_2__first__bit ) >= 0)
 
 axiom system__soft_links__dummy_communication_block__comp_2__last__bit_axiom :
  ((system__soft_links__dummy_communication_block__comp_2__last__bit ) > (system__soft_links__dummy_communication_block__comp_2__first__bit ))
 
 axiom system__soft_links__dummy_communication_block__comp_2__position_axiom :
  ((system__soft_links__dummy_communication_block__comp_2__position ) >= 0)
 
 function system__soft_links__dummy_communication_block__comp_3__first__bit #"s-soflin.ads" 395 0 0# 
   : int
 
 function system__soft_links__dummy_communication_block__comp_3__last__bit #"s-soflin.ads" 395 0 0# 
   : int
 
 function system__soft_links__dummy_communication_block__comp_3__position #"s-soflin.ads" 395 0 0# 
   : int
 
 axiom system__soft_links__dummy_communication_block__comp_3__first__bit_axiom :
  ((system__soft_links__dummy_communication_block__comp_3__first__bit ) >= 0)
 
 axiom system__soft_links__dummy_communication_block__comp_3__last__bit_axiom :
  ((system__soft_links__dummy_communication_block__comp_3__last__bit ) > (system__soft_links__dummy_communication_block__comp_3__first__bit ))
 
 axiom system__soft_links__dummy_communication_block__comp_3__position_axiom :
  ((system__soft_links__dummy_communication_block__comp_3__position ) >= 0)
 
 function dummy #"s-soflin.ads" 396 0 0# 
   : dummy_communication_block
 
 type dummy_communication_block__ref #"s-soflin.ads" 393 0 0# =
  { mutable dummy_communication_block__content "model_trace:" : dummy_communication_block }
 
 function dummy_communication_block__ref___projection #"s-soflin.ads" 393 0 0# 
   (a : dummy_communication_block__ref) : dummy_communication_block =
  a.dummy_communication_block__content
 
 meta "model_projection" function dummy_communication_block__ref___projection
 
 meta "inline : no" function dummy_communication_block__ref___projection
 
 val dummy_communication_block__havoc #"s-soflin.ads" 393 0 0# 
   (x : dummy_communication_block__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tinteger_8B" defined at interfac.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_8B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_8B #"interfac.ads" 46 0 0# 
 
 function first #"interfac.ads" 46 0 0# 
   : int =
  ( -128 )
 
 function last #"interfac.ads" 46 0 0# 
   : int =
  127
 
 predicate in_range #"interfac.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_8B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tinteger_8B__ref #"interfac.ads" 46 0 0# =
  { mutable tinteger_8B__content "model_trace:" : tinteger_8B }
 
 function tinteger_8B__ref___projection #"interfac.ads" 46 0 0# 
   (a : tinteger_8B__ref) : tinteger_8B =
  a.tinteger_8B__content
 
 meta "model_projection" function tinteger_8B__ref___projection
 
 meta "inline : no" function tinteger_8B__ref___projection
 
 val tinteger_8B__havoc #"interfac.ads" 46 0 0# 
   (x : tinteger_8B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_8" defined at interfac.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 #"interfac.ads" 46 0 0# 
 
 function first #"interfac.ads" 46 0 0# 
   : int =
  ( -128 )
 
 function last #"interfac.ads" 46 0 0# 
   : int =
  127
 
 predicate in_range #"interfac.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_8__ref #"interfac.ads" 46 0 0# =
  { mutable integer_8__content "model_trace:" : integer_8 }
 
 function integer_8__ref_2__projection #"interfac.ads" 46 0 0# 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref_2__projection
 
 meta "inline : no" function integer_8__ref_2__projection
 
 val integer_8__havoc #"interfac.ads" 46 0 0# 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tinteger_16B" defined at interfac.ads:49, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_16B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_16B #"interfac.ads" 49 0 0# 
 
 function first #"interfac.ads" 49 0 0# 
   : int =
  ( -32768 )
 
 function last #"interfac.ads" 49 0 0# 
   : int =
  32767
 
 predicate in_range #"interfac.ads" 49 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_16B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tinteger_16B__ref #"interfac.ads" 49 0 0# =
  { mutable tinteger_16B__content "model_trace:" : tinteger_16B }
 
 function tinteger_16B__ref___projection #"interfac.ads" 49 0 0# 
   (a : tinteger_16B__ref) : tinteger_16B =
  a.tinteger_16B__content
 
 meta "model_projection" function tinteger_16B__ref___projection
 
 meta "inline : no" function tinteger_16B__ref___projection
 
 val tinteger_16B__havoc #"interfac.ads" 49 0 0# 
   (x : tinteger_16B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_16" defined at interfac.ads:49, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 #"interfac.ads" 49 0 0# 
 
 function first #"interfac.ads" 49 0 0# 
   : int =
  ( -32768 )
 
 function last #"interfac.ads" 49 0 0# 
   : int =
  32767
 
 predicate in_range #"interfac.ads" 49 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_16__ref #"interfac.ads" 49 0 0# =
  { mutable integer_16__content "model_trace:" : integer_16 }
 
 function integer_16__ref_2__projection #"interfac.ads" 49 0 0# 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref_2__projection
 
 meta "inline : no" function integer_16__ref_2__projection
 
 val integer_16__havoc #"interfac.ads" 49 0 0# 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tinteger_32B" defined at interfac.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_32B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_32B #"interfac.ads" 52 0 0# 
 
 function first #"interfac.ads" 52 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"interfac.ads" 52 0 0# 
   : int =
  2147483647
 
 predicate in_range #"interfac.ads" 52 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_32B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tinteger_32B__ref #"interfac.ads" 52 0 0# =
  { mutable tinteger_32B__content "model_trace:" : tinteger_32B }
 
 function tinteger_32B__ref___projection #"interfac.ads" 52 0 0# 
   (a : tinteger_32B__ref) : tinteger_32B =
  a.tinteger_32B__content
 
 meta "model_projection" function tinteger_32B__ref___projection
 
 meta "inline : no" function tinteger_32B__ref___projection
 
 val tinteger_32B__havoc #"interfac.ads" 52 0 0# 
   (x : tinteger_32B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_32" defined at interfac.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 #"interfac.ads" 52 0 0# 
 
 function first #"interfac.ads" 52 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"interfac.ads" 52 0 0# 
   : int =
  2147483647
 
 predicate in_range #"interfac.ads" 52 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_32__ref #"interfac.ads" 52 0 0# =
  { mutable integer_32__content "model_trace:" : integer_32 }
 
 function integer_32__ref_2__projection #"interfac.ads" 52 0 0# 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref_2__projection
 
 meta "inline : no" function integer_32__ref_2__projection
 
 val integer_32__havoc #"interfac.ads" 52 0 0# 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tinteger_64B" defined at interfac.ads:55, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_64B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_64B #"interfac.ads" 55 0 0# 
 
 function first #"interfac.ads" 55 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"interfac.ads" 55 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"interfac.ads" 55 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_64B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tinteger_64B__ref #"interfac.ads" 55 0 0# =
  { mutable tinteger_64B__content "model_trace:" : tinteger_64B }
 
 function tinteger_64B__ref___projection #"interfac.ads" 55 0 0# 
   (a : tinteger_64B__ref) : tinteger_64B =
  a.tinteger_64B__content
 
 meta "model_projection" function tinteger_64B__ref___projection
 
 meta "inline : no" function tinteger_64B__ref___projection
 
 val tinteger_64B__havoc #"interfac.ads" 55 0 0# 
   (x : tinteger_64B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_64" defined at interfac.ads:55, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 #"interfac.ads" 55 0 0# 
 
 function first #"interfac.ads" 55 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"interfac.ads" 55 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"interfac.ads" 55 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_64__ref #"interfac.ads" 55 0 0# =
  { mutable integer_64__content "model_trace:" : integer_64 }
 
 function integer_64__ref_2__projection #"interfac.ads" 55 0 0# 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref_2__projection
 
 meta "inline : no" function integer_64__ref_2__projection
 
 val integer_64__havoc #"interfac.ads" 55 0 0# 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_8" defined at interfac.ads:63, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_8
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type unsigned_8 #"interfac.ads" 63 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 63 0 0# 
   : BV8.t
 
 function first #"interfac.ads" 63 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"interfac.ads" 63 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"interfac.ads" 63 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 63 0 0# 
   : int =
  255
 
 predicate in_range #"interfac.ads" 63 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"interfac.ads" 63 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = unsigned_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_8__ref #"interfac.ads" 63 0 0# =
  { mutable unsigned_8__content "model_trace:" : unsigned_8 }
 
 function unsigned_8__ref___projection #"interfac.ads" 63 0 0# 
   (a : unsigned_8__ref) : unsigned_8 =
  a.unsigned_8__content
 
 meta "model_projection" function unsigned_8__ref___projection
 
 meta "inline : no" function unsigned_8__ref___projection
 
 val unsigned_8__havoc #"interfac.ads" 63 0 0# 
   (x : unsigned_8__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_16" defined at interfac.ads:66, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_16
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV16

 type unsigned_16 #"interfac.ads" 66 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 66 0 0# 
   : BV16.t
 
 function first #"interfac.ads" 66 0 0# 
   : BV16.t =
  ( BV16.of_int 0 )
 
 function last #"interfac.ads" 66 0 0# 
   : BV16.t =
  ( BV16.of_int 65535 )
 
 function first_int #"interfac.ads" 66 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 66 0 0# 
   : int =
  65535
 
 predicate in_range #"interfac.ads" 66 0 0# 
   (x : BV16.t)  =
  true
 
 predicate in_range_int #"interfac.ads" 66 0 0# 
   (x : int)  =
  BV16.uint_in_range x
 
 clone export "ada__model".Static_Modular_16 with
 type t = unsigned_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_16__ref #"interfac.ads" 66 0 0# =
  { mutable unsigned_16__content "model_trace:" : unsigned_16 }
 
 function unsigned_16__ref___projection #"interfac.ads" 66 0 0# 
   (a : unsigned_16__ref) : unsigned_16 =
  a.unsigned_16__content
 
 meta "model_projection" function unsigned_16__ref___projection
 
 meta "inline : no" function unsigned_16__ref___projection
 
 val unsigned_16__havoc #"interfac.ads" 66 0 0# 
   (x : unsigned_16__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_24" defined at interfac.ads:69, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_24
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type unsigned_24 #"interfac.ads" 69 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 69 0 0# 
   : BV32.t =
  ( BV32.of_int 16777216 )
 
 function first #"interfac.ads" 69 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"interfac.ads" 69 0 0# 
   : BV32.t =
  ( BV32.of_int 16777215 )
 
 function first_int #"interfac.ads" 69 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 69 0 0# 
   : int =
  16777215
 
 predicate in_range #"interfac.ads" 69 0 0# 
   (x : BV32.t)  =
  ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"interfac.ads" 69 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = unsigned_24, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_24__ref #"interfac.ads" 69 0 0# =
  { mutable unsigned_24__content "model_trace:" : unsigned_24 }
 
 function unsigned_24__ref___projection #"interfac.ads" 69 0 0# 
   (a : unsigned_24__ref) : unsigned_24 =
  a.unsigned_24__content
 
 meta "model_projection" function unsigned_24__ref___projection
 
 meta "inline : no" function unsigned_24__ref___projection
 
 val unsigned_24__havoc #"interfac.ads" 69 0 0# 
   (x : unsigned_24__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_32" defined at interfac.ads:74, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_32
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type unsigned_32 #"interfac.ads" 74 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 74 0 0# 
   : BV32.t
 
 function first #"interfac.ads" 74 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"interfac.ads" 74 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"interfac.ads" 74 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 74 0 0# 
   : int =
  4294967295
 
 predicate in_range #"interfac.ads" 74 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"interfac.ads" 74 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = unsigned_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_32__ref #"interfac.ads" 74 0 0# =
  { mutable unsigned_32__content "model_trace:" : unsigned_32 }
 
 function unsigned_32__ref___projection #"interfac.ads" 74 0 0# 
   (a : unsigned_32__ref) : unsigned_32 =
  a.unsigned_32__content
 
 meta "model_projection" function unsigned_32__ref___projection
 
 meta "inline : no" function unsigned_32__ref___projection
 
 val unsigned_32__havoc #"interfac.ads" 74 0 0# 
   (x : unsigned_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_64" defined at interfac.ads:77, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_64
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type unsigned_64 #"interfac.ads" 77 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 77 0 0# 
   : BV64.t
 
 function first #"interfac.ads" 77 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"interfac.ads" 77 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"interfac.ads" 77 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 77 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"interfac.ads" 77 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"interfac.ads" 77 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = unsigned_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_64__ref #"interfac.ads" 77 0 0# =
  { mutable unsigned_64__content "model_trace:" : unsigned_64 }
 
 function unsigned_64__ref___projection #"interfac.ads" 77 0 0# 
   (a : unsigned_64__ref) : unsigned_64 =
  a.unsigned_64__content
 
 meta "model_projection" function unsigned_64__ref___projection
 
 meta "inline : no" function unsigned_64__ref___projection
 
 val unsigned_64__havoc #"interfac.ads" 77 0 0# 
   (x : unsigned_64__ref) : unit
  writes {x}

end

(* Module for defining the constant "value" defined at interfac.ads:82, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 82 0 0# "model" "model_trace:9580" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:82, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 83 0 0# "model" "model_trace:9589" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:83, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 86 0 0# "model" "model_trace:9608" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 87 0 0# "model" "model_trace:9617" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 90 0 0# "model" "model_trace:9636" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 91 0 0# "model" "model_trace:9645" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 94 0 0# "model" "model_trace:9664" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 95 0 0# "model" "model_trace:9673" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 98 0 0# "model" "model_trace:9692" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 99 0 0# "model" "model_trace:9701" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 102 0 0# "model" "model_trace:9720" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 103 0 0# "model" "model_trace:9729" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 106 0 0# "model" "model_trace:9748" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 107 0 0# "model" "model_trace:9757" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 110 0 0# "model" "model_trace:9776" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:110, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 111 0 0# "model" "model_trace:9785" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:111, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 114 0 0# "model" "model_trace:9804" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 115 0 0# "model" "model_trace:9813" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 118 0 0# "model" "model_trace:9832" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 119 0 0# "model" "model_trace:9841" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 122 0 0# "model" "model_trace:9860" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:122, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 123 0 0# "model" "model_trace:9869" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:123, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 126 0 0# "model" "model_trace:9888" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:126, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 127 0 0# "model" "model_trace:9897" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:127, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 130 0 0# "model" "model_trace:9916" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 131 0 0# "model" "model_trace:9925" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 134 0 0# "model" "model_trace:9944" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 135 0 0# "model" "model_trace:9953" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:135, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 138 0 0# "model" "model_trace:9972" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 139 0 0# "model" "model_trace:9981" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:139, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 142 0 0# "model" "model_trace:10000" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 143 0 0# "model" "model_trace:10009" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:143, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 146 0 0# "model" "model_trace:10028" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:146, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:147, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 147 0 0# "model" "model_trace:10037" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:147, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 150 0 0# "model" "model_trace:10056" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:150, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:151, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 151 0 0# "model" "model_trace:10065" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:151, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 154 0 0# "model" "model_trace:10084" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:154, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 155 0 0# "model" "model_trace:10093" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:155, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:158, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 158 0 0# "model" "model_trace:10112" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:158, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:159, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 159 0 0# "model" "model_trace:10121" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:159, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tieee_float_32B" defined at interfac.ads:169, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_float_32B
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type tieee_float_32B #"interfac.ads" 169 0 0# 
 
 function first #"interfac.ads" 169 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"interfac.ads" 169 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"interfac.ads" 169 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_float_32B, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type tieee_float_32B__ref #"interfac.ads" 169 0 0# =
  { mutable tieee_float_32B__content "model_trace:" : tieee_float_32B }
 
 function tieee_float_32B__ref___projection #"interfac.ads" 169 0 0# 
   (a : tieee_float_32B__ref) : tieee_float_32B =
  a.tieee_float_32B__content
 
 meta "model_projection" function tieee_float_32B__ref___projection
 
 meta "inline : no" function tieee_float_32B__ref___projection
 
 val tieee_float_32B__havoc #"interfac.ads" 169 0 0# 
   (x : tieee_float_32B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ieee_float_32" defined at interfac.ads:169, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_float_32
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type ieee_float_32 #"interfac.ads" 169 0 0# 
 
 function first #"interfac.ads" 169 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"interfac.ads" 169 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"interfac.ads" 169 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_float_32, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type ieee_float_32__ref #"interfac.ads" 169 0 0# =
  { mutable ieee_float_32__content "model_trace:" : ieee_float_32 }
 
 function ieee_float_32__ref___projection #"interfac.ads" 169 0 0# 
   (a : ieee_float_32__ref) : ieee_float_32 =
  a.ieee_float_32__content
 
 meta "model_projection" function ieee_float_32__ref___projection
 
 meta "inline : no" function ieee_float_32__ref___projection
 
 val ieee_float_32__havoc #"interfac.ads" 169 0 0# 
   (x : ieee_float_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tieee_float_64B" defined at interfac.ads:172, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_float_64B
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type tieee_float_64B #"interfac.ads" 172 0 0# 
 
 function first #"interfac.ads" 172 0 0# 
   : real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last #"interfac.ads" 172 0 0# 
   : real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range #"interfac.ads" 172 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_float_64B, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type tieee_float_64B__ref #"interfac.ads" 172 0 0# =
  { mutable tieee_float_64B__content "model_trace:" : tieee_float_64B }
 
 function tieee_float_64B__ref___projection #"interfac.ads" 172 0 0# 
   (a : tieee_float_64B__ref) : tieee_float_64B =
  a.tieee_float_64B__content
 
 meta "model_projection" function tieee_float_64B__ref___projection
 
 meta "inline : no" function tieee_float_64B__ref___projection
 
 val tieee_float_64B__havoc #"interfac.ads" 172 0 0# 
   (x : tieee_float_64B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ieee_float_64" defined at interfac.ads:172, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_float_64
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type ieee_float_64 #"interfac.ads" 172 0 0# 
 
 function first #"interfac.ads" 172 0 0# 
   : real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last #"interfac.ads" 172 0 0# 
   : real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range #"interfac.ads" 172 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_float_64, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type ieee_float_64__ref #"interfac.ads" 172 0 0# =
  { mutable ieee_float_64__content "model_trace:" : ieee_float_64 }
 
 function ieee_float_64__ref___projection #"interfac.ads" 172 0 0# 
   (a : ieee_float_64__ref) : ieee_float_64 =
  a.ieee_float_64__content
 
 meta "model_projection" function ieee_float_64__ref___projection
 
 meta "inline : no" function ieee_float_64__ref___projection
 
 val ieee_float_64__havoc #"interfac.ads" 172 0 0# 
   (x : ieee_float_64__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tieee_extended_floatB" defined at interfac.ads:182, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_extended_floatB
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type tieee_extended_floatB #"interfac.ads" 182 0 0# 
 
 function first #"interfac.ads" 182 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"interfac.ads" 182 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"interfac.ads" 182 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_extended_floatB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type tieee_extended_floatB__ref #"interfac.ads" 182 0 0# =
  { mutable tieee_extended_floatB__content "model_trace:" : tieee_extended_floatB }
 
 function tieee_extended_floatB__ref___projection #"interfac.ads" 182 0 0# 
   (a : tieee_extended_floatB__ref) : tieee_extended_floatB =
  a.tieee_extended_floatB__content
 
 meta "model_projection" function tieee_extended_floatB__ref___projection
 
 meta "inline : no" function tieee_extended_floatB__ref___projection
 
 val tieee_extended_floatB__havoc #"interfac.ads" 182 0 0# 
   (x : tieee_extended_floatB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ieee_extended_float" defined at interfac.ads:182, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_extended_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type ieee_extended_float #"interfac.ads" 182 0 0# 
 
 function first #"interfac.ads" 182 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"interfac.ads" 182 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"interfac.ads" 182 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_extended_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type ieee_extended_float__ref #"interfac.ads" 182 0 0# =
  { mutable ieee_extended_float__content "model_trace:" : ieee_extended_float }
 
 function ieee_extended_float__ref___projection #"interfac.ads" 182 0 0# 
   (a : ieee_extended_float__ref) : ieee_extended_float =
  a.ieee_extended_float__content
 
 meta "model_projection" function ieee_extended_float__ref___projection
 
 meta "inline : no" function ieee_extended_float__ref___projection
 
 val ieee_extended_float__havoc #"interfac.ads" 182 0 0# 
   (x : ieee_extended_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TintB" defined at i-c.ads:35, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TintB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tintB #"i-c.ads" 35 0 0# 
 
 function first #"i-c.ads" 35 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"i-c.ads" 35 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-c.ads" 35 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tintB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tintB__ref #"i-c.ads" 35 0 0# =
  { mutable tintB__content "model_trace:" : tintB }
 
 function tintB__ref___projection #"i-c.ads" 35 0 0# 
   (a : tintB__ref) : tintB =
  a.tintB__content
 
 meta "model_projection" function tintB__ref___projection
 
 meta "inline : no" function tintB__ref___projection
 
 val tintB__havoc #"i-c.ads" 35 0 0# 
   (x : tintB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "int" defined at i-c.ads:35, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__int
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int__ #"i-c.ads" 35 0 0# 
 
 function first #"i-c.ads" 35 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"i-c.ads" 35 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-c.ads" 35 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int__, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type int____ref #"i-c.ads" 35 0 0# =
  { mutable int____content "model_trace:" : int__ }
 
 function int____ref___projection #"i-c.ads" 35 0 0# 
   (a : int____ref) : int__ =
  a.int____content
 
 meta "model_projection" function int____ref___projection
 
 meta "inline : no" function int____ref___projection
 
 val int____havoc #"i-c.ads" 35 0 0# 
   (x : int____ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TshortB" defined at i-c.ads:36, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TshortB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tshortB #"i-c.ads" 36 0 0# 
 
 function first #"i-c.ads" 36 0 0# 
   : int =
  ( -32768 )
 
 function last #"i-c.ads" 36 0 0# 
   : int =
  32767
 
 predicate in_range #"i-c.ads" 36 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tshortB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tshortB__ref #"i-c.ads" 36 0 0# =
  { mutable tshortB__content "model_trace:" : tshortB }
 
 function tshortB__ref___projection #"i-c.ads" 36 0 0# 
   (a : tshortB__ref) : tshortB =
  a.tshortB__content
 
 meta "model_projection" function tshortB__ref___projection
 
 meta "inline : no" function tshortB__ref___projection
 
 val tshortB__havoc #"i-c.ads" 36 0 0# 
   (x : tshortB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short" defined at i-c.ads:36, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__short
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short #"i-c.ads" 36 0 0# 
 
 function first #"i-c.ads" 36 0 0# 
   : int =
  ( -32768 )
 
 function last #"i-c.ads" 36 0 0# 
   : int =
  32767
 
 predicate in_range #"i-c.ads" 36 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short__ref #"i-c.ads" 36 0 0# =
  { mutable short__content "model_trace:" : short }
 
 function short__ref___projection #"i-c.ads" 36 0 0# 
   (a : short__ref) : short =
  a.short__content
 
 meta "model_projection" function short__ref___projection
 
 meta "inline : no" function short__ref___projection
 
 val short__havoc #"i-c.ads" 36 0 0# 
   (x : short__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TlongB" defined at i-c.ads:37, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TlongB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tlongB #"i-c.ads" 37 0 0# 
 
 function first #"i-c.ads" 37 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"i-c.ads" 37 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"i-c.ads" 37 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tlongB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tlongB__ref #"i-c.ads" 37 0 0# =
  { mutable tlongB__content "model_trace:" : tlongB }
 
 function tlongB__ref___projection #"i-c.ads" 37 0 0# 
   (a : tlongB__ref) : tlongB =
  a.tlongB__content
 
 meta "model_projection" function tlongB__ref___projection
 
 meta "inline : no" function tlongB__ref___projection
 
 val tlongB__havoc #"i-c.ads" 37 0 0# 
   (x : tlongB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long" defined at i-c.ads:37, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__long
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long #"i-c.ads" 37 0 0# 
 
 function first #"i-c.ads" 37 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"i-c.ads" 37 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"i-c.ads" 37 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long__ref #"i-c.ads" 37 0 0# =
  { mutable long__content "model_trace:" : long }
 
 function long__ref___projection #"i-c.ads" 37 0 0# 
   (a : long__ref) : long =
  a.long__content
 
 meta "model_projection" function long__ref___projection
 
 meta "inline : no" function long__ref___projection
 
 val long__havoc #"i-c.ads" 37 0 0# 
   (x : long__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tsigned_charB" defined at i-c.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tsigned_charB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tsigned_charB #"i-c.ads" 40 0 0# 
 
 function first #"i-c.ads" 40 0 0# 
   : int =
  ( -128 )
 
 function last #"i-c.ads" 40 0 0# 
   : int =
  127
 
 predicate in_range #"i-c.ads" 40 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tsigned_charB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tsigned_charB__ref #"i-c.ads" 40 0 0# =
  { mutable tsigned_charB__content "model_trace:" : tsigned_charB }
 
 function tsigned_charB__ref___projection #"i-c.ads" 40 0 0# 
   (a : tsigned_charB__ref) : tsigned_charB =
  a.tsigned_charB__content
 
 meta "model_projection" function tsigned_charB__ref___projection
 
 meta "inline : no" function tsigned_charB__ref___projection
 
 val tsigned_charB__havoc #"i-c.ads" 40 0 0# 
   (x : tsigned_charB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "signed_char" defined at i-c.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__signed_char
 use import "_gnatprove_standard".Main
 use import "int".Int

 type signed_char #"i-c.ads" 40 0 0# 
 
 function first #"i-c.ads" 40 0 0# 
   : int =
  ( -128 )
 
 function last #"i-c.ads" 40 0 0# 
   : int =
  127
 
 predicate in_range #"i-c.ads" 40 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = signed_char, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type signed_char__ref #"i-c.ads" 40 0 0# =
  { mutable signed_char__content "model_trace:" : signed_char }
 
 function signed_char__ref___projection #"i-c.ads" 40 0 0# 
   (a : signed_char__ref) : signed_char =
  a.signed_char__content
 
 meta "model_projection" function signed_char__ref___projection
 
 meta "inline : no" function signed_char__ref___projection
 
 val signed_char__havoc #"i-c.ads" 40 0 0# 
   (x : signed_char__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned" defined at i-c.ads:43, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__unsigned
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type unsigned #"i-c.ads" 43 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-c.ads" 43 0 0# 
   : BV32.t
 
 function first #"i-c.ads" 43 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"i-c.ads" 43 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"i-c.ads" 43 0 0# 
   : int =
  0
 
 function last_int #"i-c.ads" 43 0 0# 
   : int =
  4294967295
 
 predicate in_range #"i-c.ads" 43 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"i-c.ads" 43 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = unsigned, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned__ref #"i-c.ads" 43 0 0# =
  { mutable unsigned__content "model_trace:" : unsigned }
 
 function unsigned__ref___projection #"i-c.ads" 43 0 0# 
   (a : unsigned__ref) : unsigned =
  a.unsigned__content
 
 meta "model_projection" function unsigned__ref___projection
 
 meta "inline : no" function unsigned__ref___projection
 
 val unsigned__havoc #"i-c.ads" 43 0 0# 
   (x : unsigned__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_short" defined at i-c.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__unsigned_short
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV16

 type unsigned_short #"i-c.ads" 44 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-c.ads" 44 0 0# 
   : BV16.t
 
 function first #"i-c.ads" 44 0 0# 
   : BV16.t =
  ( BV16.of_int 0 )
 
 function last #"i-c.ads" 44 0 0# 
   : BV16.t =
  ( BV16.of_int 65535 )
 
 function first_int #"i-c.ads" 44 0 0# 
   : int =
  0
 
 function last_int #"i-c.ads" 44 0 0# 
   : int =
  65535
 
 predicate in_range #"i-c.ads" 44 0 0# 
   (x : BV16.t)  =
  true
 
 predicate in_range_int #"i-c.ads" 44 0 0# 
   (x : int)  =
  BV16.uint_in_range x
 
 clone export "ada__model".Static_Modular_16 with
 type t = unsigned_short, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_short__ref #"i-c.ads" 44 0 0# =
  { mutable unsigned_short__content "model_trace:" : unsigned_short }
 
 function unsigned_short__ref___projection #"i-c.ads" 44 0 0# 
   (a : unsigned_short__ref) : unsigned_short =
  a.unsigned_short__content
 
 meta "model_projection" function unsigned_short__ref___projection
 
 meta "inline : no" function unsigned_short__ref___projection
 
 val unsigned_short__havoc #"i-c.ads" 44 0 0# 
   (x : unsigned_short__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_long" defined at i-c.ads:45, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__unsigned_long
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type unsigned_long #"i-c.ads" 45 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-c.ads" 45 0 0# 
   : BV64.t
 
 function first #"i-c.ads" 45 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"i-c.ads" 45 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"i-c.ads" 45 0 0# 
   : int =
  0
 
 function last_int #"i-c.ads" 45 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"i-c.ads" 45 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"i-c.ads" 45 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = unsigned_long, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_long__ref #"i-c.ads" 45 0 0# =
  { mutable unsigned_long__content "model_trace:" : unsigned_long }
 
 function unsigned_long__ref___projection #"i-c.ads" 45 0 0# 
   (a : unsigned_long__ref) : unsigned_long =
  a.unsigned_long__content
 
 meta "model_projection" function unsigned_long__ref___projection
 
 meta "inline : no" function unsigned_long__ref___projection
 
 val unsigned_long__havoc #"i-c.ads" 45 0 0# 
   (x : unsigned_long__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_char" defined at i-c.ads:47, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__unsigned_char
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type unsigned_char #"i-c.ads" 47 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-c.ads" 47 0 0# 
   : BV8.t
 
 function first #"i-c.ads" 47 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"i-c.ads" 47 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"i-c.ads" 47 0 0# 
   : int =
  0
 
 function last_int #"i-c.ads" 47 0 0# 
   : int =
  255
 
 predicate in_range #"i-c.ads" 47 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"i-c.ads" 47 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = unsigned_char, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_char__ref #"i-c.ads" 47 0 0# =
  { mutable unsigned_char__content "model_trace:" : unsigned_char }
 
 function unsigned_char__ref___projection #"i-c.ads" 47 0 0# 
   (a : unsigned_char__ref) : unsigned_char =
  a.unsigned_char__content
 
 meta "model_projection" function unsigned_char__ref___projection
 
 meta "inline : no" function unsigned_char__ref___projection
 
 val unsigned_char__havoc #"i-c.ads" 47 0 0# 
   (x : unsigned_char__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "plain_char" defined at i-c.ads:50, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__plain_char
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type plain_char #"i-c.ads" 50 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-c.ads" 50 0 0# 
   : BV8.t
 
 function first #"i-c.ads" 50 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"i-c.ads" 50 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"i-c.ads" 50 0 0# 
   : int =
  0
 
 function last_int #"i-c.ads" 50 0 0# 
   : int =
  255
 
 predicate in_range #"i-c.ads" 50 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"i-c.ads" 50 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = plain_char, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type plain_char__ref #"i-c.ads" 50 0 0# =
  { mutable plain_char__content "model_trace:" : plain_char }
 
 function plain_char__ref___projection #"i-c.ads" 50 0 0# 
   (a : plain_char__ref) : plain_char =
  a.plain_char__content
 
 meta "model_projection" function plain_char__ref___projection
 
 meta "inline : no" function plain_char__ref___projection
 
 val plain_char__havoc #"i-c.ads" 50 0 0# 
   (x : plain_char__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tptrdiff_tB" defined at i-c.ads:56, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tptrdiff_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tptrdiff_tB #"i-c.ads" 56 0 0# 
 
 function first #"i-c.ads" 56 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"i-c.ads" 56 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"i-c.ads" 56 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tptrdiff_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tptrdiff_tB__ref #"i-c.ads" 56 0 0# =
  { mutable tptrdiff_tB__content "model_trace:" : tptrdiff_tB }
 
 function tptrdiff_tB__ref___projection #"i-c.ads" 56 0 0# 
   (a : tptrdiff_tB__ref) : tptrdiff_tB =
  a.tptrdiff_tB__content
 
 meta "model_projection" function tptrdiff_tB__ref___projection
 
 meta "inline : no" function tptrdiff_tB__ref___projection
 
 val tptrdiff_tB__havoc #"i-c.ads" 56 0 0# 
   (x : tptrdiff_tB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ptrdiff_t" defined at i-c.ads:56, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__ptrdiff_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ptrdiff_t #"i-c.ads" 56 0 0# 
 
 function first #"i-c.ads" 56 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"i-c.ads" 56 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"i-c.ads" 56 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ptrdiff_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ptrdiff_t__ref #"i-c.ads" 56 0 0# =
  { mutable ptrdiff_t__content "model_trace:" : ptrdiff_t }
 
 function ptrdiff_t__ref___projection #"i-c.ads" 56 0 0# 
   (a : ptrdiff_t__ref) : ptrdiff_t =
  a.ptrdiff_t__content
 
 meta "model_projection" function ptrdiff_t__ref___projection
 
 meta "inline : no" function ptrdiff_t__ref___projection
 
 val ptrdiff_t__havoc #"i-c.ads" 56 0 0# 
   (x : ptrdiff_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "size_t" defined at i-c.ads:60, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__size_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type size_t #"i-c.ads" 60 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-c.ads" 60 0 0# 
   : BV64.t
 
 function first #"i-c.ads" 60 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"i-c.ads" 60 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"i-c.ads" 60 0 0# 
   : int =
  0
 
 function last_int #"i-c.ads" 60 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"i-c.ads" 60 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"i-c.ads" 60 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = size_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type size_t__ref #"i-c.ads" 60 0 0# =
  { mutable size_t__content "model_trace:" : size_t }
 
 function size_t__ref___projection #"i-c.ads" 60 0 0# 
   (a : size_t__ref) : size_t =
  a.size_t__content
 
 meta "model_projection" function size_t__ref___projection
 
 meta "inline : no" function size_t__ref___projection
 
 val size_t__havoc #"i-c.ads" 60 0 0# 
   (x : size_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tc_floatB" defined at i-c.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tc_floatB
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type tc_floatB #"i-c.ads" 64 0 0# 
 
 function first #"i-c.ads" 64 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"i-c.ads" 64 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"i-c.ads" 64 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tc_floatB, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type tc_floatB__ref #"i-c.ads" 64 0 0# =
  { mutable tc_floatB__content "model_trace:" : tc_floatB }
 
 function tc_floatB__ref___projection #"i-c.ads" 64 0 0# 
   (a : tc_floatB__ref) : tc_floatB =
  a.tc_floatB__content
 
 meta "model_projection" function tc_floatB__ref___projection
 
 meta "inline : no" function tc_floatB__ref___projection
 
 val tc_floatB__havoc #"i-c.ads" 64 0 0# 
   (x : tc_floatB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "c_float" defined at i-c.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__c_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type c_float #"i-c.ads" 64 0 0# 
 
 function first #"i-c.ads" 64 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"i-c.ads" 64 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"i-c.ads" 64 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = c_float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type c_float__ref #"i-c.ads" 64 0 0# =
  { mutable c_float__content "model_trace:" : c_float }
 
 function c_float__ref___projection #"i-c.ads" 64 0 0# 
   (a : c_float__ref) : c_float =
  a.c_float__content
 
 meta "model_projection" function c_float__ref___projection
 
 meta "inline : no" function c_float__ref___projection
 
 val c_float__havoc #"i-c.ads" 64 0 0# 
   (x : c_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TdoubleB" defined at i-c.ads:65, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TdoubleB
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type tdoubleB #"i-c.ads" 65 0 0# 
 
 function first #"i-c.ads" 65 0 0# 
   : real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last #"i-c.ads" 65 0 0# 
   : real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range #"i-c.ads" 65 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tdoubleB, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type tdoubleB__ref #"i-c.ads" 65 0 0# =
  { mutable tdoubleB__content "model_trace:" : tdoubleB }
 
 function tdoubleB__ref___projection #"i-c.ads" 65 0 0# 
   (a : tdoubleB__ref) : tdoubleB =
  a.tdoubleB__content
 
 meta "model_projection" function tdoubleB__ref___projection
 
 meta "inline : no" function tdoubleB__ref___projection
 
 val tdoubleB__havoc #"i-c.ads" 65 0 0# 
   (x : tdoubleB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "double" defined at i-c.ads:65, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__double
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type double #"i-c.ads" 65 0 0# 
 
 function first #"i-c.ads" 65 0 0# 
   : real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last #"i-c.ads" 65 0 0# 
   : real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range #"i-c.ads" 65 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = double, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type double__ref #"i-c.ads" 65 0 0# =
  { mutable double__content "model_trace:" : double }
 
 function double__ref___projection #"i-c.ads" 65 0 0# 
   (a : double__ref) : double =
  a.double__content
 
 meta "model_projection" function double__ref___projection
 
 meta "inline : no" function double__ref___projection
 
 val double__havoc #"i-c.ads" 65 0 0# 
   (x : double__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tlong_doubleB" defined at i-c.ads:66, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tlong_doubleB
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type tlong_doubleB #"i-c.ads" 66 0 0# 
 
 function first #"i-c.ads" 66 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"i-c.ads" 66 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"i-c.ads" 66 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tlong_doubleB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type tlong_doubleB__ref #"i-c.ads" 66 0 0# =
  { mutable tlong_doubleB__content "model_trace:" : tlong_doubleB }
 
 function tlong_doubleB__ref___projection #"i-c.ads" 66 0 0# 
   (a : tlong_doubleB__ref) : tlong_doubleB =
  a.tlong_doubleB__content
 
 meta "model_projection" function tlong_doubleB__ref___projection
 
 meta "inline : no" function tlong_doubleB__ref___projection
 
 val tlong_doubleB__havoc #"i-c.ads" 66 0 0# 
   (x : tlong_doubleB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_double" defined at i-c.ads:66, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__long_double
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type long_double #"i-c.ads" 66 0 0# 
 
 function first #"i-c.ads" 66 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"i-c.ads" 66 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"i-c.ads" 66 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type long_double__ref #"i-c.ads" 66 0 0# =
  { mutable long_double__content "model_trace:" : long_double }
 
 function long_double__ref___projection #"i-c.ads" 66 0 0# 
   (a : long_double__ref) : long_double =
  a.long_double__content
 
 meta "model_projection" function long_double__ref___projection
 
 meta "inline : no" function long_double__ref___projection
 
 val long_double__havoc #"i-c.ads" 66 0 0# 
   (x : long_double__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TcharB" defined at i-c.ads:72, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TcharB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tcharB #"i-c.ads" 72 0 0# 
 
 function first #"i-c.ads" 72 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 72 0 0# 
   : int =
  255
 
 predicate in_range #"i-c.ads" 72 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tcharB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tcharB__ref #"i-c.ads" 72 0 0# =
  { mutable tcharB__content "model_trace:" : tcharB }
 
 function tcharB__ref___projection #"i-c.ads" 72 0 0# 
   (a : tcharB__ref) : tcharB =
  a.tcharB__content
 
 meta "model_projection" function tcharB__ref___projection
 
 meta "inline : no" function tcharB__ref___projection
 
 val tcharB__havoc #"i-c.ads" 72 0 0# 
   (x : tcharB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "char" defined at i-c.ads:72, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char
 use import "_gnatprove_standard".Main
 use import "int".Int

 type char #"i-c.ads" 72 0 0# 
 
 function first #"i-c.ads" 72 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 72 0 0# 
   : int =
  255
 
 predicate in_range #"i-c.ads" 72 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = char, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type char__ref #"i-c.ads" 72 0 0# =
  { mutable char__content "model_trace:" : char }
 
 function char__ref___projection #"i-c.ads" 72 0 0# 
   (a : char__ref) : char =
  a.char__content
 
 meta "model_projection" function char__ref___projection
 
 meta "inline : no" function char__ref___projection
 
 val char__havoc #"i-c.ads" 72 0 0# 
   (x : char__ref) : unit
  writes {x}

end

(* Module for defining the constant "nul" defined at i-c.ads:74, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__nul
 use import "_gnatprove_standard".Main

 function nul #"i-c.ads" 74 0 0# "model" "model_trace:10501" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 72 0 0# 
   : int

end

(* Module for defining the constant "item" defined at i-c.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 76 0 0# "model" "model_trace:10520" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c" defined at i-c.ads:76, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c
 use import "_gnatprove_standard".Main

 function to_c #"i-c.ads" 76 0 0# 
   (item : int) : int

end

(* Module for defining the constant "item" defined at i-c.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 77 0 0# "model" "model_trace:10539" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 72 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada" defined at i-c.ads:77, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada
 use import "_gnatprove_standard".Main

 function to_ada #"i-c.ads" 77 0 0# 
   (item : int) : int

end

(* Module for axiomatizing the array theory associated to type "char_array" defined at i-c.ads:79, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__BV64__Interfaces__c__char
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c__char

 function index_I1_one #"system.ads" 1 0 0# 
   : BV64.t =
  ( BV64.of_int 1 )
 
 type component_type #"system.ads" 1 0 0# =
  Interfaces__c__char.char
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = BV64.t, 
 predicate I1.le = BV64.ule, 
 predicate I1.lt = BV64.ult, 
 predicate I1.gt = BV64.ugt, 
 function I1.add = BV64.add, 
 function I1.sub = BV64.sub, 
 function I1.one = BV64.one, 
 type component_type = component_type
 
 function index_Index_one #"i-c.ads" 72 0 0# 
   : BV64.t =
  ( BV64.of_int 1 )
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Interfaces__c__char.to_rep, 
 type map = map, 
 type Index.t = BV64.t, 
 predicate Index.le = BV64.ule, 
 predicate Index.lt = BV64.ult, 
 predicate Index.gt = BV64.ugt, 
 function Index.add = BV64.add, 
 function Index.sub = BV64.sub, 
 function Index.one = BV64.one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "char_array" defined at i-c.ads:79, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char_array
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c__size_t
 use        Interfaces__c__char
 use        Array__BV64__Interfaces__c__char

 type component_type #"i-c.ads" 72 0 0# =
  Interfaces__c__char.char
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__BV64__Interfaces__c__char.map, 
 function array_bool_eq = Array__BV64__Interfaces__c__char.bool_eq, 
 type index_base_type = Interfaces__c__size_t.size_t, 
 type index_rep_type = BV64.t, 
 function to_rep = Interfaces__c__size_t.to_rep, 
 function rep_to_int = BV64.to_uint, 
 predicate in_range_base = Interfaces__c__size_t.in_range, 
 predicate index_dynamic_property = Interfaces__c__size_t.dynamic_property, 
 predicate index_rep_le = BV64.ule
 
 type char_array #"i-c.ads" 79 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type char_array__ref #"i-c.ads" 79 0 0# =
  { mutable char_array__content "model_trace:" : char_array }
 
 function char_array__ref___projection #"i-c.ads" 79 0 0# 
   (a : char_array__ref) : char_array =
  a.char_array__content
 
 meta "model_projection" function char_array__ref___projection
 
 meta "inline : no" function char_array__ref___projection
 
 val char_array__havoc #"i-c.ads" 79 0 0# 
   (x : char_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "item" defined at i-c.ads:82, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__is_nul_terminated__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char_array

 function item #"i-c.ads" 82 0 0# "model_projected" "model_trace:10576" 
   : Interfaces__c__char_array.char_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 79 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:82, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__is_nul_terminated__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_nul_terminated" defined at i-c.ads:82, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__is_nul_terminated
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char_array

 function is_nul_terminated #"i-c.ads" 82 0 0# 
   (item : Interfaces__c__char_array.char_array) : bool

end

(* Module for defining the constant "item" defined at i-c.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__2__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"i-c.ads" 85 0 0# "model_projected" "model_trace:10595" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__2__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 86 0 0# "model" "model_trace:10604" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 86 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__2__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__2" defined at i-c.ads:84, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__2
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Interfaces__c__char_array

 function to_c__2 #"i-c.ads" 84 0 0# 
   (item : Standard__string.string) (append_nul : bool) : Interfaces__c__char_array.char_array

end

(* Module for defining the constant "item" defined at i-c.ads:89, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__2__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char_array

 function item #"i-c.ads" 89 0 0# "model_projected" "model_trace:10624" 
   : Interfaces__c__char_array.char_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 79 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:89, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__2__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 90 0 0# "model" "model_trace:10633" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 90 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__2__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__2" defined at i-c.ads:88, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__2
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Interfaces__c__char_array

 function to_ada__2 #"i-c.ads" 88 0 0# 
   (item : Interfaces__c__char_array.char_array) (trim_nul : bool) : Standard__string.string

end

(* Module for defining the constant "item" defined at i-c.ads:93, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__3__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"i-c.ads" 93 0 0# "model_projected" "model_trace:10653" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__3__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__3__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 96 0 0# "model" "model_trace:10680" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 96 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__3__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at i-c.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__3__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char_array

 function item #"i-c.ads" 99 0 0# "model_projected" "model_trace:10699" 
   : Interfaces__c__char_array.char_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 79 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__3__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__3__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 102 0 0# "model" "model_trace:10726" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 102 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__3__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Twchar_tB" defined at i-c.ads:108, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Twchar_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type twchar_tB #"i-c.ads" 108 0 0# 
 
 function first #"i-c.ads" 108 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 108 0 0# 
   : int =
  65535
 
 predicate in_range #"i-c.ads" 108 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = twchar_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type twchar_tB__ref #"i-c.ads" 108 0 0# =
  { mutable twchar_tB__content "model_trace:" : twchar_tB }
 
 function twchar_tB__ref___projection #"i-c.ads" 108 0 0# 
   (a : twchar_tB__ref) : twchar_tB =
  a.twchar_tB__content
 
 meta "model_projection" function twchar_tB__ref___projection
 
 meta "inline : no" function twchar_tB__ref___projection
 
 val twchar_tB__havoc #"i-c.ads" 108 0 0# 
   (x : twchar_tB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wchar_t" defined at i-c.ads:108, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__wchar_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wchar_t #"i-c.ads" 108 0 0# 
 
 function first #"i-c.ads" 108 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 108 0 0# 
   : int =
  65535
 
 predicate in_range #"i-c.ads" 108 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wchar_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wchar_t__ref #"i-c.ads" 108 0 0# =
  { mutable wchar_t__content "model_trace:" : wchar_t }
 
 function wchar_t__ref___projection #"i-c.ads" 108 0 0# 
   (a : wchar_t__ref) : wchar_t =
  a.wchar_t__content
 
 meta "model_projection" function wchar_t__ref___projection
 
 meta "inline : no" function wchar_t__ref___projection
 
 val wchar_t__havoc #"i-c.ads" 108 0 0# 
   (x : wchar_t__ref) : unit
  writes {x}

end

(* Module for defining the constant "wide_nul" defined at i-c.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__wide_nul
 use import "_gnatprove_standard".Main

 function wide_nul #"i-c.ads" 111 0 0# "model" "model_trace:10756" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 108 0 0# 
   : int

end

(* Module for defining the constant "item" defined at i-c.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__4__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 113 0 0# "model" "model_trace:10775" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__4__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__4" defined at i-c.ads:113, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__4
 use import "_gnatprove_standard".Main

 function to_c__4 #"i-c.ads" 113 0 0# 
   (item : int) : int

end

(* Module for defining the constant "item" defined at i-c.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__4__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 114 0 0# "model" "model_trace:10794" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__4__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__4" defined at i-c.ads:114, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__4
 use import "_gnatprove_standard".Main

 function to_ada__4 #"i-c.ads" 114 0 0# 
   (item : int) : int

end

(* Module for axiomatizing the array theory associated to type "wchar_array" defined at i-c.ads:116, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__BV64__Interfaces__c__wchar_t
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c__wchar_t

 function index_I1_one #"system.ads" 1 0 0# 
   : BV64.t =
  ( BV64.of_int 1 )
 
 type component_type #"system.ads" 1 0 0# =
  Interfaces__c__wchar_t.wchar_t
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = BV64.t, 
 predicate I1.le = BV64.ule, 
 predicate I1.lt = BV64.ult, 
 predicate I1.gt = BV64.ugt, 
 function I1.add = BV64.add, 
 function I1.sub = BV64.sub, 
 function I1.one = BV64.one, 
 type component_type = component_type
 
 function index_Index_one #"i-c.ads" 108 0 0# 
   : BV64.t =
  ( BV64.of_int 1 )
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Interfaces__c__wchar_t.to_rep, 
 type map = map, 
 type Index.t = BV64.t, 
 predicate Index.le = BV64.ule, 
 predicate Index.lt = BV64.ult, 
 predicate Index.gt = BV64.ugt, 
 function Index.add = BV64.add, 
 function Index.sub = BV64.sub, 
 function Index.one = BV64.one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wchar_array" defined at i-c.ads:116, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__wchar_array
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c__size_t
 use        Interfaces__c__wchar_t
 use        Array__BV64__Interfaces__c__wchar_t

 type component_type #"i-c.ads" 108 0 0# =
  Interfaces__c__wchar_t.wchar_t
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__BV64__Interfaces__c__wchar_t.map, 
 function array_bool_eq = Array__BV64__Interfaces__c__wchar_t.bool_eq, 
 type index_base_type = Interfaces__c__size_t.size_t, 
 type index_rep_type = BV64.t, 
 function to_rep = Interfaces__c__size_t.to_rep, 
 function rep_to_int = BV64.to_uint, 
 predicate in_range_base = Interfaces__c__size_t.in_range, 
 predicate index_dynamic_property = Interfaces__c__size_t.dynamic_property, 
 predicate index_rep_le = BV64.ule
 
 type wchar_array #"i-c.ads" 116 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wchar_array__ref #"i-c.ads" 116 0 0# =
  { mutable wchar_array__content "model_trace:" : wchar_array }
 
 function wchar_array__ref___projection #"i-c.ads" 116 0 0# 
   (a : wchar_array__ref) : wchar_array =
  a.wchar_array__content
 
 meta "model_projection" function wchar_array__ref___projection
 
 meta "inline : no" function wchar_array__ref___projection
 
 val wchar_array__havoc #"i-c.ads" 116 0 0# 
   (x : wchar_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "item" defined at i-c.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__is_nul_terminated__2__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__wchar_array

 function item #"i-c.ads" 118 0 0# "model_projected" "model_trace:10825" 
   : Interfaces__c__wchar_array.wchar_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 116 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__is_nul_terminated__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_nul_terminated__2" defined at i-c.ads:118, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__is_nul_terminated__2
 use import "_gnatprove_standard".Main
 use        Interfaces__c__wchar_array

 function is_nul_terminated__2 #"i-c.ads" 118 0 0# 
   (item : Interfaces__c__wchar_array.wchar_array) : bool

end

(* Module for defining the constant "item" defined at i-c.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__5__item
 use import "_gnatprove_standard".Main
 use        Standard__wide_string

 function item #"i-c.ads" 121 0 0# "model_projected" "model_trace:10844" 
   : Standard__wide_string.wide_string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:121, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__5__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__5__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 122 0 0# "model" "model_trace:10853" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 122 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:122, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__5__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__5" defined at i-c.ads:120, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__5
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Interfaces__c__wchar_array

 function to_c__5 #"i-c.ads" 120 0 0# 
   (item : Standard__wide_string.wide_string) (append_nul : bool) : Interfaces__c__wchar_array.wchar_array

end

(* Module for defining the constant "item" defined at i-c.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__5__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__wchar_array

 function item #"i-c.ads" 125 0 0# "model_projected" "model_trace:10873" 
   : Interfaces__c__wchar_array.wchar_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 116 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__5__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__5__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 126 0 0# "model" "model_trace:10882" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 126 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:126, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__5__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__5" defined at i-c.ads:124, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__5
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Interfaces__c__wchar_array

 function to_ada__5 #"i-c.ads" 124 0 0# 
   (item : Interfaces__c__wchar_array.wchar_array) (trim_nul : bool) : Standard__wide_string.wide_string

end

(* Module for defining the constant "item" defined at i-c.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__6__item
 use import "_gnatprove_standard".Main
 use        Standard__wide_string

 function item #"i-c.ads" 129 0 0# "model_projected" "model_trace:10902" 
   : Standard__wide_string.wide_string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:129, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__6__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__6__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 132 0 0# "model" "model_trace:10929" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 132 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:132, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__6__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at i-c.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__6__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__wchar_array

 function item #"i-c.ads" 135 0 0# "model_projected" "model_trace:10948" 
   : Interfaces__c__wchar_array.wchar_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 116 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:135, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__6__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__6__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 138 0 0# "model" "model_trace:10975" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 138 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__6__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tchar16_tB" defined at i-c.ads:146, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tchar16_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tchar16_tB #"i-c.ads" 146 0 0# 
 
 function first #"i-c.ads" 146 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 146 0 0# 
   : int =
  65535
 
 predicate in_range #"i-c.ads" 146 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tchar16_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tchar16_tB__ref #"i-c.ads" 146 0 0# =
  { mutable tchar16_tB__content "model_trace:" : tchar16_tB }
 
 function tchar16_tB__ref___projection #"i-c.ads" 146 0 0# 
   (a : tchar16_tB__ref) : tchar16_tB =
  a.tchar16_tB__content
 
 meta "model_projection" function tchar16_tB__ref___projection
 
 meta "inline : no" function tchar16_tB__ref___projection
 
 val tchar16_tB__havoc #"i-c.ads" 146 0 0# 
   (x : tchar16_tB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "char16_t" defined at i-c.ads:146, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char16_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type char16_t #"i-c.ads" 146 0 0# 
 
 function first #"i-c.ads" 146 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 146 0 0# 
   : int =
  65535
 
 predicate in_range #"i-c.ads" 146 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = char16_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type char16_t__ref #"i-c.ads" 146 0 0# =
  { mutable char16_t__content "model_trace:" : char16_t }
 
 function char16_t__ref___projection #"i-c.ads" 146 0 0# 
   (a : char16_t__ref) : char16_t =
  a.char16_t__content
 
 meta "model_projection" function char16_t__ref___projection
 
 meta "inline : no" function char16_t__ref___projection
 
 val char16_t__havoc #"i-c.ads" 146 0 0# 
   (x : char16_t__ref) : unit
  writes {x}

end

(* Module for defining the constant "char16_nul" defined at i-c.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__char16_nul
 use import "_gnatprove_standard".Main

 function char16_nul #"i-c.ads" 149 0 0# "model" "model_trace:11012" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 146 0 0# 
   : int

end

(* Module for defining the constant "item" defined at i-c.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__7__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 152 0 0# "model" "model_trace:11036" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__7__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__7" defined at i-c.ads:152, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__7
 use import "_gnatprove_standard".Main

 function to_c__7 #"i-c.ads" 152 0 0# 
   (item : int) : int

end

(* Module for defining the constant "item" defined at i-c.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__7__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 155 0 0# "model" "model_trace:11059" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 146 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:155, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__7__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__7" defined at i-c.ads:155, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__7
 use import "_gnatprove_standard".Main

 function to_ada__7 #"i-c.ads" 155 0 0# 
   (item : int) : int

end

(* Module for axiomatizing the array theory associated to type "char16_array" defined at i-c.ads:158, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__BV64__Interfaces__c__char16_t
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c__char16_t

 function index_I1_one #"system.ads" 1 0 0# 
   : BV64.t =
  ( BV64.of_int 1 )
 
 type component_type #"system.ads" 1 0 0# =
  Interfaces__c__char16_t.char16_t
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = BV64.t, 
 predicate I1.le = BV64.ule, 
 predicate I1.lt = BV64.ult, 
 predicate I1.gt = BV64.ugt, 
 function I1.add = BV64.add, 
 function I1.sub = BV64.sub, 
 function I1.one = BV64.one, 
 type component_type = component_type
 
 function index_Index_one #"i-c.ads" 146 0 0# 
   : BV64.t =
  ( BV64.of_int 1 )
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Interfaces__c__char16_t.to_rep, 
 type map = map, 
 type Index.t = BV64.t, 
 predicate Index.le = BV64.ule, 
 predicate Index.lt = BV64.ult, 
 predicate Index.gt = BV64.ugt, 
 function Index.add = BV64.add, 
 function Index.sub = BV64.sub, 
 function Index.one = BV64.one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "char16_array" defined at i-c.ads:158, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char16_array
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c__size_t
 use        Interfaces__c__char16_t
 use        Array__BV64__Interfaces__c__char16_t

 type component_type #"i-c.ads" 146 0 0# =
  Interfaces__c__char16_t.char16_t
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__BV64__Interfaces__c__char16_t.map, 
 function array_bool_eq = Array__BV64__Interfaces__c__char16_t.bool_eq, 
 type index_base_type = Interfaces__c__size_t.size_t, 
 type index_rep_type = BV64.t, 
 function to_rep = Interfaces__c__size_t.to_rep, 
 function rep_to_int = BV64.to_uint, 
 predicate in_range_base = Interfaces__c__size_t.in_range, 
 predicate index_dynamic_property = Interfaces__c__size_t.dynamic_property, 
 predicate index_rep_le = BV64.ule
 
 type char16_array #"i-c.ads" 158 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type char16_array__ref #"i-c.ads" 158 0 0# =
  { mutable char16_array__content "model_trace:" : char16_array }
 
 function char16_array__ref___projection #"i-c.ads" 158 0 0# 
   (a : char16_array__ref) : char16_array =
  a.char16_array__content
 
 meta "model_projection" function char16_array__ref___projection
 
 meta "inline : no" function char16_array__ref___projection
 
 val char16_array__havoc #"i-c.ads" 158 0 0# 
   (x : char16_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "item" defined at i-c.ads:161, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__is_nul_terminated__3__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char16_array

 function item #"i-c.ads" 161 0 0# "model_projected" "model_trace:11098" 
   : Interfaces__c__char16_array.char16_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 158 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:161, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__is_nul_terminated__3__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_nul_terminated__3" defined at i-c.ads:161, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__is_nul_terminated__3
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char16_array

 function is_nul_terminated__3 #"i-c.ads" 161 0 0# 
   (item : Interfaces__c__char16_array.char16_array) : bool

end

(* Module for defining the constant "item" defined at i-c.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__8__item
 use import "_gnatprove_standard".Main
 use        Standard__wide_string

 function item #"i-c.ads" 165 0 0# "model_projected" "model_trace:11121" 
   : Standard__wide_string.wide_string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__8__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:166, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__8__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 166 0 0# "model" "model_trace:11130" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 166 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:166, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__8__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__8" defined at i-c.ads:164, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__8
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Interfaces__c__char16_array

 function to_c__8 #"i-c.ads" 164 0 0# 
   (item : Standard__wide_string.wide_string) (append_nul : bool) : Interfaces__c__char16_array.char16_array

end

(* Module for defining the constant "item" defined at i-c.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__8__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char16_array

 function item #"i-c.ads" 170 0 0# "model_projected" "model_trace:11154" 
   : Interfaces__c__char16_array.char16_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 158 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:170, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__8__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__8__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 171 0 0# "model" "model_trace:11163" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 171 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__8__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__8" defined at i-c.ads:169, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__8
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Interfaces__c__char16_array

 function to_ada__8 #"i-c.ads" 169 0 0# 
   (item : Interfaces__c__char16_array.char16_array) (trim_nul : bool) : Standard__wide_string.wide_string

end

(* Module for defining the constant "item" defined at i-c.ads:175, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__9__item
 use import "_gnatprove_standard".Main
 use        Standard__wide_string

 function item #"i-c.ads" 175 0 0# "model_projected" "model_trace:11187" 
   : Standard__wide_string.wide_string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:175, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__9__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:178, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__9__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 178 0 0# "model" "model_trace:11214" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 178 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:178, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__9__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at i-c.ads:182, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__9__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char16_array

 function item #"i-c.ads" 182 0 0# "model_projected" "model_trace:11237" 
   : Interfaces__c__char16_array.char16_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 158 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:182, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__9__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:185, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__9__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 185 0 0# "model" "model_trace:11264" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 185 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:185, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__9__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tchar32_tB" defined at i-c.ads:188, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tchar32_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tchar32_tB #"i-c.ads" 188 0 0# 
 
 function first #"i-c.ads" 188 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 188 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-c.ads" 188 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tchar32_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tchar32_tB__ref #"i-c.ads" 188 0 0# =
  { mutable tchar32_tB__content "model_trace:" : tchar32_tB }
 
 function tchar32_tB__ref___projection #"i-c.ads" 188 0 0# 
   (a : tchar32_tB__ref) : tchar32_tB =
  a.tchar32_tB__content
 
 meta "model_projection" function tchar32_tB__ref___projection
 
 meta "inline : no" function tchar32_tB__ref___projection
 
 val tchar32_tB__havoc #"i-c.ads" 188 0 0# 
   (x : tchar32_tB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "char32_t" defined at i-c.ads:188, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char32_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type char32_t #"i-c.ads" 188 0 0# 
 
 function first #"i-c.ads" 188 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 188 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-c.ads" 188 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = char32_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type char32_t__ref #"i-c.ads" 188 0 0# =
  { mutable char32_t__content "model_trace:" : char32_t }
 
 function char32_t__ref___projection #"i-c.ads" 188 0 0# 
   (a : char32_t__ref) : char32_t =
  a.char32_t__content
 
 meta "model_projection" function char32_t__ref___projection
 
 meta "inline : no" function char32_t__ref___projection
 
 val char32_t__havoc #"i-c.ads" 188 0 0# 
   (x : char32_t__ref) : unit
  writes {x}

end

(* Module for defining the constant "char32_nul" defined at i-c.ads:191, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__char32_nul
 use import "_gnatprove_standard".Main

 function char32_nul #"i-c.ads" 191 0 0# "model" "model_trace:11294" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 188 0 0# 
   : int

end

(* Module for defining the constant "item" defined at i-c.ads:194, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__10__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 194 0 0# "model" "model_trace:11318" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:194, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__10__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__10" defined at i-c.ads:194, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__10
 use import "_gnatprove_standard".Main

 function to_c__10 #"i-c.ads" 194 0 0# 
   (item : int) : int

end

(* Module for defining the constant "item" defined at i-c.ads:197, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__10__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 197 0 0# "model" "model_trace:11341" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 188 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:197, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__10__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__10" defined at i-c.ads:197, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__10
 use import "_gnatprove_standard".Main

 function to_ada__10 #"i-c.ads" 197 0 0# 
   (item : int) : int

end

(* Module for axiomatizing the array theory associated to type "char32_array" defined at i-c.ads:200, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__BV64__Interfaces__c__char32_t
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c__char32_t

 function index_I1_one #"system.ads" 1 0 0# 
   : BV64.t =
  ( BV64.of_int 1 )
 
 type component_type #"system.ads" 1 0 0# =
  Interfaces__c__char32_t.char32_t
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = BV64.t, 
 predicate I1.le = BV64.ule, 
 predicate I1.lt = BV64.ult, 
 predicate I1.gt = BV64.ugt, 
 function I1.add = BV64.add, 
 function I1.sub = BV64.sub, 
 function I1.one = BV64.one, 
 type component_type = component_type
 
 function index_Index_one #"i-c.ads" 188 0 0# 
   : BV64.t =
  ( BV64.of_int 1 )
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Interfaces__c__char32_t.to_rep, 
 type map = map, 
 type Index.t = BV64.t, 
 predicate Index.le = BV64.ule, 
 predicate Index.lt = BV64.ult, 
 predicate Index.gt = BV64.ugt, 
 function Index.add = BV64.add, 
 function Index.sub = BV64.sub, 
 function Index.one = BV64.one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "char32_array" defined at i-c.ads:200, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char32_array
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c__size_t
 use        Interfaces__c__char32_t
 use        Array__BV64__Interfaces__c__char32_t

 type component_type #"i-c.ads" 188 0 0# =
  Interfaces__c__char32_t.char32_t
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__BV64__Interfaces__c__char32_t.map, 
 function array_bool_eq = Array__BV64__Interfaces__c__char32_t.bool_eq, 
 type index_base_type = Interfaces__c__size_t.size_t, 
 type index_rep_type = BV64.t, 
 function to_rep = Interfaces__c__size_t.to_rep, 
 function rep_to_int = BV64.to_uint, 
 predicate in_range_base = Interfaces__c__size_t.in_range, 
 predicate index_dynamic_property = Interfaces__c__size_t.dynamic_property, 
 predicate index_rep_le = BV64.ule
 
 type char32_array #"i-c.ads" 200 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type char32_array__ref #"i-c.ads" 200 0 0# =
  { mutable char32_array__content "model_trace:" : char32_array }
 
 function char32_array__ref___projection #"i-c.ads" 200 0 0# 
   (a : char32_array__ref) : char32_array =
  a.char32_array__content
 
 meta "model_projection" function char32_array__ref___projection
 
 meta "inline : no" function char32_array__ref___projection
 
 val char32_array__havoc #"i-c.ads" 200 0 0# 
   (x : char32_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "item" defined at i-c.ads:203, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__is_nul_terminated__4__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char32_array

 function item #"i-c.ads" 203 0 0# "model_projected" "model_trace:11380" 
   : Interfaces__c__char32_array.char32_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 200 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:203, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__is_nul_terminated__4__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_nul_terminated__4" defined at i-c.ads:203, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__is_nul_terminated__4
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char32_array

 function is_nul_terminated__4 #"i-c.ads" 203 0 0# 
   (item : Interfaces__c__char32_array.char32_array) : bool

end

(* Module for defining the constant "item" defined at i-c.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__11__item
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string

 function item #"i-c.ads" 207 0 0# "model_projected" "model_trace:11403" 
   : Standard__wide_wide_string.wide_wide_string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__11__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:208, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__11__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 208 0 0# "model" "model_trace:11412" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 208 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:208, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__11__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__11" defined at i-c.ads:206, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__11
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Interfaces__c__char32_array

 function to_c__11 #"i-c.ads" 206 0 0# 
   (item : Standard__wide_wide_string.wide_wide_string) (append_nul : bool) : Interfaces__c__char32_array.char32_array

end

(* Module for defining the constant "item" defined at i-c.ads:212, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__11__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char32_array

 function item #"i-c.ads" 212 0 0# "model_projected" "model_trace:11436" 
   : Interfaces__c__char32_array.char32_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 200 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__11__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:213, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__11__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 213 0 0# "model" "model_trace:11445" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 213 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__11__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__11" defined at i-c.ads:211, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__11
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Interfaces__c__char32_array

 function to_ada__11 #"i-c.ads" 211 0 0# 
   (item : Interfaces__c__char32_array.char32_array) (trim_nul : bool) : Standard__wide_wide_string.wide_wide_string

end

(* Module for defining the constant "item" defined at i-c.ads:217, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__12__item
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string

 function item #"i-c.ads" 217 0 0# "model_projected" "model_trace:11469" 
   : Standard__wide_wide_string.wide_wide_string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:217, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__12__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:220, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__12__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 220 0 0# "model" "model_trace:11496" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 220 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:220, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__12__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at i-c.ads:224, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__12__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char32_array

 function item #"i-c.ads" 224 0 0# "model_projected" "model_trace:11519" 
   : Interfaces__c__char32_array.char32_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 200 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__12__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:227, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__12__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 227 0 0# "model" "model_trace:11546" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 227 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:227, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__12__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "os_type" defined at s-oscons.ads:52, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__os_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type os_type #"s-oscons.ads" 52 0 0# 
 
 function first #"s-oscons.ads" 52 0 0# 
   : int =
  0
 
 function last #"s-oscons.ads" 52 0 0# 
   : int =
  1
 
 predicate in_range #"s-oscons.ads" 52 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = os_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type os_type__ref #"s-oscons.ads" 52 0 0# =
  { mutable os_type__content "model_trace:" : os_type }
 
 function os_type__ref___projection #"s-oscons.ads" 52 0 0# 
   (a : os_type__ref) : os_type =
  a.os_type__content
 
 meta "model_projection" function os_type__ref___projection
 
 meta "inline : no" function os_type__ref___projection
 
 val os_type__havoc #"s-oscons.ads" 52 0 0# 
   (x : os_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "target_os" defined at s-oscons.ads:53, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__target_os
 use import "_gnatprove_standard".Main

 function target_os #"s-oscons.ads" 53 0 0# "model" "model_trace:11895" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-oscons.ads" 52 0 0# 
   : int

end

(* Module for axiomatizing type "T1s" defined at s-oscons.ads:59, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__T1s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-oscons.ads" 52 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  25
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "target_name" defined at s-oscons.ads:59, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__target_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function target_name #"s-oscons.ads" 59 0 0# "model_projected" "model_trace:11911" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "ioctl_req_t" defined at s-oscons.ads:94, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__ioctl_req_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ioctl_req_t #"s-oscons.ads" 94 0 0# 
 
 function first #"s-oscons.ads" 94 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-oscons.ads" 94 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-oscons.ads" 94 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ioctl_req_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ioctl_req_t__ref #"s-oscons.ads" 94 0 0# =
  { mutable ioctl_req_t__content "model_trace:" : ioctl_req_t }
 
 function ioctl_req_t__ref___projection #"s-oscons.ads" 94 0 0# 
   (a : ioctl_req_t__ref) : ioctl_req_t =
  a.ioctl_req_t__content
 
 meta "model_projection" function ioctl_req_t__ref___projection
 
 meta "inline : no" function ioctl_req_t__ref___projection
 
 val ioctl_req_t__havoc #"s-oscons.ads" 94 0 0# 
   (x : ioctl_req_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T2s" defined at s-oscons.ads:225, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__T2s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-oscons.ads" 94 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  0
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "pty_library" defined at s-oscons.ads:225, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__pty_library
 use import "_gnatprove_standard".Main
 use        Standard__string

 function pty_library #"s-oscons.ads" 225 0 0# "model_projected" "model_trace:12989" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "msg_iovlen_t" defined at s-oscons.ads:322, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__msg_iovlen_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type msg_iovlen_t #"s-oscons.ads" 322 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-oscons.ads" 322 0 0# 
   : BV64.t
 
 function first #"s-oscons.ads" 322 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-oscons.ads" 322 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-oscons.ads" 322 0 0# 
   : int =
  0
 
 function last_int #"s-oscons.ads" 322 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-oscons.ads" 322 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-oscons.ads" 322 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = msg_iovlen_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type msg_iovlen_t__ref #"s-oscons.ads" 322 0 0# =
  { mutable msg_iovlen_t__content "model_trace:" : msg_iovlen_t }
 
 function msg_iovlen_t__ref___projection #"s-oscons.ads" 322 0 0# 
   (a : msg_iovlen_t__ref) : msg_iovlen_t =
  a.msg_iovlen_t__content
 
 meta "model_projection" function msg_iovlen_t__ref___projection
 
 meta "inline : no" function msg_iovlen_t__ref___projection
 
 val msg_iovlen_t__havoc #"s-oscons.ads" 322 0 0# 
   (x : msg_iovlen_t__ref) : unit
  writes {x}

end

(* Module for defining the constant "thread_blocking_io" defined at s-oscons.ads:331, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__thread_blocking_io
 use import "_gnatprove_standard".Main

 function thread_blocking_io #"s-oscons.ads" 331 0 0# "model" "model_trace:13481" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-oscons.ads" 331 0 0# 
   : int

end

(* Module for axiomatizing type "T3s" defined at s-oscons.ads:334, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-oscons.ads" 331 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  9
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "inet_pton_linkname" defined at s-oscons.ads:334, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__inet_pton_linkname
 use import "_gnatprove_standard".Main
 use        Standard__string

 function inet_pton_linkname #"s-oscons.ads" 334 0 0# "model_projected" "model_trace:13491" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "int" defined at s-osinte.ads:47, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__int
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int__ #"s-osinte.ads" 47 0 0# 
 
 function first #"s-osinte.ads" 47 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-osinte.ads" 47 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-osinte.ads" 47 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int__, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type int____ref #"s-osinte.ads" 47 0 0# =
  { mutable int____content "model_trace:" : int__ }
 
 function int____ref_2__projection #"s-osinte.ads" 47 0 0# 
   (a : int____ref) : int__ =
  a.int____content
 
 meta "model_projection" function int____ref_2__projection
 
 meta "inline : no" function int____ref_2__projection
 
 val int____havoc #"s-osinte.ads" 47 0 0# 
   (x : int____ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short" defined at s-osinte.ads:48, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__short
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short #"s-osinte.ads" 48 0 0# 
 
 function first #"s-osinte.ads" 48 0 0# 
   : int =
  ( -32768 )
 
 function last #"s-osinte.ads" 48 0 0# 
   : int =
  32767
 
 predicate in_range #"s-osinte.ads" 48 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short__ref #"s-osinte.ads" 48 0 0# =
  { mutable short__content "model_trace:" : short }
 
 function short__ref_2__projection #"s-osinte.ads" 48 0 0# 
   (a : short__ref) : short =
  a.short__content
 
 meta "model_projection" function short__ref_2__projection
 
 meta "inline : no" function short__ref_2__projection
 
 val short__havoc #"s-osinte.ads" 48 0 0# 
   (x : short__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long" defined at s-osinte.ads:49, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__long
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long #"s-osinte.ads" 49 0 0# 
 
 function first #"s-osinte.ads" 49 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"s-osinte.ads" 49 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"s-osinte.ads" 49 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long__ref #"s-osinte.ads" 49 0 0# =
  { mutable long__content "model_trace:" : long }
 
 function long__ref_2__projection #"s-osinte.ads" 49 0 0# 
   (a : long__ref) : long =
  a.long__content
 
 meta "model_projection" function long__ref_2__projection
 
 meta "inline : no" function long__ref_2__projection
 
 val long__havoc #"s-osinte.ads" 49 0 0# 
   (x : long__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned" defined at s-osinte.ads:50, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__unsigned
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type unsigned #"s-osinte.ads" 50 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 50 0 0# 
   : BV32.t
 
 function first #"s-osinte.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-osinte.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-osinte.ads" 50 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 50 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-osinte.ads" 50 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 50 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = unsigned, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned__ref #"s-osinte.ads" 50 0 0# =
  { mutable unsigned__content "model_trace:" : unsigned }
 
 function unsigned__ref_2__projection #"s-osinte.ads" 50 0 0# 
   (a : unsigned__ref) : unsigned =
  a.unsigned__content
 
 meta "model_projection" function unsigned__ref_2__projection
 
 meta "inline : no" function unsigned__ref_2__projection
 
 val unsigned__havoc #"s-osinte.ads" 50 0 0# 
   (x : unsigned__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_short" defined at s-osinte.ads:51, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__unsigned_short
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV16

 type unsigned_short #"s-osinte.ads" 51 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 51 0 0# 
   : BV16.t
 
 function first #"s-osinte.ads" 51 0 0# 
   : BV16.t =
  ( BV16.of_int 0 )
 
 function last #"s-osinte.ads" 51 0 0# 
   : BV16.t =
  ( BV16.of_int 65535 )
 
 function first_int #"s-osinte.ads" 51 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 51 0 0# 
   : int =
  65535
 
 predicate in_range #"s-osinte.ads" 51 0 0# 
   (x : BV16.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 51 0 0# 
   (x : int)  =
  BV16.uint_in_range x
 
 clone export "ada__model".Static_Modular_16 with
 type t = unsigned_short, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_short__ref #"s-osinte.ads" 51 0 0# =
  { mutable unsigned_short__content "model_trace:" : unsigned_short }
 
 function unsigned_short__ref_2__projection #"s-osinte.ads" 51 0 0# 
   (a : unsigned_short__ref) : unsigned_short =
  a.unsigned_short__content
 
 meta "model_projection" function unsigned_short__ref_2__projection
 
 meta "inline : no" function unsigned_short__ref_2__projection
 
 val unsigned_short__havoc #"s-osinte.ads" 51 0 0# 
   (x : unsigned_short__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_long" defined at s-osinte.ads:52, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__unsigned_long
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type unsigned_long #"s-osinte.ads" 52 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 52 0 0# 
   : BV64.t
 
 function first #"s-osinte.ads" 52 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-osinte.ads" 52 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-osinte.ads" 52 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 52 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-osinte.ads" 52 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 52 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = unsigned_long, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_long__ref #"s-osinte.ads" 52 0 0# =
  { mutable unsigned_long__content "model_trace:" : unsigned_long }
 
 function unsigned_long__ref_2__projection #"s-osinte.ads" 52 0 0# 
   (a : unsigned_long__ref) : unsigned_long =
  a.unsigned_long__content
 
 meta "model_projection" function unsigned_long__ref_2__projection
 
 meta "inline : no" function unsigned_long__ref_2__projection
 
 val unsigned_long__havoc #"s-osinte.ads" 52 0 0# 
   (x : unsigned_long__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_char" defined at s-osinte.ads:53, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__unsigned_char
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type unsigned_char #"s-osinte.ads" 53 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 53 0 0# 
   : BV8.t
 
 function first #"s-osinte.ads" 53 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"s-osinte.ads" 53 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"s-osinte.ads" 53 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 53 0 0# 
   : int =
  255
 
 predicate in_range #"s-osinte.ads" 53 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 53 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = unsigned_char, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_char__ref #"s-osinte.ads" 53 0 0# =
  { mutable unsigned_char__content "model_trace:" : unsigned_char }
 
 function unsigned_char__ref_2__projection #"s-osinte.ads" 53 0 0# 
   (a : unsigned_char__ref) : unsigned_char =
  a.unsigned_char__content
 
 meta "model_projection" function unsigned_char__ref_2__projection
 
 meta "inline : no" function unsigned_char__ref_2__projection
 
 val unsigned_char__havoc #"s-osinte.ads" 53 0 0# 
   (x : unsigned_char__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "plain_char" defined at s-osinte.ads:54, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__plain_char
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type plain_char #"s-osinte.ads" 54 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 54 0 0# 
   : BV8.t
 
 function first #"s-osinte.ads" 54 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"s-osinte.ads" 54 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"s-osinte.ads" 54 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 54 0 0# 
   : int =
  255
 
 predicate in_range #"s-osinte.ads" 54 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 54 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = plain_char, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type plain_char__ref #"s-osinte.ads" 54 0 0# =
  { mutable plain_char__content "model_trace:" : plain_char }
 
 function plain_char__ref_2__projection #"s-osinte.ads" 54 0 0# 
   (a : plain_char__ref) : plain_char =
  a.plain_char__content
 
 meta "model_projection" function plain_char__ref_2__projection
 
 meta "inline : no" function plain_char__ref_2__projection
 
 val plain_char__havoc #"s-osinte.ads" 54 0 0# 
   (x : plain_char__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "size_t" defined at s-osinte.ads:55, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__size_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type size_t #"s-osinte.ads" 55 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 55 0 0# 
   : BV64.t
 
 function first #"s-osinte.ads" 55 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-osinte.ads" 55 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-osinte.ads" 55 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 55 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-osinte.ads" 55 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 55 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = size_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type size_t__ref #"s-osinte.ads" 55 0 0# =
  { mutable size_t__content "model_trace:" : size_t }
 
 function size_t__ref_2__projection #"s-osinte.ads" 55 0 0# 
   (a : size_t__ref) : size_t =
  a.size_t__content
 
 meta "model_projection" function size_t__ref_2__projection
 
 meta "inline : no" function size_t__ref_2__projection
 
 val size_t__havoc #"s-osinte.ads" 55 0 0# 
   (x : size_t__ref) : unit
  writes {x}

end

(* Module for possibly declaring a logic function for "errno" defined at s-osinte.ads:61, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__errno
 use import "_gnatprove_standard".Main

 function errno #"s-osinte.ads" 61 0 0# 
   (__void_param : unit) : int

end

(* Module for axiomatizing type "TsignalB" defined at s-osinte.ads:75, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__TsignalB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tsignalB #"s-osinte.ads" 75 0 0# 
 
 function first #"s-osinte.ads" 75 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-osinte.ads" 75 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-osinte.ads" 75 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tsignalB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tsignalB__ref #"s-osinte.ads" 75 0 0# =
  { mutable tsignalB__content "model_trace:" : tsignalB }
 
 function tsignalB__ref___projection #"s-osinte.ads" 75 0 0# 
   (a : tsignalB__ref) : tsignalB =
  a.tsignalB__content
 
 meta "model_projection" function tsignalB__ref___projection
 
 meta "inline : no" function tsignalB__ref___projection
 
 val tsignalB__havoc #"s-osinte.ads" 75 0 0# 
   (x : tsignalB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "signal" defined at s-osinte.ads:75, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__signal
 use import "_gnatprove_standard".Main
 use import "int".Int

 type signal #"s-osinte.ads" 75 0 0# 
 
 function first #"s-osinte.ads" 75 0 0# 
   : int =
  0
 
 function last #"s-osinte.ads" 75 0 0# 
   : int =
  31
 
 predicate in_range #"s-osinte.ads" 75 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = signal, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type signal__ref #"s-osinte.ads" 75 0 0# =
  { mutable signal__content "model_trace:" : signal }
 
 function signal__ref___projection #"s-osinte.ads" 75 0 0# 
   (a : signal__ref) : signal =
  a.signal__content
 
 meta "model_projection" function signal__ref___projection
 
 meta "inline : no" function signal__ref___projection
 
 val signal__havoc #"s-osinte.ads" 75 0 0# 
   (x : signal__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "signal_set" defined at s-osinte.ads:115, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__System__os_interface__signal
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__signal

 function index_I1_one #"s-osinte.ads" 75 0 0# 
   : int =
  1
 
 type component_type #"s-osinte.ads" 75 0 0# =
  System__os_interface__signal.signal
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"s-osinte.ads" 75 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = System__os_interface__signal.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "signal_set" defined at s-osinte.ads:115, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__signal_set
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__natural
 use        System__os_interface__signal
 use        Array__Int__System__os_interface__signal

 type component_type #"s-osinte.ads" 75 0 0# =
  System__os_interface__signal.signal
 
 function index_1_id #"s-osinte.ads" 75 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__os_interface__signal.map, 
 function array_bool_eq = Array__Int__System__os_interface__signal.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__natural.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type signal_set #"s-osinte.ads" 115 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type signal_set__ref #"s-osinte.ads" 115 0 0# =
  { mutable signal_set__content "model_trace:" : signal_set }
 
 function signal_set__ref___projection #"s-osinte.ads" 115 0 0# 
   (a : signal_set__ref) : signal_set =
  a.signal_set__content
 
 meta "model_projection" function signal_set__ref___projection
 
 meta "inline : no" function signal_set__ref___projection
 
 val signal_set__havoc #"s-osinte.ads" 115 0 0# 
   (x : signal_set__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T4s" defined at s-osinte.ads:118, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t4s #"s-osinte.ads" 118 0 0# 
 
 function first #"s-osinte.ads" 118 0 0# 
   : int =
  0
 
 function last #"s-osinte.ads" 118 0 0# 
   : int =
  3
 
 predicate in_range #"s-osinte.ads" 118 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t4s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t4s__ref #"s-osinte.ads" 118 0 0# =
  { mutable t4s__content "model_trace:" : t4s }
 
 function t4s__ref___projection #"s-osinte.ads" 118 0 0# 
   (a : t4s__ref) : t4s =
  a.t4s__content
 
 meta "model_projection" function t4s__ref___projection
 
 meta "inline : no" function t4s__ref___projection
 
 val t4s__havoc #"s-osinte.ads" 118 0 0# 
   (x : t4s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T5s" defined at s-osinte.ads:118, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__signal
 use        Array__Int__System__os_interface__signal

 type component_type #"s-osinte.ads" 118 0 0# =
  System__os_interface__signal.signal
 
 function first #"s-osinte.ads" 75 0 0# 
   : int =
  0
 
 function last #"s-osinte.ads" 75 0 0# 
   : int =
  3
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__System__os_interface__signal.map, 
 function array_bool_eq = Array__Int__System__os_interface__signal.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "unmasked" defined at s-osinte.ads:117, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__unmasked
 use import "_gnatprove_standard".Main
 use        System__os_interface__signal_set

 function unmasked #"s-osinte.ads" 117 0 0# "model_projected" "model_trace:6366" 
   : System__os_interface__signal_set.signal_set
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 115 0 0# 
   : int

end

(* Module for axiomatizing type "T6s" defined at s-osinte.ads:121, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__T6s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t6s #"s-osinte.ads" 121 0 0# 
 
 function first #"s-osinte.ads" 121 0 0# 
   : int =
  0
 
 function last #"s-osinte.ads" 121 0 0# 
   : int =
  1
 
 predicate in_range #"s-osinte.ads" 121 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t6s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t6s__ref #"s-osinte.ads" 121 0 0# =
  { mutable t6s__content "model_trace:" : t6s }
 
 function t6s__ref___projection #"s-osinte.ads" 121 0 0# 
   (a : t6s__ref) : t6s =
  a.t6s__content
 
 meta "model_projection" function t6s__ref___projection
 
 meta "inline : no" function t6s__ref___projection
 
 val t6s__havoc #"s-osinte.ads" 121 0 0# 
   (x : t6s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T7s" defined at s-osinte.ads:121, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__signal
 use        Array__Int__System__os_interface__signal

 type component_type #"s-osinte.ads" 121 0 0# =
  System__os_interface__signal.signal
 
 function first #"s-osinte.ads" 75 0 0# 
   : int =
  0
 
 function last #"s-osinte.ads" 75 0 0# 
   : int =
  1
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__System__os_interface__signal.map, 
 function array_bool_eq = Array__Int__System__os_interface__signal.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "reserved" defined at s-osinte.ads:120, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__reserved
 use import "_gnatprove_standard".Main
 use        System__os_interface__signal_set

 function reserved #"s-osinte.ads" 120 0 0# "model_projected" "model_trace:6380" 
   : System__os_interface__signal_set.signal_set
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 115 0 0# 
   : int

end

(* Module for axiomatizing type "T8s" defined at s-osinte.ads:124, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__T8s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t8s #"s-osinte.ads" 124 0 0# 
 
 function first #"s-osinte.ads" 124 0 0# 
   : int =
  0
 
 function last #"s-osinte.ads" 124 0 0# 
   : int =
  3
 
 predicate in_range #"s-osinte.ads" 124 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t8s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t8s__ref #"s-osinte.ads" 124 0 0# =
  { mutable t8s__content "model_trace:" : t8s }
 
 function t8s__ref___projection #"s-osinte.ads" 124 0 0# 
   (a : t8s__ref) : t8s =
  a.t8s__content
 
 meta "model_projection" function t8s__ref___projection
 
 meta "inline : no" function t8s__ref___projection
 
 val t8s__havoc #"s-osinte.ads" 124 0 0# 
   (x : t8s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T9s" defined at s-osinte.ads:124, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__T9s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__signal
 use        Array__Int__System__os_interface__signal

 type component_type #"s-osinte.ads" 124 0 0# =
  System__os_interface__signal.signal
 
 function first #"s-osinte.ads" 75 0 0# 
   : int =
  0
 
 function last #"s-osinte.ads" 75 0 0# 
   : int =
  3
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__System__os_interface__signal.map, 
 function array_bool_eq = Array__Int__System__os_interface__signal.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "exception_signals" defined at s-osinte.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__exception_signals
 use import "_gnatprove_standard".Main
 use        System__os_interface__signal_set

 function exception_signals #"s-osinte.ads" 123 0 0# "model_projected" "model_trace:6392" 
   : System__os_interface__signal_set.signal_set
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 115 0 0# 
   : int

end

(* Module for axiomatizing type "Tsigset_tB" defined at s-osinte.ads:514, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__Tsigset_tB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type tsigset_tB #"s-osinte.ads" 514 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 514 0 0# 
   : BV32.t
 
 function first #"s-osinte.ads" 514 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-osinte.ads" 514 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-osinte.ads" 514 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 514 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-osinte.ads" 514 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 514 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = tsigset_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tsigset_tB__ref #"s-osinte.ads" 514 0 0# =
  { mutable tsigset_tB__content "model_trace:" : tsigset_tB }
 
 function tsigset_tB__ref___projection #"s-osinte.ads" 514 0 0# 
   (a : tsigset_tB__ref) : tsigset_tB =
  a.tsigset_tB__content
 
 meta "model_projection" function tsigset_tB__ref___projection
 
 meta "inline : no" function tsigset_tB__ref___projection
 
 val tsigset_tB__havoc #"s-osinte.ads" 514 0 0# 
   (x : tsigset_tB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "sigset_t" defined at s-osinte.ads:514, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__sigset_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type sigset_t #"s-osinte.ads" 514 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 514 0 0# 
   : BV32.t
 
 function first #"s-osinte.ads" 514 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-osinte.ads" 514 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-osinte.ads" 514 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 514 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-osinte.ads" 514 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 514 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = sigset_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type sigset_t__ref #"s-osinte.ads" 514 0 0# =
  { mutable sigset_t__content "model_trace:" : sigset_t }
 
 function sigset_t__ref___projection #"s-osinte.ads" 514 0 0# 
   (a : sigset_t__ref) : sigset_t =
  a.sigset_t__content
 
 meta "model_projection" function sigset_t__ref___projection
 
 meta "inline : no" function sigset_t__ref___projection
 
 val sigset_t__havoc #"s-osinte.ads" 514 0 0# 
   (x : sigset_t__ref) : unit
  writes {x}

end

(* Module for defining the constant "sig" defined at s-osinte.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigaddset__sig
 use import "_gnatprove_standard".Main

 function sig #"s-osinte.ads" 130 0 0# "model" "model_trace:6431" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 75 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "sig" defined at s-osinte.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__sigaddset__sig___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "sig" defined at s-osinte.ads:133, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigdelset__sig
 use import "_gnatprove_standard".Main

 function sig #"s-osinte.ads" 133 0 0# "model" "model_trace:6468" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 75 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "sig" defined at s-osinte.ads:133, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__sigdelset__sig___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "sig" defined at s-osinte.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigismember__sig
 use import "_gnatprove_standard".Main

 function sig #"s-osinte.ads" 139 0 0# "model" "model_trace:6533" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 75 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "sig" defined at s-osinte.ads:139, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__sigismember__sig___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tpad_typeD1" defined at s-osinte.ads:531, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__Tpad_typeD1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tpad_typeD1 #"s-osinte.ads" 531 0 0# 
 
 function first #"s-osinte.ads" 531 0 0# 
   : int =
  1
 
 function last #"s-osinte.ads" 531 0 0# 
   : int =
  7
 
 predicate in_range #"s-osinte.ads" 531 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tpad_typeD1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tpad_typeD1__ref #"s-osinte.ads" 531 0 0# =
  { mutable tpad_typeD1__content "model_trace:" : tpad_typeD1 }
 
 function tpad_typeD1__ref___projection #"s-osinte.ads" 531 0 0# 
   (a : tpad_typeD1__ref) : tpad_typeD1 =
  a.tpad_typeD1__content
 
 meta "model_projection" function tpad_typeD1__ref___projection
 
 meta "inline : no" function tpad_typeD1__ref___projection
 
 val tpad_typeD1__havoc #"s-osinte.ads" 531 0 0# 
   (x : tpad_typeD1__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "Tpad_typeB" defined at s-osinte.ads:531, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__System__os_interface__unsigned_long
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__unsigned_long

 function index_I1_one #"s-osinte.ads" 531 0 0# 
   : int =
  1
 
 type component_type #"s-osinte.ads" 531 0 0# =
  System__os_interface__unsigned_long.unsigned_long
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"s-osinte.ads" 52 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_BV64_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = System__os_interface__unsigned_long.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "Tpad_typeB" defined at s-osinte.ads:531, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__Tpad_typeB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        System__os_interface__unsigned_long
 use        System__os_interface__Tpad_typeD1
 use        Array__Int__System__os_interface__unsigned_long

 type component_type #"s-osinte.ads" 52 0 0# =
  System__os_interface__unsigned_long.unsigned_long
 
 function index_1_id #"s-osinte.ads" 52 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__os_interface__unsigned_long.map, 
 function array_bool_eq = Array__Int__System__os_interface__unsigned_long.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = System__os_interface__Tpad_typeD1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tpad_typeB #"s-osinte.ads" 531 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tpad_typeB__ref #"s-osinte.ads" 531 0 0# =
  { mutable tpad_typeB__content "model_trace:" : tpad_typeB }
 
 function tpad_typeB__ref___projection #"s-osinte.ads" 531 0 0# 
   (a : tpad_typeB__ref) : tpad_typeB =
  a.tpad_typeB__content
 
 meta "model_projection" function tpad_typeB__ref___projection
 
 meta "inline : no" function tpad_typeB__ref___projection
 
 val tpad_typeB__havoc #"s-osinte.ads" 531 0 0# 
   (x : tpad_typeB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "pad_type" defined at s-osinte.ads:531, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pad_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__unsigned_long
 use        Array__Int__System__os_interface__unsigned_long

 type component_type #"s-osinte.ads" 531 0 0# =
  System__os_interface__unsigned_long.unsigned_long
 
 function first #"s-osinte.ads" 52 0 0# 
   : int =
  1
 
 function last #"s-osinte.ads" 52 0 0# 
   : int =
  7
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__System__os_interface__unsigned_long.map, 
 function array_bool_eq = Array__Int__System__os_interface__unsigned_long.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "siginfo_t" defined at s-osinte.ads:532, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__os_interface__siginfo_t__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        "_gnatprove_standard".BV64
 use        System__address
 use        System__os_interface__int
 use        System__os_interface__long
 use        System__os_interface__unsigned
 use        System__os_interface__pad_type
 use        Array__Int__System__os_interface__unsigned_long
 use        Array__Int__System__os_interface__unsigned_long
 use        Array__Int__System__os_interface__unsigned_long
 use        Array__Int__System__os_interface__unsigned_long

 type __split_fields #"s-osinte.ads" 52 0 0# =
  { rec__system__os_interface__siginfo_t__si_signo "model_trace:.8858" : System__os_interface__int.int__; rec__system__os_interface__siginfo_t__si_errno "model_trace:.8868" : System__os_interface__int.int__; rec__system__os_interface__siginfo_t__si_code "model_trace:.8878" : System__os_interface__int.int__; rec__system__os_interface__siginfo_t__si_pid "model_trace:.8888" : System__os_interface__int.int__; rec__system__os_interface__siginfo_t__si_uid "model_trace:.8898" : System__os_interface__unsigned.unsigned; rec__system__os_interface__siginfo_t__si_status "model_trace:.8908" : System__os_interface__int.int__; rec__system__os_interface__siginfo_t__si_addr "model_trace:.8918" : System__address.address; rec__system__os_interface__siginfo_t__si_value "model_trace:.8930" : System__address.address; rec__system__os_interface__siginfo_t__si_band "model_trace:.8942" : System__os_interface__long.long; rec__system__os_interface__siginfo_t__pad "model_trace:.8952" : Array__Int__System__os_interface__unsigned_long.map }
 
 function __split_fields_si_signo__projection #"s-osinte.ads" 531 0 0# "model_trace:.8858" 
   (a : __split_fields) : System__os_interface__int.int__ =
  a.rec__system__os_interface__siginfo_t__si_signo
 
 meta "model_projection" function __split_fields_si_signo__projection
 
 meta "inline : no" function __split_fields_si_signo__projection
 
 function __split_fields_si_errno__projection #"s-osinte.ads" 532 0 0# "model_trace:.8868" 
   (a : __split_fields) : System__os_interface__int.int__ =
  a.rec__system__os_interface__siginfo_t__si_errno
 
 meta "model_projection" function __split_fields_si_errno__projection
 
 meta "inline : no" function __split_fields_si_errno__projection
 
 function __split_fields_si_code__projection #"s-osinte.ads" 532 0 0# "model_trace:.8878" 
   (a : __split_fields) : System__os_interface__int.int__ =
  a.rec__system__os_interface__siginfo_t__si_code
 
 meta "model_projection" function __split_fields_si_code__projection
 
 meta "inline : no" function __split_fields_si_code__projection
 
 function __split_fields_si_pid__projection #"s-osinte.ads" 532 0 0# "model_trace:.8888" 
   (a : __split_fields) : System__os_interface__int.int__ =
  a.rec__system__os_interface__siginfo_t__si_pid
 
 meta "model_projection" function __split_fields_si_pid__projection
 
 meta "inline : no" function __split_fields_si_pid__projection
 
 function __split_fields_si_uid__projection #"s-osinte.ads" 532 0 0# "model_trace:.8898" 
   (a : __split_fields) : System__os_interface__unsigned.unsigned =
  a.rec__system__os_interface__siginfo_t__si_uid
 
 meta "model_projection" function __split_fields_si_uid__projection
 
 meta "inline : no" function __split_fields_si_uid__projection
 
 function __split_fields_si_status__projection #"s-osinte.ads" 532 0 0# "model_trace:.8908" 
   (a : __split_fields) : System__os_interface__int.int__ =
  a.rec__system__os_interface__siginfo_t__si_status
 
 meta "model_projection" function __split_fields_si_status__projection
 
 meta "inline : no" function __split_fields_si_status__projection
 
 function __split_fields_si_addr__projection #"s-osinte.ads" 532 0 0# "model_trace:.8918" 
   (a : __split_fields) : System__address.address =
  a.rec__system__os_interface__siginfo_t__si_addr
 
 meta "model_projection" function __split_fields_si_addr__projection
 
 meta "inline : no" function __split_fields_si_addr__projection
 
 function __split_fields_si_value__projection #"s-osinte.ads" 532 0 0# "model_trace:.8930" 
   (a : __split_fields) : System__address.address =
  a.rec__system__os_interface__siginfo_t__si_value
 
 meta "model_projection" function __split_fields_si_value__projection
 
 meta "inline : no" function __split_fields_si_value__projection
 
 function __split_fields_si_band__projection #"s-osinte.ads" 532 0 0# "model_trace:.8942" 
   (a : __split_fields) : System__os_interface__long.long =
  a.rec__system__os_interface__siginfo_t__si_band
 
 meta "model_projection" function __split_fields_si_band__projection
 
 meta "inline : no" function __split_fields_si_band__projection
 
 function __split_fields_pad__projection #"s-osinte.ads" 532 0 0# "model_trace:.8952" 
   (a : __split_fields) : Array__Int__System__os_interface__unsigned_long.map =
  a.rec__system__os_interface__siginfo_t__pad
 
 meta "model_projection" function __split_fields_pad__projection
 
 meta "inline : no" function __split_fields_pad__projection
 
 type __split_fields__ref #"s-osinte.ads" 532 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_5__projection #"s-osinte.ads" 532 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_5__projection
 
 meta "inline : no" function __split_fields__ref_5__projection
 
 val __split_fields__havoc #"s-osinte.ads" 532 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-osinte.ads" 532 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_5__projection #"s-osinte.ads" 532 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_5__projection
 
 meta "inline : no" function __rep_5__projection
 
 function to_base #"s-osinte.ads" 532 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-osinte.ads" 532 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__os_interface__siginfo_t__si_signo__pred #"s-osinte.ads" 532 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__siginfo_t__si_signo_ #"s-osinte.ads" 532 0 0# 
   (a : __rep) : System__os_interface__int.int__
  requires { (system__os_interface__siginfo_t__si_signo__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__siginfo_t__si_signo) }
 
 predicate system__os_interface__siginfo_t__si_errno__pred #"s-osinte.ads" 532 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__siginfo_t__si_errno_ #"s-osinte.ads" 532 0 0# 
   (a : __rep) : System__os_interface__int.int__
  requires { (system__os_interface__siginfo_t__si_errno__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__siginfo_t__si_errno) }
 
 predicate system__os_interface__siginfo_t__si_code__pred #"s-osinte.ads" 532 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__siginfo_t__si_code_ #"s-osinte.ads" 532 0 0# 
   (a : __rep) : System__os_interface__int.int__
  requires { (system__os_interface__siginfo_t__si_code__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__siginfo_t__si_code) }
 
 predicate system__os_interface__siginfo_t__si_pid__pred #"s-osinte.ads" 532 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__siginfo_t__si_pid_ #"s-osinte.ads" 532 0 0# 
   (a : __rep) : System__os_interface__int.int__
  requires { (system__os_interface__siginfo_t__si_pid__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__siginfo_t__si_pid) }
 
 predicate system__os_interface__siginfo_t__si_uid__pred #"s-osinte.ads" 532 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__siginfo_t__si_uid_ #"s-osinte.ads" 532 0 0# 
   (a : __rep) : System__os_interface__unsigned.unsigned
  requires { (system__os_interface__siginfo_t__si_uid__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__siginfo_t__si_uid) }
 
 predicate system__os_interface__siginfo_t__si_status__pred #"s-osinte.ads" 532 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__siginfo_t__si_status_ #"s-osinte.ads" 532 0 0# 
   (a : __rep) : System__os_interface__int.int__
  requires { (system__os_interface__siginfo_t__si_status__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__siginfo_t__si_status) }
 
 predicate system__os_interface__siginfo_t__si_addr__pred #"s-osinte.ads" 532 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__siginfo_t__si_addr_ #"s-osinte.ads" 532 0 0# 
   (a : __rep) : System__address.address
  requires { (system__os_interface__siginfo_t__si_addr__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__siginfo_t__si_addr) }
 
 predicate system__os_interface__siginfo_t__si_value__pred #"s-osinte.ads" 532 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__siginfo_t__si_value_ #"s-osinte.ads" 532 0 0# 
   (a : __rep) : System__address.address
  requires { (system__os_interface__siginfo_t__si_value__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__siginfo_t__si_value) }
 
 predicate system__os_interface__siginfo_t__si_band__pred #"s-osinte.ads" 532 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__siginfo_t__si_band_ #"s-osinte.ads" 532 0 0# 
   (a : __rep) : System__os_interface__long.long
  requires { (system__os_interface__siginfo_t__si_band__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__siginfo_t__si_band) }
 
 predicate system__os_interface__siginfo_t__pad__pred #"s-osinte.ads" 532 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__siginfo_t__pad_ #"s-osinte.ads" 532 0 0# 
   (a : __rep) : Array__Int__System__os_interface__unsigned_long.map
  requires { (system__os_interface__siginfo_t__pad__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__siginfo_t__pad) }
 
 function bool_eq #"s-osinte.ads" 532 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ( ( ( ( ( ( ( ((System__os_interface__int.to_rep a.__split_fields.rec__system__os_interface__siginfo_t__si_signo) = (System__os_interface__int.to_rep b.__split_fields.rec__system__os_interface__siginfo_t__si_signo)) /\ ((System__os_interface__int.to_rep a.__split_fields.rec__system__os_interface__siginfo_t__si_errno) = (System__os_interface__int.to_rep b.__split_fields.rec__system__os_interface__siginfo_t__si_errno)) ) /\ ((System__os_interface__int.to_rep a.__split_fields.rec__system__os_interface__siginfo_t__si_code) = (System__os_interface__int.to_rep b.__split_fields.rec__system__os_interface__siginfo_t__si_code)) ) /\ ((System__os_interface__int.to_rep a.__split_fields.rec__system__os_interface__siginfo_t__si_pid) = (System__os_interface__int.to_rep b.__split_fields.rec__system__os_interface__siginfo_t__si_pid)) ) /\ ((System__os_interface__unsigned.to_rep a.__split_fields.rec__system__os_interface__siginfo_t__si_uid) = (System__os_interface__unsigned.to_rep b.__split_fields.rec__system__os_interface__siginfo_t__si_uid)) ) /\ ((System__os_interface__int.to_rep a.__split_fields.rec__system__os_interface__siginfo_t__si_status) = (System__os_interface__int.to_rep b.__split_fields.rec__system__os_interface__siginfo_t__si_status)) ) /\ ((System__address.to_rep a.__split_fields.rec__system__os_interface__siginfo_t__si_addr) = (System__address.to_rep b.__split_fields.rec__system__os_interface__siginfo_t__si_addr)) ) /\ ((System__address.to_rep a.__split_fields.rec__system__os_interface__siginfo_t__si_value) = (System__address.to_rep b.__split_fields.rec__system__os_interface__siginfo_t__si_value)) ) /\ ((System__os_interface__long.to_rep a.__split_fields.rec__system__os_interface__siginfo_t__si_band) = (System__os_interface__long.to_rep b.__split_fields.rec__system__os_interface__siginfo_t__si_band)) ) /\ ((System__os_interface__pad_type.bool_eq a.__split_fields.rec__system__os_interface__siginfo_t__pad b.__split_fields.rec__system__os_interface__siginfo_t__pad) = True) )) then (
   True) else (
   False))
 
 function user_eq #"s-osinte.ads" 532 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "siginfo_t" defined at s-osinte.ads:532, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__siginfo_t
 use export System__os_interface__siginfo_t__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type siginfo_t #"s-osinte.ads" 532 0 0# =
  __rep
 
 function value__size #"s-osinte.ads" 532 0 0# 
   : int
 
 function object__size #"s-osinte.ads" 532 0 0# 
   (a : siginfo_t) : int
 
 function value__alignment #"s-osinte.ads" 532 0 0# 
   : int
 
 function object__alignment #"s-osinte.ads" 532 0 0# 
   (a : siginfo_t) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : siginfo_t.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : siginfo_t.
   ((object__alignment a) >= 0))
 
 function system__os_interface__siginfo_t__si_signo__first__bit #"s-osinte.ads" 532 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_signo__last__bit #"s-osinte.ads" 532 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_signo__position #"s-osinte.ads" 532 0 0# 
   : int
 
 axiom system__os_interface__siginfo_t__si_signo__first__bit_axiom :
  ((system__os_interface__siginfo_t__si_signo__first__bit ) >= 0)
 
 axiom system__os_interface__siginfo_t__si_signo__last__bit_axiom :
  ((system__os_interface__siginfo_t__si_signo__last__bit ) > (system__os_interface__siginfo_t__si_signo__first__bit ))
 
 axiom system__os_interface__siginfo_t__si_signo__position_axiom :
  ((system__os_interface__siginfo_t__si_signo__position ) >= 0)
 
 function system__os_interface__siginfo_t__si_errno__first__bit #"s-osinte.ads" 533 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_errno__last__bit #"s-osinte.ads" 533 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_errno__position #"s-osinte.ads" 533 0 0# 
   : int
 
 axiom system__os_interface__siginfo_t__si_errno__first__bit_axiom :
  ((system__os_interface__siginfo_t__si_errno__first__bit ) >= 0)
 
 axiom system__os_interface__siginfo_t__si_errno__last__bit_axiom :
  ((system__os_interface__siginfo_t__si_errno__last__bit ) > (system__os_interface__siginfo_t__si_errno__first__bit ))
 
 axiom system__os_interface__siginfo_t__si_errno__position_axiom :
  ((system__os_interface__siginfo_t__si_errno__position ) >= 0)
 
 function system__os_interface__siginfo_t__si_code__first__bit #"s-osinte.ads" 534 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_code__last__bit #"s-osinte.ads" 534 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_code__position #"s-osinte.ads" 534 0 0# 
   : int
 
 axiom system__os_interface__siginfo_t__si_code__first__bit_axiom :
  ((system__os_interface__siginfo_t__si_code__first__bit ) >= 0)
 
 axiom system__os_interface__siginfo_t__si_code__last__bit_axiom :
  ((system__os_interface__siginfo_t__si_code__last__bit ) > (system__os_interface__siginfo_t__si_code__first__bit ))
 
 axiom system__os_interface__siginfo_t__si_code__position_axiom :
  ((system__os_interface__siginfo_t__si_code__position ) >= 0)
 
 function system__os_interface__siginfo_t__si_pid__first__bit #"s-osinte.ads" 535 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_pid__last__bit #"s-osinte.ads" 535 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_pid__position #"s-osinte.ads" 535 0 0# 
   : int
 
 axiom system__os_interface__siginfo_t__si_pid__first__bit_axiom :
  ((system__os_interface__siginfo_t__si_pid__first__bit ) >= 0)
 
 axiom system__os_interface__siginfo_t__si_pid__last__bit_axiom :
  ((system__os_interface__siginfo_t__si_pid__last__bit ) > (system__os_interface__siginfo_t__si_pid__first__bit ))
 
 axiom system__os_interface__siginfo_t__si_pid__position_axiom :
  ((system__os_interface__siginfo_t__si_pid__position ) >= 0)
 
 function system__os_interface__siginfo_t__si_uid__first__bit #"s-osinte.ads" 536 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_uid__last__bit #"s-osinte.ads" 536 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_uid__position #"s-osinte.ads" 536 0 0# 
   : int
 
 axiom system__os_interface__siginfo_t__si_uid__first__bit_axiom :
  ((system__os_interface__siginfo_t__si_uid__first__bit ) >= 0)
 
 axiom system__os_interface__siginfo_t__si_uid__last__bit_axiom :
  ((system__os_interface__siginfo_t__si_uid__last__bit ) > (system__os_interface__siginfo_t__si_uid__first__bit ))
 
 axiom system__os_interface__siginfo_t__si_uid__position_axiom :
  ((system__os_interface__siginfo_t__si_uid__position ) >= 0)
 
 function system__os_interface__siginfo_t__si_status__first__bit #"s-osinte.ads" 537 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_status__last__bit #"s-osinte.ads" 537 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_status__position #"s-osinte.ads" 537 0 0# 
   : int
 
 axiom system__os_interface__siginfo_t__si_status__first__bit_axiom :
  ((system__os_interface__siginfo_t__si_status__first__bit ) >= 0)
 
 axiom system__os_interface__siginfo_t__si_status__last__bit_axiom :
  ((system__os_interface__siginfo_t__si_status__last__bit ) > (system__os_interface__siginfo_t__si_status__first__bit ))
 
 axiom system__os_interface__siginfo_t__si_status__position_axiom :
  ((system__os_interface__siginfo_t__si_status__position ) >= 0)
 
 function system__os_interface__siginfo_t__si_addr__first__bit #"s-osinte.ads" 538 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_addr__last__bit #"s-osinte.ads" 538 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_addr__position #"s-osinte.ads" 538 0 0# 
   : int
 
 axiom system__os_interface__siginfo_t__si_addr__first__bit_axiom :
  ((system__os_interface__siginfo_t__si_addr__first__bit ) >= 0)
 
 axiom system__os_interface__siginfo_t__si_addr__last__bit_axiom :
  ((system__os_interface__siginfo_t__si_addr__last__bit ) > (system__os_interface__siginfo_t__si_addr__first__bit ))
 
 axiom system__os_interface__siginfo_t__si_addr__position_axiom :
  ((system__os_interface__siginfo_t__si_addr__position ) >= 0)
 
 function system__os_interface__siginfo_t__si_value__first__bit #"s-osinte.ads" 539 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_value__last__bit #"s-osinte.ads" 539 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_value__position #"s-osinte.ads" 539 0 0# 
   : int
 
 axiom system__os_interface__siginfo_t__si_value__first__bit_axiom :
  ((system__os_interface__siginfo_t__si_value__first__bit ) >= 0)
 
 axiom system__os_interface__siginfo_t__si_value__last__bit_axiom :
  ((system__os_interface__siginfo_t__si_value__last__bit ) > (system__os_interface__siginfo_t__si_value__first__bit ))
 
 axiom system__os_interface__siginfo_t__si_value__position_axiom :
  ((system__os_interface__siginfo_t__si_value__position ) >= 0)
 
 function system__os_interface__siginfo_t__si_band__first__bit #"s-osinte.ads" 540 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_band__last__bit #"s-osinte.ads" 540 0 0# 
   : int
 
 function system__os_interface__siginfo_t__si_band__position #"s-osinte.ads" 540 0 0# 
   : int
 
 axiom system__os_interface__siginfo_t__si_band__first__bit_axiom :
  ((system__os_interface__siginfo_t__si_band__first__bit ) >= 0)
 
 axiom system__os_interface__siginfo_t__si_band__last__bit_axiom :
  ((system__os_interface__siginfo_t__si_band__last__bit ) > (system__os_interface__siginfo_t__si_band__first__bit ))
 
 axiom system__os_interface__siginfo_t__si_band__position_axiom :
  ((system__os_interface__siginfo_t__si_band__position ) >= 0)
 
 function system__os_interface__siginfo_t__pad__first__bit #"s-osinte.ads" 541 0 0# 
   : int
 
 function system__os_interface__siginfo_t__pad__last__bit #"s-osinte.ads" 541 0 0# 
   : int
 
 function system__os_interface__siginfo_t__pad__position #"s-osinte.ads" 541 0 0# 
   : int
 
 axiom system__os_interface__siginfo_t__pad__first__bit_axiom :
  ((system__os_interface__siginfo_t__pad__first__bit ) >= 0)
 
 axiom system__os_interface__siginfo_t__pad__last__bit_axiom :
  ((system__os_interface__siginfo_t__pad__last__bit ) > (system__os_interface__siginfo_t__pad__first__bit ))
 
 axiom system__os_interface__siginfo_t__pad__position_axiom :
  ((system__os_interface__siginfo_t__pad__position ) >= 0)
 
 function dummy #"s-osinte.ads" 542 0 0# 
   : siginfo_t
 
 type siginfo_t__ref #"s-osinte.ads" 532 0 0# =
  { mutable siginfo_t__content "model_trace:" : siginfo_t }
 
 function siginfo_t__ref___projection #"s-osinte.ads" 532 0 0# 
   (a : siginfo_t__ref) : siginfo_t =
  a.siginfo_t__content
 
 meta "model_projection" function siginfo_t__ref___projection
 
 meta "inline : no" function siginfo_t__ref___projection
 
 val siginfo_t__havoc #"s-osinte.ads" 532 0 0# 
   (x : siginfo_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "stack_t" defined at s-osinte.ads:273, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__os_interface__stack_t__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address
 use        System__os_interface__int
 use        System__os_interface__size_t

 type __split_fields #"s-osinte.ads" 532 0 0# =
  { rec__system__os_interface__stack_t__ss_sp "model_trace:.7238" : System__address.address; rec__system__os_interface__stack_t__ss_size "model_trace:.7250" : System__os_interface__size_t.size_t; rec__system__os_interface__stack_t__ss_flags "model_trace:.7260" : System__os_interface__int.int__ }
 
 function __split_fields_ss_sp__projection #"s-osinte.ads" 47 0 0# "model_trace:.7238" 
   (a : __split_fields) : System__address.address =
  a.rec__system__os_interface__stack_t__ss_sp
 
 meta "model_projection" function __split_fields_ss_sp__projection
 
 meta "inline : no" function __split_fields_ss_sp__projection
 
 function __split_fields_ss_size__projection #"s-osinte.ads" 273 0 0# "model_trace:.7250" 
   (a : __split_fields) : System__os_interface__size_t.size_t =
  a.rec__system__os_interface__stack_t__ss_size
 
 meta "model_projection" function __split_fields_ss_size__projection
 
 meta "inline : no" function __split_fields_ss_size__projection
 
 function __split_fields_ss_flags__projection #"s-osinte.ads" 273 0 0# "model_trace:.7260" 
   (a : __split_fields) : System__os_interface__int.int__ =
  a.rec__system__os_interface__stack_t__ss_flags
 
 meta "model_projection" function __split_fields_ss_flags__projection
 
 meta "inline : no" function __split_fields_ss_flags__projection
 
 type __split_fields__ref #"s-osinte.ads" 273 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_6__projection #"s-osinte.ads" 273 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_6__projection
 
 meta "inline : no" function __split_fields__ref_6__projection
 
 val __split_fields__havoc #"s-osinte.ads" 273 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-osinte.ads" 273 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_6__projection #"s-osinte.ads" 273 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_6__projection
 
 meta "inline : no" function __rep_6__projection
 
 function to_base #"s-osinte.ads" 273 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-osinte.ads" 273 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__os_interface__stack_t__ss_sp__pred #"s-osinte.ads" 273 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__stack_t__ss_sp_ #"s-osinte.ads" 273 0 0# 
   (a : __rep) : System__address.address
  requires { (system__os_interface__stack_t__ss_sp__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__stack_t__ss_sp) }
 
 predicate system__os_interface__stack_t__ss_size__pred #"s-osinte.ads" 273 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__stack_t__ss_size_ #"s-osinte.ads" 273 0 0# 
   (a : __rep) : System__os_interface__size_t.size_t
  requires { (system__os_interface__stack_t__ss_size__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__stack_t__ss_size) }
 
 predicate system__os_interface__stack_t__ss_flags__pred #"s-osinte.ads" 273 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__stack_t__ss_flags_ #"s-osinte.ads" 273 0 0# 
   (a : __rep) : System__os_interface__int.int__
  requires { (system__os_interface__stack_t__ss_flags__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__stack_t__ss_flags) }
 
 function bool_eq #"s-osinte.ads" 273 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ((System__address.to_rep a.__split_fields.rec__system__os_interface__stack_t__ss_sp) = (System__address.to_rep b.__split_fields.rec__system__os_interface__stack_t__ss_sp)) /\ ((System__os_interface__size_t.to_rep a.__split_fields.rec__system__os_interface__stack_t__ss_size) = (System__os_interface__size_t.to_rep b.__split_fields.rec__system__os_interface__stack_t__ss_size)) ) /\ ((System__os_interface__int.to_rep a.__split_fields.rec__system__os_interface__stack_t__ss_flags) = (System__os_interface__int.to_rep b.__split_fields.rec__system__os_interface__stack_t__ss_flags)) )) then (
   True) else (
   False))
 
 function user_eq #"s-osinte.ads" 273 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "stack_t" defined at s-osinte.ads:273, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__stack_t
 use export System__os_interface__stack_t__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type stack_t #"s-osinte.ads" 273 0 0# =
  __rep
 
 function value__size #"s-osinte.ads" 273 0 0# 
   : int
 
 function object__size #"s-osinte.ads" 273 0 0# 
   (a : stack_t) : int
 
 function value__alignment #"s-osinte.ads" 273 0 0# 
   : int
 
 function object__alignment #"s-osinte.ads" 273 0 0# 
   (a : stack_t) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : stack_t.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : stack_t.
   ((object__alignment a) >= 0))
 
 function system__os_interface__stack_t__ss_sp__first__bit #"s-osinte.ads" 273 0 0# 
   : int
 
 function system__os_interface__stack_t__ss_sp__last__bit #"s-osinte.ads" 273 0 0# 
   : int
 
 function system__os_interface__stack_t__ss_sp__position #"s-osinte.ads" 273 0 0# 
   : int
 
 axiom system__os_interface__stack_t__ss_sp__first__bit_axiom :
  ((system__os_interface__stack_t__ss_sp__first__bit ) >= 0)
 
 axiom system__os_interface__stack_t__ss_sp__last__bit_axiom :
  ((system__os_interface__stack_t__ss_sp__last__bit ) > (system__os_interface__stack_t__ss_sp__first__bit ))
 
 axiom system__os_interface__stack_t__ss_sp__position_axiom :
  ((system__os_interface__stack_t__ss_sp__position ) >= 0)
 
 function system__os_interface__stack_t__ss_size__first__bit #"s-osinte.ads" 274 0 0# 
   : int
 
 function system__os_interface__stack_t__ss_size__last__bit #"s-osinte.ads" 274 0 0# 
   : int
 
 function system__os_interface__stack_t__ss_size__position #"s-osinte.ads" 274 0 0# 
   : int
 
 axiom system__os_interface__stack_t__ss_size__first__bit_axiom :
  ((system__os_interface__stack_t__ss_size__first__bit ) >= 0)
 
 axiom system__os_interface__stack_t__ss_size__last__bit_axiom :
  ((system__os_interface__stack_t__ss_size__last__bit ) > (system__os_interface__stack_t__ss_size__first__bit ))
 
 axiom system__os_interface__stack_t__ss_size__position_axiom :
  ((system__os_interface__stack_t__ss_size__position ) >= 0)
 
 function system__os_interface__stack_t__ss_flags__first__bit #"s-osinte.ads" 275 0 0# 
   : int
 
 function system__os_interface__stack_t__ss_flags__last__bit #"s-osinte.ads" 275 0 0# 
   : int
 
 function system__os_interface__stack_t__ss_flags__position #"s-osinte.ads" 275 0 0# 
   : int
 
 axiom system__os_interface__stack_t__ss_flags__first__bit_axiom :
  ((system__os_interface__stack_t__ss_flags__first__bit ) >= 0)
 
 axiom system__os_interface__stack_t__ss_flags__last__bit_axiom :
  ((system__os_interface__stack_t__ss_flags__last__bit ) > (system__os_interface__stack_t__ss_flags__first__bit ))
 
 axiom system__os_interface__stack_t__ss_flags__position_axiom :
  ((system__os_interface__stack_t__ss_flags__position ) >= 0)
 
 function dummy #"s-osinte.ads" 276 0 0# 
   : stack_t
 
 type stack_t__ref #"s-osinte.ads" 273 0 0# =
  { mutable stack_t__content "model_trace:" : stack_t }
 
 function stack_t__ref___projection #"s-osinte.ads" 273 0 0# 
   (a : stack_t__ref) : stack_t =
  a.stack_t__content
 
 meta "model_projection" function stack_t__ref___projection
 
 meta "inline : no" function stack_t__ref___projection
 
 val stack_t__havoc #"s-osinte.ads" 273 0 0# 
   (x : stack_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tmcontext_tB" defined at s-osinte.ads:546, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__Tmcontext_tB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type tmcontext_tB #"s-osinte.ads" 546 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 546 0 0# 
   : BV64.t
 
 function first #"s-osinte.ads" 546 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-osinte.ads" 546 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-osinte.ads" 546 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 546 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-osinte.ads" 546 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 546 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = tmcontext_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tmcontext_tB__ref #"s-osinte.ads" 546 0 0# =
  { mutable tmcontext_tB__content "model_trace:" : tmcontext_tB }
 
 function tmcontext_tB__ref___projection #"s-osinte.ads" 546 0 0# 
   (a : tmcontext_tB__ref) : tmcontext_tB =
  a.tmcontext_tB__content
 
 meta "model_projection" function tmcontext_tB__ref___projection
 
 meta "inline : no" function tmcontext_tB__ref___projection
 
 val tmcontext_tB__havoc #"s-osinte.ads" 546 0 0# 
   (x : tmcontext_tB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "mcontext_t" defined at s-osinte.ads:546, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__mcontext_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type mcontext_t #"s-osinte.ads" 546 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 546 0 0# 
   : BV64.t
 
 function first #"s-osinte.ads" 546 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-osinte.ads" 546 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-osinte.ads" 546 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 546 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-osinte.ads" 546 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 546 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = mcontext_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type mcontext_t__ref #"s-osinte.ads" 546 0 0# =
  { mutable mcontext_t__content "model_trace:" : mcontext_t }
 
 function mcontext_t__ref___projection #"s-osinte.ads" 546 0 0# 
   (a : mcontext_t__ref) : mcontext_t =
  a.mcontext_t__content
 
 meta "model_projection" function mcontext_t__ref___projection
 
 meta "inline : no" function mcontext_t__ref___projection
 
 val mcontext_t__havoc #"s-osinte.ads" 546 0 0# 
   (x : mcontext_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "ucontext_t" defined at s-osinte.ads:548, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__os_interface__ucontext_t__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        "_gnatprove_standard".BV64
 use        System__address
 use        System__os_interface__int
 use        System__os_interface__size_t
 use        System__os_interface__sigset_t
 use        System__os_interface__stack_t
 use        System__os_interface__mcontext_t

 type __split_fields #"s-osinte.ads" 546 0 0# =
  { rec__system__os_interface__ucontext_t__uc_onstack "model_trace:.8992" : System__os_interface__int.int__; rec__system__os_interface__ucontext_t__uc_sigmask "model_trace:.9002" : System__os_interface__sigset_t.sigset_t; rec__system__os_interface__ucontext_t__uc_stack "model_trace:.9012" : System__os_interface__stack_t.stack_t; rec__system__os_interface__ucontext_t__uc_link "model_trace:.9022" : System__address.address; rec__system__os_interface__ucontext_t__uc_mcsize "model_trace:.9034" : System__os_interface__size_t.size_t; rec__system__os_interface__ucontext_t__uc_mcontext "model_trace:.9044" : System__os_interface__mcontext_t.mcontext_t }
 
 function __split_fields_uc_onstack__projection #"s-osinte.ads" 546 0 0# "model_trace:.8992" 
   (a : __split_fields) : System__os_interface__int.int__ =
  a.rec__system__os_interface__ucontext_t__uc_onstack
 
 meta "model_projection" function __split_fields_uc_onstack__projection
 
 meta "inline : no" function __split_fields_uc_onstack__projection
 
 function __split_fields_uc_sigmask__projection #"s-osinte.ads" 548 0 0# "model_trace:.9002" 
   (a : __split_fields) : System__os_interface__sigset_t.sigset_t =
  a.rec__system__os_interface__ucontext_t__uc_sigmask
 
 meta "model_projection" function __split_fields_uc_sigmask__projection
 
 meta "inline : no" function __split_fields_uc_sigmask__projection
 
 function __split_fields_uc_stack__projection #"s-osinte.ads" 548 0 0# "model_trace:.9012" 
   (a : __split_fields) : System__os_interface__stack_t.stack_t =
  a.rec__system__os_interface__ucontext_t__uc_stack
 
 meta "model_projection" function __split_fields_uc_stack__projection
 
 meta "inline : no" function __split_fields_uc_stack__projection
 
 function __split_fields_uc_link__projection #"s-osinte.ads" 548 0 0# "model_trace:.9022" 
   (a : __split_fields) : System__address.address =
  a.rec__system__os_interface__ucontext_t__uc_link
 
 meta "model_projection" function __split_fields_uc_link__projection
 
 meta "inline : no" function __split_fields_uc_link__projection
 
 function __split_fields_uc_mcsize__projection #"s-osinte.ads" 548 0 0# "model_trace:.9034" 
   (a : __split_fields) : System__os_interface__size_t.size_t =
  a.rec__system__os_interface__ucontext_t__uc_mcsize
 
 meta "model_projection" function __split_fields_uc_mcsize__projection
 
 meta "inline : no" function __split_fields_uc_mcsize__projection
 
 function __split_fields_uc_mcontext__projection #"s-osinte.ads" 548 0 0# "model_trace:.9044" 
   (a : __split_fields) : System__os_interface__mcontext_t.mcontext_t =
  a.rec__system__os_interface__ucontext_t__uc_mcontext
 
 meta "model_projection" function __split_fields_uc_mcontext__projection
 
 meta "inline : no" function __split_fields_uc_mcontext__projection
 
 type __split_fields__ref #"s-osinte.ads" 548 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_7__projection #"s-osinte.ads" 548 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_7__projection
 
 meta "inline : no" function __split_fields__ref_7__projection
 
 val __split_fields__havoc #"s-osinte.ads" 548 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-osinte.ads" 548 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_7__projection #"s-osinte.ads" 548 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_7__projection
 
 meta "inline : no" function __rep_7__projection
 
 function to_base #"s-osinte.ads" 548 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-osinte.ads" 548 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__os_interface__ucontext_t__uc_onstack__pred #"s-osinte.ads" 548 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__ucontext_t__uc_onstack_ #"s-osinte.ads" 548 0 0# 
   (a : __rep) : System__os_interface__int.int__
  requires { (system__os_interface__ucontext_t__uc_onstack__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__ucontext_t__uc_onstack) }
 
 predicate system__os_interface__ucontext_t__uc_sigmask__pred #"s-osinte.ads" 548 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__ucontext_t__uc_sigmask_ #"s-osinte.ads" 548 0 0# 
   (a : __rep) : System__os_interface__sigset_t.sigset_t
  requires { (system__os_interface__ucontext_t__uc_sigmask__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__ucontext_t__uc_sigmask) }
 
 predicate system__os_interface__ucontext_t__uc_stack__pred #"s-osinte.ads" 548 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__ucontext_t__uc_stack_ #"s-osinte.ads" 548 0 0# 
   (a : __rep) : System__os_interface__stack_t.stack_t
  requires { (system__os_interface__ucontext_t__uc_stack__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__ucontext_t__uc_stack) }
 
 predicate system__os_interface__ucontext_t__uc_link__pred #"s-osinte.ads" 548 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__ucontext_t__uc_link_ #"s-osinte.ads" 548 0 0# 
   (a : __rep) : System__address.address
  requires { (system__os_interface__ucontext_t__uc_link__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__ucontext_t__uc_link) }
 
 predicate system__os_interface__ucontext_t__uc_mcsize__pred #"s-osinte.ads" 548 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__ucontext_t__uc_mcsize_ #"s-osinte.ads" 548 0 0# 
   (a : __rep) : System__os_interface__size_t.size_t
  requires { (system__os_interface__ucontext_t__uc_mcsize__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__ucontext_t__uc_mcsize) }
 
 predicate system__os_interface__ucontext_t__uc_mcontext__pred #"s-osinte.ads" 548 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__ucontext_t__uc_mcontext_ #"s-osinte.ads" 548 0 0# 
   (a : __rep) : System__os_interface__mcontext_t.mcontext_t
  requires { (system__os_interface__ucontext_t__uc_mcontext__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__ucontext_t__uc_mcontext) }
 
 function bool_eq #"s-osinte.ads" 548 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ( ( ( ((System__os_interface__int.to_rep a.__split_fields.rec__system__os_interface__ucontext_t__uc_onstack) = (System__os_interface__int.to_rep b.__split_fields.rec__system__os_interface__ucontext_t__uc_onstack)) /\ ((System__os_interface__sigset_t.to_rep a.__split_fields.rec__system__os_interface__ucontext_t__uc_sigmask) = (System__os_interface__sigset_t.to_rep b.__split_fields.rec__system__os_interface__ucontext_t__uc_sigmask)) ) /\ ((System__os_interface__stack_t.bool_eq a.__split_fields.rec__system__os_interface__ucontext_t__uc_stack b.__split_fields.rec__system__os_interface__ucontext_t__uc_stack) = True) ) /\ ((System__address.to_rep a.__split_fields.rec__system__os_interface__ucontext_t__uc_link) = (System__address.to_rep b.__split_fields.rec__system__os_interface__ucontext_t__uc_link)) ) /\ ((System__os_interface__size_t.to_rep a.__split_fields.rec__system__os_interface__ucontext_t__uc_mcsize) = (System__os_interface__size_t.to_rep b.__split_fields.rec__system__os_interface__ucontext_t__uc_mcsize)) ) /\ ((System__os_interface__mcontext_t.to_rep a.__split_fields.rec__system__os_interface__ucontext_t__uc_mcontext) = (System__os_interface__mcontext_t.to_rep b.__split_fields.rec__system__os_interface__ucontext_t__uc_mcontext)) )) then (
   True) else (
   False))
 
 function user_eq #"s-osinte.ads" 548 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "ucontext_t" defined at s-osinte.ads:548, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__ucontext_t
 use export System__os_interface__ucontext_t__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ucontext_t #"s-osinte.ads" 548 0 0# =
  __rep
 
 function value__size #"s-osinte.ads" 548 0 0# 
   : int
 
 function object__size #"s-osinte.ads" 548 0 0# 
   (a : ucontext_t) : int
 
 function value__alignment #"s-osinte.ads" 548 0 0# 
   : int
 
 function object__alignment #"s-osinte.ads" 548 0 0# 
   (a : ucontext_t) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : ucontext_t.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : ucontext_t.
   ((object__alignment a) >= 0))
 
 function system__os_interface__ucontext_t__uc_onstack__first__bit #"s-osinte.ads" 548 0 0# 
   : int
 
 function system__os_interface__ucontext_t__uc_onstack__last__bit #"s-osinte.ads" 548 0 0# 
   : int
 
 function system__os_interface__ucontext_t__uc_onstack__position #"s-osinte.ads" 548 0 0# 
   : int
 
 axiom system__os_interface__ucontext_t__uc_onstack__first__bit_axiom :
  ((system__os_interface__ucontext_t__uc_onstack__first__bit ) >= 0)
 
 axiom system__os_interface__ucontext_t__uc_onstack__last__bit_axiom :
  ((system__os_interface__ucontext_t__uc_onstack__last__bit ) > (system__os_interface__ucontext_t__uc_onstack__first__bit ))
 
 axiom system__os_interface__ucontext_t__uc_onstack__position_axiom :
  ((system__os_interface__ucontext_t__uc_onstack__position ) >= 0)
 
 function system__os_interface__ucontext_t__uc_sigmask__first__bit #"s-osinte.ads" 549 0 0# 
   : int
 
 function system__os_interface__ucontext_t__uc_sigmask__last__bit #"s-osinte.ads" 549 0 0# 
   : int
 
 function system__os_interface__ucontext_t__uc_sigmask__position #"s-osinte.ads" 549 0 0# 
   : int
 
 axiom system__os_interface__ucontext_t__uc_sigmask__first__bit_axiom :
  ((system__os_interface__ucontext_t__uc_sigmask__first__bit ) >= 0)
 
 axiom system__os_interface__ucontext_t__uc_sigmask__last__bit_axiom :
  ((system__os_interface__ucontext_t__uc_sigmask__last__bit ) > (system__os_interface__ucontext_t__uc_sigmask__first__bit ))
 
 axiom system__os_interface__ucontext_t__uc_sigmask__position_axiom :
  ((system__os_interface__ucontext_t__uc_sigmask__position ) >= 0)
 
 function system__os_interface__ucontext_t__uc_stack__first__bit #"s-osinte.ads" 550 0 0# 
   : int
 
 function system__os_interface__ucontext_t__uc_stack__last__bit #"s-osinte.ads" 550 0 0# 
   : int
 
 function system__os_interface__ucontext_t__uc_stack__position #"s-osinte.ads" 550 0 0# 
   : int
 
 axiom system__os_interface__ucontext_t__uc_stack__first__bit_axiom :
  ((system__os_interface__ucontext_t__uc_stack__first__bit ) >= 0)
 
 axiom system__os_interface__ucontext_t__uc_stack__last__bit_axiom :
  ((system__os_interface__ucontext_t__uc_stack__last__bit ) > (system__os_interface__ucontext_t__uc_stack__first__bit ))
 
 axiom system__os_interface__ucontext_t__uc_stack__position_axiom :
  ((system__os_interface__ucontext_t__uc_stack__position ) >= 0)
 
 function system__os_interface__ucontext_t__uc_link__first__bit #"s-osinte.ads" 551 0 0# 
   : int
 
 function system__os_interface__ucontext_t__uc_link__last__bit #"s-osinte.ads" 551 0 0# 
   : int
 
 function system__os_interface__ucontext_t__uc_link__position #"s-osinte.ads" 551 0 0# 
   : int
 
 axiom system__os_interface__ucontext_t__uc_link__first__bit_axiom :
  ((system__os_interface__ucontext_t__uc_link__first__bit ) >= 0)
 
 axiom system__os_interface__ucontext_t__uc_link__last__bit_axiom :
  ((system__os_interface__ucontext_t__uc_link__last__bit ) > (system__os_interface__ucontext_t__uc_link__first__bit ))
 
 axiom system__os_interface__ucontext_t__uc_link__position_axiom :
  ((system__os_interface__ucontext_t__uc_link__position ) >= 0)
 
 function system__os_interface__ucontext_t__uc_mcsize__first__bit #"s-osinte.ads" 552 0 0# 
   : int
 
 function system__os_interface__ucontext_t__uc_mcsize__last__bit #"s-osinte.ads" 552 0 0# 
   : int
 
 function system__os_interface__ucontext_t__uc_mcsize__position #"s-osinte.ads" 552 0 0# 
   : int
 
 axiom system__os_interface__ucontext_t__uc_mcsize__first__bit_axiom :
  ((system__os_interface__ucontext_t__uc_mcsize__first__bit ) >= 0)
 
 axiom system__os_interface__ucontext_t__uc_mcsize__last__bit_axiom :
  ((system__os_interface__ucontext_t__uc_mcsize__last__bit ) > (system__os_interface__ucontext_t__uc_mcsize__first__bit ))
 
 axiom system__os_interface__ucontext_t__uc_mcsize__position_axiom :
  ((system__os_interface__ucontext_t__uc_mcsize__position ) >= 0)
 
 function system__os_interface__ucontext_t__uc_mcontext__first__bit #"s-osinte.ads" 553 0 0# 
   : int
 
 function system__os_interface__ucontext_t__uc_mcontext__last__bit #"s-osinte.ads" 553 0 0# 
   : int
 
 function system__os_interface__ucontext_t__uc_mcontext__position #"s-osinte.ads" 553 0 0# 
   : int
 
 axiom system__os_interface__ucontext_t__uc_mcontext__first__bit_axiom :
  ((system__os_interface__ucontext_t__uc_mcontext__first__bit ) >= 0)
 
 axiom system__os_interface__ucontext_t__uc_mcontext__last__bit_axiom :
  ((system__os_interface__ucontext_t__uc_mcontext__last__bit ) > (system__os_interface__ucontext_t__uc_mcontext__first__bit ))
 
 axiom system__os_interface__ucontext_t__uc_mcontext__position_axiom :
  ((system__os_interface__ucontext_t__uc_mcontext__position ) >= 0)
 
 function dummy #"s-osinte.ads" 554 0 0# 
   : ucontext_t
 
 type ucontext_t__ref #"s-osinte.ads" 548 0 0# =
  { mutable ucontext_t__content "model_trace:" : ucontext_t }
 
 function ucontext_t__ref___projection #"s-osinte.ads" 548 0 0# 
   (a : ucontext_t__ref) : ucontext_t =
  a.ucontext_t__content
 
 meta "model_projection" function ucontext_t__ref___projection
 
 meta "inline : no" function ucontext_t__ref___projection
 
 val ucontext_t__havoc #"s-osinte.ads" 548 0 0# 
   (x : ucontext_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "struct_sigaction" defined at s-osinte.ads:153, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__os_interface__struct_sigaction__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        "_gnatprove_standard".BV64
 use        System__address
 use        System__os_interface__int
 use        System__os_interface__sigset_t

 type __split_fields #"s-osinte.ads" 548 0 0# =
  { rec__system__os_interface__struct_sigaction__sa_handler "model_trace:.6645" : System__address.address; rec__system__os_interface__struct_sigaction__sa_mask "model_trace:.6657" : System__os_interface__sigset_t.sigset_t; rec__system__os_interface__struct_sigaction__sa_flags "model_trace:.6667" : System__os_interface__int.int__ }
 
 function __split_fields_sa_handler__projection #"s-osinte.ads" 47 0 0# "model_trace:.6645" 
   (a : __split_fields) : System__address.address =
  a.rec__system__os_interface__struct_sigaction__sa_handler
 
 meta "model_projection" function __split_fields_sa_handler__projection
 
 meta "inline : no" function __split_fields_sa_handler__projection
 
 function __split_fields_sa_mask__projection #"s-osinte.ads" 153 0 0# "model_trace:.6657" 
   (a : __split_fields) : System__os_interface__sigset_t.sigset_t =
  a.rec__system__os_interface__struct_sigaction__sa_mask
 
 meta "model_projection" function __split_fields_sa_mask__projection
 
 meta "inline : no" function __split_fields_sa_mask__projection
 
 function __split_fields_sa_flags__projection #"s-osinte.ads" 153 0 0# "model_trace:.6667" 
   (a : __split_fields) : System__os_interface__int.int__ =
  a.rec__system__os_interface__struct_sigaction__sa_flags
 
 meta "model_projection" function __split_fields_sa_flags__projection
 
 meta "inline : no" function __split_fields_sa_flags__projection
 
 type __split_fields__ref #"s-osinte.ads" 153 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_8__projection #"s-osinte.ads" 153 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_8__projection
 
 meta "inline : no" function __split_fields__ref_8__projection
 
 val __split_fields__havoc #"s-osinte.ads" 153 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-osinte.ads" 153 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_8__projection #"s-osinte.ads" 153 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_8__projection
 
 meta "inline : no" function __rep_8__projection
 
 function to_base #"s-osinte.ads" 153 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-osinte.ads" 153 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__os_interface__struct_sigaction__sa_handler__pred #"s-osinte.ads" 153 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__struct_sigaction__sa_handler_ #"s-osinte.ads" 153 0 0# 
   (a : __rep) : System__address.address
  requires { (system__os_interface__struct_sigaction__sa_handler__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__struct_sigaction__sa_handler) }
 
 predicate system__os_interface__struct_sigaction__sa_mask__pred #"s-osinte.ads" 153 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__struct_sigaction__sa_mask_ #"s-osinte.ads" 153 0 0# 
   (a : __rep) : System__os_interface__sigset_t.sigset_t
  requires { (system__os_interface__struct_sigaction__sa_mask__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__struct_sigaction__sa_mask) }
 
 predicate system__os_interface__struct_sigaction__sa_flags__pred #"s-osinte.ads" 153 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__struct_sigaction__sa_flags_ #"s-osinte.ads" 153 0 0# 
   (a : __rep) : System__os_interface__int.int__
  requires { (system__os_interface__struct_sigaction__sa_flags__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__struct_sigaction__sa_flags) }
 
 function bool_eq #"s-osinte.ads" 153 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ((System__address.to_rep a.__split_fields.rec__system__os_interface__struct_sigaction__sa_handler) = (System__address.to_rep b.__split_fields.rec__system__os_interface__struct_sigaction__sa_handler)) /\ ((System__os_interface__sigset_t.to_rep a.__split_fields.rec__system__os_interface__struct_sigaction__sa_mask) = (System__os_interface__sigset_t.to_rep b.__split_fields.rec__system__os_interface__struct_sigaction__sa_mask)) ) /\ ((System__os_interface__int.to_rep a.__split_fields.rec__system__os_interface__struct_sigaction__sa_flags) = (System__os_interface__int.to_rep b.__split_fields.rec__system__os_interface__struct_sigaction__sa_flags)) )) then (
   True) else (
   False))
 
 function user_eq #"s-osinte.ads" 153 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "struct_sigaction" defined at s-osinte.ads:153, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__struct_sigaction
 use export System__os_interface__struct_sigaction__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type struct_sigaction #"s-osinte.ads" 153 0 0# =
  __rep
 
 function value__size #"s-osinte.ads" 153 0 0# 
   : int
 
 function object__size #"s-osinte.ads" 153 0 0# 
   (a : struct_sigaction) : int
 
 function value__alignment #"s-osinte.ads" 153 0 0# 
   : int
 
 function object__alignment #"s-osinte.ads" 153 0 0# 
   (a : struct_sigaction) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : struct_sigaction.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : struct_sigaction.
   ((object__alignment a) >= 0))
 
 function system__os_interface__struct_sigaction__sa_handler__first__bit #"s-osinte.ads" 153 0 0# 
   : int
 
 function system__os_interface__struct_sigaction__sa_handler__last__bit #"s-osinte.ads" 153 0 0# 
   : int
 
 function system__os_interface__struct_sigaction__sa_handler__position #"s-osinte.ads" 153 0 0# 
   : int
 
 axiom system__os_interface__struct_sigaction__sa_handler__first__bit_axiom :
  ((system__os_interface__struct_sigaction__sa_handler__first__bit ) >= 0)
 
 axiom system__os_interface__struct_sigaction__sa_handler__last__bit_axiom :
  ((system__os_interface__struct_sigaction__sa_handler__last__bit ) > (system__os_interface__struct_sigaction__sa_handler__first__bit ))
 
 axiom system__os_interface__struct_sigaction__sa_handler__position_axiom :
  ((system__os_interface__struct_sigaction__sa_handler__position ) >= 0)
 
 function system__os_interface__struct_sigaction__sa_mask__first__bit #"s-osinte.ads" 154 0 0# 
   : int
 
 function system__os_interface__struct_sigaction__sa_mask__last__bit #"s-osinte.ads" 154 0 0# 
   : int
 
 function system__os_interface__struct_sigaction__sa_mask__position #"s-osinte.ads" 154 0 0# 
   : int
 
 axiom system__os_interface__struct_sigaction__sa_mask__first__bit_axiom :
  ((system__os_interface__struct_sigaction__sa_mask__first__bit ) >= 0)
 
 axiom system__os_interface__struct_sigaction__sa_mask__last__bit_axiom :
  ((system__os_interface__struct_sigaction__sa_mask__last__bit ) > (system__os_interface__struct_sigaction__sa_mask__first__bit ))
 
 axiom system__os_interface__struct_sigaction__sa_mask__position_axiom :
  ((system__os_interface__struct_sigaction__sa_mask__position ) >= 0)
 
 function system__os_interface__struct_sigaction__sa_flags__first__bit #"s-osinte.ads" 155 0 0# 
   : int
 
 function system__os_interface__struct_sigaction__sa_flags__last__bit #"s-osinte.ads" 155 0 0# 
   : int
 
 function system__os_interface__struct_sigaction__sa_flags__position #"s-osinte.ads" 155 0 0# 
   : int
 
 axiom system__os_interface__struct_sigaction__sa_flags__first__bit_axiom :
  ((system__os_interface__struct_sigaction__sa_flags__first__bit ) >= 0)
 
 axiom system__os_interface__struct_sigaction__sa_flags__last__bit_axiom :
  ((system__os_interface__struct_sigaction__sa_flags__last__bit ) > (system__os_interface__struct_sigaction__sa_flags__first__bit ))
 
 axiom system__os_interface__struct_sigaction__sa_flags__position_axiom :
  ((system__os_interface__struct_sigaction__sa_flags__position ) >= 0)
 
 function dummy #"s-osinte.ads" 156 0 0# 
   : struct_sigaction
 
 type struct_sigaction__ref #"s-osinte.ads" 153 0 0# =
  { mutable struct_sigaction__content "model_trace:" : struct_sigaction }
 
 function struct_sigaction__ref___projection #"s-osinte.ads" 153 0 0# 
   (a : struct_sigaction__ref) : struct_sigaction =
  a.struct_sigaction__content
 
 meta "model_projection" function struct_sigaction__ref___projection
 
 meta "inline : no" function struct_sigaction__ref___projection
 
 val struct_sigaction__havoc #"s-osinte.ads" 153 0 0# 
   (x : struct_sigaction__ref) : unit
  writes {x}

end

(* Module for defining the constant "sig" defined at s-osinte.ads:172, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigaction__sig
 use import "_gnatprove_standard".Main

 function sig #"s-osinte.ads" 172 0 0# "model" "model_trace:6765" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 75 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "sig" defined at s-osinte.ads:172, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__sigaction__sig___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "time_slice_supported" defined at s-osinte.ads:181, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__time_slice_supported
 use import "_gnatprove_standard".Main

 function time_slice_supported #"s-osinte.ads" 181 0 0# "model" "model_trace:6803" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 181 0 0# 
   : int

end

(* Module for axiomatizing type "Ttime_tB" defined at s-osinte.ads:520, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__Ttime_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ttime_tB #"s-osinte.ads" 520 0 0# 
 
 function first #"s-osinte.ads" 520 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"s-osinte.ads" 520 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"s-osinte.ads" 520 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ttime_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ttime_tB__ref #"s-osinte.ads" 520 0 0# =
  { mutable ttime_tB__content "model_trace:" : ttime_tB }
 
 function ttime_tB__ref___projection #"s-osinte.ads" 520 0 0# 
   (a : ttime_tB__ref) : ttime_tB =
  a.ttime_tB__content
 
 meta "model_projection" function ttime_tB__ref___projection
 
 meta "inline : no" function ttime_tB__ref___projection
 
 val ttime_tB__havoc #"s-osinte.ads" 520 0 0# 
   (x : ttime_tB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "time_t" defined at s-osinte.ads:520, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__time_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type time_t #"s-osinte.ads" 520 0 0# 
 
 function first #"s-osinte.ads" 520 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"s-osinte.ads" 520 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"s-osinte.ads" 520 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = time_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type time_t__ref #"s-osinte.ads" 520 0 0# =
  { mutable time_t__content "model_trace:" : time_t }
 
 function time_t__ref___projection #"s-osinte.ads" 520 0 0# 
   (a : time_t__ref) : time_t =
  a.time_t__content
 
 meta "model_projection" function time_t__ref___projection
 
 meta "inline : no" function time_t__ref___projection
 
 val time_t__havoc #"s-osinte.ads" 520 0 0# 
   (x : time_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "timespec" defined at s-osinte.ads:522, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__os_interface__timespec__rep
 use import "_gnatprove_standard".Main
 use        System__os_interface__long
 use        System__os_interface__time_t

 type __split_fields #"s-osinte.ads" 520 0 0# =
  { rec__system__os_interface__timespec__tv_sec "model_trace:.8806" : System__os_interface__time_t.time_t; rec__system__os_interface__timespec__tv_nsec "model_trace:.8816" : System__os_interface__long.long }
 
 function __split_fields_tv_sec__projection #"s-osinte.ads" 49 0 0# "model_trace:.8806" 
   (a : __split_fields) : System__os_interface__time_t.time_t =
  a.rec__system__os_interface__timespec__tv_sec
 
 meta "model_projection" function __split_fields_tv_sec__projection
 
 meta "inline : no" function __split_fields_tv_sec__projection
 
 function __split_fields_tv_nsec__projection #"s-osinte.ads" 522 0 0# "model_trace:.8816" 
   (a : __split_fields) : System__os_interface__long.long =
  a.rec__system__os_interface__timespec__tv_nsec
 
 meta "model_projection" function __split_fields_tv_nsec__projection
 
 meta "inline : no" function __split_fields_tv_nsec__projection
 
 type __split_fields__ref #"s-osinte.ads" 522 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_9__projection #"s-osinte.ads" 522 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_9__projection
 
 meta "inline : no" function __split_fields__ref_9__projection
 
 val __split_fields__havoc #"s-osinte.ads" 522 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-osinte.ads" 522 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_9__projection #"s-osinte.ads" 522 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_9__projection
 
 meta "inline : no" function __rep_9__projection
 
 function to_base #"s-osinte.ads" 522 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-osinte.ads" 522 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__os_interface__timespec__tv_sec__pred #"s-osinte.ads" 522 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__timespec__tv_sec_ #"s-osinte.ads" 522 0 0# 
   (a : __rep) : System__os_interface__time_t.time_t
  requires { (system__os_interface__timespec__tv_sec__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__timespec__tv_sec) }
 
 predicate system__os_interface__timespec__tv_nsec__pred #"s-osinte.ads" 522 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__timespec__tv_nsec_ #"s-osinte.ads" 522 0 0# 
   (a : __rep) : System__os_interface__long.long
  requires { (system__os_interface__timespec__tv_nsec__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__timespec__tv_nsec) }
 
 function bool_eq #"s-osinte.ads" 522 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ((System__os_interface__time_t.to_rep a.__split_fields.rec__system__os_interface__timespec__tv_sec) = (System__os_interface__time_t.to_rep b.__split_fields.rec__system__os_interface__timespec__tv_sec)) /\ ((System__os_interface__long.to_rep a.__split_fields.rec__system__os_interface__timespec__tv_nsec) = (System__os_interface__long.to_rep b.__split_fields.rec__system__os_interface__timespec__tv_nsec)) )) then (
   True) else (
   False))
 
 function user_eq #"s-osinte.ads" 522 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "timespec" defined at s-osinte.ads:522, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__timespec
 use export System__os_interface__timespec__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type timespec #"s-osinte.ads" 522 0 0# =
  __rep
 
 function value__size #"s-osinte.ads" 522 0 0# 
   : int
 
 function object__size #"s-osinte.ads" 522 0 0# 
   (a : timespec) : int
 
 function value__alignment #"s-osinte.ads" 522 0 0# 
   : int
 
 function object__alignment #"s-osinte.ads" 522 0 0# 
   (a : timespec) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : timespec.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : timespec.
   ((object__alignment a) >= 0))
 
 function system__os_interface__timespec__tv_sec__first__bit #"s-osinte.ads" 522 0 0# 
   : int
 
 function system__os_interface__timespec__tv_sec__last__bit #"s-osinte.ads" 522 0 0# 
   : int
 
 function system__os_interface__timespec__tv_sec__position #"s-osinte.ads" 522 0 0# 
   : int
 
 axiom system__os_interface__timespec__tv_sec__first__bit_axiom :
  ((system__os_interface__timespec__tv_sec__first__bit ) >= 0)
 
 axiom system__os_interface__timespec__tv_sec__last__bit_axiom :
  ((system__os_interface__timespec__tv_sec__last__bit ) > (system__os_interface__timespec__tv_sec__first__bit ))
 
 axiom system__os_interface__timespec__tv_sec__position_axiom :
  ((system__os_interface__timespec__tv_sec__position ) >= 0)
 
 function system__os_interface__timespec__tv_nsec__first__bit #"s-osinte.ads" 523 0 0# 
   : int
 
 function system__os_interface__timespec__tv_nsec__last__bit #"s-osinte.ads" 523 0 0# 
   : int
 
 function system__os_interface__timespec__tv_nsec__position #"s-osinte.ads" 523 0 0# 
   : int
 
 axiom system__os_interface__timespec__tv_nsec__first__bit_axiom :
  ((system__os_interface__timespec__tv_nsec__first__bit ) >= 0)
 
 axiom system__os_interface__timespec__tv_nsec__last__bit_axiom :
  ((system__os_interface__timespec__tv_nsec__last__bit ) > (system__os_interface__timespec__tv_nsec__first__bit ))
 
 axiom system__os_interface__timespec__tv_nsec__position_axiom :
  ((system__os_interface__timespec__tv_nsec__position ) >= 0)
 
 function dummy #"s-osinte.ads" 524 0 0# 
   : timespec
 
 type timespec__ref #"s-osinte.ads" 522 0 0# =
  { mutable timespec__content "model_trace:" : timespec }
 
 function timespec__ref___projection #"s-osinte.ads" 522 0 0# 
   (a : timespec__ref) : timespec =
  a.timespec__content
 
 meta "model_projection" function timespec__ref___projection
 
 meta "inline : no" function timespec__ref___projection
 
 val timespec__havoc #"s-osinte.ads" 522 0 0# 
   (x : timespec__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tclockid_tB" defined at s-osinte.ads:186, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__Tclockid_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tclockid_tB #"s-osinte.ads" 186 0 0# 
 
 function first #"s-osinte.ads" 186 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-osinte.ads" 186 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-osinte.ads" 186 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tclockid_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tclockid_tB__ref #"s-osinte.ads" 186 0 0# =
  { mutable tclockid_tB__content "model_trace:" : tclockid_tB }
 
 function tclockid_tB__ref___projection #"s-osinte.ads" 186 0 0# 
   (a : tclockid_tB__ref) : tclockid_tB =
  a.tclockid_tB__content
 
 meta "model_projection" function tclockid_tB__ref___projection
 
 meta "inline : no" function tclockid_tB__ref___projection
 
 val tclockid_tB__havoc #"s-osinte.ads" 186 0 0# 
   (x : tclockid_tB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "clockid_t" defined at s-osinte.ads:186, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__clockid_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type clockid_t #"s-osinte.ads" 186 0 0# 
 
 function first #"s-osinte.ads" 186 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-osinte.ads" 186 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-osinte.ads" 186 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = clockid_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type clockid_t__ref #"s-osinte.ads" 186 0 0# =
  { mutable clockid_t__content "model_trace:" : clockid_t }
 
 function clockid_t__ref___projection #"s-osinte.ads" 186 0 0# 
   (a : clockid_t__ref) : clockid_t =
  a.clockid_t__content
 
 meta "model_projection" function clockid_t__ref___projection
 
 meta "inline : no" function clockid_t__ref___projection
 
 val clockid_t__havoc #"s-osinte.ads" 186 0 0# 
   (x : clockid_t__ref) : unit
  writes {x}

end

(* Module for defining the constant "clock_id" defined at s-osinte.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__clock_gettime__clock_id
 use import "_gnatprove_standard".Main

 function clock_id #"s-osinte.ads" 189 0 0# "model" "model_trace:6838" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 186 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "clock_id" defined at s-osinte.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__clock_gettime__clock_id___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "clock_id" defined at s-osinte.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__clock_getres__clock_id
 use import "_gnatprove_standard".Main

 function clock_id #"s-osinte.ads" 193 0 0# "model" "model_trace:6867" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 186 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "clock_id" defined at s-osinte.ads:193, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__clock_getres__clock_id___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "ts" defined at s-osinte.ads:196, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__to_duration__ts
 use import "_gnatprove_standard".Main
 use        System__os_interface__timespec

 function ts #"s-osinte.ads" 196 0 0# "model_projected" "model_trace:6896" 
   : System__os_interface__timespec.timespec
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 522 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "ts" defined at s-osinte.ads:196, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__to_duration__ts___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_duration" defined at s-osinte.ads:196, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__to_duration
 use import "_gnatprove_standard".Main
 use        Standard__duration
 use        System__os_interface__timespec

 function to_duration #"s-osinte.ads" 196 0 0# 
   (ts : System__os_interface__timespec.timespec) : Standard__duration.duration

end

(* Module for defining the constant "d" defined at s-osinte.ads:199, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__to_timespec__d
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function d #"s-osinte.ads" 199 0 0# "model_projected" "model_trace:6919" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at s-osinte.ads:199, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__to_timespec__d___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_timespec" defined at s-osinte.ads:199, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__to_timespec
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        System__os_interface__timespec

 function to_timespec #"s-osinte.ads" 199 0 0# 
   (d : Main.__fixed) : System__os_interface__timespec.timespec

end

(* Module for defining the constant "prio" defined at s-osinte.ads:211, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__to_target_priority__prio
 use import "_gnatprove_standard".Main

 function prio #"s-osinte.ads" 211 0 0# "model" "model_trace:6969" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 124 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "prio" defined at s-osinte.ads:211, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__to_target_priority__prio___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_target_priority" defined at s-osinte.ads:210, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__to_target_priority
 use import "_gnatprove_standard".Main

 function to_target_priority #"s-osinte.ads" 210 0 0# 
   (prio : int) : int

end

(* Module for axiomatizing type "Tint32_tB" defined at s-osinte.ads:516, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__Tint32_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tint32_tB #"s-osinte.ads" 516 0 0# 
 
 function first #"s-osinte.ads" 516 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-osinte.ads" 516 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-osinte.ads" 516 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tint32_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tint32_tB__ref #"s-osinte.ads" 516 0 0# =
  { mutable tint32_tB__content "model_trace:" : tint32_tB }
 
 function tint32_tB__ref___projection #"s-osinte.ads" 516 0 0# 
   (a : tint32_tB__ref) : tint32_tB =
  a.tint32_tB__content
 
 meta "model_projection" function tint32_tB__ref___projection
 
 meta "inline : no" function tint32_tB__ref___projection
 
 val tint32_tB__havoc #"s-osinte.ads" 516 0 0# 
   (x : tint32_tB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tpid_tB" defined at s-osinte.ads:518, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__Tpid_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tpid_tB #"s-osinte.ads" 518 0 0# 
 
 function first #"s-osinte.ads" 518 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-osinte.ads" 518 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-osinte.ads" 518 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tpid_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tpid_tB__ref #"s-osinte.ads" 518 0 0# =
  { mutable tpid_tB__content "model_trace:" : tpid_tB }
 
 function tpid_tB__ref___projection #"s-osinte.ads" 518 0 0# 
   (a : tpid_tB__ref) : tpid_tB =
  a.tpid_tB__content
 
 meta "model_projection" function tpid_tB__ref___projection
 
 meta "inline : no" function tpid_tB__ref___projection
 
 val tpid_tB__havoc #"s-osinte.ads" 518 0 0# 
   (x : tpid_tB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "pid_t" defined at s-osinte.ads:518, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pid_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type pid_t #"s-osinte.ads" 518 0 0# 
 
 function first #"s-osinte.ads" 518 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-osinte.ads" 518 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-osinte.ads" 518 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = pid_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type pid_t__ref #"s-osinte.ads" 518 0 0# =
  { mutable pid_t__content "model_trace:" : pid_t }
 
 function pid_t__ref___projection #"s-osinte.ads" 518 0 0# 
   (a : pid_t__ref) : pid_t =
  a.pid_t__content
 
 meta "model_projection" function pid_t__ref___projection
 
 meta "inline : no" function pid_t__ref___projection
 
 val pid_t__havoc #"s-osinte.ads" 518 0 0# 
   (x : pid_t__ref) : unit
  writes {x}

end

(* Module for defining the constant "pid" defined at s-osinte.ads:220, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__kill__pid
 use import "_gnatprove_standard".Main

 function pid #"s-osinte.ads" 220 0 0# "model" "model_trace:7002" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 518 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "pid" defined at s-osinte.ads:220, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__kill__pid___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "sig" defined at s-osinte.ads:220, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__kill__sig
 use import "_gnatprove_standard".Main

 function sig #"s-osinte.ads" 220 0 0# "model" "model_trace:7011" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 75 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "sig" defined at s-osinte.ads:220, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__kill__sig___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "kill" defined at s-osinte.ads:220, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__kill
 use import "_gnatprove_standard".Main

 function kill #"s-osinte.ads" 220 0 0# 
   (pid : int) (sig : int) : int

end

(* Module for possibly declaring a logic function for "getpid" defined at s-osinte.ads:223, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__getpid
 use import "_gnatprove_standard".Main

 function getpid #"s-osinte.ads" 223 0 0# 
   (__void_param : unit) : int

end

(* Module for possibly declaring a logic function for "lwp_self" defined at s-osinte.ads:230, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__lwp_self
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function lwp_self #"s-osinte.ads" 230 0 0# 
   (__void_param : unit) : BV64.t

end

(* Module for axiomatizing type "Tpthread_tB" defined at s-osinte.ads:561, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__Tpthread_tB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type tpthread_tB #"s-osinte.ads" 561 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 561 0 0# 
   : BV64.t
 
 function first #"s-osinte.ads" 561 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-osinte.ads" 561 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-osinte.ads" 561 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 561 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-osinte.ads" 561 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 561 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = tpthread_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tpthread_tB__ref #"s-osinte.ads" 561 0 0# =
  { mutable tpthread_tB__content "model_trace:" : tpthread_tB }
 
 function tpthread_tB__ref___projection #"s-osinte.ads" 561 0 0# 
   (a : tpthread_tB__ref) : tpthread_tB =
  a.tpthread_tB__content
 
 meta "model_projection" function tpthread_tB__ref___projection
 
 meta "inline : no" function tpthread_tB__ref___projection
 
 val tpthread_tB__havoc #"s-osinte.ads" 561 0 0# 
   (x : tpthread_tB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "pthread_t" defined at s-osinte.ads:561, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type pthread_t #"s-osinte.ads" 561 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 561 0 0# 
   : BV64.t
 
 function first #"s-osinte.ads" 561 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-osinte.ads" 561 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-osinte.ads" 561 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 561 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-osinte.ads" 561 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 561 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = pthread_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type pthread_t__ref #"s-osinte.ads" 561 0 0# =
  { mutable pthread_t__content "model_trace:" : pthread_t }
 
 function pthread_t__ref___projection #"s-osinte.ads" 561 0 0# 
   (a : pthread_t__ref) : pthread_t =
  a.pthread_t__content
 
 meta "model_projection" function pthread_t__ref___projection
 
 meta "inline : no" function pthread_t__ref___projection
 
 val pthread_t__havoc #"s-osinte.ads" 561 0 0# 
   (x : pthread_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "thread_id" defined at s-osinte.ads:244, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__thread_id
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type thread_id #"s-osinte.ads" 244 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 244 0 0# 
   : BV64.t
 
 function first #"s-osinte.ads" 244 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-osinte.ads" 244 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-osinte.ads" 244 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 244 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-osinte.ads" 244 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 244 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = thread_id, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type thread_id__ref #"s-osinte.ads" 244 0 0# =
  { mutable thread_id__content "model_trace:" : thread_id }
 
 function thread_id__ref___projection #"s-osinte.ads" 244 0 0# 
   (a : thread_id__ref) : thread_id =
  a.thread_id__content
 
 meta "model_projection" function thread_id__ref___projection
 
 meta "inline : no" function thread_id__ref___projection
 
 val thread_id__havoc #"s-osinte.ads" 244 0 0# 
   (x : thread_id__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "padding" defined at s-osinte.ads:424, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Interfaces__c__char
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char

 function index_I1_one #"s-osinte.ads" 244 0 0# 
   : int =
  1
 
 type component_type #"s-osinte.ads" 244 0 0# =
  Interfaces__c__char.char
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"i-c.ads" 72 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Interfaces__c__char.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "padding" defined at s-osinte.ads:424, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__padding
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__TintB
 use        Interfaces__c__char
 use        System__os_interface__int
 use        Array__Int__Interfaces__c__char

 type component_type #"i-c.ads" 72 0 0# =
  Interfaces__c__char.char
 
 function index_1_id #"i-c.ads" 72 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Interfaces__c__char.map, 
 function array_bool_eq = Array__Int__Interfaces__c__char.bool_eq, 
 type index_base_type = Interfaces__c__TintB.tintB, 
 type index_rep_type = int, 
 function to_rep = Interfaces__c__TintB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Interfaces__c__TintB.in_range, 
 predicate index_dynamic_property = System__os_interface__int.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type padding #"s-osinte.ads" 424 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type padding__ref #"s-osinte.ads" 424 0 0# =
  { mutable padding__content "model_trace:" : padding }
 
 function padding__ref___projection #"s-osinte.ads" 424 0 0# 
   (a : padding__ref) : padding =
  a.padding__content
 
 meta "model_projection" function padding__ref___projection
 
 meta "inline : no" function padding__ref___projection
 
 val padding__havoc #"s-osinte.ads" 424 0 0# 
   (x : padding__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T113s" defined at s-osinte.ads:577, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_mutex_t__T113s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t113s #"s-osinte.ads" 577 0 0# 
 
 function first #"s-osinte.ads" 577 0 0# 
   : int =
  1
 
 function last #"s-osinte.ads" 577 0 0# 
   : int =
  56
 
 predicate in_range #"s-osinte.ads" 577 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t113s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t113s__ref #"s-osinte.ads" 577 0 0# =
  { mutable t113s__content "model_trace:" : t113s }
 
 function t113s__ref___projection #"s-osinte.ads" 577 0 0# 
   (a : t113s__ref) : t113s =
  a.t113s__content
 
 meta "model_projection" function t113s__ref___projection
 
 meta "inline : no" function t113s__ref___projection
 
 val t113s__havoc #"s-osinte.ads" 577 0 0# 
   (x : t113s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T114s" defined at s-osinte.ads:577, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_mutex_t__T114s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char
 use        Array__Int__Interfaces__c__char

 type component_type #"s-osinte.ads" 577 0 0# =
  Interfaces__c__char.char
 
 function first #"i-c.ads" 72 0 0# 
   : int =
  1
 
 function last #"i-c.ads" 72 0 0# 
   : int =
  56
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Interfaces__c__char.map, 
 function array_bool_eq = Array__Int__Interfaces__c__char.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "pthread_mutex_t" defined at s-osinte.ads:575, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__os_interface__pthread_mutex_t__rep
 use import "_gnatprove_standard".Main
 use        System__os_interface__long
 use        System__os_interface__pthread_mutex_t__T114s
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char

 type __split_fields #"i-c.ads" 72 0 0# =
  { rec__system__os_interface__pthread_mutex_t__sig "model_trace:.9178" : System__os_interface__long.long; rec__system__os_interface__pthread_mutex_t__opaque "model_trace:.9188" : Array__Int__Interfaces__c__char.map }
 
 function __split_fields_sig__projection #"s-osinte.ads" 577 0 0# "model_trace:.9178" 
   (a : __split_fields) : System__os_interface__long.long =
  a.rec__system__os_interface__pthread_mutex_t__sig
 
 meta "model_projection" function __split_fields_sig__projection
 
 meta "inline : no" function __split_fields_sig__projection
 
 function __split_fields_opaque__projection #"s-osinte.ads" 575 0 0# "model_trace:.9188" 
   (a : __split_fields) : Array__Int__Interfaces__c__char.map =
  a.rec__system__os_interface__pthread_mutex_t__opaque
 
 meta "model_projection" function __split_fields_opaque__projection
 
 meta "inline : no" function __split_fields_opaque__projection
 
 type __split_fields__ref #"s-osinte.ads" 575 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_10__projection #"s-osinte.ads" 575 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_10__projection
 
 meta "inline : no" function __split_fields__ref_10__projection
 
 val __split_fields__havoc #"s-osinte.ads" 575 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-osinte.ads" 575 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_10__projection #"s-osinte.ads" 575 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_10__projection
 
 meta "inline : no" function __rep_10__projection
 
 function to_base #"s-osinte.ads" 575 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-osinte.ads" 575 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__os_interface__pthread_mutex_t__sig__pred #"s-osinte.ads" 575 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__pthread_mutex_t__sig_ #"s-osinte.ads" 575 0 0# 
   (a : __rep) : System__os_interface__long.long
  requires { (system__os_interface__pthread_mutex_t__sig__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__pthread_mutex_t__sig) }
 
 predicate system__os_interface__pthread_mutex_t__opaque__pred #"s-osinte.ads" 575 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__pthread_mutex_t__opaque_ #"s-osinte.ads" 575 0 0# 
   (a : __rep) : Array__Int__Interfaces__c__char.map
  requires { (system__os_interface__pthread_mutex_t__opaque__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__pthread_mutex_t__opaque) }
 
 function bool_eq #"s-osinte.ads" 575 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ((System__os_interface__long.to_rep a.__split_fields.rec__system__os_interface__pthread_mutex_t__sig) = (System__os_interface__long.to_rep b.__split_fields.rec__system__os_interface__pthread_mutex_t__sig)) /\ ((System__os_interface__pthread_mutex_t__T114s.bool_eq a.__split_fields.rec__system__os_interface__pthread_mutex_t__opaque b.__split_fields.rec__system__os_interface__pthread_mutex_t__opaque) = True) )) then (
   True) else (
   False))
 
 function user_eq #"s-osinte.ads" 575 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "pthread_mutex_t" defined at s-osinte.ads:575, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_mutex_t
 use export System__os_interface__pthread_mutex_t__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type pthread_mutex_t #"s-osinte.ads" 575 0 0# =
  __rep
 
 function value__size #"s-osinte.ads" 575 0 0# 
   : int
 
 function object__size #"s-osinte.ads" 575 0 0# 
   (a : pthread_mutex_t) : int
 
 function value__alignment #"s-osinte.ads" 575 0 0# 
   : int
 
 function object__alignment #"s-osinte.ads" 575 0 0# 
   (a : pthread_mutex_t) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : pthread_mutex_t.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : pthread_mutex_t.
   ((object__alignment a) >= 0))
 
 function system__os_interface__pthread_mutex_t__sig__first__bit #"s-osinte.ads" 575 0 0# 
   : int
 
 function system__os_interface__pthread_mutex_t__sig__last__bit #"s-osinte.ads" 575 0 0# 
   : int
 
 function system__os_interface__pthread_mutex_t__sig__position #"s-osinte.ads" 575 0 0# 
   : int
 
 axiom system__os_interface__pthread_mutex_t__sig__first__bit_axiom :
  ((system__os_interface__pthread_mutex_t__sig__first__bit ) >= 0)
 
 axiom system__os_interface__pthread_mutex_t__sig__last__bit_axiom :
  ((system__os_interface__pthread_mutex_t__sig__last__bit ) > (system__os_interface__pthread_mutex_t__sig__first__bit ))
 
 axiom system__os_interface__pthread_mutex_t__sig__position_axiom :
  ((system__os_interface__pthread_mutex_t__sig__position ) >= 0)
 
 function system__os_interface__pthread_mutex_t__opaque__first__bit #"s-osinte.ads" 576 0 0# 
   : int
 
 function system__os_interface__pthread_mutex_t__opaque__last__bit #"s-osinte.ads" 576 0 0# 
   : int
 
 function system__os_interface__pthread_mutex_t__opaque__position #"s-osinte.ads" 576 0 0# 
   : int
 
 axiom system__os_interface__pthread_mutex_t__opaque__first__bit_axiom :
  ((system__os_interface__pthread_mutex_t__opaque__first__bit ) >= 0)
 
 axiom system__os_interface__pthread_mutex_t__opaque__last__bit_axiom :
  ((system__os_interface__pthread_mutex_t__opaque__last__bit ) > (system__os_interface__pthread_mutex_t__opaque__first__bit ))
 
 axiom system__os_interface__pthread_mutex_t__opaque__position_axiom :
  ((system__os_interface__pthread_mutex_t__opaque__position ) >= 0)
 
 function dummy #"s-osinte.ads" 577 0 0# 
   : pthread_mutex_t
 
 type pthread_mutex_t__ref #"s-osinte.ads" 575 0 0# =
  { mutable pthread_mutex_t__content "model_trace:" : pthread_mutex_t }
 
 function pthread_mutex_t__ref___projection #"s-osinte.ads" 575 0 0# 
   (a : pthread_mutex_t__ref) : pthread_mutex_t =
  a.pthread_mutex_t__content
 
 meta "model_projection" function pthread_mutex_t__ref___projection
 
 meta "inline : no" function pthread_mutex_t__ref___projection
 
 val pthread_mutex_t__havoc #"s-osinte.ads" 575 0 0# 
   (x : pthread_mutex_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T117s" defined at s-osinte.ads:589, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_cond_t__T117s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t117s #"s-osinte.ads" 589 0 0# 
 
 function first #"s-osinte.ads" 589 0 0# 
   : int =
  1
 
 function last #"s-osinte.ads" 589 0 0# 
   : int =
  40
 
 predicate in_range #"s-osinte.ads" 589 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t117s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t117s__ref #"s-osinte.ads" 589 0 0# =
  { mutable t117s__content "model_trace:" : t117s }
 
 function t117s__ref___projection #"s-osinte.ads" 589 0 0# 
   (a : t117s__ref) : t117s =
  a.t117s__content
 
 meta "model_projection" function t117s__ref___projection
 
 meta "inline : no" function t117s__ref___projection
 
 val t117s__havoc #"s-osinte.ads" 589 0 0# 
   (x : t117s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T118s" defined at s-osinte.ads:589, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_cond_t__T118s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char
 use        Array__Int__Interfaces__c__char

 type component_type #"s-osinte.ads" 589 0 0# =
  Interfaces__c__char.char
 
 function first #"i-c.ads" 72 0 0# 
   : int =
  1
 
 function last #"i-c.ads" 72 0 0# 
   : int =
  40
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Interfaces__c__char.map, 
 function array_bool_eq = Array__Int__Interfaces__c__char.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "pthread_cond_t" defined at s-osinte.ads:587, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__os_interface__pthread_cond_t__rep
 use import "_gnatprove_standard".Main
 use        System__os_interface__long
 use        System__os_interface__pthread_cond_t__T118s
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char

 type __split_fields #"i-c.ads" 72 0 0# =
  { rec__system__os_interface__pthread_cond_t__sig "model_trace:.9272" : System__os_interface__long.long; rec__system__os_interface__pthread_cond_t__opaque "model_trace:.9282" : Array__Int__Interfaces__c__char.map }
 
 function __split_fields_sig2__projection #"s-osinte.ads" 589 0 0# "model_trace:.9272" 
   (a : __split_fields) : System__os_interface__long.long =
  a.rec__system__os_interface__pthread_cond_t__sig
 
 meta "model_projection" function __split_fields_sig2__projection
 
 meta "inline : no" function __split_fields_sig2__projection
 
 function __split_fields_opaque2__projection #"s-osinte.ads" 587 0 0# "model_trace:.9282" 
   (a : __split_fields) : Array__Int__Interfaces__c__char.map =
  a.rec__system__os_interface__pthread_cond_t__opaque
 
 meta "model_projection" function __split_fields_opaque2__projection
 
 meta "inline : no" function __split_fields_opaque2__projection
 
 type __split_fields__ref #"s-osinte.ads" 587 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_11__projection #"s-osinte.ads" 587 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_11__projection
 
 meta "inline : no" function __split_fields__ref_11__projection
 
 val __split_fields__havoc #"s-osinte.ads" 587 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-osinte.ads" 587 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_11__projection #"s-osinte.ads" 587 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_11__projection
 
 meta "inline : no" function __rep_11__projection
 
 function to_base #"s-osinte.ads" 587 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-osinte.ads" 587 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__os_interface__pthread_cond_t__sig__pred #"s-osinte.ads" 587 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__pthread_cond_t__sig_ #"s-osinte.ads" 587 0 0# 
   (a : __rep) : System__os_interface__long.long
  requires { (system__os_interface__pthread_cond_t__sig__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__pthread_cond_t__sig) }
 
 predicate system__os_interface__pthread_cond_t__opaque__pred #"s-osinte.ads" 587 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__pthread_cond_t__opaque_ #"s-osinte.ads" 587 0 0# 
   (a : __rep) : Array__Int__Interfaces__c__char.map
  requires { (system__os_interface__pthread_cond_t__opaque__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__pthread_cond_t__opaque) }
 
 function bool_eq #"s-osinte.ads" 587 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ((System__os_interface__long.to_rep a.__split_fields.rec__system__os_interface__pthread_cond_t__sig) = (System__os_interface__long.to_rep b.__split_fields.rec__system__os_interface__pthread_cond_t__sig)) /\ ((System__os_interface__pthread_cond_t__T118s.bool_eq a.__split_fields.rec__system__os_interface__pthread_cond_t__opaque b.__split_fields.rec__system__os_interface__pthread_cond_t__opaque) = True) )) then (
   True) else (
   False))
 
 function user_eq #"s-osinte.ads" 587 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "pthread_cond_t" defined at s-osinte.ads:587, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_cond_t
 use export System__os_interface__pthread_cond_t__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type pthread_cond_t #"s-osinte.ads" 587 0 0# =
  __rep
 
 function value__size #"s-osinte.ads" 587 0 0# 
   : int
 
 function object__size #"s-osinte.ads" 587 0 0# 
   (a : pthread_cond_t) : int
 
 function value__alignment #"s-osinte.ads" 587 0 0# 
   : int
 
 function object__alignment #"s-osinte.ads" 587 0 0# 
   (a : pthread_cond_t) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : pthread_cond_t.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : pthread_cond_t.
   ((object__alignment a) >= 0))
 
 function system__os_interface__pthread_cond_t__sig__first__bit #"s-osinte.ads" 587 0 0# 
   : int
 
 function system__os_interface__pthread_cond_t__sig__last__bit #"s-osinte.ads" 587 0 0# 
   : int
 
 function system__os_interface__pthread_cond_t__sig__position #"s-osinte.ads" 587 0 0# 
   : int
 
 axiom system__os_interface__pthread_cond_t__sig__first__bit_axiom :
  ((system__os_interface__pthread_cond_t__sig__first__bit ) >= 0)
 
 axiom system__os_interface__pthread_cond_t__sig__last__bit_axiom :
  ((system__os_interface__pthread_cond_t__sig__last__bit ) > (system__os_interface__pthread_cond_t__sig__first__bit ))
 
 axiom system__os_interface__pthread_cond_t__sig__position_axiom :
  ((system__os_interface__pthread_cond_t__sig__position ) >= 0)
 
 function system__os_interface__pthread_cond_t__opaque__first__bit #"s-osinte.ads" 588 0 0# 
   : int
 
 function system__os_interface__pthread_cond_t__opaque__last__bit #"s-osinte.ads" 588 0 0# 
   : int
 
 function system__os_interface__pthread_cond_t__opaque__position #"s-osinte.ads" 588 0 0# 
   : int
 
 axiom system__os_interface__pthread_cond_t__opaque__first__bit_axiom :
  ((system__os_interface__pthread_cond_t__opaque__first__bit ) >= 0)
 
 axiom system__os_interface__pthread_cond_t__opaque__last__bit_axiom :
  ((system__os_interface__pthread_cond_t__opaque__last__bit ) > (system__os_interface__pthread_cond_t__opaque__first__bit ))
 
 axiom system__os_interface__pthread_cond_t__opaque__position_axiom :
  ((system__os_interface__pthread_cond_t__opaque__position ) >= 0)
 
 function dummy #"s-osinte.ads" 589 0 0# 
   : pthread_cond_t
 
 type pthread_cond_t__ref #"s-osinte.ads" 587 0 0# =
  { mutable pthread_cond_t__content "model_trace:" : pthread_cond_t }
 
 function pthread_cond_t__ref___projection #"s-osinte.ads" 587 0 0# 
   (a : pthread_cond_t__ref) : pthread_cond_t =
  a.pthread_cond_t__content
 
 meta "model_projection" function pthread_cond_t__ref___projection
 
 meta "inline : no" function pthread_cond_t__ref___projection
 
 val pthread_cond_t__havoc #"s-osinte.ads" 587 0 0# 
   (x : pthread_cond_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T109s" defined at s-osinte.ads:565, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_attr_t__T109s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t109s #"s-osinte.ads" 565 0 0# 
 
 function first #"s-osinte.ads" 565 0 0# 
   : int =
  1
 
 function last #"s-osinte.ads" 565 0 0# 
   : int =
  56
 
 predicate in_range #"s-osinte.ads" 565 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t109s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t109s__ref #"s-osinte.ads" 565 0 0# =
  { mutable t109s__content "model_trace:" : t109s }
 
 function t109s__ref___projection #"s-osinte.ads" 565 0 0# 
   (a : t109s__ref) : t109s =
  a.t109s__content
 
 meta "model_projection" function t109s__ref___projection
 
 meta "inline : no" function t109s__ref___projection
 
 val t109s__havoc #"s-osinte.ads" 565 0 0# 
   (x : t109s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T110s" defined at s-osinte.ads:565, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_attr_t__T110s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char
 use        Array__Int__Interfaces__c__char

 type component_type #"s-osinte.ads" 565 0 0# =
  Interfaces__c__char.char
 
 function first #"i-c.ads" 72 0 0# 
   : int =
  1
 
 function last #"i-c.ads" 72 0 0# 
   : int =
  56
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Interfaces__c__char.map, 
 function array_bool_eq = Array__Int__Interfaces__c__char.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "pthread_attr_t" defined at s-osinte.ads:563, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__os_interface__pthread_attr_t__rep
 use import "_gnatprove_standard".Main
 use        System__os_interface__long
 use        System__os_interface__pthread_attr_t__T110s
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char

 type __split_fields #"i-c.ads" 72 0 0# =
  { rec__system__os_interface__pthread_attr_t__sig "model_trace:.9084" : System__os_interface__long.long; rec__system__os_interface__pthread_attr_t__opaque "model_trace:.9094" : Array__Int__Interfaces__c__char.map }
 
 function __split_fields_sig3__projection #"s-osinte.ads" 565 0 0# "model_trace:.9084" 
   (a : __split_fields) : System__os_interface__long.long =
  a.rec__system__os_interface__pthread_attr_t__sig
 
 meta "model_projection" function __split_fields_sig3__projection
 
 meta "inline : no" function __split_fields_sig3__projection
 
 function __split_fields_opaque3__projection #"s-osinte.ads" 563 0 0# "model_trace:.9094" 
   (a : __split_fields) : Array__Int__Interfaces__c__char.map =
  a.rec__system__os_interface__pthread_attr_t__opaque
 
 meta "model_projection" function __split_fields_opaque3__projection
 
 meta "inline : no" function __split_fields_opaque3__projection
 
 type __split_fields__ref #"s-osinte.ads" 563 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_12__projection #"s-osinte.ads" 563 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_12__projection
 
 meta "inline : no" function __split_fields__ref_12__projection
 
 val __split_fields__havoc #"s-osinte.ads" 563 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-osinte.ads" 563 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_12__projection #"s-osinte.ads" 563 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_12__projection
 
 meta "inline : no" function __rep_12__projection
 
 function to_base #"s-osinte.ads" 563 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-osinte.ads" 563 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__os_interface__pthread_attr_t__sig__pred #"s-osinte.ads" 563 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__pthread_attr_t__sig_ #"s-osinte.ads" 563 0 0# 
   (a : __rep) : System__os_interface__long.long
  requires { (system__os_interface__pthread_attr_t__sig__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__pthread_attr_t__sig) }
 
 predicate system__os_interface__pthread_attr_t__opaque__pred #"s-osinte.ads" 563 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__pthread_attr_t__opaque_ #"s-osinte.ads" 563 0 0# 
   (a : __rep) : Array__Int__Interfaces__c__char.map
  requires { (system__os_interface__pthread_attr_t__opaque__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__pthread_attr_t__opaque) }
 
 function bool_eq #"s-osinte.ads" 563 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ((System__os_interface__long.to_rep a.__split_fields.rec__system__os_interface__pthread_attr_t__sig) = (System__os_interface__long.to_rep b.__split_fields.rec__system__os_interface__pthread_attr_t__sig)) /\ ((System__os_interface__pthread_attr_t__T110s.bool_eq a.__split_fields.rec__system__os_interface__pthread_attr_t__opaque b.__split_fields.rec__system__os_interface__pthread_attr_t__opaque) = True) )) then (
   True) else (
   False))
 
 function user_eq #"s-osinte.ads" 563 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "pthread_attr_t" defined at s-osinte.ads:563, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_attr_t
 use export System__os_interface__pthread_attr_t__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type pthread_attr_t #"s-osinte.ads" 563 0 0# =
  __rep
 
 function value__size #"s-osinte.ads" 563 0 0# 
   : int
 
 function object__size #"s-osinte.ads" 563 0 0# 
   (a : pthread_attr_t) : int
 
 function value__alignment #"s-osinte.ads" 563 0 0# 
   : int
 
 function object__alignment #"s-osinte.ads" 563 0 0# 
   (a : pthread_attr_t) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : pthread_attr_t.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : pthread_attr_t.
   ((object__alignment a) >= 0))
 
 function system__os_interface__pthread_attr_t__sig__first__bit #"s-osinte.ads" 563 0 0# 
   : int
 
 function system__os_interface__pthread_attr_t__sig__last__bit #"s-osinte.ads" 563 0 0# 
   : int
 
 function system__os_interface__pthread_attr_t__sig__position #"s-osinte.ads" 563 0 0# 
   : int
 
 axiom system__os_interface__pthread_attr_t__sig__first__bit_axiom :
  ((system__os_interface__pthread_attr_t__sig__first__bit ) >= 0)
 
 axiom system__os_interface__pthread_attr_t__sig__last__bit_axiom :
  ((system__os_interface__pthread_attr_t__sig__last__bit ) > (system__os_interface__pthread_attr_t__sig__first__bit ))
 
 axiom system__os_interface__pthread_attr_t__sig__position_axiom :
  ((system__os_interface__pthread_attr_t__sig__position ) >= 0)
 
 function system__os_interface__pthread_attr_t__opaque__first__bit #"s-osinte.ads" 564 0 0# 
   : int
 
 function system__os_interface__pthread_attr_t__opaque__last__bit #"s-osinte.ads" 564 0 0# 
   : int
 
 function system__os_interface__pthread_attr_t__opaque__position #"s-osinte.ads" 564 0 0# 
   : int
 
 axiom system__os_interface__pthread_attr_t__opaque__first__bit_axiom :
  ((system__os_interface__pthread_attr_t__opaque__first__bit ) >= 0)
 
 axiom system__os_interface__pthread_attr_t__opaque__last__bit_axiom :
  ((system__os_interface__pthread_attr_t__opaque__last__bit ) > (system__os_interface__pthread_attr_t__opaque__first__bit ))
 
 axiom system__os_interface__pthread_attr_t__opaque__position_axiom :
  ((system__os_interface__pthread_attr_t__opaque__position ) >= 0)
 
 function dummy #"s-osinte.ads" 565 0 0# 
   : pthread_attr_t
 
 type pthread_attr_t__ref #"s-osinte.ads" 563 0 0# =
  { mutable pthread_attr_t__content "model_trace:" : pthread_attr_t }
 
 function pthread_attr_t__ref___projection #"s-osinte.ads" 563 0 0# 
   (a : pthread_attr_t__ref) : pthread_attr_t =
  a.pthread_attr_t__content
 
 meta "model_projection" function pthread_attr_t__ref___projection
 
 meta "inline : no" function pthread_attr_t__ref___projection
 
 val pthread_attr_t__havoc #"s-osinte.ads" 563 0 0# 
   (x : pthread_attr_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T111s" defined at s-osinte.ads:571, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_mutexattr_t__T111s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t111s #"s-osinte.ads" 571 0 0# 
 
 function first #"s-osinte.ads" 571 0 0# 
   : int =
  1
 
 function last #"s-osinte.ads" 571 0 0# 
   : int =
  8
 
 predicate in_range #"s-osinte.ads" 571 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t111s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t111s__ref #"s-osinte.ads" 571 0 0# =
  { mutable t111s__content "model_trace:" : t111s }
 
 function t111s__ref___projection #"s-osinte.ads" 571 0 0# 
   (a : t111s__ref) : t111s =
  a.t111s__content
 
 meta "model_projection" function t111s__ref___projection
 
 meta "inline : no" function t111s__ref___projection
 
 val t111s__havoc #"s-osinte.ads" 571 0 0# 
   (x : t111s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T112s" defined at s-osinte.ads:571, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_mutexattr_t__T112s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char
 use        Array__Int__Interfaces__c__char

 type component_type #"s-osinte.ads" 571 0 0# =
  Interfaces__c__char.char
 
 function first #"i-c.ads" 72 0 0# 
   : int =
  1
 
 function last #"i-c.ads" 72 0 0# 
   : int =
  8
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Interfaces__c__char.map, 
 function array_bool_eq = Array__Int__Interfaces__c__char.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "pthread_mutexattr_t" defined at s-osinte.ads:569, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__os_interface__pthread_mutexattr_t__rep
 use import "_gnatprove_standard".Main
 use        System__os_interface__long
 use        System__os_interface__pthread_mutexattr_t__T112s
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char

 type __split_fields #"i-c.ads" 72 0 0# =
  { rec__system__os_interface__pthread_mutexattr_t__sig "model_trace:.9131" : System__os_interface__long.long; rec__system__os_interface__pthread_mutexattr_t__opaque "model_trace:.9141" : Array__Int__Interfaces__c__char.map }
 
 function __split_fields_sig4__projection #"s-osinte.ads" 571 0 0# "model_trace:.9131" 
   (a : __split_fields) : System__os_interface__long.long =
  a.rec__system__os_interface__pthread_mutexattr_t__sig
 
 meta "model_projection" function __split_fields_sig4__projection
 
 meta "inline : no" function __split_fields_sig4__projection
 
 function __split_fields_opaque4__projection #"s-osinte.ads" 569 0 0# "model_trace:.9141" 
   (a : __split_fields) : Array__Int__Interfaces__c__char.map =
  a.rec__system__os_interface__pthread_mutexattr_t__opaque
 
 meta "model_projection" function __split_fields_opaque4__projection
 
 meta "inline : no" function __split_fields_opaque4__projection
 
 type __split_fields__ref #"s-osinte.ads" 569 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_13__projection #"s-osinte.ads" 569 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_13__projection
 
 meta "inline : no" function __split_fields__ref_13__projection
 
 val __split_fields__havoc #"s-osinte.ads" 569 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-osinte.ads" 569 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_13__projection #"s-osinte.ads" 569 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_13__projection
 
 meta "inline : no" function __rep_13__projection
 
 function to_base #"s-osinte.ads" 569 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-osinte.ads" 569 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__os_interface__pthread_mutexattr_t__sig__pred #"s-osinte.ads" 569 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__pthread_mutexattr_t__sig_ #"s-osinte.ads" 569 0 0# 
   (a : __rep) : System__os_interface__long.long
  requires { (system__os_interface__pthread_mutexattr_t__sig__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__pthread_mutexattr_t__sig) }
 
 predicate system__os_interface__pthread_mutexattr_t__opaque__pred #"s-osinte.ads" 569 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__pthread_mutexattr_t__opaque_ #"s-osinte.ads" 569 0 0# 
   (a : __rep) : Array__Int__Interfaces__c__char.map
  requires { (system__os_interface__pthread_mutexattr_t__opaque__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__pthread_mutexattr_t__opaque) }
 
 function bool_eq #"s-osinte.ads" 569 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ((System__os_interface__long.to_rep a.__split_fields.rec__system__os_interface__pthread_mutexattr_t__sig) = (System__os_interface__long.to_rep b.__split_fields.rec__system__os_interface__pthread_mutexattr_t__sig)) /\ ((System__os_interface__pthread_mutexattr_t__T112s.bool_eq a.__split_fields.rec__system__os_interface__pthread_mutexattr_t__opaque b.__split_fields.rec__system__os_interface__pthread_mutexattr_t__opaque) = True) )) then (
   True) else (
   False))
 
 function user_eq #"s-osinte.ads" 569 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "pthread_mutexattr_t" defined at s-osinte.ads:569, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_mutexattr_t
 use export System__os_interface__pthread_mutexattr_t__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type pthread_mutexattr_t #"s-osinte.ads" 569 0 0# =
  __rep
 
 function value__size #"s-osinte.ads" 569 0 0# 
   : int
 
 function object__size #"s-osinte.ads" 569 0 0# 
   (a : pthread_mutexattr_t) : int
 
 function value__alignment #"s-osinte.ads" 569 0 0# 
   : int
 
 function object__alignment #"s-osinte.ads" 569 0 0# 
   (a : pthread_mutexattr_t) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : pthread_mutexattr_t.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : pthread_mutexattr_t.
   ((object__alignment a) >= 0))
 
 function system__os_interface__pthread_mutexattr_t__sig__first__bit #"s-osinte.ads" 569 0 0# 
   : int
 
 function system__os_interface__pthread_mutexattr_t__sig__last__bit #"s-osinte.ads" 569 0 0# 
   : int
 
 function system__os_interface__pthread_mutexattr_t__sig__position #"s-osinte.ads" 569 0 0# 
   : int
 
 axiom system__os_interface__pthread_mutexattr_t__sig__first__bit_axiom :
  ((system__os_interface__pthread_mutexattr_t__sig__first__bit ) >= 0)
 
 axiom system__os_interface__pthread_mutexattr_t__sig__last__bit_axiom :
  ((system__os_interface__pthread_mutexattr_t__sig__last__bit ) > (system__os_interface__pthread_mutexattr_t__sig__first__bit ))
 
 axiom system__os_interface__pthread_mutexattr_t__sig__position_axiom :
  ((system__os_interface__pthread_mutexattr_t__sig__position ) >= 0)
 
 function system__os_interface__pthread_mutexattr_t__opaque__first__bit #"s-osinte.ads" 570 0 0# 
   : int
 
 function system__os_interface__pthread_mutexattr_t__opaque__last__bit #"s-osinte.ads" 570 0 0# 
   : int
 
 function system__os_interface__pthread_mutexattr_t__opaque__position #"s-osinte.ads" 570 0 0# 
   : int
 
 axiom system__os_interface__pthread_mutexattr_t__opaque__first__bit_axiom :
  ((system__os_interface__pthread_mutexattr_t__opaque__first__bit ) >= 0)
 
 axiom system__os_interface__pthread_mutexattr_t__opaque__last__bit_axiom :
  ((system__os_interface__pthread_mutexattr_t__opaque__last__bit ) > (system__os_interface__pthread_mutexattr_t__opaque__first__bit ))
 
 axiom system__os_interface__pthread_mutexattr_t__opaque__position_axiom :
  ((system__os_interface__pthread_mutexattr_t__opaque__position ) >= 0)
 
 function dummy #"s-osinte.ads" 571 0 0# 
   : pthread_mutexattr_t
 
 type pthread_mutexattr_t__ref #"s-osinte.ads" 569 0 0# =
  { mutable pthread_mutexattr_t__content "model_trace:" : pthread_mutexattr_t }
 
 function pthread_mutexattr_t__ref___projection #"s-osinte.ads" 569 0 0# 
   (a : pthread_mutexattr_t__ref) : pthread_mutexattr_t =
  a.pthread_mutexattr_t__content
 
 meta "model_projection" function pthread_mutexattr_t__ref___projection
 
 meta "inline : no" function pthread_mutexattr_t__ref___projection
 
 val pthread_mutexattr_t__havoc #"s-osinte.ads" 569 0 0# 
   (x : pthread_mutexattr_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T115s" defined at s-osinte.ads:583, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_condattr_t__T115s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t115s #"s-osinte.ads" 583 0 0# 
 
 function first #"s-osinte.ads" 583 0 0# 
   : int =
  1
 
 function last #"s-osinte.ads" 583 0 0# 
   : int =
  8
 
 predicate in_range #"s-osinte.ads" 583 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t115s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t115s__ref #"s-osinte.ads" 583 0 0# =
  { mutable t115s__content "model_trace:" : t115s }
 
 function t115s__ref___projection #"s-osinte.ads" 583 0 0# 
   (a : t115s__ref) : t115s =
  a.t115s__content
 
 meta "model_projection" function t115s__ref___projection
 
 meta "inline : no" function t115s__ref___projection
 
 val t115s__havoc #"s-osinte.ads" 583 0 0# 
   (x : t115s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T116s" defined at s-osinte.ads:583, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_condattr_t__T116s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char
 use        Array__Int__Interfaces__c__char

 type component_type #"s-osinte.ads" 583 0 0# =
  Interfaces__c__char.char
 
 function first #"i-c.ads" 72 0 0# 
   : int =
  1
 
 function last #"i-c.ads" 72 0 0# 
   : int =
  8
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Interfaces__c__char.map, 
 function array_bool_eq = Array__Int__Interfaces__c__char.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "pthread_condattr_t" defined at s-osinte.ads:581, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__os_interface__pthread_condattr_t__rep
 use import "_gnatprove_standard".Main
 use        System__os_interface__long
 use        System__os_interface__pthread_condattr_t__T116s
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char

 type __split_fields #"i-c.ads" 72 0 0# =
  { rec__system__os_interface__pthread_condattr_t__sig "model_trace:.9225" : System__os_interface__long.long; rec__system__os_interface__pthread_condattr_t__opaque "model_trace:.9235" : Array__Int__Interfaces__c__char.map }
 
 function __split_fields_sig5__projection #"s-osinte.ads" 583 0 0# "model_trace:.9225" 
   (a : __split_fields) : System__os_interface__long.long =
  a.rec__system__os_interface__pthread_condattr_t__sig
 
 meta "model_projection" function __split_fields_sig5__projection
 
 meta "inline : no" function __split_fields_sig5__projection
 
 function __split_fields_opaque5__projection #"s-osinte.ads" 581 0 0# "model_trace:.9235" 
   (a : __split_fields) : Array__Int__Interfaces__c__char.map =
  a.rec__system__os_interface__pthread_condattr_t__opaque
 
 meta "model_projection" function __split_fields_opaque5__projection
 
 meta "inline : no" function __split_fields_opaque5__projection
 
 type __split_fields__ref #"s-osinte.ads" 581 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_14__projection #"s-osinte.ads" 581 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_14__projection
 
 meta "inline : no" function __split_fields__ref_14__projection
 
 val __split_fields__havoc #"s-osinte.ads" 581 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-osinte.ads" 581 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_14__projection #"s-osinte.ads" 581 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_14__projection
 
 meta "inline : no" function __rep_14__projection
 
 function to_base #"s-osinte.ads" 581 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-osinte.ads" 581 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__os_interface__pthread_condattr_t__sig__pred #"s-osinte.ads" 581 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__pthread_condattr_t__sig_ #"s-osinte.ads" 581 0 0# 
   (a : __rep) : System__os_interface__long.long
  requires { (system__os_interface__pthread_condattr_t__sig__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__pthread_condattr_t__sig) }
 
 predicate system__os_interface__pthread_condattr_t__opaque__pred #"s-osinte.ads" 581 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__pthread_condattr_t__opaque_ #"s-osinte.ads" 581 0 0# 
   (a : __rep) : Array__Int__Interfaces__c__char.map
  requires { (system__os_interface__pthread_condattr_t__opaque__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__pthread_condattr_t__opaque) }
 
 function bool_eq #"s-osinte.ads" 581 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ((System__os_interface__long.to_rep a.__split_fields.rec__system__os_interface__pthread_condattr_t__sig) = (System__os_interface__long.to_rep b.__split_fields.rec__system__os_interface__pthread_condattr_t__sig)) /\ ((System__os_interface__pthread_condattr_t__T116s.bool_eq a.__split_fields.rec__system__os_interface__pthread_condattr_t__opaque b.__split_fields.rec__system__os_interface__pthread_condattr_t__opaque) = True) )) then (
   True) else (
   False))
 
 function user_eq #"s-osinte.ads" 581 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "pthread_condattr_t" defined at s-osinte.ads:581, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_condattr_t
 use export System__os_interface__pthread_condattr_t__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type pthread_condattr_t #"s-osinte.ads" 581 0 0# =
  __rep
 
 function value__size #"s-osinte.ads" 581 0 0# 
   : int
 
 function object__size #"s-osinte.ads" 581 0 0# 
   (a : pthread_condattr_t) : int
 
 function value__alignment #"s-osinte.ads" 581 0 0# 
   : int
 
 function object__alignment #"s-osinte.ads" 581 0 0# 
   (a : pthread_condattr_t) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : pthread_condattr_t.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : pthread_condattr_t.
   ((object__alignment a) >= 0))
 
 function system__os_interface__pthread_condattr_t__sig__first__bit #"s-osinte.ads" 581 0 0# 
   : int
 
 function system__os_interface__pthread_condattr_t__sig__last__bit #"s-osinte.ads" 581 0 0# 
   : int
 
 function system__os_interface__pthread_condattr_t__sig__position #"s-osinte.ads" 581 0 0# 
   : int
 
 axiom system__os_interface__pthread_condattr_t__sig__first__bit_axiom :
  ((system__os_interface__pthread_condattr_t__sig__first__bit ) >= 0)
 
 axiom system__os_interface__pthread_condattr_t__sig__last__bit_axiom :
  ((system__os_interface__pthread_condattr_t__sig__last__bit ) > (system__os_interface__pthread_condattr_t__sig__first__bit ))
 
 axiom system__os_interface__pthread_condattr_t__sig__position_axiom :
  ((system__os_interface__pthread_condattr_t__sig__position ) >= 0)
 
 function system__os_interface__pthread_condattr_t__opaque__first__bit #"s-osinte.ads" 582 0 0# 
   : int
 
 function system__os_interface__pthread_condattr_t__opaque__last__bit #"s-osinte.ads" 582 0 0# 
   : int
 
 function system__os_interface__pthread_condattr_t__opaque__position #"s-osinte.ads" 582 0 0# 
   : int
 
 axiom system__os_interface__pthread_condattr_t__opaque__first__bit_axiom :
  ((system__os_interface__pthread_condattr_t__opaque__first__bit ) >= 0)
 
 axiom system__os_interface__pthread_condattr_t__opaque__last__bit_axiom :
  ((system__os_interface__pthread_condattr_t__opaque__last__bit ) > (system__os_interface__pthread_condattr_t__opaque__first__bit ))
 
 axiom system__os_interface__pthread_condattr_t__opaque__position_axiom :
  ((system__os_interface__pthread_condattr_t__opaque__position ) >= 0)
 
 function dummy #"s-osinte.ads" 583 0 0# 
   : pthread_condattr_t
 
 type pthread_condattr_t__ref #"s-osinte.ads" 581 0 0# =
  { mutable pthread_condattr_t__content "model_trace:" : pthread_condattr_t }
 
 function pthread_condattr_t__ref___projection #"s-osinte.ads" 581 0 0# 
   (a : pthread_condattr_t__ref) : pthread_condattr_t =
  a.pthread_condattr_t__content
 
 meta "model_projection" function pthread_condattr_t__ref___projection
 
 meta "inline : no" function pthread_condattr_t__ref___projection
 
 val pthread_condattr_t__havoc #"s-osinte.ads" 581 0 0# 
   (x : pthread_condattr_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tpthread_key_tB" defined at s-osinte.ads:599, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__Tpthread_key_tB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type tpthread_key_tB #"s-osinte.ads" 599 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 599 0 0# 
   : BV64.t
 
 function first #"s-osinte.ads" 599 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-osinte.ads" 599 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-osinte.ads" 599 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 599 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-osinte.ads" 599 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 599 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = tpthread_key_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tpthread_key_tB__ref #"s-osinte.ads" 599 0 0# =
  { mutable tpthread_key_tB__content "model_trace:" : tpthread_key_tB }
 
 function tpthread_key_tB__ref___projection #"s-osinte.ads" 599 0 0# 
   (a : tpthread_key_tB__ref) : tpthread_key_tB =
  a.tpthread_key_tB__content
 
 meta "model_projection" function tpthread_key_tB__ref___projection
 
 meta "inline : no" function tpthread_key_tB__ref___projection
 
 val tpthread_key_tB__havoc #"s-osinte.ads" 599 0 0# 
   (x : tpthread_key_tB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "pthread_key_t" defined at s-osinte.ads:599, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_key_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type pthread_key_t #"s-osinte.ads" 599 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-osinte.ads" 599 0 0# 
   : BV64.t
 
 function first #"s-osinte.ads" 599 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-osinte.ads" 599 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-osinte.ads" 599 0 0# 
   : int =
  0
 
 function last_int #"s-osinte.ads" 599 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-osinte.ads" 599 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-osinte.ads" 599 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = pthread_key_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type pthread_key_t__ref #"s-osinte.ads" 599 0 0# =
  { mutable pthread_key_t__content "model_trace:" : pthread_key_t }
 
 function pthread_key_t__ref___projection #"s-osinte.ads" 599 0 0# 
   (a : pthread_key_t__ref) : pthread_key_t =
  a.pthread_key_t__content
 
 meta "model_projection" function pthread_key_t__ref___projection
 
 meta "inline : no" function pthread_key_t__ref___projection
 
 val pthread_key_t__havoc #"s-osinte.ads" 599 0 0# 
   (x : pthread_key_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "pthread_rwlock_t" defined at s-osinte.ads:266, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_rwlock_t
 use export System__os_interface__pthread_mutex_t
 use import "_gnatprove_standard".Main

 type pthread_rwlock_t #"s-osinte.ads" 266 0 0# =
  pthread_mutex_t
 
 type pthread_rwlock_t__ref #"s-osinte.ads" 266 0 0# =
  { mutable pthread_rwlock_t__content "model_trace:" : pthread_rwlock_t }
 
 function pthread_rwlock_t__ref___projection #"s-osinte.ads" 266 0 0# 
   (a : pthread_rwlock_t__ref) : pthread_rwlock_t =
  a.pthread_rwlock_t__content
 
 meta "model_projection" function pthread_rwlock_t__ref___projection
 
 meta "inline : no" function pthread_rwlock_t__ref___projection
 
 val pthread_rwlock_t__havoc #"s-osinte.ads" 266 0 0# 
   (x : pthread_rwlock_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "pthread_rwlockattr_t" defined at s-osinte.ads:267, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_rwlockattr_t
 use export System__os_interface__pthread_mutexattr_t
 use import "_gnatprove_standard".Main

 type pthread_rwlockattr_t #"s-osinte.ads" 267 0 0# =
  pthread_mutexattr_t
 
 type pthread_rwlockattr_t__ref #"s-osinte.ads" 267 0 0# =
  { mutable pthread_rwlockattr_t__content "model_trace:" : pthread_rwlockattr_t }
 
 function pthread_rwlockattr_t__ref___projection #"s-osinte.ads" 267 0 0# 
   (a : pthread_rwlockattr_t__ref) : pthread_rwlockattr_t =
  a.pthread_rwlockattr_t__content
 
 meta "model_projection" function pthread_rwlockattr_t__ref___projection
 
 meta "inline : no" function pthread_rwlockattr_t__ref___projection
 
 val pthread_rwlockattr_t__havoc #"s-osinte.ads" 267 0 0# 
   (x : pthread_rwlockattr_t__ref) : unit
  writes {x}

end

(* Module for defining the constant "stack_base_available" defined at s-osinte.ads:292, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__stack_base_available
 use import "_gnatprove_standard".Main

 function stack_base_available #"s-osinte.ads" 292 0 0# "model" "model_trace:7346" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 292 0 0# 
   : int

end

(* Module for defining the constant "thread" defined at s-osinte.ads:298, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__get_stack_base__thread
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function thread #"s-osinte.ads" 298 0 0# "model" "model_trace:7363" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 561 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "thread" defined at s-osinte.ads:298, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__get_stack_base__thread___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_stack_base" defined at s-osinte.ads:298, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__get_stack_base
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function get_stack_base #"s-osinte.ads" 298 0 0# 
   (thread : BV64.t) : BV64.t

end

(* Module for possibly declaring a logic function for "get_page_size" defined at s-osinte.ads:303, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__get_page_size
 use import "_gnatprove_standard".Main

 function get_page_size #"s-osinte.ads" 303 0 0# 
   (__void_param : unit) : int

end

(* Module for defining the constant "addr" defined at s-osinte.ads:317, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__mprotect__addr
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function addr #"s-osinte.ads" 317 0 0# "model" "model_trace:7473" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "addr" defined at s-osinte.ads:317, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__mprotect__addr___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "len" defined at s-osinte.ads:318, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__mprotect__len
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function len #"s-osinte.ads" 318 0 0# "model" "model_trace:7484" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 55 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "len" defined at s-osinte.ads:318, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__mprotect__len___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "prot" defined at s-osinte.ads:319, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__mprotect__prot
 use import "_gnatprove_standard".Main

 function prot #"s-osinte.ads" 319 0 0# "model" "model_trace:7493" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "prot" defined at s-osinte.ads:319, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__mprotect__prot___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "mprotect" defined at s-osinte.ads:316, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__mprotect
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function mprotect #"s-osinte.ads" 316 0 0# 
   (addr : BV64.t) (len : BV64.t) (prot : int) : int

end

(* Module for defining the constant "thread" defined at s-osinte.ads:335, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_kill__thread
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function thread #"s-osinte.ads" 335 0 0# "model" "model_trace:7565" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 561 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "thread" defined at s-osinte.ads:335, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_kill__thread___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "sig" defined at s-osinte.ads:335, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_kill__sig
 use import "_gnatprove_standard".Main

 function sig #"s-osinte.ads" 335 0 0# "model" "model_trace:7574" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 75 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "sig" defined at s-osinte.ads:335, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_kill__sig___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "pthread_kill" defined at s-osinte.ads:335, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__pthread_kill
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function pthread_kill #"s-osinte.ads" 335 0 0# 
   (thread : BV64.t) (sig : int) : int

end

(* Module for defining the constant "how" defined at s-osinte.ads:339, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_sigmask__how
 use import "_gnatprove_standard".Main

 function how #"s-osinte.ads" 339 0 0# "model" "model_trace:7601" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "how" defined at s-osinte.ads:339, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_sigmask__how___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "relative_timed_wait" defined at s-osinte.ads:400, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__relative_timed_wait
 use import "_gnatprove_standard".Main

 function relative_timed_wait #"s-osinte.ads" 400 0 0# "model" "model_trace:8055" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 400 0 0# 
   : int

end

(* Module for defining the constant "protocol" defined at s-osinte.ads:413, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_mutexattr_setprotocol__protocol
 use import "_gnatprove_standard".Main

 function protocol #"s-osinte.ads" 413 0 0# "model" "model_trace:8109" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "protocol" defined at s-osinte.ads:413, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_mutexattr_setprotocol__protocol___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "prioceiling" defined at s-osinte.ads:419, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_mutexattr_setprioceiling__prioceiling
 use import "_gnatprove_standard".Main

 function prioceiling #"s-osinte.ads" 419 0 0# "model" "model_trace:8146" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "prioceiling" defined at s-osinte.ads:419, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_mutexattr_setprioceiling__prioceiling___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T79s" defined at s-osinte.ads:428, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__struct_sched_param__T79s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t79s #"s-osinte.ads" 428 0 0# 
 
 function first #"s-osinte.ads" 428 0 0# 
   : int =
  1
 
 function last #"s-osinte.ads" 428 0 0# 
   : int =
  4
 
 predicate in_range #"s-osinte.ads" 428 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t79s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t79s__ref #"s-osinte.ads" 428 0 0# =
  { mutable t79s__content "model_trace:" : t79s }
 
 function t79s__ref___projection #"s-osinte.ads" 428 0 0# 
   (a : t79s__ref) : t79s =
  a.t79s__content
 
 meta "model_projection" function t79s__ref___projection
 
 meta "inline : no" function t79s__ref___projection
 
 val t79s__havoc #"s-osinte.ads" 428 0 0# 
   (x : t79s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T80s" defined at s-osinte.ads:428, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__struct_sched_param__T80s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char
 use        Array__Int__Interfaces__c__char

 type component_type #"s-osinte.ads" 428 0 0# =
  Interfaces__c__char.char
 
 function first #"i-c.ads" 72 0 0# 
   : int =
  1
 
 function last #"i-c.ads" 72 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Interfaces__c__char.map, 
 function array_bool_eq = Array__Int__Interfaces__c__char.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "struct_sched_param" defined at s-osinte.ads:426, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__os_interface__struct_sched_param__rep
 use import "_gnatprove_standard".Main
 use        System__os_interface__int
 use        System__os_interface__struct_sched_param__T80s
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char

 type __split_fields #"i-c.ads" 72 0 0# =
  { rec__system__os_interface__struct_sched_param__sched_priority "model_trace:.8192" : System__os_interface__int.int__; rec__system__os_interface__struct_sched_param__opaque "model_trace:.8202" : Array__Int__Interfaces__c__char.map }
 
 function __split_fields_sched_priority__projection #"s-osinte.ads" 428 0 0# "model_trace:.8192" 
   (a : __split_fields) : System__os_interface__int.int__ =
  a.rec__system__os_interface__struct_sched_param__sched_priority
 
 meta "model_projection" function __split_fields_sched_priority__projection
 
 meta "inline : no" function __split_fields_sched_priority__projection
 
 function __split_fields_opaque6__projection #"s-osinte.ads" 426 0 0# "model_trace:.8202" 
   (a : __split_fields) : Array__Int__Interfaces__c__char.map =
  a.rec__system__os_interface__struct_sched_param__opaque
 
 meta "model_projection" function __split_fields_opaque6__projection
 
 meta "inline : no" function __split_fields_opaque6__projection
 
 type __split_fields__ref #"s-osinte.ads" 426 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_15__projection #"s-osinte.ads" 426 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_15__projection
 
 meta "inline : no" function __split_fields__ref_15__projection
 
 val __split_fields__havoc #"s-osinte.ads" 426 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-osinte.ads" 426 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_15__projection #"s-osinte.ads" 426 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_15__projection
 
 meta "inline : no" function __rep_15__projection
 
 function to_base #"s-osinte.ads" 426 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-osinte.ads" 426 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__os_interface__struct_sched_param__sched_priority__pred #"s-osinte.ads" 426 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__struct_sched_param__sched_priority_ #"s-osinte.ads" 426 0 0# 
   (a : __rep) : System__os_interface__int.int__
  requires { (system__os_interface__struct_sched_param__sched_priority__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__struct_sched_param__sched_priority) }
 
 predicate system__os_interface__struct_sched_param__opaque__pred #"s-osinte.ads" 426 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__struct_sched_param__opaque_ #"s-osinte.ads" 426 0 0# 
   (a : __rep) : Array__Int__Interfaces__c__char.map
  requires { (system__os_interface__struct_sched_param__opaque__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__struct_sched_param__opaque) }
 
 function bool_eq #"s-osinte.ads" 426 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ((System__os_interface__int.to_rep a.__split_fields.rec__system__os_interface__struct_sched_param__sched_priority) = (System__os_interface__int.to_rep b.__split_fields.rec__system__os_interface__struct_sched_param__sched_priority)) /\ ((System__os_interface__struct_sched_param__T80s.bool_eq a.__split_fields.rec__system__os_interface__struct_sched_param__opaque b.__split_fields.rec__system__os_interface__struct_sched_param__opaque) = True) )) then (
   True) else (
   False))
 
 function user_eq #"s-osinte.ads" 426 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "struct_sched_param" defined at s-osinte.ads:426, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__struct_sched_param
 use export System__os_interface__struct_sched_param__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type struct_sched_param #"s-osinte.ads" 426 0 0# =
  __rep
 
 function value__size #"s-osinte.ads" 426 0 0# 
   : int
 
 function object__size #"s-osinte.ads" 426 0 0# 
   (a : struct_sched_param) : int
 
 function value__alignment #"s-osinte.ads" 426 0 0# 
   : int
 
 function object__alignment #"s-osinte.ads" 426 0 0# 
   (a : struct_sched_param) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : struct_sched_param.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : struct_sched_param.
   ((object__alignment a) >= 0))
 
 function system__os_interface__struct_sched_param__sched_priority__first__bit #"s-osinte.ads" 426 0 0# 
   : int
 
 function system__os_interface__struct_sched_param__sched_priority__last__bit #"s-osinte.ads" 426 0 0# 
   : int
 
 function system__os_interface__struct_sched_param__sched_priority__position #"s-osinte.ads" 426 0 0# 
   : int
 
 axiom system__os_interface__struct_sched_param__sched_priority__first__bit_axiom :
  ((system__os_interface__struct_sched_param__sched_priority__first__bit ) >= 0)
 
 axiom system__os_interface__struct_sched_param__sched_priority__last__bit_axiom :
  ((system__os_interface__struct_sched_param__sched_priority__last__bit ) > (system__os_interface__struct_sched_param__sched_priority__first__bit ))
 
 axiom system__os_interface__struct_sched_param__sched_priority__position_axiom :
  ((system__os_interface__struct_sched_param__sched_priority__position ) >= 0)
 
 function system__os_interface__struct_sched_param__opaque__first__bit #"s-osinte.ads" 427 0 0# 
   : int
 
 function system__os_interface__struct_sched_param__opaque__last__bit #"s-osinte.ads" 427 0 0# 
   : int
 
 function system__os_interface__struct_sched_param__opaque__position #"s-osinte.ads" 427 0 0# 
   : int
 
 axiom system__os_interface__struct_sched_param__opaque__first__bit_axiom :
  ((system__os_interface__struct_sched_param__opaque__first__bit ) >= 0)
 
 axiom system__os_interface__struct_sched_param__opaque__last__bit_axiom :
  ((system__os_interface__struct_sched_param__opaque__last__bit ) > (system__os_interface__struct_sched_param__opaque__first__bit ))
 
 axiom system__os_interface__struct_sched_param__opaque__position_axiom :
  ((system__os_interface__struct_sched_param__opaque__position ) >= 0)
 
 function dummy #"s-osinte.ads" 428 0 0# 
   : struct_sched_param
 
 type struct_sched_param__ref #"s-osinte.ads" 426 0 0# =
  { mutable struct_sched_param__content "model_trace:" : struct_sched_param }
 
 function struct_sched_param__ref___projection #"s-osinte.ads" 426 0 0# 
   (a : struct_sched_param__ref) : struct_sched_param =
  a.struct_sched_param__content
 
 meta "model_projection" function struct_sched_param__ref___projection
 
 meta "inline : no" function struct_sched_param__ref___projection
 
 val struct_sched_param__havoc #"s-osinte.ads" 426 0 0# 
   (x : struct_sched_param__ref) : unit
  writes {x}

end

(* Module for defining the constant "thread" defined at s-osinte.ads:433, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_setschedparam__thread
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function thread #"s-osinte.ads" 433 0 0# "model" "model_trace:8232" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 561 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "thread" defined at s-osinte.ads:433, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_setschedparam__thread___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "policy" defined at s-osinte.ads:434, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_setschedparam__policy
 use import "_gnatprove_standard".Main

 function policy #"s-osinte.ads" 434 0 0# "model" "model_trace:8241" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "policy" defined at s-osinte.ads:434, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_setschedparam__policy___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "contentionscope" defined at s-osinte.ads:440, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_attr_setscope__contentionscope
 use import "_gnatprove_standard".Main

 function contentionscope #"s-osinte.ads" 440 0 0# "model" "model_trace:8288" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "contentionscope" defined at s-osinte.ads:440, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_attr_setscope__contentionscope___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "inheritsched" defined at s-osinte.ads:445, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_attr_setinheritsched__inheritsched
 use import "_gnatprove_standard".Main

 function inheritsched #"s-osinte.ads" 445 0 0# "model" "model_trace:8325" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "inheritsched" defined at s-osinte.ads:445, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_attr_setinheritsched__inheritsched___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "policy" defined at s-osinte.ads:451, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_attr_setschedpolicy__policy
 use import "_gnatprove_standard".Main

 function policy #"s-osinte.ads" 451 0 0# "model" "model_trace:8362" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "policy" defined at s-osinte.ads:451, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_attr_setschedpolicy__policy___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "sched_yield" defined at s-osinte.ads:454, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__sched_yield
 use import "_gnatprove_standard".Main

 function sched_yield #"s-osinte.ads" 454 0 0# 
   (__void_param : unit) : int

end

(* Module for defining the constant "detachstate" defined at s-osinte.ads:469, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_attr_setdetachstate__detachstate
 use import "_gnatprove_standard".Main

 function detachstate #"s-osinte.ads" 469 0 0# "model" "model_trace:8465" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "detachstate" defined at s-osinte.ads:469, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_attr_setdetachstate__detachstate___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stacksize" defined at s-osinte.ads:475, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_attr_setstacksize__stacksize
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function stacksize #"s-osinte.ads" 475 0 0# "model" "model_trace:8502" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 55 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stacksize" defined at s-osinte.ads:475, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_attr_setstacksize__stacksize___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "arg" defined at s-osinte.ads:483, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_create__arg
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function arg #"s-osinte.ads" 483 0 0# "model" "model_trace:8558" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "arg" defined at s-osinte.ads:483, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_create__arg___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "status" defined at s-osinte.ads:486, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_exit__status
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function status #"s-osinte.ads" 486 0 0# "model" "model_trace:8587" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "status" defined at s-osinte.ads:486, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_exit__status___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "pthread_self" defined at s-osinte.ads:489, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__pthread_self
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function pthread_self #"s-osinte.ads" 489 0 0# 
   (__void_param : unit) : BV64.t

end

(* Module for defining the constant "key" defined at s-osinte.ads:497, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_setspecific__key
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function key #"s-osinte.ads" 497 0 0# "model" "model_trace:8633" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 599 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "key" defined at s-osinte.ads:497, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_setspecific__key___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-osinte.ads:498, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_setspecific__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"s-osinte.ads" 498 0 0# "model" "model_trace:8642" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-osinte.ads:498, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_setspecific__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "pthread_setspecific" defined at s-osinte.ads:496, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__pthread_setspecific
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function pthread_setspecific #"s-osinte.ads" 496 0 0# 
   (key : BV64.t) (value : BV64.t) : int

end

(* Module for defining the constant "key" defined at s-osinte.ads:501, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_getspecific__key
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function key #"s-osinte.ads" 501 0 0# "model" "model_trace:8671" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 599 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "key" defined at s-osinte.ads:501, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__pthread_getspecific__key___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "pthread_getspecific" defined at s-osinte.ads:501, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__pthread_getspecific
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function pthread_getspecific #"s-osinte.ads" 501 0 0# 
   (key : BV64.t) : BV64.t

end

(* Module for axiomatizing type "int32_t" defined at s-osinte.ads:516, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__int32_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int32_t #"s-osinte.ads" 516 0 0# 
 
 function first #"s-osinte.ads" 516 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-osinte.ads" 516 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-osinte.ads" 516 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int32_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type int32_t__ref #"s-osinte.ads" 516 0 0# =
  { mutable int32_t__content "model_trace:" : int32_t }
 
 function int32_t__ref___projection #"s-osinte.ads" 516 0 0# 
   (a : int32_t__ref) : int32_t =
  a.int32_t__content
 
 meta "model_projection" function int32_t__ref___projection
 
 meta "inline : no" function int32_t__ref___projection
 
 val int32_t__havoc #"s-osinte.ads" 516 0 0# 
   (x : int32_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T119s" defined at s-osinte.ads:595, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_once_t__T119s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t119s #"s-osinte.ads" 595 0 0# 
 
 function first #"s-osinte.ads" 595 0 0# 
   : int =
  1
 
 function last #"s-osinte.ads" 595 0 0# 
   : int =
  8
 
 predicate in_range #"s-osinte.ads" 595 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t119s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t119s__ref #"s-osinte.ads" 595 0 0# =
  { mutable t119s__content "model_trace:" : t119s }
 
 function t119s__ref___projection #"s-osinte.ads" 595 0 0# 
   (a : t119s__ref) : t119s =
  a.t119s__content
 
 meta "model_projection" function t119s__ref___projection
 
 meta "inline : no" function t119s__ref___projection
 
 val t119s__havoc #"s-osinte.ads" 595 0 0# 
   (x : t119s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T120s" defined at s-osinte.ads:595, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_once_t__T120s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char
 use        Array__Int__Interfaces__c__char

 type component_type #"s-osinte.ads" 595 0 0# =
  Interfaces__c__char.char
 
 function first #"i-c.ads" 72 0 0# 
   : int =
  1
 
 function last #"i-c.ads" 72 0 0# 
   : int =
  8
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Interfaces__c__char.map, 
 function array_bool_eq = Array__Int__Interfaces__c__char.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "pthread_once_t" defined at s-osinte.ads:593, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__os_interface__pthread_once_t__rep
 use import "_gnatprove_standard".Main
 use        System__os_interface__long
 use        System__os_interface__pthread_once_t__T120s
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char
 use        Array__Int__Interfaces__c__char

 type __split_fields #"i-c.ads" 72 0 0# =
  { rec__system__os_interface__pthread_once_t__sig "model_trace:.9319" : System__os_interface__long.long; rec__system__os_interface__pthread_once_t__opaque "model_trace:.9329" : Array__Int__Interfaces__c__char.map }
 
 function __split_fields_sig6__projection #"s-osinte.ads" 595 0 0# "model_trace:.9319" 
   (a : __split_fields) : System__os_interface__long.long =
  a.rec__system__os_interface__pthread_once_t__sig
 
 meta "model_projection" function __split_fields_sig6__projection
 
 meta "inline : no" function __split_fields_sig6__projection
 
 function __split_fields_opaque7__projection #"s-osinte.ads" 593 0 0# "model_trace:.9329" 
   (a : __split_fields) : Array__Int__Interfaces__c__char.map =
  a.rec__system__os_interface__pthread_once_t__opaque
 
 meta "model_projection" function __split_fields_opaque7__projection
 
 meta "inline : no" function __split_fields_opaque7__projection
 
 type __split_fields__ref #"s-osinte.ads" 593 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_16__projection #"s-osinte.ads" 593 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_16__projection
 
 meta "inline : no" function __split_fields__ref_16__projection
 
 val __split_fields__havoc #"s-osinte.ads" 593 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-osinte.ads" 593 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_16__projection #"s-osinte.ads" 593 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_16__projection
 
 meta "inline : no" function __rep_16__projection
 
 function to_base #"s-osinte.ads" 593 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-osinte.ads" 593 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__os_interface__pthread_once_t__sig__pred #"s-osinte.ads" 593 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__pthread_once_t__sig_ #"s-osinte.ads" 593 0 0# 
   (a : __rep) : System__os_interface__long.long
  requires { (system__os_interface__pthread_once_t__sig__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__pthread_once_t__sig) }
 
 predicate system__os_interface__pthread_once_t__opaque__pred #"s-osinte.ads" 593 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__os_interface__pthread_once_t__opaque_ #"s-osinte.ads" 593 0 0# 
   (a : __rep) : Array__Int__Interfaces__c__char.map
  requires { (system__os_interface__pthread_once_t__opaque__pred a) }
  ensures { (result = a.__split_fields.rec__system__os_interface__pthread_once_t__opaque) }
 
 function bool_eq #"s-osinte.ads" 593 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ((System__os_interface__long.to_rep a.__split_fields.rec__system__os_interface__pthread_once_t__sig) = (System__os_interface__long.to_rep b.__split_fields.rec__system__os_interface__pthread_once_t__sig)) /\ ((System__os_interface__pthread_once_t__T120s.bool_eq a.__split_fields.rec__system__os_interface__pthread_once_t__opaque b.__split_fields.rec__system__os_interface__pthread_once_t__opaque) = True) )) then (
   True) else (
   False))
 
 function user_eq #"s-osinte.ads" 593 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "pthread_once_t" defined at s-osinte.ads:593, created in Gnat2Why.Types.Translate_Type *)
module System__os_interface__pthread_once_t
 use export System__os_interface__pthread_once_t__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type pthread_once_t #"s-osinte.ads" 593 0 0# =
  __rep
 
 function value__size #"s-osinte.ads" 593 0 0# 
   : int
 
 function object__size #"s-osinte.ads" 593 0 0# 
   (a : pthread_once_t) : int
 
 function value__alignment #"s-osinte.ads" 593 0 0# 
   : int
 
 function object__alignment #"s-osinte.ads" 593 0 0# 
   (a : pthread_once_t) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : pthread_once_t.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : pthread_once_t.
   ((object__alignment a) >= 0))
 
 function system__os_interface__pthread_once_t__sig__first__bit #"s-osinte.ads" 593 0 0# 
   : int
 
 function system__os_interface__pthread_once_t__sig__last__bit #"s-osinte.ads" 593 0 0# 
   : int
 
 function system__os_interface__pthread_once_t__sig__position #"s-osinte.ads" 593 0 0# 
   : int
 
 axiom system__os_interface__pthread_once_t__sig__first__bit_axiom :
  ((system__os_interface__pthread_once_t__sig__first__bit ) >= 0)
 
 axiom system__os_interface__pthread_once_t__sig__last__bit_axiom :
  ((system__os_interface__pthread_once_t__sig__last__bit ) > (system__os_interface__pthread_once_t__sig__first__bit ))
 
 axiom system__os_interface__pthread_once_t__sig__position_axiom :
  ((system__os_interface__pthread_once_t__sig__position ) >= 0)
 
 function system__os_interface__pthread_once_t__opaque__first__bit #"s-osinte.ads" 594 0 0# 
   : int
 
 function system__os_interface__pthread_once_t__opaque__last__bit #"s-osinte.ads" 594 0 0# 
   : int
 
 function system__os_interface__pthread_once_t__opaque__position #"s-osinte.ads" 594 0 0# 
   : int
 
 axiom system__os_interface__pthread_once_t__opaque__first__bit_axiom :
  ((system__os_interface__pthread_once_t__opaque__first__bit ) >= 0)
 
 axiom system__os_interface__pthread_once_t__opaque__last__bit_axiom :
  ((system__os_interface__pthread_once_t__opaque__last__bit ) > (system__os_interface__pthread_once_t__opaque__first__bit ))
 
 axiom system__os_interface__pthread_once_t__opaque__position_axiom :
  ((system__os_interface__pthread_once_t__opaque__position ) >= 0)
 
 function dummy #"s-osinte.ads" 595 0 0# 
   : pthread_once_t
 
 type pthread_once_t__ref #"s-osinte.ads" 593 0 0# =
  { mutable pthread_once_t__content "model_trace:" : pthread_once_t }
 
 function pthread_once_t__ref___projection #"s-osinte.ads" 593 0 0# 
   (a : pthread_once_t__ref) : pthread_once_t =
  a.pthread_once_t__content
 
 meta "model_projection" function pthread_once_t__ref___projection
 
 meta "inline : no" function pthread_once_t__ref___projection
 
 val pthread_once_t__havoc #"s-osinte.ads" 593 0 0# 
   (x : pthread_once_t__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "lock" defined at s-taspri.ads:75, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__task_primitives__lock__rep
 use import "_gnatprove_standard".Main
 use        System__os_interface__pthread_mutex_t
 use        System__os_interface__pthread_rwlock_t

 type __split_fields #"s-osinte.ads" 593 0 0# =
  { rec__system__task_primitives__lock__rw "model_trace:.5642" : System__os_interface__pthread_rwlock_t.pthread_rwlock_t; rec__system__task_primitives__lock__wo "model_trace:.5656" : System__os_interface__pthread_mutex_t.pthread_mutex_t }
 
 function __split_fields_RW__projection #"s-osinte.ads" 575 0 0# "model_trace:.5642" 
   (a : __split_fields) : System__os_interface__pthread_rwlock_t.pthread_rwlock_t =
  a.rec__system__task_primitives__lock__rw
 
 meta "model_projection" function __split_fields_RW__projection
 
 meta "inline : no" function __split_fields_RW__projection
 
 function __split_fields_WO__projection #"s-taspri.ads" 75 0 0# "model_trace:.5656" 
   (a : __split_fields) : System__os_interface__pthread_mutex_t.pthread_mutex_t =
  a.rec__system__task_primitives__lock__wo
 
 meta "model_projection" function __split_fields_WO__projection
 
 meta "inline : no" function __split_fields_WO__projection
 
 type __split_fields__ref #"s-taspri.ads" 75 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_17__projection #"s-taspri.ads" 75 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_17__projection
 
 meta "inline : no" function __split_fields__ref_17__projection
 
 val __split_fields__havoc #"s-taspri.ads" 75 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-taspri.ads" 75 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_17__projection #"s-taspri.ads" 75 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_17__projection
 
 meta "inline : no" function __rep_17__projection
 
 function to_base #"s-taspri.ads" 75 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-taspri.ads" 75 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__task_primitives__lock__rw__pred #"s-taspri.ads" 75 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__task_primitives__lock__rw_ #"s-taspri.ads" 75 0 0# 
   (a : __rep) : System__os_interface__pthread_rwlock_t.pthread_rwlock_t
  requires { (system__task_primitives__lock__rw__pred a) }
  ensures { (result = a.__split_fields.rec__system__task_primitives__lock__rw) }
 
 predicate system__task_primitives__lock__wo__pred #"s-taspri.ads" 75 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__task_primitives__lock__wo_ #"s-taspri.ads" 75 0 0# 
   (a : __rep) : System__os_interface__pthread_mutex_t.pthread_mutex_t
  requires { (system__task_primitives__lock__wo__pred a) }
  ensures { (result = a.__split_fields.rec__system__task_primitives__lock__wo) }
 
 function bool_eq #"s-taspri.ads" 75 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ((System__os_interface__pthread_rwlock_t.bool_eq a.__split_fields.rec__system__task_primitives__lock__rw b.__split_fields.rec__system__task_primitives__lock__rw) = True) /\ ((System__os_interface__pthread_mutex_t.bool_eq a.__split_fields.rec__system__task_primitives__lock__wo b.__split_fields.rec__system__task_primitives__lock__wo) = True) )) then (
   True) else (
   False))
 
 function user_eq #"s-taspri.ads" 75 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "lock" defined at s-taspri.ads:75, created in Gnat2Why.Types.Translate_Type *)
module System__task_primitives__lock
 use export System__task_primitives__lock__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type lock #"s-taspri.ads" 75 0 0# =
  __rep
 
 function value__size #"s-taspri.ads" 75 0 0# 
   : int
 
 function object__size #"s-taspri.ads" 75 0 0# 
   (a : lock) : int
 
 function value__alignment #"s-taspri.ads" 75 0 0# 
   : int
 
 function object__alignment #"s-taspri.ads" 75 0 0# 
   (a : lock) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : lock.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : lock.
   ((object__alignment a) >= 0))
 
 function system__task_primitives__lock__rw__first__bit #"s-taspri.ads" 75 0 0# 
   : int
 
 function system__task_primitives__lock__rw__last__bit #"s-taspri.ads" 75 0 0# 
   : int
 
 function system__task_primitives__lock__rw__position #"s-taspri.ads" 75 0 0# 
   : int
 
 axiom system__task_primitives__lock__rw__first__bit_axiom :
  ((system__task_primitives__lock__rw__first__bit ) >= 0)
 
 axiom system__task_primitives__lock__rw__last__bit_axiom :
  ((system__task_primitives__lock__rw__last__bit ) > (system__task_primitives__lock__rw__first__bit ))
 
 axiom system__task_primitives__lock__rw__position_axiom :
  ((system__task_primitives__lock__rw__position ) >= 0)
 
 function system__task_primitives__lock__wo__first__bit #"s-taspri.ads" 76 0 0# 
   : int
 
 function system__task_primitives__lock__wo__last__bit #"s-taspri.ads" 76 0 0# 
   : int
 
 function system__task_primitives__lock__wo__position #"s-taspri.ads" 76 0 0# 
   : int
 
 axiom system__task_primitives__lock__wo__first__bit_axiom :
  ((system__task_primitives__lock__wo__first__bit ) >= 0)
 
 axiom system__task_primitives__lock__wo__last__bit_axiom :
  ((system__task_primitives__lock__wo__last__bit ) > (system__task_primitives__lock__wo__first__bit ))
 
 axiom system__task_primitives__lock__wo__position_axiom :
  ((system__task_primitives__lock__wo__position ) >= 0)
 
 function dummy #"s-taspri.ads" 77 0 0# 
   : lock
 
 type lock__ref #"s-taspri.ads" 75 0 0# =
  { mutable lock__content "model_trace:" : lock }
 
 function lock__ref___projection #"s-taspri.ads" 75 0 0# 
   (a : lock__ref) : lock =
  a.lock__content
 
 meta "model_projection" function lock__ref___projection
 
 meta "inline : no" function lock__ref___projection
 
 val lock__havoc #"s-taspri.ads" 75 0 0# 
   (x : lock__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "suspension_object" defined at s-taspri.ads:82, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__task_primitives__suspension_object__rep
 use import "_gnatprove_standard".Main
 use        System__os_interface__pthread_mutex_t
 use        System__os_interface__pthread_cond_t

 type __split_fields #"s-taspri.ads" 75 0 0# =
  { rec__system__task_primitives__suspension_object__state "model_trace:.5696" : bool; rec__system__task_primitives__suspension_object__waiting "model_trace:.5710" : bool; rec__system__task_primitives__suspension_object__l "model_trace:.5720" : System__os_interface__pthread_mutex_t.pthread_mutex_t; rec__system__task_primitives__suspension_object__cv "model_trace:.5734" : System__os_interface__pthread_cond_t.pthread_cond_t }
 
 function __split_fields_State__projection #"s-osinte.ads" 587 0 0# "model_trace:.5696" 
   (a : __split_fields) : bool =
  a.rec__system__task_primitives__suspension_object__state
 
 meta "model_projection" function __split_fields_State__projection
 
 meta "inline : no" function __split_fields_State__projection
 
 function __split_fields_Waiting__projection #"s-taspri.ads" 82 0 0# "model_trace:.5710" 
   (a : __split_fields) : bool =
  a.rec__system__task_primitives__suspension_object__waiting
 
 meta "model_projection" function __split_fields_Waiting__projection
 
 meta "inline : no" function __split_fields_Waiting__projection
 
 function __split_fields_L__projection #"s-taspri.ads" 82 0 0# "model_trace:.5720" 
   (a : __split_fields) : System__os_interface__pthread_mutex_t.pthread_mutex_t =
  a.rec__system__task_primitives__suspension_object__l
 
 meta "model_projection" function __split_fields_L__projection
 
 meta "inline : no" function __split_fields_L__projection
 
 function __split_fields_CV__projection #"s-taspri.ads" 82 0 0# "model_trace:.5734" 
   (a : __split_fields) : System__os_interface__pthread_cond_t.pthread_cond_t =
  a.rec__system__task_primitives__suspension_object__cv
 
 meta "model_projection" function __split_fields_CV__projection
 
 meta "inline : no" function __split_fields_CV__projection
 
 type __split_fields__ref #"s-taspri.ads" 82 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_18__projection #"s-taspri.ads" 82 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_18__projection
 
 meta "inline : no" function __split_fields__ref_18__projection
 
 val __split_fields__havoc #"s-taspri.ads" 82 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-taspri.ads" 82 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_18__projection #"s-taspri.ads" 82 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_18__projection
 
 meta "inline : no" function __rep_18__projection
 
 function to_base #"s-taspri.ads" 82 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-taspri.ads" 82 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__task_primitives__suspension_object__state__pred #"s-taspri.ads" 82 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__task_primitives__suspension_object__state_ #"s-taspri.ads" 82 0 0# 
   (a : __rep) : bool
  requires { (system__task_primitives__suspension_object__state__pred a) }
  ensures { (result = a.__split_fields.rec__system__task_primitives__suspension_object__state) }
 
 predicate system__task_primitives__suspension_object__waiting__pred #"s-taspri.ads" 82 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__task_primitives__suspension_object__waiting_ #"s-taspri.ads" 82 0 0# 
   (a : __rep) : bool
  requires { (system__task_primitives__suspension_object__waiting__pred a) }
  ensures { (result = a.__split_fields.rec__system__task_primitives__suspension_object__waiting) }
 
 predicate system__task_primitives__suspension_object__l__pred #"s-taspri.ads" 82 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__task_primitives__suspension_object__l_ #"s-taspri.ads" 82 0 0# 
   (a : __rep) : System__os_interface__pthread_mutex_t.pthread_mutex_t
  requires { (system__task_primitives__suspension_object__l__pred a) }
  ensures { (result = a.__split_fields.rec__system__task_primitives__suspension_object__l) }
 
 predicate system__task_primitives__suspension_object__cv__pred #"s-taspri.ads" 82 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__task_primitives__suspension_object__cv_ #"s-taspri.ads" 82 0 0# 
   (a : __rep) : System__os_interface__pthread_cond_t.pthread_cond_t
  requires { (system__task_primitives__suspension_object__cv__pred a) }
  ensures { (result = a.__split_fields.rec__system__task_primitives__suspension_object__cv) }
 
 function bool_eq #"s-taspri.ads" 82 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ( (a.__split_fields.rec__system__task_primitives__suspension_object__state = b.__split_fields.rec__system__task_primitives__suspension_object__state) /\ (a.__split_fields.rec__system__task_primitives__suspension_object__waiting = b.__split_fields.rec__system__task_primitives__suspension_object__waiting) ) /\ ((System__os_interface__pthread_mutex_t.bool_eq a.__split_fields.rec__system__task_primitives__suspension_object__l b.__split_fields.rec__system__task_primitives__suspension_object__l) = True) ) /\ ((System__os_interface__pthread_cond_t.bool_eq a.__split_fields.rec__system__task_primitives__suspension_object__cv b.__split_fields.rec__system__task_primitives__suspension_object__cv) = True) )) then (
   True) else (
   False))
 
 function user_eq #"s-taspri.ads" 82 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "suspension_object" defined at s-taspri.ads:82, created in Gnat2Why.Types.Translate_Type *)
module System__task_primitives__suspension_object
 use export System__task_primitives__suspension_object__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type suspension_object #"s-taspri.ads" 82 0 0# =
  __rep
 
 function value__size #"s-taspri.ads" 82 0 0# 
   : int
 
 function object__size #"s-taspri.ads" 82 0 0# 
   (a : suspension_object) : int
 
 function value__alignment #"s-taspri.ads" 82 0 0# 
   : int
 
 function object__alignment #"s-taspri.ads" 82 0 0# 
   (a : suspension_object) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : suspension_object.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : suspension_object.
   ((object__alignment a) >= 0))
 
 function system__task_primitives__suspension_object__state__first__bit #"s-taspri.ads" 82 0 0# 
   : int
 
 function system__task_primitives__suspension_object__state__last__bit #"s-taspri.ads" 82 0 0# 
   : int
 
 function system__task_primitives__suspension_object__state__position #"s-taspri.ads" 82 0 0# 
   : int
 
 axiom system__task_primitives__suspension_object__state__first__bit_axiom :
  ((system__task_primitives__suspension_object__state__first__bit ) >= 0)
 
 axiom system__task_primitives__suspension_object__state__last__bit_axiom :
  ((system__task_primitives__suspension_object__state__last__bit ) > (system__task_primitives__suspension_object__state__first__bit ))
 
 axiom system__task_primitives__suspension_object__state__position_axiom :
  ((system__task_primitives__suspension_object__state__position ) >= 0)
 
 function system__task_primitives__suspension_object__waiting__first__bit #"s-taspri.ads" 83 0 0# 
   : int
 
 function system__task_primitives__suspension_object__waiting__last__bit #"s-taspri.ads" 83 0 0# 
   : int
 
 function system__task_primitives__suspension_object__waiting__position #"s-taspri.ads" 83 0 0# 
   : int
 
 axiom system__task_primitives__suspension_object__waiting__first__bit_axiom :
  ((system__task_primitives__suspension_object__waiting__first__bit ) >= 0)
 
 axiom system__task_primitives__suspension_object__waiting__last__bit_axiom :
  ((system__task_primitives__suspension_object__waiting__last__bit ) > (system__task_primitives__suspension_object__waiting__first__bit ))
 
 axiom system__task_primitives__suspension_object__waiting__position_axiom :
  ((system__task_primitives__suspension_object__waiting__position ) >= 0)
 
 function system__task_primitives__suspension_object__l__first__bit #"s-taspri.ads" 89 0 0# 
   : int
 
 function system__task_primitives__suspension_object__l__last__bit #"s-taspri.ads" 89 0 0# 
   : int
 
 function system__task_primitives__suspension_object__l__position #"s-taspri.ads" 89 0 0# 
   : int
 
 axiom system__task_primitives__suspension_object__l__first__bit_axiom :
  ((system__task_primitives__suspension_object__l__first__bit ) >= 0)
 
 axiom system__task_primitives__suspension_object__l__last__bit_axiom :
  ((system__task_primitives__suspension_object__l__last__bit ) > (system__task_primitives__suspension_object__l__first__bit ))
 
 axiom system__task_primitives__suspension_object__l__position_axiom :
  ((system__task_primitives__suspension_object__l__position ) >= 0)
 
 function system__task_primitives__suspension_object__cv__first__bit #"s-taspri.ads" 92 0 0# 
   : int
 
 function system__task_primitives__suspension_object__cv__last__bit #"s-taspri.ads" 92 0 0# 
   : int
 
 function system__task_primitives__suspension_object__cv__position #"s-taspri.ads" 92 0 0# 
   : int
 
 axiom system__task_primitives__suspension_object__cv__first__bit_axiom :
  ((system__task_primitives__suspension_object__cv__first__bit ) >= 0)
 
 axiom system__task_primitives__suspension_object__cv__last__bit_axiom :
  ((system__task_primitives__suspension_object__cv__last__bit ) > (system__task_primitives__suspension_object__cv__first__bit ))
 
 axiom system__task_primitives__suspension_object__cv__position_axiom :
  ((system__task_primitives__suspension_object__cv__position ) >= 0)
 
 function dummy #"s-taspri.ads" 95 0 0# 
   : suspension_object
 
 type suspension_object__ref #"s-taspri.ads" 82 0 0# =
  { mutable suspension_object__content "model_trace:" : suspension_object }
 
 function suspension_object__ref___projection #"s-taspri.ads" 82 0 0# 
   (a : suspension_object__ref) : suspension_object =
  a.suspension_object__content
 
 meta "model_projection" function suspension_object__ref___projection
 
 meta "inline : no" function suspension_object__ref___projection
 
 val suspension_object__havoc #"s-taspri.ads" 82 0 0# 
   (x : suspension_object__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "private_data" defined at s-taspri.ads:99, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__task_primitives__private_data__rep
 use import "_gnatprove_standard".Main
 use        System__address
 use        System__os_interface__pthread_t
 use        System__os_interface__pthread_mutex_t
 use        System__os_interface__pthread_cond_t

 type __split_fields #"s-taspri.ads" 82 0 0# =
  { rec__system__task_primitives__private_data__thread "model_trace:.5760" : System__os_interface__pthread_t.pthread_t; rec__system__task_primitives__private_data__lwp "model_trace:.5778" : System__address.address; rec__system__task_primitives__private_data__cv "model_trace:.5790" : System__os_interface__pthread_cond_t.pthread_cond_t; rec__system__task_primitives__private_data__l "model_trace:.5804" : System__os_interface__pthread_mutex_t.pthread_mutex_t }
 
 function __split_fields_Thread__projection #"s-osinte.ads" 575 0 0# "model_trace:.5760" 
   (a : __split_fields) : System__os_interface__pthread_t.pthread_t =
  a.rec__system__task_primitives__private_data__thread
 
 meta "model_projection" function __split_fields_Thread__projection
 
 meta "inline : no" function __split_fields_Thread__projection
 
 function __split_fields_LWP__projection #"s-taspri.ads" 99 0 0# "model_trace:.5778" 
   (a : __split_fields) : System__address.address =
  a.rec__system__task_primitives__private_data__lwp
 
 meta "model_projection" function __split_fields_LWP__projection
 
 meta "inline : no" function __split_fields_LWP__projection
 
 function __split_fields_CV2__projection #"s-taspri.ads" 99 0 0# "model_trace:.5790" 
   (a : __split_fields) : System__os_interface__pthread_cond_t.pthread_cond_t =
  a.rec__system__task_primitives__private_data__cv
 
 meta "model_projection" function __split_fields_CV2__projection
 
 meta "inline : no" function __split_fields_CV2__projection
 
 function __split_fields_L2__projection #"s-taspri.ads" 99 0 0# "model_trace:.5804" 
   (a : __split_fields) : System__os_interface__pthread_mutex_t.pthread_mutex_t =
  a.rec__system__task_primitives__private_data__l
 
 meta "model_projection" function __split_fields_L2__projection
 
 meta "inline : no" function __split_fields_L2__projection
 
 type __split_fields__ref #"s-taspri.ads" 99 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_19__projection #"s-taspri.ads" 99 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_19__projection
 
 meta "inline : no" function __split_fields__ref_19__projection
 
 val __split_fields__havoc #"s-taspri.ads" 99 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-taspri.ads" 99 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_19__projection #"s-taspri.ads" 99 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_19__projection
 
 meta "inline : no" function __rep_19__projection
 
 function to_base #"s-taspri.ads" 99 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-taspri.ads" 99 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__task_primitives__private_data__thread__pred #"s-taspri.ads" 99 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__task_primitives__private_data__thread_ #"s-taspri.ads" 99 0 0# 
   (a : __rep) : System__os_interface__pthread_t.pthread_t
  requires { (system__task_primitives__private_data__thread__pred a) }
  ensures { (result = a.__split_fields.rec__system__task_primitives__private_data__thread) }
 
 predicate system__task_primitives__private_data__lwp__pred #"s-taspri.ads" 99 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__task_primitives__private_data__lwp_ #"s-taspri.ads" 99 0 0# 
   (a : __rep) : System__address.address
  requires { (system__task_primitives__private_data__lwp__pred a) }
  ensures { (result = a.__split_fields.rec__system__task_primitives__private_data__lwp) }
 
 predicate system__task_primitives__private_data__cv__pred #"s-taspri.ads" 99 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__task_primitives__private_data__cv_ #"s-taspri.ads" 99 0 0# 
   (a : __rep) : System__os_interface__pthread_cond_t.pthread_cond_t
  requires { (system__task_primitives__private_data__cv__pred a) }
  ensures { (result = a.__split_fields.rec__system__task_primitives__private_data__cv) }
 
 predicate system__task_primitives__private_data__l__pred #"s-taspri.ads" 99 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__task_primitives__private_data__l_ #"s-taspri.ads" 99 0 0# 
   (a : __rep) : System__os_interface__pthread_mutex_t.pthread_mutex_t
  requires { (system__task_primitives__private_data__l__pred a) }
  ensures { (result = a.__split_fields.rec__system__task_primitives__private_data__l) }
 
 function user_eq #"s-taspri.ads" 99 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "private_data" defined at s-taspri.ads:99, created in Gnat2Why.Types.Translate_Type *)
module System__task_primitives__private_data
 use export System__task_primitives__private_data__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type private_data #"s-taspri.ads" 99 0 0# =
  __rep
 
 function value__size #"s-taspri.ads" 99 0 0# 
   : int
 
 function object__size #"s-taspri.ads" 99 0 0# 
   (a : private_data) : int
 
 function value__alignment #"s-taspri.ads" 99 0 0# 
   : int
 
 function object__alignment #"s-taspri.ads" 99 0 0# 
   (a : private_data) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : private_data.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : private_data.
   ((object__alignment a) >= 0))
 
 function system__task_primitives__private_data__thread__first__bit #"s-taspri.ads" 99 0 0# 
   : int
 
 function system__task_primitives__private_data__thread__last__bit #"s-taspri.ads" 99 0 0# 
   : int
 
 function system__task_primitives__private_data__thread__position #"s-taspri.ads" 99 0 0# 
   : int
 
 axiom system__task_primitives__private_data__thread__first__bit_axiom :
  ((system__task_primitives__private_data__thread__first__bit ) >= 0)
 
 axiom system__task_primitives__private_data__thread__last__bit_axiom :
  ((system__task_primitives__private_data__thread__last__bit ) > (system__task_primitives__private_data__thread__first__bit ))
 
 axiom system__task_primitives__private_data__thread__position_axiom :
  ((system__task_primitives__private_data__thread__position ) >= 0)
 
 function system__task_primitives__private_data__lwp__first__bit #"s-taspri.ads" 100 0 0# 
   : int
 
 function system__task_primitives__private_data__lwp__last__bit #"s-taspri.ads" 100 0 0# 
   : int
 
 function system__task_primitives__private_data__lwp__position #"s-taspri.ads" 100 0 0# 
   : int
 
 axiom system__task_primitives__private_data__lwp__first__bit_axiom :
  ((system__task_primitives__private_data__lwp__first__bit ) >= 0)
 
 axiom system__task_primitives__private_data__lwp__last__bit_axiom :
  ((system__task_primitives__private_data__lwp__last__bit ) > (system__task_primitives__private_data__lwp__first__bit ))
 
 axiom system__task_primitives__private_data__lwp__position_axiom :
  ((system__task_primitives__private_data__lwp__position ) >= 0)
 
 function system__task_primitives__private_data__cv__first__bit #"s-taspri.ads" 108 0 0# 
   : int
 
 function system__task_primitives__private_data__cv__last__bit #"s-taspri.ads" 108 0 0# 
   : int
 
 function system__task_primitives__private_data__cv__position #"s-taspri.ads" 108 0 0# 
   : int
 
 axiom system__task_primitives__private_data__cv__first__bit_axiom :
  ((system__task_primitives__private_data__cv__first__bit ) >= 0)
 
 axiom system__task_primitives__private_data__cv__last__bit_axiom :
  ((system__task_primitives__private_data__cv__last__bit ) > (system__task_primitives__private_data__cv__first__bit ))
 
 axiom system__task_primitives__private_data__cv__position_axiom :
  ((system__task_primitives__private_data__cv__position ) >= 0)
 
 function system__task_primitives__private_data__l__first__bit #"s-taspri.ads" 113 0 0# 
   : int
 
 function system__task_primitives__private_data__l__last__bit #"s-taspri.ads" 113 0 0# 
   : int
 
 function system__task_primitives__private_data__l__position #"s-taspri.ads" 113 0 0# 
   : int
 
 axiom system__task_primitives__private_data__l__first__bit_axiom :
  ((system__task_primitives__private_data__l__first__bit ) >= 0)
 
 axiom system__task_primitives__private_data__l__last__bit_axiom :
  ((system__task_primitives__private_data__l__last__bit ) > (system__task_primitives__private_data__l__first__bit ))
 
 axiom system__task_primitives__private_data__l__position_axiom :
  ((system__task_primitives__private_data__l__position ) >= 0)
 
 function dummy #"s-taspri.ads" 116 0 0# 
   : private_data
 
 type private_data__ref #"s-taspri.ads" 99 0 0# =
  { mutable private_data__content "model_trace:" : private_data }
 
 function private_data__ref___projection #"s-taspri.ads" 99 0 0# 
   (a : private_data__ref) : private_data =
  a.private_data__content
 
 meta "model_projection" function private_data__ref___projection
 
 meta "inline : no" function private_data__ref___projection
 
 val private_data__havoc #"s-taspri.ads" 99 0 0# 
   (x : private_data__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "task_address" defined at s-taspri.ads:66, created in Gnat2Why.Types.Translate_Type *)
module System__task_primitives__task_address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type task_address #"s-taspri.ads" 66 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-taspri.ads" 66 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function first #"s-taspri.ads" 66 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-taspri.ads" 66 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-taspri.ads" 66 0 0# 
   : int =
  0
 
 function last_int #"s-taspri.ads" 66 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-taspri.ads" 66 0 0# 
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int #"s-taspri.ads" 66 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt64 with
 type t = task_address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type task_address__ref #"s-taspri.ads" 66 0 0# =
  { mutable task_address__content "model_trace:" : task_address }
 
 function task_address__ref___projection #"s-taspri.ads" 66 0 0# 
   (a : task_address__ref) : task_address =
  a.task_address__content
 
 meta "model_projection" function task_address__ref___projection
 
 meta "inline : no" function task_address__ref___projection
 
 val task_address__havoc #"s-taspri.ads" 66 0 0# 
   (x : task_address__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "stack_address" defined at s-stausa.ads:42, created in Gnat2Why.Types.Translate_Type *)
module System__stack_usage__stack_address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type stack_address #"s-stausa.ads" 42 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-stausa.ads" 42 0 0# 
   : BV64.t
 
 function first #"s-stausa.ads" 42 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-stausa.ads" 42 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-stausa.ads" 42 0 0# 
   : int =
  0
 
 function last_int #"s-stausa.ads" 42 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-stausa.ads" 42 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-stausa.ads" 42 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = stack_address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type stack_address__ref #"s-stausa.ads" 42 0 0# =
  { mutable stack_address__content "model_trace:" : stack_address }
 
 function stack_address__ref___projection #"s-stausa.ads" 42 0 0# 
   (a : stack_address__ref) : stack_address =
  a.stack_address__content
 
 meta "model_projection" function stack_address__ref___projection
 
 meta "inline : no" function stack_address__ref___projection
 
 val stack_address__havoc #"s-stausa.ads" 42 0 0# 
   (x : stack_address__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T1s" defined at s-stausa.ads:54, created in Gnat2Why.Types.Translate_Type *)
module System__stack_usage__task_result__T1s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t1s #"s-stausa.ads" 54 0 0# 
 
 function first #"s-stausa.ads" 54 0 0# 
   : int =
  1
 
 function last #"s-stausa.ads" 54 0 0# 
   : int =
  32
 
 predicate in_range #"s-stausa.ads" 54 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t1s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t1s__ref #"s-stausa.ads" 54 0 0# =
  { mutable t1s__content "model_trace:" : t1s }
 
 function t1s__ref___projection #"s-stausa.ads" 54 0 0# 
   (a : t1s__ref) : t1s =
  a.t1s__content
 
 meta "model_projection" function t1s__ref___projection
 
 meta "inline : no" function t1s__ref___projection
 
 val t1s__havoc #"s-stausa.ads" 54 0 0# 
   (x : t1s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T2s" defined at s-stausa.ads:54, created in Gnat2Why.Types.Translate_Type *)
module System__stack_usage__task_result__T2s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-stausa.ads" 54 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  32
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "task_result" defined at s-stausa.ads:53, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__stack_usage__task_result__rep
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        System__stack_usage__task_result__T2s
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 type __split_fields #"system.ads" 1 0 0# =
  { rec__system__stack_usage__task_result__task_name "model_trace:.21308" : Array__Int__Standard__character.map; rec__system__stack_usage__task_result__value "model_trace:.21323" : Standard__natural.natural; rec__system__stack_usage__task_result__stack_size "model_trace:.21333" : Standard__natural.natural }
 
 function __split_fields_Task_Name__projection #"system.ads" 1 0 0# "model_trace:.21308" 
   (a : __split_fields) : Array__Int__Standard__character.map =
  a.rec__system__stack_usage__task_result__task_name
 
 meta "model_projection" function __split_fields_Task_Name__projection
 
 meta "inline : no" function __split_fields_Task_Name__projection
 
 function __split_fields_Value__projection #"s-stausa.ads" 53 0 0# "model_trace:.21323" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__system__stack_usage__task_result__value
 
 meta "model_projection" function __split_fields_Value__projection
 
 meta "inline : no" function __split_fields_Value__projection
 
 function __split_fields_Stack_Size__projection #"s-stausa.ads" 53 0 0# "model_trace:.21333" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__system__stack_usage__task_result__stack_size
 
 meta "model_projection" function __split_fields_Stack_Size__projection
 
 meta "inline : no" function __split_fields_Stack_Size__projection
 
 type __split_fields__ref #"s-stausa.ads" 53 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_20__projection #"s-stausa.ads" 53 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_20__projection
 
 meta "inline : no" function __split_fields__ref_20__projection
 
 val __split_fields__havoc #"s-stausa.ads" 53 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-stausa.ads" 53 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_20__projection #"s-stausa.ads" 53 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_20__projection
 
 meta "inline : no" function __rep_20__projection
 
 function to_base #"s-stausa.ads" 53 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-stausa.ads" 53 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__stack_usage__task_result__task_name__pred #"s-stausa.ads" 53 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_usage__task_result__task_name_ #"s-stausa.ads" 53 0 0# 
   (a : __rep) : Array__Int__Standard__character.map
  requires { (system__stack_usage__task_result__task_name__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_usage__task_result__task_name) }
 
 predicate system__stack_usage__task_result__value__pred #"s-stausa.ads" 53 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_usage__task_result__value_ #"s-stausa.ads" 53 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { (system__stack_usage__task_result__value__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_usage__task_result__value) }
 
 predicate system__stack_usage__task_result__stack_size__pred #"s-stausa.ads" 53 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_usage__task_result__stack_size_ #"s-stausa.ads" 53 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { (system__stack_usage__task_result__stack_size__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_usage__task_result__stack_size) }
 
 function bool_eq #"s-stausa.ads" 53 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ((System__stack_usage__task_result__T2s.bool_eq a.__split_fields.rec__system__stack_usage__task_result__task_name b.__split_fields.rec__system__stack_usage__task_result__task_name) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__system__stack_usage__task_result__value) = (Standard__natural.to_rep b.__split_fields.rec__system__stack_usage__task_result__value)) ) /\ ((Standard__natural.to_rep a.__split_fields.rec__system__stack_usage__task_result__stack_size) = (Standard__natural.to_rep b.__split_fields.rec__system__stack_usage__task_result__stack_size)) )) then (
   True) else (
   False))
 
 function user_eq #"s-stausa.ads" 53 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "task_result" defined at s-stausa.ads:53, created in Gnat2Why.Types.Translate_Type *)
module System__stack_usage__task_result
 use export System__stack_usage__task_result__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type task_result #"s-stausa.ads" 53 0 0# =
  __rep
 
 function value__size #"s-stausa.ads" 53 0 0# 
   : int
 
 function object__size #"s-stausa.ads" 53 0 0# 
   (a : task_result) : int
 
 function value__alignment #"s-stausa.ads" 53 0 0# 
   : int
 
 function object__alignment #"s-stausa.ads" 53 0 0# 
   (a : task_result) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : task_result.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : task_result.
   ((object__alignment a) >= 0))
 
 function system__stack_usage__task_result__task_name__first__bit #"s-stausa.ads" 53 0 0# 
   : int
 
 function system__stack_usage__task_result__task_name__last__bit #"s-stausa.ads" 53 0 0# 
   : int
 
 function system__stack_usage__task_result__task_name__position #"s-stausa.ads" 53 0 0# 
   : int
 
 axiom system__stack_usage__task_result__task_name__first__bit_axiom :
  ((system__stack_usage__task_result__task_name__first__bit ) >= 0)
 
 axiom system__stack_usage__task_result__task_name__last__bit_axiom :
  ((system__stack_usage__task_result__task_name__last__bit ) > (system__stack_usage__task_result__task_name__first__bit ))
 
 axiom system__stack_usage__task_result__task_name__position_axiom :
  ((system__stack_usage__task_result__task_name__position ) >= 0)
 
 function system__stack_usage__task_result__value__first__bit #"s-stausa.ads" 54 0 0# 
   : int
 
 function system__stack_usage__task_result__value__last__bit #"s-stausa.ads" 54 0 0# 
   : int
 
 function system__stack_usage__task_result__value__position #"s-stausa.ads" 54 0 0# 
   : int
 
 axiom system__stack_usage__task_result__value__first__bit_axiom :
  ((system__stack_usage__task_result__value__first__bit ) >= 0)
 
 axiom system__stack_usage__task_result__value__last__bit_axiom :
  ((system__stack_usage__task_result__value__last__bit ) > (system__stack_usage__task_result__value__first__bit ))
 
 axiom system__stack_usage__task_result__value__position_axiom :
  ((system__stack_usage__task_result__value__position ) >= 0)
 
 function system__stack_usage__task_result__stack_size__first__bit #"s-stausa.ads" 56 0 0# 
   : int
 
 function system__stack_usage__task_result__stack_size__last__bit #"s-stausa.ads" 56 0 0# 
   : int
 
 function system__stack_usage__task_result__stack_size__position #"s-stausa.ads" 56 0 0# 
   : int
 
 axiom system__stack_usage__task_result__stack_size__first__bit_axiom :
  ((system__stack_usage__task_result__stack_size__first__bit ) >= 0)
 
 axiom system__stack_usage__task_result__stack_size__last__bit_axiom :
  ((system__stack_usage__task_result__stack_size__last__bit ) > (system__stack_usage__task_result__stack_size__first__bit ))
 
 axiom system__stack_usage__task_result__stack_size__position_axiom :
  ((system__stack_usage__task_result__stack_size__position ) >= 0)
 
 function dummy #"s-stausa.ads" 60 0 0# 
   : task_result
 
 type task_result__ref #"s-stausa.ads" 53 0 0# =
  { mutable task_result__content "model_trace:" : task_result }
 
 function task_result__ref___projection #"s-stausa.ads" 53 0 0# 
   (a : task_result__ref) : task_result =
  a.task_result__content
 
 meta "model_projection" function task_result__ref___projection
 
 meta "inline : no" function task_result__ref___projection
 
 val task_result__havoc #"s-stausa.ads" 53 0 0# 
   (x : task_result__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "result_array_type" defined at s-stausa.ads:64, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__System__stack_usage__task_result
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__stack_usage__task_result

 function index_I1_one #"s-stausa.ads" 53 0 0# 
   : int =
  1
 
 type component_type #"s-stausa.ads" 53 0 0# =
  System__stack_usage__task_result.task_result
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "result_array_type" defined at s-stausa.ads:64, created in Gnat2Why.Types.Translate_Type *)
module System__stack_usage__result_array_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        System__stack_usage__task_result
 use        Array__Int__System__stack_usage__task_result

 type component_type #"s-stausa.ads" 53 0 0# =
  System__stack_usage__task_result.task_result
 
 function index_1_id #"s-stausa.ads" 53 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__stack_usage__task_result.map, 
 function array_bool_eq = Array__Int__System__stack_usage__task_result.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type result_array_type #"s-stausa.ads" 64 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type result_array_type__ref #"s-stausa.ads" 64 0 0# =
  { mutable result_array_type__content "model_trace:" : result_array_type }
 
 function result_array_type__ref___projection #"s-stausa.ads" 64 0 0# 
   (a : result_array_type__ref) : result_array_type =
  a.result_array_type__content
 
 meta "model_projection" function result_array_type__ref___projection
 
 meta "inline : no" function result_array_type__ref___projection
 
 val result_array_type__havoc #"s-stausa.ads" 64 0 0# 
   (x : result_array_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T8s" defined at s-stausa.ads:283, created in Gnat2Why.Types.Translate_Type *)
module System__stack_usage__stack_analyzer__T8s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t8s #"s-stausa.ads" 283 0 0# 
 
 function first #"s-stausa.ads" 283 0 0# 
   : int =
  1
 
 function last #"s-stausa.ads" 283 0 0# 
   : int =
  32
 
 predicate in_range #"s-stausa.ads" 283 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t8s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t8s__ref #"s-stausa.ads" 283 0 0# =
  { mutable t8s__content "model_trace:" : t8s }
 
 function t8s__ref_2__projection #"s-stausa.ads" 283 0 0# 
   (a : t8s__ref) : t8s =
  a.t8s__content
 
 meta "model_projection" function t8s__ref_2__projection
 
 meta "inline : no" function t8s__ref_2__projection
 
 val t8s__havoc #"s-stausa.ads" 283 0 0# 
   (x : t8s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T9s" defined at s-stausa.ads:283, created in Gnat2Why.Types.Translate_Type *)
module System__stack_usage__stack_analyzer__T9s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-stausa.ads" 283 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  32
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "pattern_type" defined at s-stausa.ads:279, created in Gnat2Why.Types.Translate_Type *)
module System__stack_usage__pattern_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type pattern_type #"s-stausa.ads" 279 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-stausa.ads" 279 0 0# 
   : BV32.t
 
 function first #"s-stausa.ads" 279 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-stausa.ads" 279 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-stausa.ads" 279 0 0# 
   : int =
  0
 
 function last_int #"s-stausa.ads" 279 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-stausa.ads" 279 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"s-stausa.ads" 279 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = pattern_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type pattern_type__ref #"s-stausa.ads" 279 0 0# =
  { mutable pattern_type__content "model_trace:" : pattern_type }
 
 function pattern_type__ref___projection #"s-stausa.ads" 279 0 0# 
   (a : pattern_type__ref) : pattern_type =
  a.pattern_type__content
 
 meta "model_projection" function pattern_type__ref___projection
 
 meta "inline : no" function pattern_type__ref___projection
 
 val pattern_type__havoc #"s-stausa.ads" 279 0 0# 
   (x : pattern_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "stack_analyzer" defined at s-stausa.ads:282, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__stack_usage__stack_analyzer__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        "_gnatprove_standard".BV64
 use        Standard__natural
 use        Standard__positive
 use        System__address
 use        System__stack_usage__stack_address
 use        System__stack_usage__stack_analyzer__T9s
 use        System__stack_usage__pattern_type
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 type __split_fields #"s-stausa.ads" 279 0 0# =
  { rec__system__stack_usage__stack_analyzer__task_name "model_trace:.21591" : Array__Int__Standard__character.map; rec__system__stack_usage__stack_analyzer__stack_base "model_trace:.21606" : System__stack_usage__stack_address.stack_address; rec__system__stack_usage__stack_analyzer__stack_size "model_trace:.21616" : Standard__natural.natural; rec__system__stack_usage__stack_analyzer__pattern_size "model_trace:.21626" : Standard__natural.natural; rec__system__stack_usage__stack_analyzer__pattern "model_trace:.21636" : System__stack_usage__pattern_type.pattern_type; rec__system__stack_usage__stack_analyzer__pattern_limit "model_trace:.21646" : System__stack_usage__stack_address.stack_address; rec__system__stack_usage__stack_analyzer__topmost_touched_mark "model_trace:.21656" : System__stack_usage__stack_address.stack_address; rec__system__stack_usage__stack_analyzer__pattern_overlay_address "model_trace:.21666" : System__address.address; rec__system__stack_usage__stack_analyzer__result_id "model_trace:.21678" : Standard__positive.positive }
 
 function __split_fields_Task_Name2__projection #"system.ads" 1 0 0# "model_trace:.21591" 
   (a : __split_fields) : Array__Int__Standard__character.map =
  a.rec__system__stack_usage__stack_analyzer__task_name
 
 meta "model_projection" function __split_fields_Task_Name2__projection
 
 meta "inline : no" function __split_fields_Task_Name2__projection
 
 function __split_fields_Stack_Base__projection #"s-stausa.ads" 282 0 0# "model_trace:.21606" 
   (a : __split_fields) : System__stack_usage__stack_address.stack_address =
  a.rec__system__stack_usage__stack_analyzer__stack_base
 
 meta "model_projection" function __split_fields_Stack_Base__projection
 
 meta "inline : no" function __split_fields_Stack_Base__projection
 
 function __split_fields_Stack_Size2__projection #"s-stausa.ads" 282 0 0# "model_trace:.21616" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__system__stack_usage__stack_analyzer__stack_size
 
 meta "model_projection" function __split_fields_Stack_Size2__projection
 
 meta "inline : no" function __split_fields_Stack_Size2__projection
 
 function __split_fields_Pattern_Size__projection #"s-stausa.ads" 282 0 0# "model_trace:.21626" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__system__stack_usage__stack_analyzer__pattern_size
 
 meta "model_projection" function __split_fields_Pattern_Size__projection
 
 meta "inline : no" function __split_fields_Pattern_Size__projection
 
 function __split_fields_Pattern__projection #"s-stausa.ads" 282 0 0# "model_trace:.21636" 
   (a : __split_fields) : System__stack_usage__pattern_type.pattern_type =
  a.rec__system__stack_usage__stack_analyzer__pattern
 
 meta "model_projection" function __split_fields_Pattern__projection
 
 meta "inline : no" function __split_fields_Pattern__projection
 
 function __split_fields_Pattern_Limit__projection #"s-stausa.ads" 282 0 0# "model_trace:.21646" 
   (a : __split_fields) : System__stack_usage__stack_address.stack_address =
  a.rec__system__stack_usage__stack_analyzer__pattern_limit
 
 meta "model_projection" function __split_fields_Pattern_Limit__projection
 
 meta "inline : no" function __split_fields_Pattern_Limit__projection
 
 function __split_fields_Topmost_Touched_Mark__projection #"s-stausa.ads" 282 0 0# "model_trace:.21656" 
   (a : __split_fields) : System__stack_usage__stack_address.stack_address =
  a.rec__system__stack_usage__stack_analyzer__topmost_touched_mark
 
 meta "model_projection" function __split_fields_Topmost_Touched_Mark__projection
 
 meta "inline : no" function __split_fields_Topmost_Touched_Mark__projection
 
 function __split_fields_Pattern_Overlay_Address__projection #"s-stausa.ads" 282 0 0# "model_trace:.21666" 
   (a : __split_fields) : System__address.address =
  a.rec__system__stack_usage__stack_analyzer__pattern_overlay_address
 
 meta "model_projection" function __split_fields_Pattern_Overlay_Address__projection
 
 meta "inline : no" function __split_fields_Pattern_Overlay_Address__projection
 
 function __split_fields_Result_Id__projection #"s-stausa.ads" 282 0 0# "model_trace:.21678" 
   (a : __split_fields) : Standard__positive.positive =
  a.rec__system__stack_usage__stack_analyzer__result_id
 
 meta "model_projection" function __split_fields_Result_Id__projection
 
 meta "inline : no" function __split_fields_Result_Id__projection
 
 type __split_fields__ref #"s-stausa.ads" 282 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_21__projection #"s-stausa.ads" 282 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_21__projection
 
 meta "inline : no" function __split_fields__ref_21__projection
 
 val __split_fields__havoc #"s-stausa.ads" 282 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-stausa.ads" 282 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_21__projection #"s-stausa.ads" 282 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_21__projection
 
 meta "inline : no" function __rep_21__projection
 
 function to_base #"s-stausa.ads" 282 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-stausa.ads" 282 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__stack_usage__stack_analyzer__task_name__pred #"s-stausa.ads" 282 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_usage__stack_analyzer__task_name_ #"s-stausa.ads" 282 0 0# 
   (a : __rep) : Array__Int__Standard__character.map
  requires { (system__stack_usage__stack_analyzer__task_name__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_usage__stack_analyzer__task_name) }
 
 predicate system__stack_usage__stack_analyzer__stack_base__pred #"s-stausa.ads" 282 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_usage__stack_analyzer__stack_base_ #"s-stausa.ads" 282 0 0# 
   (a : __rep) : System__stack_usage__stack_address.stack_address
  requires { (system__stack_usage__stack_analyzer__stack_base__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_usage__stack_analyzer__stack_base) }
 
 predicate system__stack_usage__stack_analyzer__stack_size__pred #"s-stausa.ads" 282 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_usage__stack_analyzer__stack_size_ #"s-stausa.ads" 282 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { (system__stack_usage__stack_analyzer__stack_size__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_usage__stack_analyzer__stack_size) }
 
 predicate system__stack_usage__stack_analyzer__pattern_size__pred #"s-stausa.ads" 282 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_usage__stack_analyzer__pattern_size_ #"s-stausa.ads" 282 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { (system__stack_usage__stack_analyzer__pattern_size__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_usage__stack_analyzer__pattern_size) }
 
 predicate system__stack_usage__stack_analyzer__pattern__pred #"s-stausa.ads" 282 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_usage__stack_analyzer__pattern_ #"s-stausa.ads" 282 0 0# 
   (a : __rep) : System__stack_usage__pattern_type.pattern_type
  requires { (system__stack_usage__stack_analyzer__pattern__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_usage__stack_analyzer__pattern) }
 
 predicate system__stack_usage__stack_analyzer__pattern_limit__pred #"s-stausa.ads" 282 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_usage__stack_analyzer__pattern_limit_ #"s-stausa.ads" 282 0 0# 
   (a : __rep) : System__stack_usage__stack_address.stack_address
  requires { (system__stack_usage__stack_analyzer__pattern_limit__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_usage__stack_analyzer__pattern_limit) }
 
 predicate system__stack_usage__stack_analyzer__topmost_touched_mark__pred #"s-stausa.ads" 282 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_usage__stack_analyzer__topmost_touched_mark_ #"s-stausa.ads" 282 0 0# 
   (a : __rep) : System__stack_usage__stack_address.stack_address
  requires { (system__stack_usage__stack_analyzer__topmost_touched_mark__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_usage__stack_analyzer__topmost_touched_mark) }
 
 predicate system__stack_usage__stack_analyzer__pattern_overlay_address__pred #"s-stausa.ads" 282 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_usage__stack_analyzer__pattern_overlay_address_ #"s-stausa.ads" 282 0 0# 
   (a : __rep) : System__address.address
  requires { (system__stack_usage__stack_analyzer__pattern_overlay_address__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_usage__stack_analyzer__pattern_overlay_address) }
 
 predicate system__stack_usage__stack_analyzer__result_id__pred #"s-stausa.ads" 282 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__stack_usage__stack_analyzer__result_id_ #"s-stausa.ads" 282 0 0# 
   (a : __rep) : Standard__positive.positive
  requires { (system__stack_usage__stack_analyzer__result_id__pred a) }
  ensures { (result = a.__split_fields.rec__system__stack_usage__stack_analyzer__result_id) }
 
 function bool_eq #"s-stausa.ads" 282 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ( ( ( ( ( ( ((System__stack_usage__stack_analyzer__T9s.bool_eq a.__split_fields.rec__system__stack_usage__stack_analyzer__task_name b.__split_fields.rec__system__stack_usage__stack_analyzer__task_name) = True) /\ ((System__stack_usage__stack_address.to_rep a.__split_fields.rec__system__stack_usage__stack_analyzer__stack_base) = (System__stack_usage__stack_address.to_rep b.__split_fields.rec__system__stack_usage__stack_analyzer__stack_base)) ) /\ ((Standard__natural.to_rep a.__split_fields.rec__system__stack_usage__stack_analyzer__stack_size) = (Standard__natural.to_rep b.__split_fields.rec__system__stack_usage__stack_analyzer__stack_size)) ) /\ ((Standard__natural.to_rep a.__split_fields.rec__system__stack_usage__stack_analyzer__pattern_size) = (Standard__natural.to_rep b.__split_fields.rec__system__stack_usage__stack_analyzer__pattern_size)) ) /\ ((System__stack_usage__pattern_type.to_rep a.__split_fields.rec__system__stack_usage__stack_analyzer__pattern) = (System__stack_usage__pattern_type.to_rep b.__split_fields.rec__system__stack_usage__stack_analyzer__pattern)) ) /\ ((System__stack_usage__stack_address.to_rep a.__split_fields.rec__system__stack_usage__stack_analyzer__pattern_limit) = (System__stack_usage__stack_address.to_rep b.__split_fields.rec__system__stack_usage__stack_analyzer__pattern_limit)) ) /\ ((System__stack_usage__stack_address.to_rep a.__split_fields.rec__system__stack_usage__stack_analyzer__topmost_touched_mark) = (System__stack_usage__stack_address.to_rep b.__split_fields.rec__system__stack_usage__stack_analyzer__topmost_touched_mark)) ) /\ ((System__address.to_rep a.__split_fields.rec__system__stack_usage__stack_analyzer__pattern_overlay_address) = (System__address.to_rep b.__split_fields.rec__system__stack_usage__stack_analyzer__pattern_overlay_address)) ) /\ ((Standard__positive.to_rep a.__split_fields.rec__system__stack_usage__stack_analyzer__result_id) = (Standard__positive.to_rep b.__split_fields.rec__system__stack_usage__stack_analyzer__result_id)) )) then (
   True) else (
   False))
 
 function user_eq #"s-stausa.ads" 282 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "stack_analyzer" defined at s-stausa.ads:282, created in Gnat2Why.Types.Translate_Type *)
module System__stack_usage__stack_analyzer
 use export System__stack_usage__stack_analyzer__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type stack_analyzer #"s-stausa.ads" 282 0 0# =
  __rep
 
 function value__size #"s-stausa.ads" 282 0 0# 
   : int
 
 function object__size #"s-stausa.ads" 282 0 0# 
   (a : stack_analyzer) : int
 
 function value__alignment #"s-stausa.ads" 282 0 0# 
   : int
 
 function object__alignment #"s-stausa.ads" 282 0 0# 
   (a : stack_analyzer) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : stack_analyzer.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : stack_analyzer.
   ((object__alignment a) >= 0))
 
 function system__stack_usage__stack_analyzer__task_name__first__bit #"s-stausa.ads" 282 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__task_name__last__bit #"s-stausa.ads" 282 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__task_name__position #"s-stausa.ads" 282 0 0# 
   : int
 
 axiom system__stack_usage__stack_analyzer__task_name__first__bit_axiom :
  ((system__stack_usage__stack_analyzer__task_name__first__bit ) >= 0)
 
 axiom system__stack_usage__stack_analyzer__task_name__last__bit_axiom :
  ((system__stack_usage__stack_analyzer__task_name__last__bit ) > (system__stack_usage__stack_analyzer__task_name__first__bit ))
 
 axiom system__stack_usage__stack_analyzer__task_name__position_axiom :
  ((system__stack_usage__stack_analyzer__task_name__position ) >= 0)
 
 function system__stack_usage__stack_analyzer__stack_base__first__bit #"s-stausa.ads" 283 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__stack_base__last__bit #"s-stausa.ads" 283 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__stack_base__position #"s-stausa.ads" 283 0 0# 
   : int
 
 axiom system__stack_usage__stack_analyzer__stack_base__first__bit_axiom :
  ((system__stack_usage__stack_analyzer__stack_base__first__bit ) >= 0)
 
 axiom system__stack_usage__stack_analyzer__stack_base__last__bit_axiom :
  ((system__stack_usage__stack_analyzer__stack_base__last__bit ) > (system__stack_usage__stack_analyzer__stack_base__first__bit ))
 
 axiom system__stack_usage__stack_analyzer__stack_base__position_axiom :
  ((system__stack_usage__stack_analyzer__stack_base__position ) >= 0)
 
 function system__stack_usage__stack_analyzer__stack_size__first__bit #"s-stausa.ads" 286 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__stack_size__last__bit #"s-stausa.ads" 286 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__stack_size__position #"s-stausa.ads" 286 0 0# 
   : int
 
 axiom system__stack_usage__stack_analyzer__stack_size__first__bit_axiom :
  ((system__stack_usage__stack_analyzer__stack_size__first__bit ) >= 0)
 
 axiom system__stack_usage__stack_analyzer__stack_size__last__bit_axiom :
  ((system__stack_usage__stack_analyzer__stack_size__last__bit ) > (system__stack_usage__stack_analyzer__stack_size__first__bit ))
 
 axiom system__stack_usage__stack_analyzer__stack_size__position_axiom :
  ((system__stack_usage__stack_analyzer__stack_size__position ) >= 0)
 
 function system__stack_usage__stack_analyzer__pattern_size__first__bit #"s-stausa.ads" 290 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__pattern_size__last__bit #"s-stausa.ads" 290 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__pattern_size__position #"s-stausa.ads" 290 0 0# 
   : int
 
 axiom system__stack_usage__stack_analyzer__pattern_size__first__bit_axiom :
  ((system__stack_usage__stack_analyzer__pattern_size__first__bit ) >= 0)
 
 axiom system__stack_usage__stack_analyzer__pattern_size__last__bit_axiom :
  ((system__stack_usage__stack_analyzer__pattern_size__last__bit ) > (system__stack_usage__stack_analyzer__pattern_size__first__bit ))
 
 axiom system__stack_usage__stack_analyzer__pattern_size__position_axiom :
  ((system__stack_usage__stack_analyzer__pattern_size__position ) >= 0)
 
 function system__stack_usage__stack_analyzer__pattern__first__bit #"s-stausa.ads" 293 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__pattern__last__bit #"s-stausa.ads" 293 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__pattern__position #"s-stausa.ads" 293 0 0# 
   : int
 
 axiom system__stack_usage__stack_analyzer__pattern__first__bit_axiom :
  ((system__stack_usage__stack_analyzer__pattern__first__bit ) >= 0)
 
 axiom system__stack_usage__stack_analyzer__pattern__last__bit_axiom :
  ((system__stack_usage__stack_analyzer__pattern__last__bit ) > (system__stack_usage__stack_analyzer__pattern__first__bit ))
 
 axiom system__stack_usage__stack_analyzer__pattern__position_axiom :
  ((system__stack_usage__stack_analyzer__pattern__position ) >= 0)
 
 function system__stack_usage__stack_analyzer__pattern_limit__first__bit #"s-stausa.ads" 296 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__pattern_limit__last__bit #"s-stausa.ads" 296 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__pattern_limit__position #"s-stausa.ads" 296 0 0# 
   : int
 
 axiom system__stack_usage__stack_analyzer__pattern_limit__first__bit_axiom :
  ((system__stack_usage__stack_analyzer__pattern_limit__first__bit ) >= 0)
 
 axiom system__stack_usage__stack_analyzer__pattern_limit__last__bit_axiom :
  ((system__stack_usage__stack_analyzer__pattern_limit__last__bit ) > (system__stack_usage__stack_analyzer__pattern_limit__first__bit ))
 
 axiom system__stack_usage__stack_analyzer__pattern_limit__position_axiom :
  ((system__stack_usage__stack_analyzer__pattern_limit__position ) >= 0)
 
 function system__stack_usage__stack_analyzer__topmost_touched_mark__first__bit #"s-stausa.ads" 299 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__topmost_touched_mark__last__bit #"s-stausa.ads" 299 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__topmost_touched_mark__position #"s-stausa.ads" 299 0 0# 
   : int
 
 axiom system__stack_usage__stack_analyzer__topmost_touched_mark__first__bit_axiom :
  ((system__stack_usage__stack_analyzer__topmost_touched_mark__first__bit ) >= 0)
 
 axiom system__stack_usage__stack_analyzer__topmost_touched_mark__last__bit_axiom :
  ((system__stack_usage__stack_analyzer__topmost_touched_mark__last__bit ) > (system__stack_usage__stack_analyzer__topmost_touched_mark__first__bit ))
 
 axiom system__stack_usage__stack_analyzer__topmost_touched_mark__position_axiom :
  ((system__stack_usage__stack_analyzer__topmost_touched_mark__position ) >= 0)
 
 function system__stack_usage__stack_analyzer__pattern_overlay_address__first__bit #"s-stausa.ads" 302 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__pattern_overlay_address__last__bit #"s-stausa.ads" 302 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__pattern_overlay_address__position #"s-stausa.ads" 302 0 0# 
   : int
 
 axiom system__stack_usage__stack_analyzer__pattern_overlay_address__first__bit_axiom :
  ((system__stack_usage__stack_analyzer__pattern_overlay_address__first__bit ) >= 0)
 
 axiom system__stack_usage__stack_analyzer__pattern_overlay_address__last__bit_axiom :
  ((system__stack_usage__stack_analyzer__pattern_overlay_address__last__bit ) > (system__stack_usage__stack_analyzer__pattern_overlay_address__first__bit ))
 
 axiom system__stack_usage__stack_analyzer__pattern_overlay_address__position_axiom :
  ((system__stack_usage__stack_analyzer__pattern_overlay_address__position ) >= 0)
 
 function system__stack_usage__stack_analyzer__result_id__first__bit #"s-stausa.ads" 308 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__result_id__last__bit #"s-stausa.ads" 308 0 0# 
   : int
 
 function system__stack_usage__stack_analyzer__result_id__position #"s-stausa.ads" 308 0 0# 
   : int
 
 axiom system__stack_usage__stack_analyzer__result_id__first__bit_axiom :
  ((system__stack_usage__stack_analyzer__result_id__first__bit ) >= 0)
 
 axiom system__stack_usage__stack_analyzer__result_id__last__bit_axiom :
  ((system__stack_usage__stack_analyzer__result_id__last__bit ) > (system__stack_usage__stack_analyzer__result_id__first__bit ))
 
 axiom system__stack_usage__stack_analyzer__result_id__position_axiom :
  ((system__stack_usage__stack_analyzer__result_id__position ) >= 0)
 
 function dummy #"s-stausa.ads" 312 0 0# 
   : stack_analyzer
 
 type stack_analyzer__ref #"s-stausa.ads" 282 0 0# =
  { mutable stack_analyzer__content "model_trace:" : stack_analyzer }
 
 function stack_analyzer__ref___projection #"s-stausa.ads" 282 0 0# 
   (a : stack_analyzer__ref) : stack_analyzer =
  a.stack_analyzer__content
 
 meta "model_projection" function stack_analyzer__ref___projection
 
 meta "inline : no" function stack_analyzer__ref___projection
 
 val stack_analyzer__havoc #"s-stausa.ads" 282 0 0# 
   (x : stack_analyzer__ref) : unit
  writes {x}

end

(* Module for defining the constant "buffer_size" defined at s-stausa.ads:203, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_usage__initialize__buffer_size
 use import "_gnatprove_standard".Main

 function buffer_size #"s-stausa.ads" 203 0 0# "model" "model_trace:21372" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer_size" defined at s-stausa.ads:203, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__initialize__buffer_size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "task_name" defined at s-stausa.ads:227, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_usage__initialize_analyzer__task_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function task_name #"s-stausa.ads" 227 0 0# "model_projected" "model_trace:21425" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "task_name" defined at s-stausa.ads:227, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__initialize_analyzer__task_name___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stack_size" defined at s-stausa.ads:228, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_usage__initialize_analyzer__stack_size
 use import "_gnatprove_standard".Main

 function stack_size #"s-stausa.ads" 228 0 0# "model" "model_trace:21434" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stack_size" defined at s-stausa.ads:228, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__initialize_analyzer__stack_size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stack_base" defined at s-stausa.ads:229, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_usage__initialize_analyzer__stack_base
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function stack_base #"s-stausa.ads" 229 0 0# "model" "model_trace:21443" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-stausa.ads" 42 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stack_base" defined at s-stausa.ads:229, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__initialize_analyzer__stack_base___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "pattern_size" defined at s-stausa.ads:230, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_usage__initialize_analyzer__pattern_size
 use import "_gnatprove_standard".Main

 function pattern_size #"s-stausa.ads" 230 0 0# "model" "model_trace:21452" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "pattern_size" defined at s-stausa.ads:230, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__initialize_analyzer__pattern_size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "pattern" defined at s-stausa.ads:231, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_usage__initialize_analyzer__pattern
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function pattern #"s-stausa.ads" 231 0 0# "model" "model_trace:21461" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "pattern" defined at s-stausa.ads:231, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__initialize_analyzer__pattern___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "analyzer" defined at s-stausa.ads:262, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_usage__report_result__analyzer
 use import "_gnatprove_standard".Main
 use        System__stack_usage__stack_analyzer

 function analyzer #"s-stausa.ads" 262 0 0# "model_projected" "model_trace:21513" 
   : System__stack_usage__stack_analyzer.stack_analyzer
 
 function attr__ATTRIBUTE_ADDRESS #"s-stausa.ads" 282 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "analyzer" defined at s-stausa.ads:262, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__report_result__analyzer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "object" defined at s-atacco.ads:37 instantiated at s-stausa.ads:276, created in Gnat2Why.Types.Translate_Type *)
module System__stack_usage__unsigned_32_addr__object
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type object #"s-atacco.ads" 37 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-atacco.ads" 37 0 0# 
   : BV32.t
 
 function first #"s-atacco.ads" 37 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-atacco.ads" 37 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-atacco.ads" 37 0 0# 
   : int =
  0
 
 function last_int #"s-atacco.ads" 37 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-atacco.ads" 37 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"s-atacco.ads" 37 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = object, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type object__ref #"s-atacco.ads" 37 0 0# =
  { mutable object__content "model_trace:" : object }
 
 function object__ref___projection #"s-atacco.ads" 37 0 0# 
   (a : object__ref) : object =
  a.object__content
 
 meta "model_projection" function object__ref___projection
 
 meta "inline : no" function object__ref___projection
 
 val object__havoc #"s-atacco.ads" 37 0 0# 
   (x : object__ref) : unit
  writes {x}

end

(* Module for defining the constant "value" defined at s-atacco.ads:57 instantiated at s-stausa.ads:276, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_usage__unsigned_32_addr__to_pointer__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"s-atacco.ads" 57 0 0# "model" "model_trace:26434" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-atacco.ads:57 instantiated at s-stausa.ads:276, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__unsigned_32_addr__to_pointer__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "sp_low" defined at s-stausa.ads:331, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_usage__stack_size__sp_low
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function sp_low #"s-stausa.ads" 331 0 0# "model" "model_trace:21752" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-stausa.ads" 42 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "sp_low" defined at s-stausa.ads:331, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__stack_size__sp_low___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "sp_high" defined at s-stausa.ads:332, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_usage__stack_size__sp_high
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function sp_high #"s-stausa.ads" 332 0 0# "model" "model_trace:21761" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-stausa.ads" 42 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "sp_high" defined at s-stausa.ads:332, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__stack_size__sp_high___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "stack_size" defined at s-stausa.ads:330, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__stack_usage__stack_size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function stack_size #"s-stausa.ads" 330 0 0# 
   (sp_low : BV64.t) (sp_high : BV64.t) : int

end

(* Module for axiomatizing type "Tcpu_rangeB" defined at s-multip.ads:19, created in Gnat2Why.Types.Translate_Type *)
module System__multiprocessors__Tcpu_rangeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tcpu_rangeB #"s-multip.ads" 19 0 0# 
 
 function first #"s-multip.ads" 19 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-multip.ads" 19 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-multip.ads" 19 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tcpu_rangeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tcpu_rangeB__ref #"s-multip.ads" 19 0 0# =
  { mutable tcpu_rangeB__content "model_trace:" : tcpu_rangeB }
 
 function tcpu_rangeB__ref___projection #"s-multip.ads" 19 0 0# 
   (a : tcpu_rangeB__ref) : tcpu_rangeB =
  a.tcpu_rangeB__content
 
 meta "model_projection" function tcpu_rangeB__ref___projection
 
 meta "inline : no" function tcpu_rangeB__ref___projection
 
 val tcpu_rangeB__havoc #"s-multip.ads" 19 0 0# 
   (x : tcpu_rangeB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "cpu_range" defined at s-multip.ads:19, created in Gnat2Why.Types.Translate_Type *)
module System__multiprocessors__cpu_range
 use import "_gnatprove_standard".Main
 use import "int".Int

 type cpu_range #"s-multip.ads" 19 0 0# 
 
 function first #"s-multip.ads" 19 0 0# 
   : int =
  0
 
 function last #"s-multip.ads" 19 0 0# 
   : int =
  65535
 
 predicate in_range #"s-multip.ads" 19 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = cpu_range, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type cpu_range__ref #"s-multip.ads" 19 0 0# =
  { mutable cpu_range__content "model_trace:" : cpu_range }
 
 function cpu_range__ref___projection #"s-multip.ads" 19 0 0# 
   (a : cpu_range__ref) : cpu_range =
  a.cpu_range__content
 
 meta "model_projection" function cpu_range__ref___projection
 
 meta "inline : no" function cpu_range__ref___projection
 
 val cpu_range__havoc #"s-multip.ads" 19 0 0# 
   (x : cpu_range__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "cpu" defined at s-multip.ads:21, created in Gnat2Why.Types.Translate_Type *)
module System__multiprocessors__cpu
 use import "_gnatprove_standard".Main
 use import "int".Int

 type cpu #"s-multip.ads" 21 0 0# 
 
 function first #"s-multip.ads" 21 0 0# 
   : int =
  1
 
 function last #"s-multip.ads" 21 0 0# 
   : int =
  65535
 
 predicate in_range #"s-multip.ads" 21 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = cpu, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type cpu__ref #"s-multip.ads" 21 0 0# =
  { mutable cpu__content "model_trace:" : cpu }
 
 function cpu__ref___projection #"s-multip.ads" 21 0 0# 
   (a : cpu__ref) : cpu =
  a.cpu__content
 
 meta "model_projection" function cpu__ref___projection
 
 meta "inline : no" function cpu__ref___projection
 
 val cpu__havoc #"s-multip.ads" 21 0 0# 
   (x : cpu__ref) : unit
  writes {x}

end

(* Module for defining the constant "not_a_specific_cpu" defined at s-multip.ads:23, created in Gnat2Why.Decls.Translate_Constant *)
module System__multiprocessors__not_a_specific_cpu
 use import "_gnatprove_standard".Main

 function not_a_specific_cpu #"s-multip.ads" 23 0 0# "model" "model_trace:21947" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-multip.ads" 19 0 0# 
   : int

end

(* Module for possibly declaring a logic function for "number_of_cpus" defined at s-multip.ads:25, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__multiprocessors__number_of_cpus
 use import "_gnatprove_standard".Main

 function number_of_cpus #"s-multip.ads" 25 0 0# 
   (__void_param : unit) : int

end

(* Module for axiomatizing type "short_short_unsigned" defined at s-unstyp.ads:44, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__short_short_unsigned
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type short_short_unsigned #"s-unstyp.ads" 44 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-unstyp.ads" 44 0 0# 
   : BV8.t
 
 function first #"s-unstyp.ads" 44 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"s-unstyp.ads" 44 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"s-unstyp.ads" 44 0 0# 
   : int =
  0
 
 function last_int #"s-unstyp.ads" 44 0 0# 
   : int =
  255
 
 predicate in_range #"s-unstyp.ads" 44 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"s-unstyp.ads" 44 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = short_short_unsigned, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short_short_unsigned__ref #"s-unstyp.ads" 44 0 0# =
  { mutable short_short_unsigned__content "model_trace:" : short_short_unsigned }
 
 function short_short_unsigned__ref___projection #"s-unstyp.ads" 44 0 0# 
   (a : short_short_unsigned__ref) : short_short_unsigned =
  a.short_short_unsigned__content
 
 meta "model_projection" function short_short_unsigned__ref___projection
 
 meta "inline : no" function short_short_unsigned__ref___projection
 
 val short_short_unsigned__havoc #"s-unstyp.ads" 44 0 0# 
   (x : short_short_unsigned__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short_unsigned" defined at s-unstyp.ads:45, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__short_unsigned
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV16

 type short_unsigned #"s-unstyp.ads" 45 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-unstyp.ads" 45 0 0# 
   : BV16.t
 
 function first #"s-unstyp.ads" 45 0 0# 
   : BV16.t =
  ( BV16.of_int 0 )
 
 function last #"s-unstyp.ads" 45 0 0# 
   : BV16.t =
  ( BV16.of_int 65535 )
 
 function first_int #"s-unstyp.ads" 45 0 0# 
   : int =
  0
 
 function last_int #"s-unstyp.ads" 45 0 0# 
   : int =
  65535
 
 predicate in_range #"s-unstyp.ads" 45 0 0# 
   (x : BV16.t)  =
  true
 
 predicate in_range_int #"s-unstyp.ads" 45 0 0# 
   (x : int)  =
  BV16.uint_in_range x
 
 clone export "ada__model".Static_Modular_16 with
 type t = short_unsigned, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short_unsigned__ref #"s-unstyp.ads" 45 0 0# =
  { mutable short_unsigned__content "model_trace:" : short_unsigned }
 
 function short_unsigned__ref___projection #"s-unstyp.ads" 45 0 0# 
   (a : short_unsigned__ref) : short_unsigned =
  a.short_unsigned__content
 
 meta "model_projection" function short_unsigned__ref___projection
 
 meta "inline : no" function short_unsigned__ref___projection
 
 val short_unsigned__havoc #"s-unstyp.ads" 45 0 0# 
   (x : short_unsigned__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned" defined at s-unstyp.ads:46, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__unsigned
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type unsigned #"s-unstyp.ads" 46 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-unstyp.ads" 46 0 0# 
   : BV32.t
 
 function first #"s-unstyp.ads" 46 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-unstyp.ads" 46 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-unstyp.ads" 46 0 0# 
   : int =
  0
 
 function last_int #"s-unstyp.ads" 46 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-unstyp.ads" 46 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"s-unstyp.ads" 46 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = unsigned, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned__ref #"s-unstyp.ads" 46 0 0# =
  { mutable unsigned__content "model_trace:" : unsigned }
 
 function unsigned__ref_3__projection #"s-unstyp.ads" 46 0 0# 
   (a : unsigned__ref) : unsigned =
  a.unsigned__content
 
 meta "model_projection" function unsigned__ref_3__projection
 
 meta "inline : no" function unsigned__ref_3__projection
 
 val unsigned__havoc #"s-unstyp.ads" 46 0 0# 
   (x : unsigned__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_unsigned" defined at s-unstyp.ads:47, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__long_unsigned
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type long_unsigned #"s-unstyp.ads" 47 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-unstyp.ads" 47 0 0# 
   : BV64.t
 
 function first #"s-unstyp.ads" 47 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-unstyp.ads" 47 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-unstyp.ads" 47 0 0# 
   : int =
  0
 
 function last_int #"s-unstyp.ads" 47 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-unstyp.ads" 47 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-unstyp.ads" 47 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = long_unsigned, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long_unsigned__ref #"s-unstyp.ads" 47 0 0# =
  { mutable long_unsigned__content "model_trace:" : long_unsigned }
 
 function long_unsigned__ref___projection #"s-unstyp.ads" 47 0 0# 
   (a : long_unsigned__ref) : long_unsigned =
  a.long_unsigned__content
 
 meta "model_projection" function long_unsigned__ref___projection
 
 meta "inline : no" function long_unsigned__ref___projection
 
 val long_unsigned__havoc #"s-unstyp.ads" 47 0 0# 
   (x : long_unsigned__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_long_unsigned" defined at s-unstyp.ads:48, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__long_long_unsigned
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type long_long_unsigned #"s-unstyp.ads" 48 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-unstyp.ads" 48 0 0# 
   : BV64.t
 
 function first #"s-unstyp.ads" 48 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-unstyp.ads" 48 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-unstyp.ads" 48 0 0# 
   : int =
  0
 
 function last_int #"s-unstyp.ads" 48 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-unstyp.ads" 48 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-unstyp.ads" 48 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = long_long_unsigned, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long_long_unsigned__ref #"s-unstyp.ads" 48 0 0# =
  { mutable long_long_unsigned__content "model_trace:" : long_long_unsigned }
 
 function long_long_unsigned__ref___projection #"s-unstyp.ads" 48 0 0# 
   (a : long_long_unsigned__ref) : long_long_unsigned =
  a.long_long_unsigned__content
 
 meta "model_projection" function long_long_unsigned__ref___projection
 
 meta "inline : no" function long_long_unsigned__ref___projection
 
 val long_long_unsigned__havoc #"s-unstyp.ads" 48 0 0# 
   (x : long_long_unsigned__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "float_unsigned" defined at s-unstyp.ads:50, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__float_unsigned
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type float_unsigned #"s-unstyp.ads" 50 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-unstyp.ads" 50 0 0# 
   : BV32.t
 
 function first #"s-unstyp.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-unstyp.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-unstyp.ads" 50 0 0# 
   : int =
  0
 
 function last_int #"s-unstyp.ads" 50 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-unstyp.ads" 50 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"s-unstyp.ads" 50 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = float_unsigned, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type float_unsigned__ref #"s-unstyp.ads" 50 0 0# =
  { mutable float_unsigned__content "model_trace:" : float_unsigned }
 
 function float_unsigned__ref___projection #"s-unstyp.ads" 50 0 0# 
   (a : float_unsigned__ref) : float_unsigned =
  a.float_unsigned__content
 
 meta "model_projection" function float_unsigned__ref___projection
 
 meta "inline : no" function float_unsigned__ref___projection
 
 val float_unsigned__havoc #"s-unstyp.ads" 50 0 0# 
   (x : float_unsigned__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "packed_byte" defined at s-unstyp.ads:53, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__packed_byte
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type packed_byte #"s-unstyp.ads" 53 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-unstyp.ads" 53 0 0# 
   : BV8.t
 
 function first #"s-unstyp.ads" 53 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"s-unstyp.ads" 53 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"s-unstyp.ads" 53 0 0# 
   : int =
  0
 
 function last_int #"s-unstyp.ads" 53 0 0# 
   : int =
  255
 
 predicate in_range #"s-unstyp.ads" 53 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"s-unstyp.ads" 53 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = packed_byte, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type packed_byte__ref #"s-unstyp.ads" 53 0 0# =
  { mutable packed_byte__content "model_trace:" : packed_byte }
 
 function packed_byte__ref___projection #"s-unstyp.ads" 53 0 0# 
   (a : packed_byte__ref) : packed_byte =
  a.packed_byte__content
 
 meta "model_projection" function packed_byte__ref___projection
 
 meta "inline : no" function packed_byte__ref___projection
 
 val packed_byte__havoc #"s-unstyp.ads" 53 0 0# 
   (x : packed_byte__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "packed_bytes1" defined at s-unstyp.ads:60, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__System__unsigned_types__packed_byte
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__unsigned_types__packed_byte

 function index_I1_one #"s-unstyp.ads" 53 0 0# 
   : int =
  1
 
 type component_type #"s-unstyp.ads" 53 0 0# =
  System__unsigned_types__packed_byte.packed_byte
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"s-unstyp.ads" 53 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_BV8_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = System__unsigned_types__packed_byte.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "packed_bytes1" defined at s-unstyp.ads:60, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__packed_bytes1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__natural
 use        System__unsigned_types__packed_byte
 use        Array__Int__System__unsigned_types__packed_byte

 type component_type #"s-unstyp.ads" 53 0 0# =
  System__unsigned_types__packed_byte.packed_byte
 
 function index_1_id #"s-unstyp.ads" 53 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__unsigned_types__packed_byte.map, 
 function array_bool_eq = Array__Int__System__unsigned_types__packed_byte.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__natural.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type packed_bytes1 #"s-unstyp.ads" 60 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type packed_bytes1__ref #"s-unstyp.ads" 60 0 0# =
  { mutable packed_bytes1__content "model_trace:" : packed_bytes1 }
 
 function packed_bytes1__ref___projection #"s-unstyp.ads" 60 0 0# 
   (a : packed_bytes1__ref) : packed_bytes1 =
  a.packed_bytes1__content
 
 meta "model_projection" function packed_bytes1__ref___projection
 
 meta "inline : no" function packed_bytes1__ref___projection
 
 val packed_bytes1__havoc #"s-unstyp.ads" 60 0 0# 
   (x : packed_bytes1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "packed_bytes2" defined at s-unstyp.ads:70, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__packed_bytes2
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__natural
 use        System__unsigned_types__packed_byte
 use        Array__Int__System__unsigned_types__packed_byte

 type component_type #"s-unstyp.ads" 60 0 0# =
  System__unsigned_types__packed_byte.packed_byte
 
 function index_1_id #"s-unstyp.ads" 53 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__unsigned_types__packed_byte.map, 
 function array_bool_eq = Array__Int__System__unsigned_types__packed_byte.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__natural.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type packed_bytes2 #"s-unstyp.ads" 70 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type packed_bytes2__ref #"s-unstyp.ads" 70 0 0# =
  { mutable packed_bytes2__content "model_trace:" : packed_bytes2 }
 
 function packed_bytes2__ref___projection #"s-unstyp.ads" 70 0 0# 
   (a : packed_bytes2__ref) : packed_bytes2 =
  a.packed_bytes2__content
 
 meta "model_projection" function packed_bytes2__ref___projection
 
 meta "inline : no" function packed_bytes2__ref___projection
 
 val packed_bytes2__havoc #"s-unstyp.ads" 70 0 0# 
   (x : packed_bytes2__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "packed_bytes4" defined at s-unstyp.ads:81, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__packed_bytes4
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__natural
 use        System__unsigned_types__packed_byte
 use        Array__Int__System__unsigned_types__packed_byte

 type component_type #"s-unstyp.ads" 70 0 0# =
  System__unsigned_types__packed_byte.packed_byte
 
 function index_1_id #"s-unstyp.ads" 53 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__unsigned_types__packed_byte.map, 
 function array_bool_eq = Array__Int__System__unsigned_types__packed_byte.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__natural.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type packed_bytes4 #"s-unstyp.ads" 81 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type packed_bytes4__ref #"s-unstyp.ads" 81 0 0# =
  { mutable packed_bytes4__content "model_trace:" : packed_bytes4 }
 
 function packed_bytes4__ref___projection #"s-unstyp.ads" 81 0 0# 
   (a : packed_bytes4__ref) : packed_bytes4 =
  a.packed_bytes4__content
 
 meta "model_projection" function packed_bytes4__ref___projection
 
 meta "inline : no" function packed_bytes4__ref___projection
 
 val packed_bytes4__havoc #"s-unstyp.ads" 81 0 0# 
   (x : packed_bytes4__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "bits_1" defined at s-unstyp.ads:92, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__bits_1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type bits_1 #"s-unstyp.ads" 92 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-unstyp.ads" 92 0 0# 
   : BV8.t =
  ( BV8.of_int 2 )
 
 function first #"s-unstyp.ads" 92 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"s-unstyp.ads" 92 0 0# 
   : BV8.t =
  ( BV8.of_int 1 )
 
 function first_int #"s-unstyp.ads" 92 0 0# 
   : int =
  0
 
 function last_int #"s-unstyp.ads" 92 0 0# 
   : int =
  1
 
 predicate in_range #"s-unstyp.ads" 92 0 0# 
   (x : BV8.t)  =
  ( (BV8.ule first x) /\ (BV8.ule x last) )
 
 predicate in_range_int #"s-unstyp.ads" 92 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt8 with
 type t = bits_1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type bits_1__ref #"s-unstyp.ads" 92 0 0# =
  { mutable bits_1__content "model_trace:" : bits_1 }
 
 function bits_1__ref___projection #"s-unstyp.ads" 92 0 0# 
   (a : bits_1__ref) : bits_1 =
  a.bits_1__content
 
 meta "model_projection" function bits_1__ref___projection
 
 meta "inline : no" function bits_1__ref___projection
 
 val bits_1__havoc #"s-unstyp.ads" 92 0 0# 
   (x : bits_1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "bits_2" defined at s-unstyp.ads:93, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__bits_2
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type bits_2 #"s-unstyp.ads" 93 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-unstyp.ads" 93 0 0# 
   : BV8.t =
  ( BV8.of_int 4 )
 
 function first #"s-unstyp.ads" 93 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"s-unstyp.ads" 93 0 0# 
   : BV8.t =
  ( BV8.of_int 3 )
 
 function first_int #"s-unstyp.ads" 93 0 0# 
   : int =
  0
 
 function last_int #"s-unstyp.ads" 93 0 0# 
   : int =
  3
 
 predicate in_range #"s-unstyp.ads" 93 0 0# 
   (x : BV8.t)  =
  ( (BV8.ule first x) /\ (BV8.ule x last) )
 
 predicate in_range_int #"s-unstyp.ads" 93 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt8 with
 type t = bits_2, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type bits_2__ref #"s-unstyp.ads" 93 0 0# =
  { mutable bits_2__content "model_trace:" : bits_2 }
 
 function bits_2__ref___projection #"s-unstyp.ads" 93 0 0# 
   (a : bits_2__ref) : bits_2 =
  a.bits_2__content
 
 meta "model_projection" function bits_2__ref___projection
 
 meta "inline : no" function bits_2__ref___projection
 
 val bits_2__havoc #"s-unstyp.ads" 93 0 0# 
   (x : bits_2__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "bits_4" defined at s-unstyp.ads:94, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__bits_4
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type bits_4 #"s-unstyp.ads" 94 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-unstyp.ads" 94 0 0# 
   : BV8.t =
  ( BV8.of_int 16 )
 
 function first #"s-unstyp.ads" 94 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"s-unstyp.ads" 94 0 0# 
   : BV8.t =
  ( BV8.of_int 15 )
 
 function first_int #"s-unstyp.ads" 94 0 0# 
   : int =
  0
 
 function last_int #"s-unstyp.ads" 94 0 0# 
   : int =
  15
 
 predicate in_range #"s-unstyp.ads" 94 0 0# 
   (x : BV8.t)  =
  ( (BV8.ule first x) /\ (BV8.ule x last) )
 
 predicate in_range_int #"s-unstyp.ads" 94 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt8 with
 type t = bits_4, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type bits_4__ref #"s-unstyp.ads" 94 0 0# =
  { mutable bits_4__content "model_trace:" : bits_4 }
 
 function bits_4__ref___projection #"s-unstyp.ads" 94 0 0# 
   (a : bits_4__ref) : bits_4 =
  a.bits_4__content
 
 meta "model_projection" function bits_4__ref___projection
 
 meta "inline : no" function bits_4__ref___projection
 
 val bits_4__havoc #"s-unstyp.ads" 94 0 0# 
   (x : bits_4__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tbytes_fP1" defined at s-unstyp.ads:97, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__Tbytes_fP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tbytes_fP1 #"s-unstyp.ads" 97 0 0# 
 
 function first #"s-unstyp.ads" 97 0 0# 
   : int =
  1
 
 function last #"s-unstyp.ads" 97 0 0# 
   : int =
  4
 
 predicate in_range #"s-unstyp.ads" 97 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tbytes_fP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tbytes_fP1__ref #"s-unstyp.ads" 97 0 0# =
  { mutable tbytes_fP1__content "model_trace:" : tbytes_fP1 }
 
 function tbytes_fP1__ref___projection #"s-unstyp.ads" 97 0 0# 
   (a : tbytes_fP1__ref) : tbytes_fP1 =
  a.tbytes_fP1__content
 
 meta "model_projection" function tbytes_fP1__ref___projection
 
 meta "inline : no" function tbytes_fP1__ref___projection
 
 val tbytes_fP1__havoc #"s-unstyp.ads" 97 0 0# 
   (x : tbytes_fP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "bytes_f" defined at s-unstyp.ads:97, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__bytes_f
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__unsigned_types__packed_byte
 use        Array__Int__System__unsigned_types__packed_byte

 type component_type #"s-unstyp.ads" 97 0 0# =
  System__unsigned_types__packed_byte.packed_byte
 
 function first #"s-unstyp.ads" 53 0 0# 
   : int =
  1
 
 function last #"s-unstyp.ads" 53 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__System__unsigned_types__packed_byte.map, 
 function array_bool_eq = Array__Int__System__unsigned_types__packed_byte.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "value" defined at s-unstyp.ads:101, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_left__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"s-unstyp.ads" 101 0 0# "model" "model_trace:27535" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_left__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_left__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 102 0 0# "model" "model_trace:27544" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_left__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"s-unstyp.ads" 105 0 0# "model" "model_trace:27563" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 106 0 0# "model" "model_trace:27572" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right_arithmetic__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"s-unstyp.ads" 109 0 0# "model" "model_trace:27591" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right_arithmetic__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right_arithmetic__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 110 0 0# "model" "model_trace:27600" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:110, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right_arithmetic__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_left__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"s-unstyp.ads" 113 0 0# "model" "model_trace:27619" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_left__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_left__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 114 0 0# "model" "model_trace:27628" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_left__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:117, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_right__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"s-unstyp.ads" 117 0 0# "model" "model_trace:27647" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:117, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_right__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_right__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 118 0 0# "model" "model_trace:27656" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_right__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_left__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"s-unstyp.ads" 121 0 0# "model" "model_trace:27675" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 45 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:121, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_left__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_left__2__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 122 0 0# "model" "model_trace:27684" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:122, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_left__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"s-unstyp.ads" 125 0 0# "model" "model_trace:27703" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 45 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right__2__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 126 0 0# "model" "model_trace:27712" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:126, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right_arithmetic__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"s-unstyp.ads" 129 0 0# "model" "model_trace:27731" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 45 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:129, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right_arithmetic__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right_arithmetic__2__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 130 0 0# "model" "model_trace:27740" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right_arithmetic__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:133, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_left__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"s-unstyp.ads" 133 0 0# "model" "model_trace:27759" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 45 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:133, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_left__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_left__2__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 134 0 0# "model" "model_trace:27768" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_left__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_right__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"s-unstyp.ads" 137 0 0# "model" "model_trace:27787" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 45 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:137, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_right__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_right__2__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 138 0 0# "model" "model_trace:27796" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_right__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_left__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"s-unstyp.ads" 141 0 0# "model" "model_trace:27815" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 46 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:141, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_left__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_left__3__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 142 0 0# "model" "model_trace:27824" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_left__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"s-unstyp.ads" 145 0 0# "model" "model_trace:27843" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 46 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right__3__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 146 0 0# "model" "model_trace:27852" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:146, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right_arithmetic__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"s-unstyp.ads" 149 0 0# "model" "model_trace:27871" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 46 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right_arithmetic__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right_arithmetic__3__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 150 0 0# "model" "model_trace:27880" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:150, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right_arithmetic__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:153, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_left__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"s-unstyp.ads" 153 0 0# "model" "model_trace:27899" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 46 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:153, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_left__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_left__3__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 154 0 0# "model" "model_trace:27908" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:154, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_left__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:157, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_right__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"s-unstyp.ads" 157 0 0# "model" "model_trace:27927" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 46 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:157, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_right__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:158, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_right__3__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 158 0 0# "model" "model_trace:27936" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:158, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_right__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:161, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_left__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"s-unstyp.ads" 161 0 0# "model" "model_trace:27955" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:161, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_left__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:162, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_left__4__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 162 0 0# "model" "model_trace:27964" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:162, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_left__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"s-unstyp.ads" 165 0 0# "model" "model_trace:27983" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:166, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right__4__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 166 0 0# "model" "model_trace:27992" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:166, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right_arithmetic__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"s-unstyp.ads" 169 0 0# "model" "model_trace:28011" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:169, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right_arithmetic__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right_arithmetic__4__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 170 0 0# "model" "model_trace:28020" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:170, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right_arithmetic__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:173, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_left__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"s-unstyp.ads" 173 0 0# "model" "model_trace:28039" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:173, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_left__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_left__4__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 174 0 0# "model" "model_trace:28048" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_left__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_right__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"s-unstyp.ads" 177 0 0# "model" "model_trace:28067" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_right__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:178, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_right__4__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 178 0 0# "model" "model_trace:28076" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:178, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_right__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:181, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_left__5__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"s-unstyp.ads" 181 0 0# "model" "model_trace:28095" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 48 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:181, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_left__5__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:182, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_left__5__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 182 0 0# "model" "model_trace:28104" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:182, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_left__5__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:185, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right__5__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"s-unstyp.ads" 185 0 0# "model" "model_trace:28123" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 48 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:185, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right__5__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right__5__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 186 0 0# "model" "model_trace:28132" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right__5__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right_arithmetic__5__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"s-unstyp.ads" 189 0 0# "model" "model_trace:28151" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 48 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right_arithmetic__5__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:190, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__shift_right_arithmetic__5__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 190 0 0# "model" "model_trace:28160" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:190, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__shift_right_arithmetic__5__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_left__5__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"s-unstyp.ads" 193 0 0# "model" "model_trace:28179" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 48 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:193, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_left__5__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:194, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_left__5__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 194 0 0# "model" "model_trace:28188" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:194, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_left__5__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at s-unstyp.ads:197, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_right__5__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"s-unstyp.ads" 197 0 0# "model" "model_trace:28207" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-unstyp.ads" 48 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-unstyp.ads:197, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_right__5__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at s-unstyp.ads:198, created in Gnat2Why.Decls.Translate_Constant *)
module System__unsigned_types__rotate_right__5__amount
 use import "_gnatprove_standard".Main

 function amount #"s-unstyp.ads" 198 0 0# "model" "model_trace:28216" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at s-unstyp.ads:198, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__unsigned_types__rotate_right__5__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "packed_bytes" defined at s-unstyp.ads:212, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__packed_bytes
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__natural
 use        System__unsigned_types__packed_byte
 use        Array__Int__System__unsigned_types__packed_byte

 type component_type #"system.ads" 1 0 0# =
  System__unsigned_types__packed_byte.packed_byte
 
 function index_1_id #"s-unstyp.ads" 53 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__unsigned_types__packed_byte.map, 
 function array_bool_eq = Array__Int__System__unsigned_types__packed_byte.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__natural.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type packed_bytes #"s-unstyp.ads" 212 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type packed_bytes__ref #"s-unstyp.ads" 212 0 0# =
  { mutable packed_bytes__content "model_trace:" : packed_bytes }
 
 function packed_bytes__ref___projection #"s-unstyp.ads" 212 0 0# 
   (a : packed_bytes__ref) : packed_bytes =
  a.packed_bytes__content
 
 meta "model_projection" function packed_bytes__ref___projection
 
 meta "inline : no" function packed_bytes__ref___projection
 
 val packed_bytes__havoc #"s-unstyp.ads" 212 0 0# 
   (x : packed_bytes__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "packed_bytes_unaligned" defined at s-unstyp.ads:213, created in Gnat2Why.Types.Translate_Type *)
module System__unsigned_types__packed_bytes_unaligned
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__natural
 use        System__unsigned_types__packed_byte
 use        Array__Int__System__unsigned_types__packed_byte

 type component_type #"s-unstyp.ads" 212 0 0# =
  System__unsigned_types__packed_byte.packed_byte
 
 function index_1_id #"s-unstyp.ads" 53 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__unsigned_types__packed_byte.map, 
 function array_bool_eq = Array__Int__System__unsigned_types__packed_byte.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__natural.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type packed_bytes_unaligned #"s-unstyp.ads" 213 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type packed_bytes_unaligned__ref #"s-unstyp.ads" 213 0 0# =
  { mutable packed_bytes_unaligned__content "model_trace:" : packed_bytes_unaligned }
 
 function packed_bytes_unaligned__ref___projection #"s-unstyp.ads" 213 0 0# 
   (a : packed_bytes_unaligned__ref) : packed_bytes_unaligned =
  a.packed_bytes_unaligned__content
 
 meta "model_projection" function packed_bytes_unaligned__ref___projection
 
 meta "inline : no" function packed_bytes_unaligned__ref___projection
 
 val packed_bytes_unaligned__havoc #"s-unstyp.ads" 213 0 0# 
   (x : packed_bytes_unaligned__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "source" defined at a-unccon.ads:17 instantiated at s-taskin.ads:121, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__to_task_idGP5638__source
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type source #"a-unccon.ads" 17 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-unccon.ads" 17 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function first #"a-unccon.ads" 17 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"a-unccon.ads" 17 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"a-unccon.ads" 17 0 0# 
   : int =
  0
 
 function last_int #"a-unccon.ads" 17 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"a-unccon.ads" 17 0 0# 
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int #"a-unccon.ads" 17 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt64 with
 type t = source, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type source__ref #"a-unccon.ads" 17 0 0# =
  { mutable source__content "model_trace:" : source }
 
 function source__ref_2__projection #"a-unccon.ads" 17 0 0# 
   (a : source__ref) : source =
  a.source__content
 
 meta "model_projection" function source__ref_2__projection
 
 meta "inline : no" function source__ref_2__projection
 
 val source__havoc #"a-unccon.ads" 17 0 0# 
   (x : source__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at a-unccon.ads:20 instantiated at s-taskin.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__to_task_idGP5638__to_task_id__s
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function s #"a-unccon.ads" 20 0 0# "model" "model_trace:26660" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"a-unccon.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-unccon.ads:20 instantiated at s-taskin.ads:121, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__tasking__to_task_idGP5638__to_task_id__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "target" defined at a-unccon.ads:18 instantiated at s-taskin.ads:124, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__to_addressGP5753__target
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type target #"a-unccon.ads" 18 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-unccon.ads" 18 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function first #"a-unccon.ads" 18 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"a-unccon.ads" 18 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"a-unccon.ads" 18 0 0# 
   : int =
  0
 
 function last_int #"a-unccon.ads" 18 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"a-unccon.ads" 18 0 0# 
   (x : BV64.t)  =
  ( (BV64.ule first x) /\ (BV64.ule x last) )
 
 predicate in_range_int #"a-unccon.ads" 18 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt64 with
 type t = target, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type target__ref #"a-unccon.ads" 18 0 0# =
  { mutable target__content "model_trace:" : target }
 
 function target__ref___projection #"a-unccon.ads" 18 0 0# 
   (a : target__ref) : target =
  a.target__content
 
 meta "model_projection" function target__ref___projection
 
 meta "inline : no" function target__ref___projection
 
 val target__havoc #"a-unccon.ads" 18 0 0# 
   (x : target__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "task_states" defined at s-taskin.ads:132, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__task_states
 use import "_gnatprove_standard".Main
 use import "int".Int

 type task_states #"s-taskin.ads" 132 0 0# 
 
 function first #"s-taskin.ads" 132 0 0# 
   : int =
  0
 
 function last #"s-taskin.ads" 132 0 0# 
   : int =
  17
 
 predicate in_range #"s-taskin.ads" 132 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = task_states, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type task_states__ref #"s-taskin.ads" 132 0 0# =
  { mutable task_states__content "model_trace:" : task_states }
 
 function task_states__ref___projection #"s-taskin.ads" 132 0 0# 
   (a : task_states__ref) : task_states =
  a.task_states__content
 
 meta "model_projection" function task_states__ref___projection
 
 meta "inline : no" function task_states__ref___projection
 
 val task_states__havoc #"s-taskin.ads" 132 0 0# 
   (x : task_states__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "call_modes" defined at s-taskin.ads:212, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__call_modes
 use import "_gnatprove_standard".Main
 use import "int".Int

 type call_modes #"s-taskin.ads" 212 0 0# 
 
 function first #"s-taskin.ads" 212 0 0# 
   : int =
  0
 
 function last #"s-taskin.ads" 212 0 0# 
   : int =
  3
 
 predicate in_range #"s-taskin.ads" 212 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = call_modes, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type call_modes__ref #"s-taskin.ads" 212 0 0# =
  { mutable call_modes__content "model_trace:" : call_modes }
 
 function call_modes__ref___projection #"s-taskin.ads" 212 0 0# 
   (a : call_modes__ref) : call_modes =
  a.call_modes__content
 
 meta "model_projection" function call_modes__ref___projection
 
 meta "inline : no" function call_modes__ref___projection
 
 val call_modes__havoc #"s-taskin.ads" 212 0 0# 
   (x : call_modes__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "select_modes" defined at s-taskin.ads:215, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__select_modes
 use import "_gnatprove_standard".Main
 use import "int".Int

 type select_modes #"s-taskin.ads" 215 0 0# 
 
 function first #"s-taskin.ads" 215 0 0# 
   : int =
  0
 
 function last #"s-taskin.ads" 215 0 0# 
   : int =
  3
 
 predicate in_range #"s-taskin.ads" 215 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = select_modes, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type select_modes__ref #"s-taskin.ads" 215 0 0# =
  { mutable select_modes__content "model_trace:" : select_modes }
 
 function select_modes__ref___projection #"s-taskin.ads" 215 0 0# 
   (a : select_modes__ref) : select_modes =
  a.select_modes__content
 
 meta "model_projection" function select_modes__ref___projection
 
 meta "inline : no" function select_modes__ref___projection
 
 val select_modes__havoc #"s-taskin.ads" 215 0 0# 
   (x : select_modes__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "delay_modes" defined at s-taskin.ads:217, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__delay_modes
 use import "_gnatprove_standard".Main
 use import "int".Int

 type delay_modes #"s-taskin.ads" 217 0 0# 
 
 function first #"s-taskin.ads" 217 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-taskin.ads" 217 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-taskin.ads" 217 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = delay_modes, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type delay_modes__ref #"s-taskin.ads" 217 0 0# =
  { mutable delay_modes__content "model_trace:" : delay_modes }
 
 function delay_modes__ref___projection #"s-taskin.ads" 217 0 0# 
   (a : delay_modes__ref) : delay_modes =
  a.delay_modes__content
 
 meta "model_projection" function delay_modes__ref___projection
 
 meta "inline : no" function delay_modes__ref___projection
 
 val delay_modes__havoc #"s-taskin.ads" 217 0 0# 
   (x : delay_modes__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tentry_indexB" defined at s-taskin.ads:231, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__Tentry_indexB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tentry_indexB #"s-taskin.ads" 231 0 0# 
 
 function first #"s-taskin.ads" 231 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-taskin.ads" 231 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-taskin.ads" 231 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tentry_indexB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tentry_indexB__ref #"s-taskin.ads" 231 0 0# =
  { mutable tentry_indexB__content "model_trace:" : tentry_indexB }
 
 function tentry_indexB__ref___projection #"s-taskin.ads" 231 0 0# 
   (a : tentry_indexB__ref) : tentry_indexB =
  a.tentry_indexB__content
 
 meta "model_projection" function tentry_indexB__ref___projection
 
 meta "inline : no" function tentry_indexB__ref___projection
 
 val tentry_indexB__havoc #"s-taskin.ads" 231 0 0# 
   (x : tentry_indexB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "entry_index" defined at s-taskin.ads:231, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__entry_index
 use import "_gnatprove_standard".Main
 use import "int".Int

 type entry_index #"s-taskin.ads" 231 0 0# 
 
 function first #"s-taskin.ads" 231 0 0# 
   : int =
  ( -2 )
 
 function last #"s-taskin.ads" 231 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-taskin.ads" 231 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = entry_index, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type entry_index__ref #"s-taskin.ads" 231 0 0# =
  { mutable entry_index__content "model_trace:" : entry_index }
 
 function entry_index__ref___projection #"s-taskin.ads" 231 0 0# 
   (a : entry_index__ref) : entry_index =
  a.entry_index__content
 
 meta "model_projection" function entry_index__ref___projection
 
 meta "inline : no" function entry_index__ref___projection
 
 val entry_index__havoc #"s-taskin.ads" 231 0 0# 
   (x : entry_index__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Ttask_entry_indexB" defined at s-taskin.ads:237, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__Ttask_entry_indexB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ttask_entry_indexB #"s-taskin.ads" 237 0 0# 
 
 function first #"s-taskin.ads" 237 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-taskin.ads" 237 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-taskin.ads" 237 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ttask_entry_indexB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ttask_entry_indexB__ref #"s-taskin.ads" 237 0 0# =
  { mutable ttask_entry_indexB__content "model_trace:" : ttask_entry_indexB }
 
 function ttask_entry_indexB__ref___projection #"s-taskin.ads" 237 0 0# 
   (a : ttask_entry_indexB__ref) : ttask_entry_indexB =
  a.ttask_entry_indexB__content
 
 meta "model_projection" function ttask_entry_indexB__ref___projection
 
 meta "inline : no" function ttask_entry_indexB__ref___projection
 
 val ttask_entry_indexB__havoc #"s-taskin.ads" 237 0 0# 
   (x : ttask_entry_indexB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "task_entry_index" defined at s-taskin.ads:237, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__task_entry_index
 use import "_gnatprove_standard".Main
 use import "int".Int

 type task_entry_index #"s-taskin.ads" 237 0 0# 
 
 function first #"s-taskin.ads" 237 0 0# 
   : int =
  0
 
 function last #"s-taskin.ads" 237 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-taskin.ads" 237 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = task_entry_index, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type task_entry_index__ref #"s-taskin.ads" 237 0 0# =
  { mutable task_entry_index__content "model_trace:" : task_entry_index }
 
 function task_entry_index__ref___projection #"s-taskin.ads" 237 0 0# 
   (a : task_entry_index__ref) : task_entry_index =
  a.task_entry_index__content
 
 meta "model_projection" function task_entry_index__ref___projection
 
 meta "inline : no" function task_entry_index__ref___projection
 
 val task_entry_index__havoc #"s-taskin.ads" 237 0 0# 
   (x : task_entry_index__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "entry_call_state" defined at s-taskin.ads:261, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__entry_call_state
 use import "_gnatprove_standard".Main
 use import "int".Int

 type entry_call_state #"s-taskin.ads" 261 0 0# 
 
 function first #"s-taskin.ads" 261 0 0# 
   : int =
  0
 
 function last #"s-taskin.ads" 261 0 0# 
   : int =
  5
 
 predicate in_range #"s-taskin.ads" 261 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = entry_call_state, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type entry_call_state__ref #"s-taskin.ads" 261 0 0# =
  { mutable entry_call_state__content "model_trace:" : entry_call_state }
 
 function entry_call_state__ref___projection #"s-taskin.ads" 261 0 0# 
   (a : entry_call_state__ref) : entry_call_state =
  a.entry_call_state__content
 
 meta "model_projection" function entry_call_state__ref___projection
 
 meta "inline : no" function entry_call_state__ref___projection
 
 val entry_call_state__havoc #"s-taskin.ads" 261 0 0# 
   (x : entry_call_state__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "cause_of_termination" defined at s-taskin.ads:352, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__cause_of_termination
 use import "_gnatprove_standard".Main
 use import "int".Int

 type cause_of_termination #"s-taskin.ads" 352 0 0# 
 
 function first #"s-taskin.ads" 352 0 0# 
   : int =
  0
 
 function last #"s-taskin.ads" 352 0 0# 
   : int =
  2
 
 predicate in_range #"s-taskin.ads" 352 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = cause_of_termination, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type cause_of_termination__ref #"s-taskin.ads" 352 0 0# =
  { mutable cause_of_termination__content "model_trace:" : cause_of_termination }
 
 function cause_of_termination__ref___projection #"s-taskin.ads" 352 0 0# 
   (a : cause_of_termination__ref) : cause_of_termination =
  a.cause_of_termination__content
 
 meta "model_projection" function cause_of_termination__ref___projection
 
 meta "inline : no" function cause_of_termination__ref___projection
 
 val cause_of_termination__havoc #"s-taskin.ads" 352 0 0# 
   (x : cause_of_termination__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "dispatching_domain" defined at s-taskin.ads:379, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Bool
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function index_I1_one #"s-taskin.ads" 352 0 0# 
   : int =
  1
 
 type component_type #"s-taskin.ads" 352 0 0# =
  bool
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"s-taskin.ads" 352 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = map, 
 function get = get, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "dispatching_domain" defined at s-taskin.ads:379, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__dispatching_domain
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__multiprocessors__Tcpu_rangeB
 use        System__multiprocessors__cpu
 use        Array__Int__Bool

 type component_type #"s-taskin.ads" 352 0 0# =
  bool
 
 function index_1_id #"s-taskin.ads" 352 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Bool.map, 
 function array_bool_eq = Array__Int__Bool.bool_eq, 
 type index_base_type = System__multiprocessors__Tcpu_rangeB.tcpu_rangeB, 
 type index_rep_type = int, 
 function to_rep = System__multiprocessors__Tcpu_rangeB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = System__multiprocessors__Tcpu_rangeB.in_range, 
 predicate index_dynamic_property = System__multiprocessors__cpu.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type dispatching_domain #"s-taskin.ads" 379 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type dispatching_domain__ref #"s-taskin.ads" 379 0 0# =
  { mutable dispatching_domain__content "model_trace:" : dispatching_domain }
 
 function dispatching_domain__ref___projection #"s-taskin.ads" 379 0 0# 
   (a : dispatching_domain__ref) : dispatching_domain =
  a.dispatching_domain__content
 
 meta "model_projection" function dispatching_domain__ref___projection
 
 meta "inline : no" function dispatching_domain__ref___projection
 
 val dispatching_domain__havoc #"s-taskin.ads" 379 0 0# 
   (x : dispatching_domain__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "array_allocated_tasks" defined at s-taskin.ads:399, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__natural
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural

 function index_I1_one #"s-taskin.ads" 379 0 0# 
   : int =
  1
 
 type component_type #"s-taskin.ads" 379 0 0# =
  Standard__natural.natural
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__natural.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "array_allocated_tasks" defined at s-taskin.ads:399, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__array_allocated_tasks
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        System__multiprocessors__Tcpu_rangeB
 use        System__multiprocessors__cpu
 use        Array__Int__Standard__natural

 type component_type #"system.ads" 1 0 0# =
  Standard__natural.natural
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__natural.map, 
 function array_bool_eq = Array__Int__Standard__natural.bool_eq, 
 type index_base_type = System__multiprocessors__Tcpu_rangeB.tcpu_rangeB, 
 type index_rep_type = int, 
 function to_rep = System__multiprocessors__Tcpu_rangeB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = System__multiprocessors__Tcpu_rangeB.in_range, 
 predicate index_dynamic_property = System__multiprocessors__cpu.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type array_allocated_tasks #"s-taskin.ads" 399 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type array_allocated_tasks__ref #"s-taskin.ads" 399 0 0# =
  { mutable array_allocated_tasks__content "model_trace:" : array_allocated_tasks }
 
 function array_allocated_tasks__ref___projection #"s-taskin.ads" 399 0 0# 
   (a : array_allocated_tasks__ref) : array_allocated_tasks =
  a.array_allocated_tasks__content
 
 meta "model_projection" function array_allocated_tasks__ref___projection
 
 meta "inline : no" function array_allocated_tasks__ref___projection
 
 val array_allocated_tasks__havoc #"s-taskin.ads" 399 0 0# 
   (x : array_allocated_tasks__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "activation_chain" defined at s-taskin.ads:435, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__tasking__activation_chain__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 type __split_fields #"s-taskin.ads" 399 0 0# =
  { rec__system__tasking__activation_chain "model_trace:.15894" : Main.__private }
 
 function __split_fields_Activation_Chain__projection #"s-taskin.ads" 435 0 0# "model_trace:.15894" 
   (a : __split_fields) : Main.__private =
  a.rec__system__tasking__activation_chain
 
 meta "model_projection" function __split_fields_Activation_Chain__projection
 
 meta "inline : no" function __split_fields_Activation_Chain__projection
 
 type __split_fields__ref #"s-taskin.ads" 435 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_22__projection #"s-taskin.ads" 435 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_22__projection
 
 meta "inline : no" function __split_fields__ref_22__projection
 
 val __split_fields__havoc #"s-taskin.ads" 435 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-taskin.ads" 435 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_22__projection #"s-taskin.ads" 435 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_22__projection
 
 meta "inline : no" function __rep_22__projection
 
 function to_base #"s-taskin.ads" 435 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-taskin.ads" 435 0 0# 
   (a : __rep) : __rep =
  a
 
 val rec__system__tasking__activation_chain_ #"s-taskin.ads" 435 0 0# 
   (a : __rep) : Main.__private
  requires { true }
  ensures { (result = a.__split_fields.rec__system__tasking__activation_chain) }
 
 function user_eq #"s-taskin.ads" 435 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "activation_chain" defined at s-taskin.ads:435, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__activation_chain
 use export System__tasking__activation_chain__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type activation_chain #"s-taskin.ads" 435 0 0# =
  __rep
 
 function value__size #"s-taskin.ads" 435 0 0# 
   : int
 
 function object__size #"s-taskin.ads" 435 0 0# 
   (a : activation_chain) : int
 
 function value__alignment #"s-taskin.ads" 435 0 0# 
   : int
 
 function object__alignment #"s-taskin.ads" 435 0 0# 
   (a : activation_chain) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : activation_chain.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : activation_chain.
   ((object__alignment a) >= 0))
 
 function dummy #"s-taskin.ads" 435 0 0# 
   : activation_chain
 
 type activation_chain__ref #"s-taskin.ads" 435 0 0# =
  { mutable activation_chain__content "model_trace:" : activation_chain }
 
 function activation_chain__ref___projection #"s-taskin.ads" 435 0 0# 
   (a : activation_chain__ref) : activation_chain =
  a.activation_chain__content
 
 meta "model_projection" function activation_chain__ref___projection
 
 meta "inline : no" function activation_chain__ref___projection
 
 val activation_chain__havoc #"s-taskin.ads" 435 0 0# 
   (x : activation_chain__ref) : unit
  writes {x}

end

(* Module for possibly declaring a logic function for "detect_blocking" defined at s-taskin.ads:447, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__tasking__detect_blocking
 use import "_gnatprove_standard".Main

 function detect_blocking #"s-taskin.ads" 447 0 0# 
   (__void_param : unit) : bool

end

(* Module for axiomatizing type "bit_array" defined at s-taskin.ads:456, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__bit_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer
 use        Array__Int__Bool

 type component_type #"s-taskin.ads" 447 0 0# =
  bool
 
 function index_1_id #"s-taskin.ads" 447 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Bool.map, 
 function array_bool_eq = Array__Int__Bool.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__integer.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type bit_array #"s-taskin.ads" 456 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type bit_array__ref #"s-taskin.ads" 456 0 0# =
  { mutable bit_array__content "model_trace:" : bit_array }
 
 function bit_array__ref___projection #"s-taskin.ads" 456 0 0# 
   (a : bit_array__ref) : bit_array =
  a.bit_array__content
 
 meta "model_projection" function bit_array__ref___projection
 
 meta "inline : no" function bit_array__ref___projection
 
 val bit_array__havoc #"s-taskin.ads" 456 0 0# 
   (x : bit_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tdebug_event_arrayP1" defined at s-taskin.ads:459, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__Tdebug_event_arrayP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tdebug_event_arrayP1 #"s-taskin.ads" 459 0 0# 
 
 function first #"s-taskin.ads" 459 0 0# 
   : int =
  1
 
 function last #"s-taskin.ads" 459 0 0# 
   : int =
  16
 
 predicate in_range #"s-taskin.ads" 459 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tdebug_event_arrayP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tdebug_event_arrayP1__ref #"s-taskin.ads" 459 0 0# =
  { mutable tdebug_event_arrayP1__content "model_trace:" : tdebug_event_arrayP1 }
 
 function tdebug_event_arrayP1__ref___projection #"s-taskin.ads" 459 0 0# 
   (a : tdebug_event_arrayP1__ref) : tdebug_event_arrayP1 =
  a.tdebug_event_arrayP1__content
 
 meta "model_projection" function tdebug_event_arrayP1__ref___projection
 
 meta "inline : no" function tdebug_event_arrayP1__ref___projection
 
 val tdebug_event_arrayP1__havoc #"s-taskin.ads" 459 0 0# 
   (x : tdebug_event_arrayP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "debug_event_array" defined at s-taskin.ads:459, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__debug_event_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Bool

 type component_type #"s-taskin.ads" 459 0 0# =
  bool
 
 function first #"s-taskin.ads" 459 0 0# 
   : int =
  1
 
 function last #"s-taskin.ads" 459 0 0# 
   : int =
  16
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Bool.map, 
 function array_bool_eq = Array__Int__Bool.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T13s" defined at s-taskin.ads:556, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__common_atcb__T13s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t13s #"s-taskin.ads" 556 0 0# 
 
 function first #"s-taskin.ads" 556 0 0# 
   : int =
  1
 
 function last #"s-taskin.ads" 556 0 0# 
   : int =
  256
 
 predicate in_range #"s-taskin.ads" 556 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t13s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t13s__ref #"s-taskin.ads" 556 0 0# =
  { mutable t13s__content "model_trace:" : t13s }
 
 function t13s__ref___projection #"s-taskin.ads" 556 0 0# 
   (a : t13s__ref) : t13s =
  a.t13s__content
 
 meta "model_projection" function t13s__ref___projection
 
 meta "inline : no" function t13s__ref___projection
 
 val t13s__havoc #"s-taskin.ads" 556 0 0# 
   (x : t13s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T14s" defined at s-taskin.ads:556, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__common_atcb__T14s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-taskin.ads" 556 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  256
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "master_level" defined at s-taskin.ads:757, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__master_level
 use import "_gnatprove_standard".Main
 use import "int".Int

 type master_level #"s-taskin.ads" 757 0 0# 
 
 function first #"s-taskin.ads" 757 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-taskin.ads" 757 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-taskin.ads" 757 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = master_level, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type master_level__ref #"s-taskin.ads" 757 0 0# =
  { mutable master_level__content "model_trace:" : master_level }
 
 function master_level__ref___projection #"s-taskin.ads" 757 0 0# 
   (a : master_level__ref) : master_level =
  a.master_level__content
 
 meta "model_projection" function master_level__ref___projection
 
 meta "inline : no" function master_level__ref___projection
 
 val master_level__havoc #"s-taskin.ads" 757 0 0# 
   (x : master_level__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "master_id" defined at s-taskin.ads:758, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__master_id
 use import "_gnatprove_standard".Main
 use import "int".Int

 type master_id #"s-taskin.ads" 758 0 0# 
 
 function first #"s-taskin.ads" 758 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-taskin.ads" 758 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-taskin.ads" 758 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = master_id, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type master_id__ref #"s-taskin.ads" 758 0 0# =
  { mutable master_id__content "model_trace:" : master_id }
 
 function master_id__ref___projection #"s-taskin.ads" 758 0 0# 
   (a : master_id__ref) : master_id =
  a.master_id__content
 
 meta "model_projection" function master_id__ref___projection
 
 meta "inline : no" function master_id__ref___projection
 
 val master_id__havoc #"s-taskin.ads" 758 0 0# 
   (x : master_id__ref) : unit
  writes {x}

end

(* Module for defining the constant "foreign_task_level" defined at s-taskin.ads:770, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__foreign_task_level
 use import "_gnatprove_standard".Main

 function foreign_task_level #"s-taskin.ads" 770 0 0# "model" "model_trace:16444" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 757 0 0# 
   : int

end

(* Module for defining the constant "environment_task_level" defined at s-taskin.ads:771, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__environment_task_level
 use import "_gnatprove_standard".Main

 function environment_task_level #"s-taskin.ads" 771 0 0# "model" "model_trace:16454" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 757 0 0# 
   : int

end

(* Module for defining the constant "independent_task_level" defined at s-taskin.ads:772, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__independent_task_level
 use import "_gnatprove_standard".Main

 function independent_task_level #"s-taskin.ads" 772 0 0# "model" "model_trace:16464" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 757 0 0# 
   : int

end

(* Module for defining the constant "library_task_level" defined at s-taskin.ads:773, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__library_task_level
 use import "_gnatprove_standard".Main

 function library_task_level #"s-taskin.ads" 773 0 0# "model" "model_trace:16474" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 757 0 0# 
   : int

end

(* Module for defining the constant "unspecified_priority" defined at s-taskin.ads:779, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__unspecified_priority
 use import "_gnatprove_standard".Main

 function unspecified_priority #"s-taskin.ads" 779 0 0# "model" "model_trace:16484" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "priority_not_boosted" defined at s-taskin.ads:781, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__priority_not_boosted
 use import "_gnatprove_standard".Main

 function priority_not_boosted #"s-taskin.ads" 781 0 0# "model" "model_trace:16500" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "rendezvous_priority" defined at s-taskin.ads:784, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__rendezvous_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type rendezvous_priority #"s-taskin.ads" 784 0 0# 
 
 function first #"s-taskin.ads" 784 0 0# 
   : int =
  ( -1 )
 
 function last #"s-taskin.ads" 784 0 0# 
   : int =
  63
 
 predicate in_range #"s-taskin.ads" 784 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = rendezvous_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type rendezvous_priority__ref #"s-taskin.ads" 784 0 0# =
  { mutable rendezvous_priority__content "model_trace:" : rendezvous_priority }
 
 function rendezvous_priority__ref___projection #"s-taskin.ads" 784 0 0# 
   (a : rendezvous_priority__ref) : rendezvous_priority =
  a.rendezvous_priority__content
 
 meta "model_projection" function rendezvous_priority__ref___projection
 
 meta "inline : no" function rendezvous_priority__ref___projection
 
 val rendezvous_priority__havoc #"s-taskin.ads" 784 0 0# 
   (x : rendezvous_priority__ref) : unit
  writes {x}

end

(* Module for defining the constant "max_select" defined at s-taskin.ads:800, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__max_select
 use import "_gnatprove_standard".Main

 function max_select #"s-taskin.ads" 800 0 0# "model" "model_trace:16553" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "select_index" defined at s-taskin.ads:803, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__select_index
 use import "_gnatprove_standard".Main
 use import "int".Int

 type select_index #"s-taskin.ads" 803 0 0# 
 
 function first #"s-taskin.ads" 803 0 0# 
   : int =
  0
 
 function last #"s-taskin.ads" 803 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-taskin.ads" 803 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = select_index, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type select_index__ref #"s-taskin.ads" 803 0 0# =
  { mutable select_index__content "model_trace:" : select_index }
 
 function select_index__ref___projection #"s-taskin.ads" 803 0 0# 
   (a : select_index__ref) : select_index =
  a.select_index__content
 
 meta "model_projection" function select_index__ref___projection
 
 meta "inline : no" function select_index__ref___projection
 
 val select_index__havoc #"s-taskin.ads" 803 0 0# 
   (x : select_index__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "positive_select_index" defined at s-taskin.ads:806, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__positive_select_index
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive_select_index #"s-taskin.ads" 806 0 0# 
 
 function first #"s-taskin.ads" 806 0 0# 
   : int =
  1
 
 function last #"s-taskin.ads" 806 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-taskin.ads" 806 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive_select_index, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type positive_select_index__ref #"s-taskin.ads" 806 0 0# =
  { mutable positive_select_index__content "model_trace:" : positive_select_index }
 
 function positive_select_index__ref___projection #"s-taskin.ads" 806 0 0# 
   (a : positive_select_index__ref) : positive_select_index =
  a.positive_select_index__content
 
 meta "model_projection" function positive_select_index__ref___projection
 
 meta "inline : no" function positive_select_index__ref___projection
 
 val positive_select_index__havoc #"s-taskin.ads" 806 0 0# 
   (x : positive_select_index__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "accept_alternative" defined at s-taskin.ads:809, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module System__tasking__accept_alternative__rep
 use import "_gnatprove_standard".Main
 use        System__tasking__task_entry_index

 type __split_fields #"s-taskin.ads" 806 0 0# =
  { rec__system__tasking__accept_alternative__null_body "model_trace:.16605" : bool; rec__system__tasking__accept_alternative__s "model_trace:.16615" : System__tasking__task_entry_index.task_entry_index }
 
 function __split_fields_Null_Body__projection #"s-taskin.ads" 237 0 0# "model_trace:.16605" 
   (a : __split_fields) : bool =
  a.rec__system__tasking__accept_alternative__null_body
 
 meta "model_projection" function __split_fields_Null_Body__projection
 
 meta "inline : no" function __split_fields_Null_Body__projection
 
 function __split_fields_S__projection #"s-taskin.ads" 809 0 0# "model_trace:.16615" 
   (a : __split_fields) : System__tasking__task_entry_index.task_entry_index =
  a.rec__system__tasking__accept_alternative__s
 
 meta "model_projection" function __split_fields_S__projection
 
 meta "inline : no" function __split_fields_S__projection
 
 type __split_fields__ref #"s-taskin.ads" 809 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_23__projection #"s-taskin.ads" 809 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_23__projection
 
 meta "inline : no" function __split_fields__ref_23__projection
 
 val __split_fields__havoc #"s-taskin.ads" 809 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-taskin.ads" 809 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_23__projection #"s-taskin.ads" 809 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_23__projection
 
 meta "inline : no" function __rep_23__projection
 
 function to_base #"s-taskin.ads" 809 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-taskin.ads" 809 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate system__tasking__accept_alternative__null_body__pred #"s-taskin.ads" 809 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__tasking__accept_alternative__null_body_ #"s-taskin.ads" 809 0 0# 
   (a : __rep) : bool
  requires { (system__tasking__accept_alternative__null_body__pred a) }
  ensures { (result = a.__split_fields.rec__system__tasking__accept_alternative__null_body) }
 
 predicate system__tasking__accept_alternative__s__pred #"s-taskin.ads" 809 0 0# 
   (a : __rep)  =
  true
 
 val rec__system__tasking__accept_alternative__s_ #"s-taskin.ads" 809 0 0# 
   (a : __rep) : System__tasking__task_entry_index.task_entry_index
  requires { (system__tasking__accept_alternative__s__pred a) }
  ensures { (result = a.__split_fields.rec__system__tasking__accept_alternative__s) }
 
 function bool_eq #"s-taskin.ads" 809 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( (a.__split_fields.rec__system__tasking__accept_alternative__null_body = b.__split_fields.rec__system__tasking__accept_alternative__null_body) /\ ((System__tasking__task_entry_index.to_rep a.__split_fields.rec__system__tasking__accept_alternative__s) = (System__tasking__task_entry_index.to_rep b.__split_fields.rec__system__tasking__accept_alternative__s)) )) then (
   True) else (
   False))
 
 function user_eq #"s-taskin.ads" 809 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "accept_alternative" defined at s-taskin.ads:809, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__accept_alternative
 use export System__tasking__accept_alternative__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type accept_alternative #"s-taskin.ads" 809 0 0# =
  __rep
 
 function value__size #"s-taskin.ads" 809 0 0# 
   : int
 
 function object__size #"s-taskin.ads" 809 0 0# 
   (a : accept_alternative) : int
 
 function value__alignment #"s-taskin.ads" 809 0 0# 
   : int
 
 function object__alignment #"s-taskin.ads" 809 0 0# 
   (a : accept_alternative) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : accept_alternative.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : accept_alternative.
   ((object__alignment a) >= 0))
 
 function system__tasking__accept_alternative__null_body__first__bit #"s-taskin.ads" 809 0 0# 
   : int
 
 function system__tasking__accept_alternative__null_body__last__bit #"s-taskin.ads" 809 0 0# 
   : int
 
 function system__tasking__accept_alternative__null_body__position #"s-taskin.ads" 809 0 0# 
   : int
 
 axiom system__tasking__accept_alternative__null_body__first__bit_axiom :
  ((system__tasking__accept_alternative__null_body__first__bit ) >= 0)
 
 axiom system__tasking__accept_alternative__null_body__last__bit_axiom :
  ((system__tasking__accept_alternative__null_body__last__bit ) > (system__tasking__accept_alternative__null_body__first__bit ))
 
 axiom system__tasking__accept_alternative__null_body__position_axiom :
  ((system__tasking__accept_alternative__null_body__position ) >= 0)
 
 function system__tasking__accept_alternative__s__first__bit #"s-taskin.ads" 810 0 0# 
   : int
 
 function system__tasking__accept_alternative__s__last__bit #"s-taskin.ads" 810 0 0# 
   : int
 
 function system__tasking__accept_alternative__s__position #"s-taskin.ads" 810 0 0# 
   : int
 
 axiom system__tasking__accept_alternative__s__first__bit_axiom :
  ((system__tasking__accept_alternative__s__first__bit ) >= 0)
 
 axiom system__tasking__accept_alternative__s__last__bit_axiom :
  ((system__tasking__accept_alternative__s__last__bit ) > (system__tasking__accept_alternative__s__first__bit ))
 
 axiom system__tasking__accept_alternative__s__position_axiom :
  ((system__tasking__accept_alternative__s__position ) >= 0)
 
 function dummy #"s-taskin.ads" 811 0 0# 
   : accept_alternative
 
 type accept_alternative__ref #"s-taskin.ads" 809 0 0# =
  { mutable accept_alternative__content "model_trace:" : accept_alternative }
 
 function accept_alternative__ref___projection #"s-taskin.ads" 809 0 0# 
   (a : accept_alternative__ref) : accept_alternative =
  a.accept_alternative__content
 
 meta "model_projection" function accept_alternative__ref___projection
 
 meta "inline : no" function accept_alternative__ref___projection
 
 val accept_alternative__havoc #"s-taskin.ads" 809 0 0# 
   (x : accept_alternative__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "accept_list" defined at s-taskin.ads:814, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__System__tasking__accept_alternative
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__accept_alternative

 function index_I1_one #"s-taskin.ads" 809 0 0# 
   : int =
  1
 
 type component_type #"s-taskin.ads" 809 0 0# =
  System__tasking__accept_alternative.accept_alternative
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "accept_list" defined at s-taskin.ads:814, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__accept_list
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        System__tasking__positive_select_index
 use        System__tasking__accept_alternative
 use        Array__Int__System__tasking__accept_alternative

 type component_type #"s-taskin.ads" 809 0 0# =
  System__tasking__accept_alternative.accept_alternative
 
 function index_1_id #"s-taskin.ads" 809 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__tasking__accept_alternative.map, 
 function array_bool_eq = Array__Int__System__tasking__accept_alternative.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = System__tasking__positive_select_index.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type accept_list #"s-taskin.ads" 814 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type accept_list__ref #"s-taskin.ads" 814 0 0# =
  { mutable accept_list__content "model_trace:" : accept_list }
 
 function accept_list__ref___projection #"s-taskin.ads" 814 0 0# 
   (a : accept_list__ref) : accept_list =
  a.accept_list__content
 
 meta "model_projection" function accept_list__ref___projection
 
 meta "inline : no" function accept_list__ref___projection
 
 val accept_list__havoc #"s-taskin.ads" 814 0 0# 
   (x : accept_list__ref) : unit
  writes {x}

end

(* Module for defining the constant "max_atc_nesting" defined at s-taskin.ads:823, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__max_atc_nesting
 use import "_gnatprove_standard".Main

 function max_atc_nesting #"s-taskin.ads" 823 0 0# "model" "model_trace:16649" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "atc_level_base" defined at s-taskin.ads:825, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__atc_level_base
 use import "_gnatprove_standard".Main
 use import "int".Int

 type atc_level_base #"s-taskin.ads" 825 0 0# 
 
 function first #"s-taskin.ads" 825 0 0# 
   : int =
  0
 
 function last #"s-taskin.ads" 825 0 0# 
   : int =
  20
 
 predicate in_range #"s-taskin.ads" 825 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = atc_level_base, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type atc_level_base__ref #"s-taskin.ads" 825 0 0# =
  { mutable atc_level_base__content "model_trace:" : atc_level_base }
 
 function atc_level_base__ref___projection #"s-taskin.ads" 825 0 0# 
   (a : atc_level_base__ref) : atc_level_base =
  a.atc_level_base__content
 
 meta "model_projection" function atc_level_base__ref___projection
 
 meta "inline : no" function atc_level_base__ref___projection
 
 val atc_level_base__havoc #"s-taskin.ads" 825 0 0# 
   (x : atc_level_base__ref) : unit
  writes {x}

end

(* Module for defining the constant "atc_level_infinity" defined at s-taskin.ads:827, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__atc_level_infinity
 use import "_gnatprove_standard".Main

 function atc_level_infinity #"s-taskin.ads" 827 0 0# "model" "model_trace:16673" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 825 0 0# 
   : int

end

(* Module for axiomatizing type "atc_level" defined at s-taskin.ads:829, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__atc_level
 use import "_gnatprove_standard".Main
 use import "int".Int

 type atc_level #"s-taskin.ads" 829 0 0# 
 
 function first #"s-taskin.ads" 829 0 0# 
   : int =
  0
 
 function last #"s-taskin.ads" 829 0 0# 
   : int =
  19
 
 predicate in_range #"s-taskin.ads" 829 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = atc_level, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type atc_level__ref #"s-taskin.ads" 829 0 0# =
  { mutable atc_level__content "model_trace:" : atc_level }
 
 function atc_level__ref___projection #"s-taskin.ads" 829 0 0# 
   (a : atc_level__ref) : atc_level =
  a.atc_level__content
 
 meta "model_projection" function atc_level__ref___projection
 
 meta "inline : no" function atc_level__ref___projection
 
 val atc_level__havoc #"s-taskin.ads" 829 0 0# 
   (x : atc_level__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "atc_level_index" defined at s-taskin.ads:831, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__atc_level_index
 use import "_gnatprove_standard".Main
 use import "int".Int

 type atc_level_index #"s-taskin.ads" 831 0 0# 
 
 function first #"s-taskin.ads" 831 0 0# 
   : int =
  1
 
 function last #"s-taskin.ads" 831 0 0# 
   : int =
  19
 
 predicate in_range #"s-taskin.ads" 831 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = atc_level_index, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type atc_level_index__ref #"s-taskin.ads" 831 0 0# =
  { mutable atc_level_index__content "model_trace:" : atc_level_index }
 
 function atc_level_index__ref___projection #"s-taskin.ads" 831 0 0# 
   (a : atc_level_index__ref) : atc_level_index =
  a.atc_level_index__content
 
 meta "model_projection" function atc_level_index__ref___projection
 
 meta "inline : no" function atc_level_index__ref___projection
 
 val atc_level_index__havoc #"s-taskin.ads" 831 0 0# 
   (x : atc_level_index__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "atomic_address" defined at s-taskin.ads:943, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__atomic_address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type atomic_address #"s-taskin.ads" 943 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-taskin.ads" 943 0 0# 
   : BV64.t
 
 function first #"s-taskin.ads" 943 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-taskin.ads" 943 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-taskin.ads" 943 0 0# 
   : int =
  0
 
 function last_int #"s-taskin.ads" 943 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-taskin.ads" 943 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-taskin.ads" 943 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = atomic_address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type atomic_address__ref #"s-taskin.ads" 943 0 0# =
  { mutable atomic_address__content "model_trace:" : atomic_address }
 
 function atomic_address__ref___projection #"s-taskin.ads" 943 0 0# 
   (a : atomic_address__ref) : atomic_address =
  a.atomic_address__content
 
 meta "model_projection" function atomic_address__ref___projection
 
 meta "inline : no" function atomic_address__ref___projection
 
 val atomic_address__havoc #"s-taskin.ads" 943 0 0# 
   (x : atomic_address__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tattribute_arrayD1" defined at s-taskin.ads:945, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__Tattribute_arrayD1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tattribute_arrayD1 #"s-taskin.ads" 945 0 0# 
 
 function first #"s-taskin.ads" 945 0 0# 
   : int =
  1
 
 function last #"s-taskin.ads" 945 0 0# 
   : int =
  32
 
 predicate in_range #"s-taskin.ads" 945 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tattribute_arrayD1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tattribute_arrayD1__ref #"s-taskin.ads" 945 0 0# =
  { mutable tattribute_arrayD1__content "model_trace:" : tattribute_arrayD1 }
 
 function tattribute_arrayD1__ref___projection #"s-taskin.ads" 945 0 0# 
   (a : tattribute_arrayD1__ref) : tattribute_arrayD1 =
  a.tattribute_arrayD1__content
 
 meta "model_projection" function tattribute_arrayD1__ref___projection
 
 meta "inline : no" function tattribute_arrayD1__ref___projection
 
 val tattribute_arrayD1__havoc #"s-taskin.ads" 945 0 0# 
   (x : tattribute_arrayD1__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "Tattribute_arrayB" defined at s-taskin.ads:945, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__System__tasking__atomic_address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__atomic_address

 function index_I1_one #"s-taskin.ads" 945 0 0# 
   : int =
  1
 
 type component_type #"s-taskin.ads" 945 0 0# =
  System__tasking__atomic_address.atomic_address
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"s-taskin.ads" 943 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_BV64_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = System__tasking__atomic_address.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "Tattribute_arrayB" defined at s-taskin.ads:945, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__Tattribute_arrayB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        System__tasking__atomic_address
 use        System__tasking__Tattribute_arrayD1
 use        Array__Int__System__tasking__atomic_address

 type component_type #"s-taskin.ads" 943 0 0# =
  System__tasking__atomic_address.atomic_address
 
 function index_1_id #"s-taskin.ads" 943 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__tasking__atomic_address.map, 
 function array_bool_eq = Array__Int__System__tasking__atomic_address.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = System__tasking__Tattribute_arrayD1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tattribute_arrayB #"s-taskin.ads" 945 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tattribute_arrayB__ref #"s-taskin.ads" 945 0 0# =
  { mutable tattribute_arrayB__content "model_trace:" : tattribute_arrayB }
 
 function tattribute_arrayB__ref___projection #"s-taskin.ads" 945 0 0# 
   (a : tattribute_arrayB__ref) : tattribute_arrayB =
  a.tattribute_arrayB__content
 
 meta "model_projection" function tattribute_arrayB__ref___projection
 
 meta "inline : no" function tattribute_arrayB__ref___projection
 
 val tattribute_arrayB__havoc #"s-taskin.ads" 945 0 0# 
   (x : tattribute_arrayB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "attribute_array" defined at s-taskin.ads:945, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__attribute_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__atomic_address
 use        Array__Int__System__tasking__atomic_address

 type component_type #"s-taskin.ads" 945 0 0# =
  System__tasking__atomic_address.atomic_address
 
 function first #"s-taskin.ads" 943 0 0# 
   : int =
  1
 
 function last #"s-taskin.ads" 943 0 0# 
   : int =
  32
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__System__tasking__atomic_address.map, 
 function array_bool_eq = Array__Int__System__tasking__atomic_address.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "task_serial_number" defined at s-taskin.ads:951, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__task_serial_number
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type task_serial_number #"s-taskin.ads" 951 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-taskin.ads" 951 0 0# 
   : BV64.t
 
 function first #"s-taskin.ads" 951 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"s-taskin.ads" 951 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"s-taskin.ads" 951 0 0# 
   : int =
  0
 
 function last_int #"s-taskin.ads" 951 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"s-taskin.ads" 951 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"s-taskin.ads" 951 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = task_serial_number, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type task_serial_number__ref #"s-taskin.ads" 951 0 0# =
  { mutable task_serial_number__content "model_trace:" : task_serial_number }
 
 function task_serial_number__ref___projection #"s-taskin.ads" 951 0 0# 
   (a : task_serial_number__ref) : task_serial_number =
  a.task_serial_number__content
 
 meta "model_projection" function task_serial_number__ref___projection
 
 meta "inline : no" function task_serial_number__ref___projection
 
 val task_serial_number__havoc #"s-taskin.ads" 951 0 0# 
   (x : task_serial_number__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T21s" defined at s-taskin.ads:1138, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__ada_task_control_block__T21s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t21s #"s-taskin.ads" 1138 0 0# 
 
 function first #"s-taskin.ads" 1138 0 0# 
   : int =
  1
 
 function last #"s-taskin.ads" 1138 0 0# 
   : int =
  32
 
 predicate in_range #"s-taskin.ads" 1138 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t21s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t21s__ref #"s-taskin.ads" 1138 0 0# =
  { mutable t21s__content "model_trace:" : t21s }
 
 function t21s__ref___projection #"s-taskin.ads" 1138 0 0# 
   (a : t21s__ref) : t21s =
  a.t21s__content
 
 meta "model_projection" function t21s__ref___projection
 
 meta "inline : no" function t21s__ref___projection
 
 val t21s__havoc #"s-taskin.ads" 1138 0 0# 
   (x : t21s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T22s" defined at s-taskin.ads:1138, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__ada_task_control_block__T22s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__atomic_address
 use        Array__Int__System__tasking__atomic_address

 type component_type #"s-taskin.ads" 1138 0 0# =
  System__tasking__atomic_address.atomic_address
 
 function first #"s-taskin.ads" 943 0 0# 
   : int =
  1
 
 function last #"s-taskin.ads" 943 0 0# 
   : int =
  32
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__System__tasking__atomic_address.map, 
 function array_bool_eq = Array__Int__System__tasking__atomic_address.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T23s" defined at s-taskin.ads:1144, created in Gnat2Why.Types.Translate_Type *)
module System__tasking__ada_task_control_block__T23s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__Ttask_entry_indexB

 type t23s #"s-taskin.ads" 1144 0 0# =
  System__tasking__Ttask_entry_indexB.ttask_entry_indexB
 
 function first #"s-taskin.ads" 237 0 0# 
   : int =
  1
 
 function last #"s-taskin.ads" 237 0 0# 
   : int
 
 predicate dynamic_property #"s-taskin.ads" 237 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t23s, 
 type rep_type = int, 
 function base_to_rep = System__tasking__Ttask_entry_indexB.to_rep, 
 function base_of_rep = System__tasking__Ttask_entry_indexB.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t23s__ref #"s-taskin.ads" 1144 0 0# =
  { mutable t23s__content "model_trace:" : t23s }
 
 function t23s__ref___projection #"s-taskin.ads" 1144 0 0# 
   (a : t23s__ref) : t23s =
  a.t23s__content
 
 meta "model_projection" function t23s__ref___projection
 
 meta "inline : no" function t23s__ref___projection
 
 val t23s__havoc #"s-taskin.ads" 1144 0 0# 
   (x : t23s__ref) : unit
  writes {x}

end

(* Module for defining the constant "task_arg" defined at s-taskin.ads:1168, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__initialize_atcb__task_arg
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function task_arg #"s-taskin.ads" 1168 0 0# "model" "model_trace:17355" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "task_arg" defined at s-taskin.ads:1168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__tasking__initialize_atcb__task_arg___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "base_priority" defined at s-taskin.ads:1171, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__initialize_atcb__base_priority
 use import "_gnatprove_standard".Main

 function base_priority #"s-taskin.ads" 1171 0 0# "model" "model_trace:17384" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 124 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "base_priority" defined at s-taskin.ads:1171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__tasking__initialize_atcb__base_priority___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "base_cpu" defined at s-taskin.ads:1172, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__initialize_atcb__base_cpu
 use import "_gnatprove_standard".Main

 function base_cpu #"s-taskin.ads" 1172 0 0# "model" "model_trace:17395" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-multip.ads" 19 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "base_cpu" defined at s-taskin.ads:1172, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__tasking__initialize_atcb__base_cpu___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "task_info" defined at s-taskin.ads:1174, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__initialize_atcb__task_info
 use import "_gnatprove_standard".Main

 function task_info #"s-taskin.ads" 1174 0 0# "model" "model_trace:17417" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-tasinf.ads" 84 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "task_info" defined at s-taskin.ads:1174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__tasking__initialize_atcb__task_info___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stack_size" defined at s-taskin.ads:1175, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__initialize_atcb__stack_size
 use import "_gnatprove_standard".Main

 function stack_size #"s-taskin.ads" 1175 0 0# "model" "model_trace:17430" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stack_size" defined at s-taskin.ads:1175, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__tasking__initialize_atcb__stack_size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "secondary_stack_size" defined at s-taskin.ads:1176, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__initialize_atcb__secondary_stack_size
 use import "_gnatprove_standard".Main

 function secondary_stack_size #"s-taskin.ads" 1176 0 0# "model" "model_trace:17443" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "secondary_stack_size" defined at s-taskin.ads:1176, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__tasking__initialize_atcb__secondary_stack_size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "wrapper" defined at s-taprop.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__create_task__wrapper
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function wrapper #"s-taprop.ads" 52 0 0# "model" "model_trace:13726" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "wrapper" defined at s-taprop.ads:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__create_task__wrapper___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stack_size" defined at s-taprop.ads:53, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__create_task__stack_size
 use import "_gnatprove_standard".Main

 function stack_size #"s-taprop.ads" 53 0 0# "model" "model_trace:13737" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stack_size" defined at s-taprop.ads:53, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__create_task__stack_size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "priority" defined at s-taprop.ads:54, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__create_task__priority
 use import "_gnatprove_standard".Main

 function priority #"s-taprop.ads" 54 0 0# "model" "model_trace:13750" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 124 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "priority" defined at s-taprop.ads:54, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__create_task__priority___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "entry_num" defined at s-taprop.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__atcb_allocation__new_atcb__entry_num
 use import "_gnatprove_standard".Main

 function entry_num #"s-taprop.ads" 96 0 0# "model" "model_trace:13829" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 237 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "entry_num" defined at s-taprop.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__atcb_allocation__new_atcb__entry_num___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "lock_level" defined at s-taprop.ads:139, created in Gnat2Why.Types.Translate_Type *)
module System__task_primitives__operations__lock_level
 use import "_gnatprove_standard".Main
 use import "int".Int

 type lock_level #"s-taprop.ads" 139 0 0# 
 
 function first #"s-taprop.ads" 139 0 0# 
   : int =
  0
 
 function last #"s-taprop.ads" 139 0 0# 
   : int =
  3
 
 predicate in_range #"s-taprop.ads" 139 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = lock_level, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type lock_level__ref #"s-taprop.ads" 139 0 0# =
  { mutable lock_level__content "model_trace:" : lock_level }
 
 function lock_level__ref___projection #"s-taprop.ads" 139 0 0# 
   (a : lock_level__ref) : lock_level =
  a.lock_level__content
 
 meta "model_projection" function lock_level__ref___projection
 
 meta "inline : no" function lock_level__ref___projection
 
 val lock_level__havoc #"s-taprop.ads" 139 0 0# 
   (x : lock_level__ref) : unit
  writes {x}

end

(* Module for defining the constant "prio" defined at s-taprop.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__initialize_lock__prio
 use import "_gnatprove_standard".Main

 function prio #"s-taprop.ads" 149 0 0# "model" "model_trace:14044" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 124 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "prio" defined at s-taprop.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__initialize_lock__prio___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "level" defined at s-taprop.ads:153, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__initialize_lock__2__level
 use import "_gnatprove_standard".Main

 function level #"s-taprop.ads" 153 0 0# "model" "model_trace:14084" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-taprop.ads" 139 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "level" defined at s-taprop.ads:153, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__initialize_lock__2__level___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "global_lock" defined at s-taprop.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__write_lock__2__global_lock
 use import "_gnatprove_standard".Main

 function global_lock #"s-taprop.ads" 186 0 0# "model" "model_trace:14186" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-taprop.ads" 186 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "global_lock" defined at s-taprop.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__write_lock__2__global_lock___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "global_lock" defined at s-taprop.ads:240, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__unlock__2__global_lock
 use import "_gnatprove_standard".Main

 function global_lock #"s-taprop.ads" 240 0 0# "model" "model_trace:14290" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-taprop.ads" 240 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "global_lock" defined at s-taprop.ads:240, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__unlock__2__global_lock___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "prio" defined at s-taprop.ads:304, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__set_ceiling__prio
 use import "_gnatprove_standard".Main

 function prio #"s-taprop.ads" 304 0 0# "model" "model_trace:14343" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 124 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "prio" defined at s-taprop.ads:304, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__set_ceiling__prio___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "do_yield" defined at s-taprop.ads:314, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__yield__do_yield
 use import "_gnatprove_standard".Main

 function do_yield #"s-taprop.ads" 314 0 0# "model" "model_trace:14367" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-taprop.ads" 314 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "do_yield" defined at s-taprop.ads:314, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__yield__do_yield___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "prio" defined at s-taprop.ads:324, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__set_priority__prio
 use import "_gnatprove_standard".Main

 function prio #"s-taprop.ads" 324 0 0# "model" "model_trace:14401" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 124 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "prio" defined at s-taprop.ads:324, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__set_priority__prio___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "loss_of_inheritance" defined at s-taprop.ads:325, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__set_priority__loss_of_inheritance
 use import "_gnatprove_standard".Main

 function loss_of_inheritance #"s-taprop.ads" 325 0 0# "model" "model_trace:14412" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-taprop.ads" 325 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "loss_of_inheritance" defined at s-taprop.ads:325, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__set_priority__loss_of_inheritance___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "monotonic_clock" defined at s-taprop.ads:341, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__task_primitives__operations__monotonic_clock
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function monotonic_clock #"s-taprop.ads" 341 0 0# 
   (__void_param : unit) : Standard__duration.duration

end

(* Module for possibly declaring a logic function for "rt_resolution" defined at s-taprop.ads:347, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__task_primitives__operations__rt_resolution
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function rt_resolution #"s-taprop.ads" 347 0 0# 
   (__void_param : unit) : Standard__duration.duration

end

(* Module for defining the constant "reason" defined at s-taprop.ads:361, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__sleep__reason
 use import "_gnatprove_standard".Main

 function reason #"s-taprop.ads" 361 0 0# "model" "model_trace:14501" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 132 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "reason" defined at s-taprop.ads:361, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__sleep__reason___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "time" defined at s-taprop.ads:383, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__timed_sleep__time
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function time #"s-taprop.ads" 383 0 0# "model_projected" "model_trace:14538" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "time" defined at s-taprop.ads:383, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__timed_sleep__time___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-taprop.ads:384, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__timed_sleep__mode
 use import "_gnatprove_standard".Main

 function mode #"s-taprop.ads" 384 0 0# "model" "model_trace:14547" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 217 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at s-taprop.ads:384, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__timed_sleep__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "reason" defined at s-taprop.ads:385, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__timed_sleep__reason
 use import "_gnatprove_standard".Main

 function reason #"s-taprop.ads" 385 0 0# "model" "model_trace:14558" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 132 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "reason" defined at s-taprop.ads:385, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__timed_sleep__reason___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "time" defined at s-taprop.ads:392, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__timed_delay__time
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function time #"s-taprop.ads" 392 0 0# "model_projected" "model_trace:14609" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "time" defined at s-taprop.ads:392, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__timed_delay__time___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-taprop.ads:393, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__timed_delay__mode
 use import "_gnatprove_standard".Main

 function mode #"s-taprop.ads" 393 0 0# "model" "model_trace:14618" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 217 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at s-taprop.ads:393, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__timed_delay__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "reason" defined at s-taprop.ads:399, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__wakeup__reason
 use import "_gnatprove_standard".Main

 function reason #"s-taprop.ads" 399 0 0# "model" "model_trace:14649" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 132 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "reason" defined at s-taprop.ads:399, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__wakeup__reason___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_valid_task" defined at s-taprop.ads:414, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__task_primitives__operations__is_valid_task
 use import "_gnatprove_standard".Main

 function is_valid_task #"s-taprop.ads" 414 0 0# 
   (__void_param : unit) : bool

end

(* Module for defining the constant "on" defined at s-taprop.ads:461, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__stack_guard__on
 use import "_gnatprove_standard".Main

 function on #"s-taprop.ads" 461 0 0# "model" "model_trace:14769" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-taprop.ads" 461 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "on" defined at s-taprop.ads:461, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__stack_guard__on___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s" defined at s-taprop.ads:490, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__current_state__s
 use import "_gnatprove_standard".Main
 use        System__task_primitives__suspension_object

 function s #"s-taprop.ads" 490 0 0# "model_projected" "model_trace:14787" 
   : System__task_primitives__suspension_object.suspension_object
 
 function attr__ATTRIBUTE_ADDRESS #"s-taspri.ads" 82 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at s-taprop.ads:490, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__current_state__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "current_state" defined at s-taprop.ads:490, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__task_primitives__operations__current_state
 use import "_gnatprove_standard".Main
 use        System__task_primitives__suspension_object

 function current_state #"s-taprop.ads" 490 0 0# 
   (s : System__task_primitives__suspension_object.suspension_object) : bool

end

(* Module for defining the constant "thread_self" defined at s-taprop.ads:531, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__suspend_task__thread_self
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function thread_self #"s-taprop.ads" 531 0 0# "model" "model_trace:14957" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 244 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "thread_self" defined at s-taprop.ads:531, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__suspend_task__thread_self___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "thread_self" defined at s-taprop.ads:540, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__operations__resume_task__thread_self
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function thread_self #"s-taprop.ads" 540 0 0# "model" "model_trace:14989" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-osinte.ads" 244 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "thread_self" defined at s-taprop.ads:540, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__resume_task__thread_self___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing the record theory associated to type "time" defined at a-reatim.ads:51, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Ada__real_time__time__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 type __split_fields #"s-osinte.ads" 244 0 0# =
  { rec__ada__real_time__time "model_trace:.3600" : Main.__private }
 
 function __split_fields_Time__projection #"a-reatim.ads" 51 0 0# "model_trace:.3600" 
   (a : __split_fields) : Main.__private =
  a.rec__ada__real_time__time
 
 meta "model_projection" function __split_fields_Time__projection
 
 meta "inline : no" function __split_fields_Time__projection
 
 type __split_fields__ref #"a-reatim.ads" 51 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_24__projection #"a-reatim.ads" 51 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_24__projection
 
 meta "inline : no" function __split_fields__ref_24__projection
 
 val __split_fields__havoc #"a-reatim.ads" 51 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"a-reatim.ads" 51 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_24__projection #"a-reatim.ads" 51 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_24__projection
 
 meta "inline : no" function __rep_24__projection
 
 function to_base #"a-reatim.ads" 51 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"a-reatim.ads" 51 0 0# 
   (a : __rep) : __rep =
  a
 
 val rec__ada__real_time__time_ #"a-reatim.ads" 51 0 0# 
   (a : __rep) : Main.__private
  requires { true }
  ensures { (result = a.__split_fields.rec__ada__real_time__time) }
 
 function bool_eq #"a-reatim.ads" 51 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if ((a.__split_fields.rec__ada__real_time__time = b.__split_fields.rec__ada__real_time__time)) then (
   True) else (
   False))
 
 function user_eq #"a-reatim.ads" 51 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "time" defined at a-reatim.ads:51, created in Gnat2Why.Types.Translate_Type *)
module Ada__real_time__time
 use export Ada__real_time__time__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type time #"a-reatim.ads" 51 0 0# =
  __rep
 
 function value__size #"a-reatim.ads" 51 0 0# 
   : int
 
 function object__size #"a-reatim.ads" 51 0 0# 
   (a : time) : int
 
 function value__alignment #"a-reatim.ads" 51 0 0# 
   : int
 
 function object__alignment #"a-reatim.ads" 51 0 0# 
   (a : time) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : time.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : time.
   ((object__alignment a) >= 0))
 
 function dummy #"a-reatim.ads" 51 0 0# 
   : time
 
 type time__ref #"a-reatim.ads" 51 0 0# =
  { mutable time__content "model_trace:" : time }
 
 function time__ref___projection #"a-reatim.ads" 51 0 0# 
   (a : time__ref) : time =
  a.time__content
 
 meta "model_projection" function time__ref___projection
 
 meta "inline : no" function time__ref___projection
 
 val time__havoc #"a-reatim.ads" 51 0 0# 
   (x : time__ref) : unit
  writes {x}

end

(* Module for defining the constant "time_first" defined at a-reatim.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__time_first
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function time_first #"a-reatim.ads" 52 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "time_first" defined at a-reatim.ads:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__time_first___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "time_last" defined at a-reatim.ads:53, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__time_last
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function time_last #"a-reatim.ads" 53 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "time_last" defined at a-reatim.ads:53, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__time_last___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing the record theory associated to type "time_span" defined at a-reatim.ads:56, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Ada__real_time__time_span__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 type __split_fields #"a-reatim.ads" 51 0 0# =
  { rec__ada__real_time__time_span "model_trace:.3635" : Main.__private }
 
 function __split_fields_Time_Span__projection #"a-reatim.ads" 56 0 0# "model_trace:.3635" 
   (a : __split_fields) : Main.__private =
  a.rec__ada__real_time__time_span
 
 meta "model_projection" function __split_fields_Time_Span__projection
 
 meta "inline : no" function __split_fields_Time_Span__projection
 
 type __split_fields__ref #"a-reatim.ads" 56 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_25__projection #"a-reatim.ads" 56 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_25__projection
 
 meta "inline : no" function __split_fields__ref_25__projection
 
 val __split_fields__havoc #"a-reatim.ads" 56 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"a-reatim.ads" 56 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_25__projection #"a-reatim.ads" 56 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_25__projection
 
 meta "inline : no" function __rep_25__projection
 
 function to_base #"a-reatim.ads" 56 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"a-reatim.ads" 56 0 0# 
   (a : __rep) : __rep =
  a
 
 val rec__ada__real_time__time_span_ #"a-reatim.ads" 56 0 0# 
   (a : __rep) : Main.__private
  requires { true }
  ensures { (result = a.__split_fields.rec__ada__real_time__time_span) }
 
 function bool_eq #"a-reatim.ads" 56 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if ((a.__split_fields.rec__ada__real_time__time_span = b.__split_fields.rec__ada__real_time__time_span)) then (
   True) else (
   False))
 
 function user_eq #"a-reatim.ads" 56 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "time_span" defined at a-reatim.ads:56, created in Gnat2Why.Types.Translate_Type *)
module Ada__real_time__time_span
 use export Ada__real_time__time_span__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type time_span #"a-reatim.ads" 56 0 0# =
  __rep
 
 function value__size #"a-reatim.ads" 56 0 0# 
   : int
 
 function object__size #"a-reatim.ads" 56 0 0# 
   (a : time_span) : int
 
 function value__alignment #"a-reatim.ads" 56 0 0# 
   : int
 
 function object__alignment #"a-reatim.ads" 56 0 0# 
   (a : time_span) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : time_span.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : time_span.
   ((object__alignment a) >= 0))
 
 function dummy #"a-reatim.ads" 56 0 0# 
   : time_span
 
 type time_span__ref #"a-reatim.ads" 56 0 0# =
  { mutable time_span__content "model_trace:" : time_span }
 
 function time_span__ref___projection #"a-reatim.ads" 56 0 0# 
   (a : time_span__ref) : time_span =
  a.time_span__content
 
 meta "model_projection" function time_span__ref___projection
 
 meta "inline : no" function time_span__ref___projection
 
 val time_span__havoc #"a-reatim.ads" 56 0 0# 
   (x : time_span__ref) : unit
  writes {x}

end

(* Module for defining the constant "time_span_first" defined at a-reatim.ads:57, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__time_span_first
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function time_span_first #"a-reatim.ads" 57 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "time_span_first" defined at a-reatim.ads:57, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__time_span_first___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "time_span_last" defined at a-reatim.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__time_span_last
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function time_span_last #"a-reatim.ads" 58 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "time_span_last" defined at a-reatim.ads:58, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__time_span_last___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "time_span_zero" defined at a-reatim.ads:59, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__time_span_zero
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function time_span_zero #"a-reatim.ads" 59 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "time_span_zero" defined at a-reatim.ads:59, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__time_span_zero___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "time_span_unit" defined at a-reatim.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__time_span_unit
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function time_span_unit #"a-reatim.ads" 60 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "time_span_unit" defined at a-reatim.ads:60, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__time_span_unit___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "tick" defined at a-reatim.ads:62, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__tick
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function tick #"a-reatim.ads" 62 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "tick" defined at a-reatim.ads:62, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__tick___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "left" defined at a-reatim.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Oadd__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function left #"a-reatim.ads" 67 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Oadd__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Oadd__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function right #"a-reatim.ads" 67 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Oadd__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd" defined at a-reatim.ads:67, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Oadd
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__time_span

 function oadd #"a-reatim.ads" 67 0 0# 
   (left : Ada__real_time__time.time) (right : Ada__real_time__time_span.time_span) : Ada__real_time__time.time

end

(* Module for defining the constant "left" defined at a-reatim.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Oadd__2__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function left #"a-reatim.ads" 69 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:69, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Oadd__2__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Oadd__2__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function right #"a-reatim.ads" 69 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:69, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Oadd__2__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd__2" defined at a-reatim.ads:69, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Oadd__2
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__time_span

 function oadd__2 #"a-reatim.ads" 69 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time.time) : Ada__real_time__time.time

end

(* Module for defining the constant "left" defined at a-reatim.ads:71, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Osubtract__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function left #"a-reatim.ads" 71 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:71, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Osubtract__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:71, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Osubtract__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function right #"a-reatim.ads" 71 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:71, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Osubtract__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Osubtract" defined at a-reatim.ads:71, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Osubtract
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__time_span

 function osubtract #"a-reatim.ads" 71 0 0# 
   (left : Ada__real_time__time.time) (right : Ada__real_time__time_span.time_span) : Ada__real_time__time.time

end

(* Module for defining the constant "left" defined at a-reatim.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Osubtract__2__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function left #"a-reatim.ads" 73 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Osubtract__2__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Osubtract__2__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function right #"a-reatim.ads" 73 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Osubtract__2__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Osubtract__2" defined at a-reatim.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Osubtract__2
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__time_span

 function osubtract__2 #"a-reatim.ads" 73 0 0# 
   (left : Ada__real_time__time.time) (right : Ada__real_time__time.time) : Ada__real_time__time_span.time_span

end

(* Module for defining the constant "left" defined at a-reatim.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Olt__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function left #"a-reatim.ads" 76 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Olt__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Olt__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function right #"a-reatim.ads" 76 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Olt__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Olt" defined at a-reatim.ads:76, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Olt
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function olt #"a-reatim.ads" 76 0 0# 
   (left : Ada__real_time__time.time) (right : Ada__real_time__time.time) : bool

end

(* Module for defining the constant "left" defined at a-reatim.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Ole__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function left #"a-reatim.ads" 78 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Ole__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Ole__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function right #"a-reatim.ads" 78 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Ole__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ole" defined at a-reatim.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Ole
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function ole #"a-reatim.ads" 78 0 0# 
   (left : Ada__real_time__time.time) (right : Ada__real_time__time.time) : bool

end

(* Module for defining the constant "left" defined at a-reatim.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Ogt__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function left #"a-reatim.ads" 80 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Ogt__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Ogt__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function right #"a-reatim.ads" 80 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Ogt__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ogt" defined at a-reatim.ads:80, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Ogt
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function ogt #"a-reatim.ads" 80 0 0# 
   (left : Ada__real_time__time.time) (right : Ada__real_time__time.time) : bool

end

(* Module for defining the constant "left" defined at a-reatim.ads:82, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Oge__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function left #"a-reatim.ads" 82 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:82, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Oge__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:82, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Oge__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function right #"a-reatim.ads" 82 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:82, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Oge__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oge" defined at a-reatim.ads:82, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Oge
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function oge #"a-reatim.ads" 82 0 0# 
   (left : Ada__real_time__time.time) (right : Ada__real_time__time.time) : bool

end

(* Module for defining the constant "left" defined at a-reatim.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Oadd__3__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function left #"a-reatim.ads" 85 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Oadd__3__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Oadd__3__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function right #"a-reatim.ads" 85 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Oadd__3__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd__3" defined at a-reatim.ads:85, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Oadd__3
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function oadd__3 #"a-reatim.ads" 85 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time_span.time_span) : Ada__real_time__time_span.time_span

end

(* Module for defining the constant "left" defined at a-reatim.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Osubtract__3__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function left #"a-reatim.ads" 87 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Osubtract__3__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Osubtract__3__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function right #"a-reatim.ads" 87 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Osubtract__3__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Osubtract__3" defined at a-reatim.ads:87, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Osubtract__3
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function osubtract__3 #"a-reatim.ads" 87 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time_span.time_span) : Ada__real_time__time_span.time_span

end

(* Module for defining the constant "right" defined at a-reatim.ads:89, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Osubtract__4__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function right #"a-reatim.ads" 89 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:89, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Osubtract__4__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Osubtract__4" defined at a-reatim.ads:89, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Osubtract__4
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function osubtract__4 #"a-reatim.ads" 89 0 0# 
   (right : Ada__real_time__time_span.time_span) : Ada__real_time__time_span.time_span

end

(* Module for defining the constant "left" defined at a-reatim.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Omultiply__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function left #"a-reatim.ads" 91 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Omultiply__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Omultiply__right
 use import "_gnatprove_standard".Main

 function right #"a-reatim.ads" 91 0 0# "model" "model_trace:4069" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Omultiply__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Omultiply" defined at a-reatim.ads:91, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Omultiply
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function omultiply #"a-reatim.ads" 91 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : int) : Ada__real_time__time_span.time_span

end

(* Module for defining the constant "left" defined at a-reatim.ads:93, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Omultiply__2__left
 use import "_gnatprove_standard".Main

 function left #"a-reatim.ads" 93 0 0# "model" "model_trace:4093" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Omultiply__2__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:93, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Omultiply__2__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function right #"a-reatim.ads" 93 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Omultiply__2__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Omultiply__2" defined at a-reatim.ads:93, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Omultiply__2
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function omultiply__2 #"a-reatim.ads" 93 0 0# 
   (left : int) (right : Ada__real_time__time_span.time_span) : Ada__real_time__time_span.time_span

end

(* Module for defining the constant "left" defined at a-reatim.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Odivide__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function left #"a-reatim.ads" 95 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Odivide__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Odivide__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function right #"a-reatim.ads" 95 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Odivide__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Odivide" defined at a-reatim.ads:95, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Odivide
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function odivide #"a-reatim.ads" 95 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time_span.time_span) : int

end

(* Module for defining the constant "left" defined at a-reatim.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Odivide__2__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function left #"a-reatim.ads" 97 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Odivide__2__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Odivide__2__right
 use import "_gnatprove_standard".Main

 function right #"a-reatim.ads" 97 0 0# "model" "model_trace:4167" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Odivide__2__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Odivide__2" defined at a-reatim.ads:97, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Odivide__2
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function odivide__2 #"a-reatim.ads" 97 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : int) : Ada__real_time__time_span.time_span

end

(* Module for defining the constant "right" defined at a-reatim.ads:100, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Oabs__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function right #"a-reatim.ads" 100 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Oabs__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oabs" defined at a-reatim.ads:100, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Oabs
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function oabs #"a-reatim.ads" 100 0 0# 
   (right : Ada__real_time__time_span.time_span) : Ada__real_time__time_span.time_span

end

(* Module for defining the constant "left" defined at a-reatim.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Olt__2__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function left #"a-reatim.ads" 103 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Olt__2__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Olt__2__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function right #"a-reatim.ads" 103 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Olt__2__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Olt__2" defined at a-reatim.ads:103, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Olt__2
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function olt__2 #"a-reatim.ads" 103 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time_span.time_span) : bool

end

(* Module for defining the constant "left" defined at a-reatim.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Ole__2__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function left #"a-reatim.ads" 105 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Ole__2__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Ole__2__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function right #"a-reatim.ads" 105 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Ole__2__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ole__2" defined at a-reatim.ads:105, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Ole__2
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function ole__2 #"a-reatim.ads" 105 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time_span.time_span) : bool

end

(* Module for defining the constant "left" defined at a-reatim.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Ogt__2__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function left #"a-reatim.ads" 107 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Ogt__2__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Ogt__2__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function right #"a-reatim.ads" 107 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Ogt__2__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ogt__2" defined at a-reatim.ads:107, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Ogt__2
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function ogt__2 #"a-reatim.ads" 107 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time_span.time_span) : bool

end

(* Module for defining the constant "left" defined at a-reatim.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Oge__2__left
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function left #"a-reatim.ads" 109 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-reatim.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Oge__2__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-reatim.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__Oge__2__right
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function right #"a-reatim.ads" 109 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-reatim.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__Oge__2__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oge__2" defined at a-reatim.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__Oge__2
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function oge__2 #"a-reatim.ads" 109 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time_span.time_span) : bool

end

(* Module for defining the constant "ts" defined at a-reatim.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__to_duration__ts
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function ts #"a-reatim.ads" 112 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "ts" defined at a-reatim.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__to_duration__ts___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_duration" defined at a-reatim.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__to_duration
 use import "_gnatprove_standard".Main
 use        Standard__duration
 use        Ada__real_time__time_span

 function to_duration #"a-reatim.ads" 112 0 0# 
   (ts : Ada__real_time__time_span.time_span) : Standard__duration.duration

end

(* Module for defining the constant "d" defined at a-reatim.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__to_time_span__d
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function d #"a-reatim.ads" 114 0 0# "model_projected" "model_trace:4367" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "d" defined at a-reatim.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__to_time_span__d___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_time_span" defined at a-reatim.ads:114, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__to_time_span
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function to_time_span #"a-reatim.ads" 114 0 0# 
   (d : Main.__fixed) : Ada__real_time__time_span.time_span

end

(* Module for defining the constant "ns" defined at a-reatim.ads:117, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__nanoseconds__ns
 use import "_gnatprove_standard".Main

 function ns #"a-reatim.ads" 117 0 0# "model" "model_trace:4391" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "ns" defined at a-reatim.ads:117, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__nanoseconds__ns___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "nanoseconds" defined at a-reatim.ads:117, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__nanoseconds
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function nanoseconds #"a-reatim.ads" 117 0 0# 
   (ns : int) : Ada__real_time__time_span.time_span

end

(* Module for defining the constant "us" defined at a-reatim.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__microseconds__us
 use import "_gnatprove_standard".Main

 function us #"a-reatim.ads" 119 0 0# "model" "model_trace:4415" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "us" defined at a-reatim.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__microseconds__us___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "microseconds" defined at a-reatim.ads:119, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__microseconds
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function microseconds #"a-reatim.ads" 119 0 0# 
   (us : int) : Ada__real_time__time_span.time_span

end

(* Module for defining the constant "ms" defined at a-reatim.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__milliseconds__ms
 use import "_gnatprove_standard".Main

 function ms #"a-reatim.ads" 121 0 0# "model" "model_trace:4439" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "ms" defined at a-reatim.ads:121, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__milliseconds__ms___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "milliseconds" defined at a-reatim.ads:121, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__milliseconds
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function milliseconds #"a-reatim.ads" 121 0 0# 
   (ms : int) : Ada__real_time__time_span.time_span

end

(* Module for defining the constant "s" defined at a-reatim.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__seconds__s
 use import "_gnatprove_standard".Main

 function s #"a-reatim.ads" 124 0 0# "model" "model_trace:4463" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-reatim.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__seconds__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "seconds" defined at a-reatim.ads:124, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__seconds
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function seconds #"a-reatim.ads" 124 0 0# 
   (s : int) : Ada__real_time__time_span.time_span

end

(* Module for defining the constant "m" defined at a-reatim.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__minutes__m
 use import "_gnatprove_standard".Main

 function m #"a-reatim.ads" 128 0 0# "model" "model_trace:4491" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "m" defined at a-reatim.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__minutes__m___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "minutes" defined at a-reatim.ads:128, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__minutes
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function minutes #"a-reatim.ads" 128 0 0# 
   (m : int) : Ada__real_time__time_span.time_span

end

(* Module for axiomatizing type "Tseconds_countB" defined at a-reatim.ads:132, created in Gnat2Why.Types.Translate_Type *)
module Ada__real_time__Tseconds_countB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tseconds_countB #"a-reatim.ads" 132 0 0# 
 
 function first #"a-reatim.ads" 132 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"a-reatim.ads" 132 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"a-reatim.ads" 132 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tseconds_countB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tseconds_countB__ref #"a-reatim.ads" 132 0 0# =
  { mutable tseconds_countB__content "model_trace:" : tseconds_countB }
 
 function tseconds_countB__ref___projection #"a-reatim.ads" 132 0 0# 
   (a : tseconds_countB__ref) : tseconds_countB =
  a.tseconds_countB__content
 
 meta "model_projection" function tseconds_countB__ref___projection
 
 meta "inline : no" function tseconds_countB__ref___projection
 
 val tseconds_countB__havoc #"a-reatim.ads" 132 0 0# 
   (x : tseconds_countB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "seconds_count" defined at a-reatim.ads:132, created in Gnat2Why.Types.Translate_Type *)
module Ada__real_time__seconds_count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type seconds_count #"a-reatim.ads" 132 0 0# 
 
 function first #"a-reatim.ads" 132 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"a-reatim.ads" 132 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"a-reatim.ads" 132 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = seconds_count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type seconds_count__ref #"a-reatim.ads" 132 0 0# =
  { mutable seconds_count__content "model_trace:" : seconds_count }
 
 function seconds_count__ref___projection #"a-reatim.ads" 132 0 0# 
   (a : seconds_count__ref) : seconds_count =
  a.seconds_count__content
 
 meta "model_projection" function seconds_count__ref___projection
 
 meta "inline : no" function seconds_count__ref___projection
 
 val seconds_count__havoc #"a-reatim.ads" 132 0 0# 
   (x : seconds_count__ref) : unit
  writes {x}

end

(* Module for defining the constant "t" defined at a-reatim.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__split__t
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function t #"a-reatim.ads" 141 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "t" defined at a-reatim.ads:141, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__split__t___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "sc" defined at a-reatim.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__time_of__sc
 use import "_gnatprove_standard".Main

 function sc #"a-reatim.ads" 144 0 0# "model" "model_trace:4570" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 132 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "sc" defined at a-reatim.ads:144, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__time_of__sc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "ts" defined at a-reatim.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__time_of__ts
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function ts #"a-reatim.ads" 144 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "ts" defined at a-reatim.ads:144, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__time_of__ts___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "time_of" defined at a-reatim.ads:144, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__time_of
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__time_span

 function time_of #"a-reatim.ads" 144 0 0# 
   (sc : int) (ts : Ada__real_time__time_span.time_span) : Ada__real_time__time.time

end

(* Module for axiomatizing type "stream_element" defined at polyorb_hi-streams.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__streams__stream_element
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type stream_element #"polyorb_hi-streams.ads" 44 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"polyorb_hi-streams.ads" 44 0 0# 
   : BV8.t
 
 function first #"polyorb_hi-streams.ads" 44 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"polyorb_hi-streams.ads" 44 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"polyorb_hi-streams.ads" 44 0 0# 
   : int =
  0
 
 function last_int #"polyorb_hi-streams.ads" 44 0 0# 
   : int =
  255
 
 predicate in_range #"polyorb_hi-streams.ads" 44 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"polyorb_hi-streams.ads" 44 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = stream_element, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type stream_element__ref #"polyorb_hi-streams.ads" 44 0 0# =
  { mutable stream_element__content "model_trace:" : stream_element }
 
 function stream_element__ref___projection #"polyorb_hi-streams.ads" 44 0 0# 
   (a : stream_element__ref) : stream_element =
  a.stream_element__content
 
 meta "model_projection" function stream_element__ref___projection
 
 meta "inline : no" function stream_element__ref___projection
 
 val stream_element__havoc #"polyorb_hi-streams.ads" 44 0 0# 
   (x : stream_element__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tstream_element_offsetB" defined at polyorb_hi-streams.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__streams__Tstream_element_offsetB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tstream_element_offsetB #"polyorb_hi-streams.ads" 46 0 0# 
 
 function first #"polyorb_hi-streams.ads" 46 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"polyorb_hi-streams.ads" 46 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"polyorb_hi-streams.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tstream_element_offsetB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tstream_element_offsetB__ref #"polyorb_hi-streams.ads" 46 0 0# =
  { mutable tstream_element_offsetB__content "model_trace:" : tstream_element_offsetB }
 
 function tstream_element_offsetB__ref___projection #"polyorb_hi-streams.ads" 46 0 0# 
   (a : tstream_element_offsetB__ref) : tstream_element_offsetB =
  a.tstream_element_offsetB__content
 
 meta "model_projection" function tstream_element_offsetB__ref___projection
 
 meta "inline : no" function tstream_element_offsetB__ref___projection
 
 val tstream_element_offsetB__havoc #"polyorb_hi-streams.ads" 46 0 0# 
   (x : tstream_element_offsetB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "stream_element_offset" defined at polyorb_hi-streams.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__streams__stream_element_offset
 use import "_gnatprove_standard".Main
 use import "int".Int

 type stream_element_offset #"polyorb_hi-streams.ads" 46 0 0# 
 
 function first #"polyorb_hi-streams.ads" 46 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"polyorb_hi-streams.ads" 46 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"polyorb_hi-streams.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = stream_element_offset, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type stream_element_offset__ref #"polyorb_hi-streams.ads" 46 0 0# =
  { mutable stream_element_offset__content "model_trace:" : stream_element_offset }
 
 function stream_element_offset__ref___projection #"polyorb_hi-streams.ads" 46 0 0# 
   (a : stream_element_offset__ref) : stream_element_offset =
  a.stream_element_offset__content
 
 meta "model_projection" function stream_element_offset__ref___projection
 
 meta "inline : no" function stream_element_offset__ref___projection
 
 val stream_element_offset__havoc #"polyorb_hi-streams.ads" 46 0 0# 
   (x : stream_element_offset__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "stream_element_count" defined at polyorb_hi-streams.ads:50, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__streams__stream_element_count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type stream_element_count #"polyorb_hi-streams.ads" 50 0 0# 
 
 function first #"polyorb_hi-streams.ads" 50 0 0# 
   : int =
  0
 
 function last #"polyorb_hi-streams.ads" 50 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"polyorb_hi-streams.ads" 50 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = stream_element_count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type stream_element_count__ref #"polyorb_hi-streams.ads" 50 0 0# =
  { mutable stream_element_count__content "model_trace:" : stream_element_count }
 
 function stream_element_count__ref___projection #"polyorb_hi-streams.ads" 50 0 0# 
   (a : stream_element_count__ref) : stream_element_count =
  a.stream_element_count__content
 
 meta "model_projection" function stream_element_count__ref___projection
 
 meta "inline : no" function stream_element_count__ref___projection
 
 val stream_element_count__havoc #"polyorb_hi-streams.ads" 50 0 0# 
   (x : stream_element_count__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "stream_element_array" defined at polyorb_hi-streams.ads:53, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Polyorb_hi__streams__stream_element
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__streams__stream_element

 function index_I1_one #"polyorb_hi-streams.ads" 50 0 0# 
   : int =
  1
 
 type component_type #"polyorb_hi-streams.ads" 50 0 0# =
  Polyorb_hi__streams__stream_element.stream_element
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"polyorb_hi-streams.ads" 44 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_BV8_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Polyorb_hi__streams__stream_element.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "stream_element_array" defined at polyorb_hi-streams.ads:53, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__streams__stream_element_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__streams__stream_element
 use        Polyorb_hi__streams__Tstream_element_offsetB
 use        Polyorb_hi__streams__stream_element_offset
 use        Array__Int__Polyorb_hi__streams__stream_element

 type component_type #"polyorb_hi-streams.ads" 44 0 0# =
  Polyorb_hi__streams__stream_element.stream_element
 
 function index_1_id #"polyorb_hi-streams.ads" 44 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Polyorb_hi__streams__stream_element.map, 
 function array_bool_eq = Array__Int__Polyorb_hi__streams__stream_element.bool_eq, 
 type index_base_type = Polyorb_hi__streams__Tstream_element_offsetB.tstream_element_offsetB, 
 type index_rep_type = int, 
 function to_rep = Polyorb_hi__streams__Tstream_element_offsetB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Polyorb_hi__streams__Tstream_element_offsetB.in_range, 
 predicate index_dynamic_property = Polyorb_hi__streams__stream_element_offset.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type stream_element_array #"polyorb_hi-streams.ads" 53 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type stream_element_array__ref #"polyorb_hi-streams.ads" 53 0 0# =
  { mutable stream_element_array__content "model_trace:" : stream_element_array }
 
 function stream_element_array__ref___projection #"polyorb_hi-streams.ads" 53 0 0# 
   (a : stream_element_array__ref) : stream_element_array =
  a.stream_element_array__content
 
 meta "model_projection" function stream_element_array__ref___projection
 
 meta "inline : no" function stream_element_array__ref___projection
 
 val stream_element_array__havoc #"polyorb_hi-streams.ads" 53 0 0# 
   (x : stream_element_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "verbosity" defined at polyorb_hi-output.ads:51, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__verbosity
 use import "_gnatprove_standard".Main
 use import "int".Int

 type verbosity #"polyorb_hi-output.ads" 51 0 0# 
 
 function first #"polyorb_hi-output.ads" 51 0 0# 
   : int =
  0
 
 function last #"polyorb_hi-output.ads" 51 0 0# 
   : int =
  2
 
 predicate in_range #"polyorb_hi-output.ads" 51 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = verbosity, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type verbosity__ref #"polyorb_hi-output.ads" 51 0 0# =
  { mutable verbosity__content "model_trace:" : verbosity }
 
 function verbosity__ref___projection #"polyorb_hi-output.ads" 51 0 0# 
   (a : verbosity__ref) : verbosity =
  a.verbosity__content
 
 meta "model_projection" function verbosity__ref___projection
 
 meta "inline : no" function verbosity__ref___projection
 
 val verbosity__havoc #"polyorb_hi-output.ads" 51 0 0# 
   (x : verbosity__ref) : unit
  writes {x}

end

(* Module for defining the constant "current_mode" defined at polyorb_hi-output.ads:64, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__current_mode
 use import "_gnatprove_standard".Main

 function current_mode #"polyorb_hi-output.ads" 64 0 0# "model" "model_trace:3238" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-output.ads" 51 0 0# 
   : int

end

(* Module for defining the constant "mode" defined at polyorb_hi-output.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__put_line__mode
 use import "_gnatprove_standard".Main

 function mode #"polyorb_hi-output.ads" 67 0 0# "model" "model_trace:3255" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-output.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at polyorb_hi-output.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__put_line__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "text" defined at polyorb_hi-output.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__put_line__text
 use import "_gnatprove_standard".Main
 use        Standard__string

 function text #"polyorb_hi-output.ads" 67 0 0# "model_projected" "model_trace:3265" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "text" defined at polyorb_hi-output.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__put_line__text___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at polyorb_hi-output.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__put__mode
 use import "_gnatprove_standard".Main

 function mode #"polyorb_hi-output.ads" 73 0 0# "model" "model_trace:3302" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-output.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at polyorb_hi-output.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__put__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "text" defined at polyorb_hi-output.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__put__text
 use import "_gnatprove_standard".Main
 use        Standard__string

 function text #"polyorb_hi-output.ads" 73 0 0# "model_projected" "model_trace:3312" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "text" defined at polyorb_hi-output.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__put__text___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "text" defined at polyorb_hi-output.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__put_line__2__text
 use import "_gnatprove_standard".Main
 use        Standard__string

 function text #"polyorb_hi-output.ads" 79 0 0# "model_projected" "model_trace:3349" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "text" defined at polyorb_hi-output.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__put_line__2__text___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "text" defined at polyorb_hi-output.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__put__2__text
 use import "_gnatprove_standard".Main
 use        Standard__string

 function text #"polyorb_hi-output.ads" 85 0 0# "model_projected" "model_trace:3386" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "text" defined at polyorb_hi-output.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__put__2__text___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at polyorb_hi-output.ads:92, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__dump__stream
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__streams__stream_element_array

 function stream #"polyorb_hi-output.ads" 92 0 0# "model_projected" "model_trace:3423" 
   : Polyorb_hi__streams__stream_element_array.stream_element_array
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-streams.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at polyorb_hi-output.ads:92, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__dump__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at polyorb_hi-output.ads:92, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__dump__mode
 use import "_gnatprove_standard".Main

 function mode #"polyorb_hi-output.ads" 92 0 0# "model" "model_trace:3432" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-output.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at polyorb_hi-output.ads:92, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__dump__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s1" defined at polyorb_hi-output.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__Oadd__s1
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s1 #"polyorb_hi-output.ads" 97 0 0# "model_projected" "model_trace:3467" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s1" defined at polyorb_hi-output.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__Oadd__s1___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s2" defined at polyorb_hi-output.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__Oadd__s2
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s2 #"polyorb_hi-output.ads" 97 0 0# "model_projected" "model_trace:3476" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s2" defined at polyorb_hi-output.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__Oadd__s2___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd" defined at polyorb_hi-output.ads:97, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__output__Oadd
 use import "_gnatprove_standard".Main
 use        Standard__string

 function oadd #"polyorb_hi-output.ads" 97 0 0# 
   (s1 : Standard__string.string) (s2 : Standard__string.string) : Standard__string.string

end

(* Module for axiomatizing type "lockT" defined at polyorb_hi-output.adb:52, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__lockT
 use import "_gnatprove_standard".Main
 use import "int".Int

 type lockT #"polyorb_hi-output.adb" 52 0 0# 
 
 function to_base #"polyorb_hi-output.adb" 52 0 0# "inline" 
   (a : lockT) : lockT =
  a
 
 function of_base #"polyorb_hi-output.adb" 52 0 0# "inline" 
   (r : lockT) : lockT =
  r
 
 function bool_eq #"polyorb_hi-output.adb" 52 0 0# "inline" 
   (a : lockT) (b : lockT) : bool =
  True
 
 function value__size #"polyorb_hi-output.adb" 52 0 0# 
   : int
 
 function object__size #"polyorb_hi-output.adb" 52 0 0# 
   (a : lockT) : int
 
 function value__alignment #"polyorb_hi-output.adb" 52 0 0# 
   : int
 
 function object__alignment #"polyorb_hi-output.adb" 52 0 0# 
   (a : lockT) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : lockT.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : lockT.
   ((object__alignment a) >= 0))
 
 type lockT__ref #"polyorb_hi-output.adb" 52 0 0# =
  { mutable lockT__content "model_trace:" : lockT }
 
 function lockT__ref___projection #"polyorb_hi-output.adb" 52 0 0# 
   (a : lockT__ref) : lockT =
  a.lockT__content
 
 meta "model_projection" function lockT__ref___projection
 
 meta "inline : no" function lockT__ref___projection
 
 val lockT__havoc #"polyorb_hi-output.adb" 52 0 0# 
   (x : lockT__ref) : unit
  writes {x}

end

(* Module for defining the constant "text" defined at polyorb_hi-output.adb:55, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__lockT__put__text
 use import "_gnatprove_standard".Main
 use        Standard__string

 function text #"polyorb_hi-output.adb" 55 0 0# "model_projected" "model_trace:2449" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "text" defined at polyorb_hi-output.adb:55, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__lockT__put__text___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "text" defined at polyorb_hi-output.adb:60, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__lockT__put_line__text
 use import "_gnatprove_standard".Main
 use        Standard__string

 function text #"polyorb_hi-output.adb" 60 0 0# "model_projected" "model_trace:2477" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "text" defined at polyorb_hi-output.adb:60, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__lockT__put_line__text___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "TS7bP1" defined at polyorb_hi-output.adb:74, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__lockT__put_line__TS7bP1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type tS7bP1 #"polyorb_hi-output.adb" 74 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = tS7bP1, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type tS7bP1__ref #"polyorb_hi-output.adb" 74 0 0# =
  { mutable tS7bP1__content "model_trace:" : tS7bP1 }
 
 function tS7bP1__ref___projection #"polyorb_hi-output.adb" 74 0 0# 
   (a : tS7bP1__ref) : tS7bP1 =
  a.tS7bP1__content
 
 meta "model_projection" function tS7bP1__ref___projection
 
 meta "inline : no" function tS7bP1__ref___projection
 
 val tS7bP1__havoc #"polyorb_hi-output.adb" 74 0 0# 
   (x : tS7bP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "S7b" defined at polyorb_hi-output.adb:74, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__lockT__put_line__S7b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__lockT__put_line__TS7bP1

 type component_type #"polyorb_hi-output.adb" 74 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__lockT__put_line__TS7bP1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type s7b #"polyorb_hi-output.adb" 74 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type s7b__ref #"polyorb_hi-output.adb" 74 0 0# =
  { mutable s7b__content "model_trace:" : s7b }
 
 function s7b__ref___projection #"polyorb_hi-output.adb" 74 0 0# 
   (a : s7b__ref) : s7b =
  a.s7b__content
 
 meta "model_projection" function s7b__ref___projection
 
 meta "inline : no" function s7b__ref___projection
 
 val s7b__havoc #"polyorb_hi-output.adb" 74 0 0# 
   (x : s7b__ref) : unit
  writes {x}

end

(* Module for defining the constant "elapsed" defined at polyorb_hi-output.adb:75, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__lockT__put_line__elapsed
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function elapsed #"polyorb_hi-output.adb" 75 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module for axiomatizing type "T8b" defined at polyorb_hi-output.adb:77, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__lockT__put_line__T8b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"a-reatim.ads" 56 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T9b" defined at polyorb_hi-output.adb:80, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__lockT__put_line__T9b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  2
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "TS12bP1" defined at polyorb_hi-output.adb:89, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__lockT__put__TS12bP1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type tS12bP1 #"polyorb_hi-output.adb" 89 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = tS12bP1, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type tS12bP1__ref #"polyorb_hi-output.adb" 89 0 0# =
  { mutable tS12bP1__content "model_trace:" : tS12bP1 }
 
 function tS12bP1__ref___projection #"polyorb_hi-output.adb" 89 0 0# 
   (a : tS12bP1__ref) : tS12bP1 =
  a.tS12bP1__content
 
 meta "model_projection" function tS12bP1__ref___projection
 
 meta "inline : no" function tS12bP1__ref___projection
 
 val tS12bP1__havoc #"polyorb_hi-output.adb" 89 0 0# 
   (x : tS12bP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "S12b" defined at polyorb_hi-output.adb:89, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__lockT__put__S12b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__lockT__put__TS12bP1

 type component_type #"polyorb_hi-output.adb" 89 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__lockT__put__TS12bP1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type s12b #"polyorb_hi-output.adb" 89 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type s12b__ref #"polyorb_hi-output.adb" 89 0 0# =
  { mutable s12b__content "model_trace:" : s12b }
 
 function s12b__ref___projection #"polyorb_hi-output.adb" 89 0 0# 
   (a : s12b__ref) : s12b =
  a.s12b__content
 
 meta "model_projection" function s12b__ref___projection
 
 meta "inline : no" function s12b__ref___projection
 
 val s12b__havoc #"polyorb_hi-output.adb" 89 0 0# 
   (x : s12b__ref) : unit
  writes {x}

end

(* Module for defining the constant "elapsed" defined at polyorb_hi-output.adb:90, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__lockT__put__elapsed
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 function elapsed #"polyorb_hi-output.adb" 90 0 0# 
   : Ada__real_time__time_span.time_span
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module for axiomatizing type "T13b" defined at polyorb_hi-output.adb:92, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__lockT__put__T13b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"a-reatim.ads" 56 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T14b" defined at polyorb_hi-output.adb:95, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__lockT__put__T14b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  2
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "now" defined at polyorb_hi-output.adb:108, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__build_timestamp__now
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 function now #"polyorb_hi-output.adb" 108 0 0# 
   : Ada__real_time__time.time
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module for axiomatizing type "TS16bP1" defined at polyorb_hi-output.adb:123, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__put_line__2__TS16bP1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type tS16bP1 #"polyorb_hi-output.adb" 123 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = tS16bP1, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type tS16bP1__ref #"polyorb_hi-output.adb" 123 0 0# =
  { mutable tS16bP1__content "model_trace:" : tS16bP1 }
 
 function tS16bP1__ref___projection #"polyorb_hi-output.adb" 123 0 0# 
   (a : tS16bP1__ref) : tS16bP1 =
  a.tS16bP1__content
 
 meta "model_projection" function tS16bP1__ref___projection
 
 meta "inline : no" function tS16bP1__ref___projection
 
 val tS16bP1__havoc #"polyorb_hi-output.adb" 123 0 0# 
   (x : tS16bP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "S16b" defined at polyorb_hi-output.adb:123, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__put_line__2__S16b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__put_line__2__TS16bP1

 type component_type #"polyorb_hi-output.adb" 123 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__put_line__2__TS16bP1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type s16b #"polyorb_hi-output.adb" 123 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type s16b__ref #"polyorb_hi-output.adb" 123 0 0# =
  { mutable s16b__content "model_trace:" : s16b }
 
 function s16b__ref___projection #"polyorb_hi-output.adb" 123 0 0# 
   (a : s16b__ref) : s16b =
  a.s16b__content
 
 meta "model_projection" function s16b__ref___projection
 
 meta "inline : no" function s16b__ref___projection
 
 val s16b__havoc #"polyorb_hi-output.adb" 123 0 0# 
   (x : s16b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TS17bP1" defined at polyorb_hi-output.adb:128, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__put_line__TS17bP1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type tS17bP1 #"polyorb_hi-output.adb" 128 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = tS17bP1, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type tS17bP1__ref #"polyorb_hi-output.adb" 128 0 0# =
  { mutable tS17bP1__content "model_trace:" : tS17bP1 }
 
 function tS17bP1__ref___projection #"polyorb_hi-output.adb" 128 0 0# 
   (a : tS17bP1__ref) : tS17bP1 =
  a.tS17bP1__content
 
 meta "model_projection" function tS17bP1__ref___projection
 
 meta "inline : no" function tS17bP1__ref___projection
 
 val tS17bP1__havoc #"polyorb_hi-output.adb" 128 0 0# 
   (x : tS17bP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "S17b" defined at polyorb_hi-output.adb:128, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__put_line__S17b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__put_line__TS17bP1

 type component_type #"polyorb_hi-output.adb" 128 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__put_line__TS17bP1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type s17b #"polyorb_hi-output.adb" 128 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type s17b__ref #"polyorb_hi-output.adb" 128 0 0# =
  { mutable s17b__content "model_trace:" : s17b }
 
 function s17b__ref___projection #"polyorb_hi-output.adb" 128 0 0# 
   (a : s17b__ref) : s17b =
  a.s17b__content
 
 meta "model_projection" function s17b__ref___projection
 
 meta "inline : no" function s17b__ref___projection
 
 val s17b__havoc #"polyorb_hi-output.adb" 128 0 0# 
   (x : s17b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TS18bP1" defined at polyorb_hi-output.adb:145, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__put__2__TS18bP1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type tS18bP1 #"polyorb_hi-output.adb" 145 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = tS18bP1, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type tS18bP1__ref #"polyorb_hi-output.adb" 145 0 0# =
  { mutable tS18bP1__content "model_trace:" : tS18bP1 }
 
 function tS18bP1__ref___projection #"polyorb_hi-output.adb" 145 0 0# 
   (a : tS18bP1__ref) : tS18bP1 =
  a.tS18bP1__content
 
 meta "model_projection" function tS18bP1__ref___projection
 
 meta "inline : no" function tS18bP1__ref___projection
 
 val tS18bP1__havoc #"polyorb_hi-output.adb" 145 0 0# 
   (x : tS18bP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "S18b" defined at polyorb_hi-output.adb:145, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__put__2__S18b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__put__2__TS18bP1

 type component_type #"polyorb_hi-output.adb" 145 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__put__2__TS18bP1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type s18b #"polyorb_hi-output.adb" 145 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type s18b__ref #"polyorb_hi-output.adb" 145 0 0# =
  { mutable s18b__content "model_trace:" : s18b }
 
 function s18b__ref___projection #"polyorb_hi-output.adb" 145 0 0# 
   (a : s18b__ref) : s18b =
  a.s18b__content
 
 meta "model_projection" function s18b__ref___projection
 
 meta "inline : no" function s18b__ref___projection
 
 val s18b__havoc #"polyorb_hi-output.adb" 145 0 0# 
   (x : s18b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TS19bP1" defined at polyorb_hi-output.adb:150, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__put__TS19bP1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type tS19bP1 #"polyorb_hi-output.adb" 150 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = tS19bP1, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type tS19bP1__ref #"polyorb_hi-output.adb" 150 0 0# =
  { mutable tS19bP1__content "model_trace:" : tS19bP1 }
 
 function tS19bP1__ref___projection #"polyorb_hi-output.adb" 150 0 0# 
   (a : tS19bP1__ref) : tS19bP1 =
  a.tS19bP1__content
 
 meta "model_projection" function tS19bP1__ref___projection
 
 meta "inline : no" function tS19bP1__ref___projection
 
 val tS19bP1__havoc #"polyorb_hi-output.adb" 150 0 0# 
   (x : tS19bP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "S19b" defined at polyorb_hi-output.adb:150, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__put__S19b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__put__TS19bP1

 type component_type #"polyorb_hi-output.adb" 150 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__put__TS19bP1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type s19b #"polyorb_hi-output.adb" 150 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type s19b__ref #"polyorb_hi-output.adb" 150 0 0# =
  { mutable s19b__content "model_trace:" : s19b }
 
 function s19b__ref___projection #"polyorb_hi-output.adb" 150 0 0# 
   (a : s19b__ref) : s19b =
  a.s19b__content
 
 meta "model_projection" function s19b__ref___projection
 
 meta "inline : no" function s19b__ref___projection
 
 val s19b__havoc #"polyorb_hi-output.adb" 150 0 0# 
   (x : s19b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "output_position" defined at polyorb_hi-output.adb:167, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__output_position
 use import "_gnatprove_standard".Main
 use import "int".Int

 type output_position #"polyorb_hi-output.adb" 167 0 0# 
 
 function first #"polyorb_hi-output.adb" 167 0 0# 
   : int =
  1
 
 function last #"polyorb_hi-output.adb" 167 0 0# 
   : int =
  48
 
 predicate in_range #"polyorb_hi-output.adb" 167 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = output_position, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type output_position__ref #"polyorb_hi-output.adb" 167 0 0# =
  { mutable output_position__content "model_trace:" : output_position }
 
 function output_position__ref___projection #"polyorb_hi-output.adb" 167 0 0# 
   (a : output_position__ref) : output_position =
  a.output_position__content
 
 meta "model_projection" function output_position__ref___projection
 
 meta "inline : no" function output_position__ref___projection
 
 val output_position__havoc #"polyorb_hi-output.adb" 167 0 0# 
   (x : output_position__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "output_line" defined at polyorb_hi-output.adb:169, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__output_line
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi-output.adb" 167 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  48
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "ThexD1" defined at polyorb_hi-output.adb:171, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__ThexD1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type thexD1 #"polyorb_hi-output.adb" 171 0 0# 
 
 function first #"polyorb_hi-output.adb" 171 0 0# 
   : int =
  0
 
 function last #"polyorb_hi-output.adb" 171 0 0# 
   : int =
  15
 
 predicate in_range #"polyorb_hi-output.adb" 171 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = thexD1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type thexD1__ref #"polyorb_hi-output.adb" 171 0 0# =
  { mutable thexD1__content "model_trace:" : thexD1 }
 
 function thexD1__ref___projection #"polyorb_hi-output.adb" 171 0 0# 
   (a : thexD1__ref) : thexD1 =
  a.thexD1__content
 
 meta "model_projection" function thexD1__ref___projection
 
 meta "inline : no" function thexD1__ref___projection
 
 val thexD1__havoc #"polyorb_hi-output.adb" 171 0 0# 
   (x : thexD1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ThexB" defined at polyorb_hi-output.adb:171, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__ThexB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__ThexD1

 type component_type #"polyorb_hi-output.adb" 171 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__ThexD1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type thexB #"polyorb_hi-output.adb" 171 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type thexB__ref #"polyorb_hi-output.adb" 171 0 0# =
  { mutable thexB__content "model_trace:" : thexB }
 
 function thexB__ref___projection #"polyorb_hi-output.adb" 171 0 0# 
   (a : thexB__ref) : thexB =
  a.thexB__content
 
 meta "model_projection" function thexB__ref___projection
 
 meta "inline : no" function thexB__ref___projection
 
 val thexB__havoc #"polyorb_hi-output.adb" 171 0 0# 
   (x : thexB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ThexT" defined at polyorb_hi-output.adb:171, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__ThexT
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi-output.adb" 171 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  15
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T22b" defined at polyorb_hi-output.adb:171, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__T22b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  17
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "hex" defined at polyorb_hi-output.adb:171, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__hex
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function hex #"polyorb_hi-output.adb" 171 0 0# "model_projected" "model_trace:2890" 
   : Array__Int__Standard__character.map
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-output.adb" 171 0 0# 
   : int

end

(* Module for axiomatizing type "T23b" defined at polyorb_hi-output.adb:172, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__T23b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t23b #"polyorb_hi-output.adb" 172 0 0# 
 
 function first #"polyorb_hi-output.adb" 172 0 0# 
   : int =
  1
 
 function last #"polyorb_hi-output.adb" 172 0 0# 
   : int =
  48
 
 predicate in_range #"polyorb_hi-output.adb" 172 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t23b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t23b__ref #"polyorb_hi-output.adb" 172 0 0# =
  { mutable t23b__content "model_trace:" : t23b }
 
 function t23b__ref___projection #"polyorb_hi-output.adb" 172 0 0# 
   (a : t23b__ref) : t23b =
  a.t23b__content
 
 meta "model_projection" function t23b__ref___projection
 
 meta "inline : no" function t23b__ref___projection
 
 val t23b__havoc #"polyorb_hi-output.adb" 172 0 0# 
   (x : t23b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T24b" defined at polyorb_hi-output.adb:172, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__T24b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi-output.adb" 172 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  48
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "nil" defined at polyorb_hi-output.adb:172, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__nil
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function nil #"polyorb_hi-output.adb" 172 0 0# "model_projected" "model_trace:2905" 
   : Array__Int__Standard__character.map
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-output.adb" 169 0 0# 
   : int

end

(* Module for axiomatizing type "TS25bP1" defined at polyorb_hi-output.adb:174, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__dump__TS25bP1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__streams__Tstream_element_offsetB

 type tS25bP1 #"polyorb_hi-output.adb" 174 0 0# =
  Polyorb_hi__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function first #"polyorb_hi-streams.ads" 46 0 0# 
   : int
 
 function last #"polyorb_hi-streams.ads" 46 0 0# 
   : int
 
 predicate dynamic_property #"polyorb_hi-streams.ads" 46 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = tS25bP1, 
 type rep_type = int, 
 function base_to_rep = Polyorb_hi__streams__Tstream_element_offsetB.to_rep, 
 function base_of_rep = Polyorb_hi__streams__Tstream_element_offsetB.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type tS25bP1__ref #"polyorb_hi-output.adb" 174 0 0# =
  { mutable tS25bP1__content "model_trace:" : tS25bP1 }
 
 function tS25bP1__ref___projection #"polyorb_hi-output.adb" 174 0 0# 
   (a : tS25bP1__ref) : tS25bP1 =
  a.tS25bP1__content
 
 meta "model_projection" function tS25bP1__ref___projection
 
 meta "inline : no" function tS25bP1__ref___projection
 
 val tS25bP1__havoc #"polyorb_hi-output.adb" 174 0 0# 
   (x : tS25bP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "S25b" defined at polyorb_hi-output.adb:174, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__dump__S25b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__streams__stream_element
 use        Polyorb_hi__streams__Tstream_element_offsetB
 use        Array__Int__Polyorb_hi__streams__stream_element
 use        Polyorb_hi__output__dump__TS25bP1

 type component_type #"polyorb_hi-output.adb" 174 0 0# =
  Polyorb_hi__streams__stream_element.stream_element
 
 function index_1_id #"polyorb_hi-streams.ads" 44 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Polyorb_hi__streams__stream_element.map, 
 function array_bool_eq = Array__Int__Polyorb_hi__streams__stream_element.bool_eq, 
 type index_base_type = Polyorb_hi__streams__Tstream_element_offsetB.tstream_element_offsetB, 
 type index_rep_type = int, 
 function to_rep = Polyorb_hi__streams__Tstream_element_offsetB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Polyorb_hi__streams__Tstream_element_offsetB.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__dump__TS25bP1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type s25b #"polyorb_hi-output.adb" 174 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type s25b__ref #"polyorb_hi-output.adb" 174 0 0# =
  { mutable s25b__content "model_trace:" : s25b }
 
 function s25b__ref___projection #"polyorb_hi-output.adb" 174 0 0# 
   (a : s25b__ref) : s25b =
  a.s25b__content
 
 meta "model_projection" function s25b__ref___projection
 
 meta "inline : no" function s25b__ref___projection
 
 val s25b__havoc #"polyorb_hi-output.adb" 174 0 0# 
   (x : s25b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T26b" defined at polyorb_hi-output.adb:181, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__dump__L_1__T26b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__streams__Tstream_element_offsetB

 type t26b #"polyorb_hi-output.adb" 181 0 0# =
  Polyorb_hi__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function first #"polyorb_hi-streams.ads" 46 0 0# 
   : int
 
 function last #"polyorb_hi-streams.ads" 46 0 0# 
   : int
 
 predicate dynamic_property #"polyorb_hi-streams.ads" 46 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t26b, 
 type rep_type = int, 
 function base_to_rep = Polyorb_hi__streams__Tstream_element_offsetB.to_rep, 
 function base_of_rep = Polyorb_hi__streams__Tstream_element_offsetB.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t26b__ref #"polyorb_hi-output.adb" 181 0 0# =
  { mutable t26b__content "model_trace:" : t26b }
 
 function t26b__ref___projection #"polyorb_hi-output.adb" 181 0 0# 
   (a : t26b__ref) : t26b =
  a.t26b__content
 
 meta "model_projection" function t26b__ref___projection
 
 meta "inline : no" function t26b__ref___projection
 
 val t26b__havoc #"polyorb_hi-output.adb" 181 0 0# 
   (x : t26b__ref) : unit
  writes {x}

end

(* Module for defining the constant "R27b" defined at polyorb_hi-output.adb:183, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__dump__L_1__R27b
 use import "_gnatprove_standard".Main

 function r27b #"polyorb_hi-output.adb" 183 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-output.adb" 167 0 0# 
   : int

end

(* Module for defining the constant "R28b" defined at polyorb_hi-output.adb:183, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__output__dump__L_1__R28b
 use import "_gnatprove_standard".Main

 function r28b #"polyorb_hi-output.adb" 183 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T29b" defined at polyorb_hi-output.adb:183, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__dump__L_1__T29b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t29b #"polyorb_hi-output.adb" 183 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t29b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t29b__ref #"polyorb_hi-output.adb" 183 0 0# =
  { mutable t29b__content "model_trace:" : t29b }
 
 function t29b__ref___projection #"polyorb_hi-output.adb" 183 0 0# 
   (a : t29b__ref) : t29b =
  a.t29b__content
 
 meta "model_projection" function t29b__ref___projection
 
 meta "inline : no" function t29b__ref___projection
 
 val t29b__havoc #"polyorb_hi-output.adb" 183 0 0# 
   (x : t29b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T30b" defined at polyorb_hi-output.adb:183, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__dump__L_1__T30b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__dump__L_1__T29b

 type component_type #"polyorb_hi-output.adb" 183 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__dump__L_1__T29b.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t30b #"polyorb_hi-output.adb" 183 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t30b__ref #"polyorb_hi-output.adb" 183 0 0# =
  { mutable t30b__content "model_trace:" : t30b }
 
 function t30b__ref___projection #"polyorb_hi-output.adb" 183 0 0# 
   (a : t30b__ref) : t30b =
  a.t30b__content
 
 meta "model_projection" function t30b__ref___projection
 
 meta "inline : no" function t30b__ref___projection
 
 val t30b__havoc #"polyorb_hi-output.adb" 183 0 0# 
   (x : t30b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TS32bP1" defined at polyorb_hi-output.adb:201, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__TS32bP1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type tS32bP1 #"polyorb_hi-output.adb" 201 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = tS32bP1, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type tS32bP1__ref #"polyorb_hi-output.adb" 201 0 0# =
  { mutable tS32bP1__content "model_trace:" : tS32bP1 }
 
 function tS32bP1__ref___projection #"polyorb_hi-output.adb" 201 0 0# 
   (a : tS32bP1__ref) : tS32bP1 =
  a.tS32bP1__content
 
 meta "model_projection" function tS32bP1__ref___projection
 
 meta "inline : no" function tS32bP1__ref___projection
 
 val tS32bP1__havoc #"polyorb_hi-output.adb" 201 0 0# 
   (x : tS32bP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "S32b" defined at polyorb_hi-output.adb:201, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__S32b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__Oadd__TS32bP1

 type component_type #"polyorb_hi-output.adb" 201 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__Oadd__TS32bP1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type s32b #"polyorb_hi-output.adb" 201 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type s32b__ref #"polyorb_hi-output.adb" 201 0 0# =
  { mutable s32b__content "model_trace:" : s32b }
 
 function s32b__ref___projection #"polyorb_hi-output.adb" 201 0 0# 
   (a : s32b__ref) : s32b =
  a.s32b__content
 
 meta "model_projection" function s32b__ref___projection
 
 meta "inline : no" function s32b__ref___projection
 
 val s32b__havoc #"polyorb_hi-output.adb" 201 0 0# 
   (x : s32b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TS31bP1" defined at polyorb_hi-output.adb:201, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__TS31bP1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type tS31bP1 #"polyorb_hi-output.adb" 201 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = tS31bP1, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type tS31bP1__ref #"polyorb_hi-output.adb" 201 0 0# =
  { mutable tS31bP1__content "model_trace:" : tS31bP1 }
 
 function tS31bP1__ref___projection #"polyorb_hi-output.adb" 201 0 0# 
   (a : tS31bP1__ref) : tS31bP1 =
  a.tS31bP1__content
 
 meta "model_projection" function tS31bP1__ref___projection
 
 meta "inline : no" function tS31bP1__ref___projection
 
 val tS31bP1__havoc #"polyorb_hi-output.adb" 201 0 0# 
   (x : tS31bP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "S31b" defined at polyorb_hi-output.adb:201, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__S31b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__Oadd__TS31bP1

 type component_type #"polyorb_hi-output.adb" 201 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__Oadd__TS31bP1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type s31b #"polyorb_hi-output.adb" 201 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type s31b__ref #"polyorb_hi-output.adb" 201 0 0# =
  { mutable s31b__content "model_trace:" : s31b }
 
 function s31b__ref___projection #"polyorb_hi-output.adb" 201 0 0# 
   (a : s31b__ref) : s31b =
  a.s31b__content
 
 meta "model_projection" function s31b__ref___projection
 
 meta "inline : no" function s31b__ref___projection
 
 val s31b__havoc #"polyorb_hi-output.adb" 201 0 0# 
   (x : s31b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TTsSP1" defined at polyorb_hi-output.adb:202, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__TTsSP1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type tTsSP1 #"polyorb_hi-output.adb" 202 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = tTsSP1, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type tTsSP1__ref #"polyorb_hi-output.adb" 202 0 0# =
  { mutable tTsSP1__content "model_trace:" : tTsSP1 }
 
 function tTsSP1__ref___projection #"polyorb_hi-output.adb" 202 0 0# 
   (a : tTsSP1__ref) : tTsSP1 =
  a.tTsSP1__content
 
 meta "model_projection" function tTsSP1__ref___projection
 
 meta "inline : no" function tTsSP1__ref___projection
 
 val tTsSP1__havoc #"polyorb_hi-output.adb" 202 0 0# 
   (x : tTsSP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TsS" defined at polyorb_hi-output.adb:202, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__TsS
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__Oadd__TTsSP1

 type component_type #"polyorb_hi-output.adb" 202 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__Oadd__TTsSP1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tsS #"polyorb_hi-output.adb" 202 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tsS__ref #"polyorb_hi-output.adb" 202 0 0# =
  { mutable tsS__content "model_trace:" : tsS }
 
 function tsS__ref___projection #"polyorb_hi-output.adb" 202 0 0# 
   (a : tsS__ref) : tsS =
  a.tsS__content
 
 meta "model_projection" function tsS__ref___projection
 
 meta "inline : no" function tsS__ref___projection
 
 val tsS__havoc #"polyorb_hi-output.adb" 202 0 0# 
   (x : tsS__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T33b" defined at polyorb_hi-output.adb:202, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__T33b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t33b #"polyorb_hi-output.adb" 202 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t33b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t33b__ref #"polyorb_hi-output.adb" 202 0 0# =
  { mutable t33b__content "model_trace:" : t33b }
 
 function t33b__ref___projection #"polyorb_hi-output.adb" 202 0 0# 
   (a : t33b__ref) : t33b =
  a.t33b__content
 
 meta "model_projection" function t33b__ref___projection
 
 meta "inline : no" function t33b__ref___projection
 
 val t33b__havoc #"polyorb_hi-output.adb" 202 0 0# 
   (x : t33b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T34b" defined at polyorb_hi-output.adb:202, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__T34b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__Oadd__T33b

 type component_type #"polyorb_hi-output.adb" 202 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__Oadd__T33b.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t34b #"polyorb_hi-output.adb" 202 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t34b__ref #"polyorb_hi-output.adb" 202 0 0# =
  { mutable t34b__content "model_trace:" : t34b }
 
 function t34b__ref___projection #"polyorb_hi-output.adb" 202 0 0# 
   (a : t34b__ref) : t34b =
  a.t34b__content
 
 meta "model_projection" function t34b__ref___projection
 
 meta "inline : no" function t34b__ref___projection
 
 val t34b__havoc #"polyorb_hi-output.adb" 202 0 0# 
   (x : t34b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T35b" defined at polyorb_hi-output.adb:204, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__T35b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t35b #"polyorb_hi-output.adb" 204 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t35b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t35b__ref #"polyorb_hi-output.adb" 204 0 0# =
  { mutable t35b__content "model_trace:" : t35b }
 
 function t35b__ref___projection #"polyorb_hi-output.adb" 204 0 0# 
   (a : t35b__ref) : t35b =
  a.t35b__content
 
 meta "model_projection" function t35b__ref___projection
 
 meta "inline : no" function t35b__ref___projection
 
 val t35b__havoc #"polyorb_hi-output.adb" 204 0 0# 
   (x : t35b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T36b" defined at polyorb_hi-output.adb:204, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__T36b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__Oadd__T35b

 type component_type #"polyorb_hi-output.adb" 204 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__Oadd__T35b.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t36b #"polyorb_hi-output.adb" 204 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t36b__ref #"polyorb_hi-output.adb" 204 0 0# =
  { mutable t36b__content "model_trace:" : t36b }
 
 function t36b__ref___projection #"polyorb_hi-output.adb" 204 0 0# 
   (a : t36b__ref) : t36b =
  a.t36b__content
 
 meta "model_projection" function t36b__ref___projection
 
 meta "inline : no" function t36b__ref___projection
 
 val t36b__havoc #"polyorb_hi-output.adb" 204 0 0# 
   (x : t36b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T37b" defined at polyorb_hi-output.adb:204, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__T37b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t37b #"polyorb_hi-output.adb" 204 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t37b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t37b__ref #"polyorb_hi-output.adb" 204 0 0# =
  { mutable t37b__content "model_trace:" : t37b }
 
 function t37b__ref___projection #"polyorb_hi-output.adb" 204 0 0# 
   (a : t37b__ref) : t37b =
  a.t37b__content
 
 meta "model_projection" function t37b__ref___projection
 
 meta "inline : no" function t37b__ref___projection
 
 val t37b__havoc #"polyorb_hi-output.adb" 204 0 0# 
   (x : t37b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T38b" defined at polyorb_hi-output.adb:204, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__T38b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__Oadd__T37b

 type component_type #"polyorb_hi-output.adb" 204 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__Oadd__T37b.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t38b #"polyorb_hi-output.adb" 204 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t38b__ref #"polyorb_hi-output.adb" 204 0 0# =
  { mutable t38b__content "model_trace:" : t38b }
 
 function t38b__ref___projection #"polyorb_hi-output.adb" 204 0 0# 
   (a : t38b__ref) : t38b =
  a.t38b__content
 
 meta "model_projection" function t38b__ref___projection
 
 meta "inline : no" function t38b__ref___projection
 
 val t38b__havoc #"polyorb_hi-output.adb" 204 0 0# 
   (x : t38b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T39b" defined at polyorb_hi-output.adb:205, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__T39b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t39b #"polyorb_hi-output.adb" 205 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t39b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t39b__ref #"polyorb_hi-output.adb" 205 0 0# =
  { mutable t39b__content "model_trace:" : t39b }
 
 function t39b__ref___projection #"polyorb_hi-output.adb" 205 0 0# 
   (a : t39b__ref) : t39b =
  a.t39b__content
 
 meta "model_projection" function t39b__ref___projection
 
 meta "inline : no" function t39b__ref___projection
 
 val t39b__havoc #"polyorb_hi-output.adb" 205 0 0# 
   (x : t39b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T40b" defined at polyorb_hi-output.adb:205, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__T40b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__Oadd__T39b

 type component_type #"polyorb_hi-output.adb" 205 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__Oadd__T39b.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t40b #"polyorb_hi-output.adb" 205 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t40b__ref #"polyorb_hi-output.adb" 205 0 0# =
  { mutable t40b__content "model_trace:" : t40b }
 
 function t40b__ref___projection #"polyorb_hi-output.adb" 205 0 0# 
   (a : t40b__ref) : t40b =
  a.t40b__content
 
 meta "model_projection" function t40b__ref___projection
 
 meta "inline : no" function t40b__ref___projection
 
 val t40b__havoc #"polyorb_hi-output.adb" 205 0 0# 
   (x : t40b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T41b" defined at polyorb_hi-output.adb:205, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__T41b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t41b #"polyorb_hi-output.adb" 205 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t41b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t41b__ref #"polyorb_hi-output.adb" 205 0 0# =
  { mutable t41b__content "model_trace:" : t41b }
 
 function t41b__ref___projection #"polyorb_hi-output.adb" 205 0 0# 
   (a : t41b__ref) : t41b =
  a.t41b__content
 
 meta "model_projection" function t41b__ref___projection
 
 meta "inline : no" function t41b__ref___projection
 
 val t41b__havoc #"polyorb_hi-output.adb" 205 0 0# 
   (x : t41b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T42b" defined at polyorb_hi-output.adb:205, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__output__Oadd__T42b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__Oadd__T41b

 type component_type #"polyorb_hi-output.adb" 205 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__output__Oadd__T41b.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t42b #"polyorb_hi-output.adb" 205 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t42b__ref #"polyorb_hi-output.adb" 205 0 0# =
  { mutable t42b__content "model_trace:" : t42b }
 
 function t42b__ref___projection #"polyorb_hi-output.adb" 205 0 0# 
   (a : t42b__ref) : t42b =
  a.t42b__content
 
 meta "model_projection" function t42b__ref___projection
 
 meta "inline : no" function t42b__ref___projection
 
 val t42b__havoc #"polyorb_hi-output.adb" 205 0 0# 
   (x : t42b__ref) : unit
  writes {x}

end
(* Module for defining a ref holding the value of variable "constraint_error_def" defined at s-stalib.ads:152, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__constraint_error_def
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val constraint_error_def #"s-stalib.ads" 152 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 152 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "constraint_error_def" defined at s-stalib.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__constraint_error_def___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "numeric_error_def" defined at s-stalib.ads:161, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__numeric_error_def
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val numeric_error_def #"s-stalib.ads" 161 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 161 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "numeric_error_def" defined at s-stalib.ads:161, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__numeric_error_def___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "program_error_def" defined at s-stalib.ads:170, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__program_error_def
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val program_error_def #"s-stalib.ads" 170 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 170 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "program_error_def" defined at s-stalib.ads:170, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__program_error_def___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "storage_error_def" defined at s-stalib.ads:179, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__storage_error_def
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val storage_error_def #"s-stalib.ads" 179 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 179 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "storage_error_def" defined at s-stalib.ads:179, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__storage_error_def___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "tasking_error_def" defined at s-stalib.ads:188, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__tasking_error_def
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val tasking_error_def #"s-stalib.ads" 188 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 188 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "tasking_error_def" defined at s-stalib.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__tasking_error_def___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "abort_signal_def" defined at s-stalib.ads:197, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__abort_signal_def
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val abort_signal_def #"s-stalib.ads" 197 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 197 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "abort_signal_def" defined at s-stalib.ads:197, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__abort_signal_def___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "local_partition_id" defined at s-stalib.ads:213, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__local_partition_id
 use import "_gnatprove_standard".Main

 val local_partition_id #"s-stalib.ads" 213 0 0# "model_projected" "model_trace:19085"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "local_partition_id" defined at s-stalib.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__local_partition_id___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "exception_trace" defined at s-stalib.ads:246, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__exception_trace
 use import "_gnatprove_standard".Main

 val exception_trace #"s-stalib.ads" 246 0 0# "model_projected" "model_trace:19133"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 218 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "exception_trace" defined at s-stalib.ads:246, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__exception_trace___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at a-except.ads:124, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__exceptions__save_occurrence__target
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val target #"a-except.ads" 124 0 0#  : Ada__exceptions__exception_occurrence.exception_occurrence__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at a-except.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__save_occurrence__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "null_stack_info" defined at s-stache.ads:72, created in Gnat2Why.Decls.Translate_Variable *)
module System__stack_checking__null_stack_info
 use import "_gnatprove_standard".Main
 use        System__stack_checking__stack_info

 val null_stack_info__split_fields #"s-stache.ads" 72 0 0# "model_projected" "model_trace:20774"  : System__stack_checking__stack_info.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stache.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "null_stack_info" defined at s-stache.ads:72, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_checking__null_stack_info___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "abort_defer" defined at s-soflin.ads:163, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__abort_defer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val abort_defer #"s-soflin.ads" 163 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 163 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "abort_defer" defined at s-soflin.ads:163, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__abort_defer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "abort_undefer" defined at s-soflin.ads:167, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__abort_undefer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val abort_undefer #"s-soflin.ads" 167 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "abort_undefer" defined at s-soflin.ads:167, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__abort_undefer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "abort_handler" defined at s-soflin.ads:171, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__abort_handler
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val abort_handler #"s-soflin.ads" 171 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 171 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "abort_handler" defined at s-soflin.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__abort_handler___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "check_abort_status" defined at s-soflin.ads:174, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__check_abort_status
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val check_abort_status #"s-soflin.ads" 174 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 174 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "check_abort_status" defined at s-soflin.ads:174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__check_abort_status___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "lock_task" defined at s-soflin.ads:178, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__lock_task
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val lock_task #"s-soflin.ads" 178 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 178 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "lock_task" defined at s-soflin.ads:178, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__lock_task___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "unlock_task" defined at s-soflin.ads:188, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__unlock_task
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val unlock_task #"s-soflin.ads" 188 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 188 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "unlock_task" defined at s-soflin.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__unlock_task___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "task_termination_handler" defined at s-soflin.ads:214, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__task_termination_handler
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val task_termination_handler #"s-soflin.ads" 214 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 214 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "task_termination_handler" defined at s-soflin.ads:214, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__task_termination_handler___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "finalize_library_objects" defined at s-soflin.ads:217, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__finalize_library_objects
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val finalize_library_objects #"s-soflin.ads" 217 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 217 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "finalize_library_objects" defined at s-soflin.ads:217, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__finalize_library_objects___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "adafinal" defined at s-soflin.ads:222, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__adafinal
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val adafinal #"s-soflin.ads" 222 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 222 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "adafinal" defined at s-soflin.ads:222, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__adafinal___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "get_jmpbuf_address" defined at s-soflin.ads:228, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__get_jmpbuf_address
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val get_jmpbuf_address #"s-soflin.ads" 228 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 228 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "get_jmpbuf_address" defined at s-soflin.ads:228, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__get_jmpbuf_address___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "set_jmpbuf_address" defined at s-soflin.ads:229, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__set_jmpbuf_address
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val set_jmpbuf_address #"s-soflin.ads" 229 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 229 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "set_jmpbuf_address" defined at s-soflin.ads:229, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__set_jmpbuf_address___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "get_sec_stack_addr" defined at s-soflin.ads:234, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__get_sec_stack_addr
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val get_sec_stack_addr #"s-soflin.ads" 234 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 234 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "get_sec_stack_addr" defined at s-soflin.ads:234, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__get_sec_stack_addr___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "set_sec_stack_addr" defined at s-soflin.ads:235, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__set_sec_stack_addr
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val set_sec_stack_addr #"s-soflin.ads" 235 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 235 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "set_sec_stack_addr" defined at s-soflin.ads:235, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__set_sec_stack_addr___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "get_current_excep" defined at s-soflin.ads:239, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__get_current_excep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val get_current_excep #"s-soflin.ads" 239 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 239 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "get_current_excep" defined at s-soflin.ads:239, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__get_current_excep___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "get_stack_info" defined at s-soflin.ads:243, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__get_stack_info
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val get_stack_info #"s-soflin.ads" 243 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 243 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "get_stack_info" defined at s-soflin.ads:243, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__get_stack_info___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "current_master" defined at s-soflin.ads:257, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__current_master
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val current_master #"s-soflin.ads" 257 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 257 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "current_master" defined at s-soflin.ads:257, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__current_master___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "enter_master" defined at s-soflin.ads:258, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__enter_master
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val enter_master #"s-soflin.ads" 258 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 258 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "enter_master" defined at s-soflin.ads:258, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__enter_master___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "complete_master" defined at s-soflin.ads:259, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__complete_master
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val complete_master #"s-soflin.ads" 259 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 259 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "complete_master" defined at s-soflin.ads:259, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__complete_master___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "timed_delay" defined at s-soflin.ads:268, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__timed_delay
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val timed_delay #"s-soflin.ads" 268 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 268 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "timed_delay" defined at s-soflin.ads:268, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__timed_delay___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "task_name" defined at s-soflin.ads:276, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__task_name
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val task_name #"s-soflin.ads" 276 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 276 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "task_name" defined at s-soflin.ads:276, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__task_name___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "library_exception" defined at s-soflin.ads:282, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__library_exception
 use import "_gnatprove_standard".Main
 use        System__soft_links__eo

 val library_exception__split_fields #"s-soflin.ads" 282 0 0#  : System__soft_links__eo.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 49 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "library_exception" defined at s-soflin.ads:282, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__library_exception___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "library_exception_set" defined at s-soflin.ads:286, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__library_exception_set
 use import "_gnatprove_standard".Main

 val library_exception_set #"s-soflin.ads" 286 0 0# "model_projected" "model_trace:20377"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "library_exception_set" defined at s-soflin.ads:286, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__library_exception_set___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "traceback_decorator_wrapper" defined at s-soflin.ads:290, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__traceback_decorator_wrapper
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val traceback_decorator_wrapper #"s-soflin.ads" 290 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 290 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "traceback_decorator_wrapper" defined at s-soflin.ads:290, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__traceback_decorator_wrapper___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "new_tsd" defined at s-soflin.ads:347, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__create_tsd__new_tsd
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val new_tsd #"s-soflin.ads" 347 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 347 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "new_tsd" defined at s-soflin.ads:347, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__create_tsd__new_tsd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "old_tsd" defined at s-soflin.ads:352, created in Gnat2Why.Decls.Translate_Variable *)
module System__soft_links__destroy_tsd__old_tsd
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val old_tsd #"s-soflin.ads" 352 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-soflin.ads" 352 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "old_tsd" defined at s-soflin.ads:352, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__soft_links__destroy_tsd__old_tsd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:94, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__3__target
 use import "_gnatprove_standard".Main
 use        Interfaces__c__size_t
 use        Array__BV64__Interfaces__c__char

 val target #"i-c.ads" 94 0 0# "model_projected" "model_trace:10662"  : Array__BV64__Interfaces__c__char.map__ref 
 
 function target__first #"i-c.ads" 94 0 0# "model_projected" "model_trace:10662'First" 
   : Interfaces__c__size_t.size_t
 
 function target__last #"i-c.ads" 94 0 0# "model_projected" "model_trace:10662'Last" 
   : Interfaces__c__size_t.size_t
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__3__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:95, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__3__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 val count #"i-c.ads" 95 0 0# "model_projected" "model_trace:10671"  : BV64.t__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__3__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:100, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__3__target
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__character

 val target #"i-c.ads" 100 0 0# "model_projected" "model_trace:10708"  : Array__Int__Standard__character.map__ref 
 
 function target__first #"i-c.ads" 100 0 0# "model_projected" "model_trace:10708'First" 
   : Standard__integer.integer
 
 function target__last #"i-c.ads" 100 0 0# "model_projected" "model_trace:10708'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__3__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:101, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__3__count
 use import "_gnatprove_standard".Main

 val count #"i-c.ads" 101 0 0# "model_projected" "model_trace:10717"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__3__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:130, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__6__target
 use import "_gnatprove_standard".Main
 use        Interfaces__c__size_t
 use        Array__BV64__Interfaces__c__wchar_t

 val target #"i-c.ads" 130 0 0# "model_projected" "model_trace:10911"  : Array__BV64__Interfaces__c__wchar_t.map__ref 
 
 function target__first #"i-c.ads" 130 0 0# "model_projected" "model_trace:10911'First" 
   : Interfaces__c__size_t.size_t
 
 function target__last #"i-c.ads" 130 0 0# "model_projected" "model_trace:10911'Last" 
   : Interfaces__c__size_t.size_t
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__6__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:131, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__6__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 val count #"i-c.ads" 131 0 0# "model_projected" "model_trace:10920"  : BV64.t__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__6__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:136, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__6__target
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__wide_character

 val target #"i-c.ads" 136 0 0# "model_projected" "model_trace:10957"  : Array__Int__Standard__wide_character.map__ref 
 
 function target__first #"i-c.ads" 136 0 0# "model_projected" "model_trace:10957'First" 
   : Standard__integer.integer
 
 function target__last #"i-c.ads" 136 0 0# "model_projected" "model_trace:10957'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:136, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__6__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:137, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__6__count
 use import "_gnatprove_standard".Main

 val count #"i-c.ads" 137 0 0# "model_projected" "model_trace:10966"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:137, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__6__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:176, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__9__target
 use import "_gnatprove_standard".Main
 use        Interfaces__c__size_t
 use        Array__BV64__Interfaces__c__char16_t

 val target #"i-c.ads" 176 0 0# "model_projected" "model_trace:11196"  : Array__BV64__Interfaces__c__char16_t.map__ref 
 
 function target__first #"i-c.ads" 176 0 0# "model_projected" "model_trace:11196'First" 
   : Interfaces__c__size_t.size_t
 
 function target__last #"i-c.ads" 176 0 0# "model_projected" "model_trace:11196'Last" 
   : Interfaces__c__size_t.size_t
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:176, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__9__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:177, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__9__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 val count #"i-c.ads" 177 0 0# "model_projected" "model_trace:11205"  : BV64.t__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__9__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:183, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__9__target
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__wide_character

 val target #"i-c.ads" 183 0 0# "model_projected" "model_trace:11246"  : Array__Int__Standard__wide_character.map__ref 
 
 function target__first #"i-c.ads" 183 0 0# "model_projected" "model_trace:11246'First" 
   : Standard__integer.integer
 
 function target__last #"i-c.ads" 183 0 0# "model_projected" "model_trace:11246'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:183, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__9__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:184, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__9__count
 use import "_gnatprove_standard".Main

 val count #"i-c.ads" 184 0 0# "model_projected" "model_trace:11255"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:184, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__9__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:218, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__12__target
 use import "_gnatprove_standard".Main
 use        Interfaces__c__size_t
 use        Array__BV64__Interfaces__c__char32_t

 val target #"i-c.ads" 218 0 0# "model_projected" "model_trace:11478"  : Array__BV64__Interfaces__c__char32_t.map__ref 
 
 function target__first #"i-c.ads" 218 0 0# "model_projected" "model_trace:11478'First" 
   : Interfaces__c__size_t.size_t
 
 function target__last #"i-c.ads" 218 0 0# "model_projected" "model_trace:11478'Last" 
   : Interfaces__c__size_t.size_t
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:218, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__12__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:219, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__12__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 val count #"i-c.ads" 219 0 0# "model_projected" "model_trace:11487"  : BV64.t__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:219, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__12__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:225, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__12__target
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__wide_wide_character

 val target #"i-c.ads" 225 0 0# "model_projected" "model_trace:11528"  : Array__Int__Standard__wide_wide_character.map__ref 
 
 function target__first #"i-c.ads" 225 0 0# "model_projected" "model_trace:11528'First" 
   : Standard__integer.integer
 
 function target__last #"i-c.ads" 225 0 0# "model_projected" "model_trace:11528'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:225, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__12__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:226, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__12__count
 use import "_gnatprove_standard".Main

 val count #"i-c.ads" 226 0 0# "model_projected" "model_trace:11537"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:226, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__12__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "alternate_stack" defined at s-osinte.ads:285, created in Gnat2Why.Decls.Translate_Variable *)
module System__os_interface__alternate_stack
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 val alternate_stack #"s-osinte.ads" 285 0 0# "model_projected" "model_trace:7316"  : BV64.t__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "alternate_stack" defined at s-osinte.ads:285, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__os_interface__alternate_stack___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "analyzer" defined at s-stausa.ads:209, created in Gnat2Why.Decls.Translate_Variable *)
module System__stack_usage__fill_stack__analyzer
 use import "_gnatprove_standard".Main
 use        System__stack_usage__stack_analyzer

 val analyzer__split_fields #"s-stausa.ads" 209 0 0# "model_projected" "model_trace:21398"  : System__stack_usage__stack_analyzer.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stausa.ads" 282 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "analyzer" defined at s-stausa.ads:209, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__fill_stack__analyzer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "analyzer" defined at s-stausa.ads:226, created in Gnat2Why.Decls.Translate_Variable *)
module System__stack_usage__initialize_analyzer__analyzer
 use import "_gnatprove_standard".Main
 use        System__stack_usage__stack_analyzer

 val analyzer__split_fields #"s-stausa.ads" 226 0 0# "model_projected" "model_trace:21416"  : System__stack_usage__stack_analyzer.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stausa.ads" 282 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "analyzer" defined at s-stausa.ads:226, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__initialize_analyzer__analyzer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "is_enabled" defined at s-stausa.ads:239, created in Gnat2Why.Decls.Translate_Variable *)
module System__stack_usage__is_enabled
 use import "_gnatprove_standard".Main

 val is_enabled #"s-stausa.ads" 239 0 0# "model_projected" "model_trace:21478"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stausa.ads" 239 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "is_enabled" defined at s-stausa.ads:239, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__is_enabled___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "analyzer" defined at s-stausa.ads:242, created in Gnat2Why.Decls.Translate_Variable *)
module System__stack_usage__compute_result__analyzer
 use import "_gnatprove_standard".Main
 use        System__stack_usage__stack_analyzer

 val analyzer__split_fields #"s-stausa.ads" 242 0 0# "model_projected" "model_trace:21495"  : System__stack_usage__stack_analyzer.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stausa.ads" 282 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "analyzer" defined at s-stausa.ads:242, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__compute_result__analyzer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "environment_task_analyzer" defined at s-stausa.ads:317, created in Gnat2Why.Decls.Translate_Variable *)
module System__stack_usage__environment_task_analyzer
 use import "_gnatprove_standard".Main
 use        System__stack_usage__stack_analyzer

 val environment_task_analyzer__split_fields #"s-stausa.ads" 317 0 0# "model_projected" "model_trace:21690"  : System__stack_usage__stack_analyzer.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stausa.ads" 282 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "environment_task_analyzer" defined at s-stausa.ads:317, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__environment_task_analyzer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "compute_environment_task" defined at s-stausa.ads:319, created in Gnat2Why.Decls.Translate_Variable *)
module System__stack_usage__compute_environment_task
 use import "_gnatprove_standard".Main

 val compute_environment_task #"s-stausa.ads" 319 0 0# "model_projected" "model_trace:21699"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stausa.ads" 319 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "compute_environment_task" defined at s-stausa.ads:319, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__compute_environment_task___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "result_array" defined at s-stausa.ads:323, created in Gnat2Why.Decls.Translate_Variable *)
module System__stack_usage__result_array
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val result_array #"s-stausa.ads" 323 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stausa.ads" 323 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "result_array" defined at s-stausa.ads:323, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__result_array___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "next_id" defined at s-stausa.ads:327, created in Gnat2Why.Decls.Translate_Variable *)
module System__stack_usage__next_id
 use import "_gnatprove_standard".Main

 val next_id #"s-stausa.ads" 327 0 0# "model_projected" "model_trace:21735"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "next_id" defined at s-stausa.ads:327, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__stack_usage__next_id___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "system_domain" defined at s-taskin.ads:390, created in Gnat2Why.Decls.Translate_Variable *)
module System__tasking__system_domain
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val system_domain #"s-taskin.ads" 390 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 390 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "system_domain" defined at s-taskin.ads:390, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__tasking__system_domain___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "dispatching_domains_frozen" defined at s-taskin.ads:395, created in Gnat2Why.Decls.Translate_Variable *)
module System__tasking__dispatching_domains_frozen
 use import "_gnatprove_standard".Main

 val dispatching_domains_frozen #"s-taskin.ads" 395 0 0# "model_projected" "model_trace:15847"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 395 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "dispatching_domains_frozen" defined at s-taskin.ads:395, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__tasking__dispatching_domains_frozen___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "dispatching_domain_tasks" defined at s-taskin.ads:408, created in Gnat2Why.Decls.Translate_Variable *)
module System__tasking__dispatching_domain_tasks
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val dispatching_domain_tasks #"s-taskin.ads" 408 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 408 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "dispatching_domain_tasks" defined at s-taskin.ads:408, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__tasking__dispatching_domain_tasks___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "global_task_debug_event_set" defined at s-taskin.ads:461, created in Gnat2Why.Decls.Translate_Variable *)
module System__tasking__global_task_debug_event_set
 use import "_gnatprove_standard".Main

 val global_task_debug_event_set #"s-taskin.ads" 461 0 0# "model_projected" "model_trace:16009"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 461 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "global_task_debug_event_set" defined at s-taskin.ads:461, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__tasking__global_task_debug_event_set___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "interrupt_manager_id" defined at s-taskin.ads:737, created in Gnat2Why.Decls.Translate_Variable *)
module System__tasking__interrupt_manager_id
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val interrupt_manager_id #"s-taskin.ads" 737 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 737 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "interrupt_manager_id" defined at s-taskin.ads:737, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__tasking__interrupt_manager_id___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "all_tasks_list" defined at s-taskin.ads:746, created in Gnat2Why.Decls.Translate_Variable *)
module System__tasking__all_tasks_list
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 val all_tasks_list #"s-taskin.ads" 746 0 0#  : Main.__private__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 746 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "all_tasks_list" defined at s-taskin.ads:746, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__tasking__all_tasks_list___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "success" defined at s-taskin.ads:1178, created in Gnat2Why.Decls.Translate_Variable *)
module System__tasking__initialize_atcb__success
 use import "_gnatprove_standard".Main

 val success #"s-taskin.ads" 1178 0 0# "model_projected" "model_trace:17465"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taskin.ads" 1178 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "success" defined at s-taskin.ads:1178, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__tasking__initialize_atcb__success___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "succeeded" defined at s-taprop.ads:55, created in Gnat2Why.Decls.Translate_Variable *)
module System__task_primitives__operations__create_task__succeeded
 use import "_gnatprove_standard".Main

 val succeeded #"s-taprop.ads" 55 0 0# "model_projected" "model_trace:13761"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taprop.ads" 55 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "succeeded" defined at s-taprop.ads:55, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__create_task__succeeded___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "succeeded" defined at s-taprop.ads:109, created in Gnat2Why.Decls.Translate_Variable *)
module System__task_primitives__operations__initialize_tcb__succeeded
 use import "_gnatprove_standard".Main

 val succeeded #"s-taprop.ads" 109 0 0# "model_projected" "model_trace:13920"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taprop.ads" 109 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "succeeded" defined at s-taprop.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__initialize_tcb__succeeded___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ceiling_violation" defined at s-taprop.ads:183, created in Gnat2Why.Decls.Translate_Variable *)
module System__task_primitives__operations__write_lock__ceiling_violation
 use import "_gnatprove_standard".Main

 val ceiling_violation #"s-taprop.ads" 183 0 0# "model_projected" "model_trace:14158"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taprop.ads" 183 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "ceiling_violation" defined at s-taprop.ads:183, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__write_lock__ceiling_violation___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ceiling_violation" defined at s-taprop.ads:214, created in Gnat2Why.Decls.Translate_Variable *)
module System__task_primitives__operations__read_lock__ceiling_violation
 use import "_gnatprove_standard".Main

 val ceiling_violation #"s-taprop.ads" 214 0 0# "model_projected" "model_trace:14239"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taprop.ads" 214 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "ceiling_violation" defined at s-taprop.ads:214, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__read_lock__ceiling_violation___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "timedout" defined at s-taprop.ads:386, created in Gnat2Why.Decls.Translate_Variable *)
module System__task_primitives__operations__timed_sleep__timedout
 use import "_gnatprove_standard".Main

 val timedout #"s-taprop.ads" 386 0 0# "model_projected" "model_trace:14571"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taprop.ads" 386 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "timedout" defined at s-taprop.ads:386, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__timed_sleep__timedout___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "yielded" defined at s-taprop.ads:387, created in Gnat2Why.Decls.Translate_Variable *)
module System__task_primitives__operations__timed_sleep__yielded
 use import "_gnatprove_standard".Main

 val yielded #"s-taprop.ads" 387 0 0# "model_projected" "model_trace:14580"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taprop.ads" 387 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "yielded" defined at s-taprop.ads:387, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__timed_sleep__yielded___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "s" defined at s-taprop.ads:493, created in Gnat2Why.Decls.Translate_Variable *)
module System__task_primitives__operations__set_false__s
 use import "_gnatprove_standard".Main
 use        System__task_primitives__suspension_object

 val s__split_fields #"s-taprop.ads" 493 0 0# "model_projected" "model_trace:14806"  : System__task_primitives__suspension_object.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taspri.ads" 82 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at s-taprop.ads:493, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__set_false__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "s" defined at s-taprop.ads:496, created in Gnat2Why.Decls.Translate_Variable *)
module System__task_primitives__operations__set_true__s
 use import "_gnatprove_standard".Main
 use        System__task_primitives__suspension_object

 val s__split_fields #"s-taprop.ads" 496 0 0# "model_projected" "model_trace:14824"  : System__task_primitives__suspension_object.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taspri.ads" 82 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at s-taprop.ads:496, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__set_true__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "s" defined at s-taprop.ads:501, created in Gnat2Why.Decls.Translate_Variable *)
module System__task_primitives__operations__suspend_until_true__s
 use import "_gnatprove_standard".Main
 use        System__task_primitives__suspension_object

 val s__split_fields #"s-taprop.ads" 501 0 0# "model_projected" "model_trace:14842"  : System__task_primitives__suspension_object.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taspri.ads" 82 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at s-taprop.ads:501, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__suspend_until_true__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "s" defined at s-taprop.ads:508, created in Gnat2Why.Decls.Translate_Variable *)
module System__task_primitives__operations__initialize__2__s
 use import "_gnatprove_standard".Main
 use        System__task_primitives__suspension_object

 val s__split_fields #"s-taprop.ads" 508 0 0# "model_projected" "model_trace:14860"  : System__task_primitives__suspension_object.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taspri.ads" 82 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at s-taprop.ads:508, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__initialize__2__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "s" defined at s-taprop.ads:511, created in Gnat2Why.Decls.Translate_Variable *)
module System__task_primitives__operations__finalize__s
 use import "_gnatprove_standard".Main
 use        System__task_primitives__suspension_object

 val s__split_fields #"s-taprop.ads" 511 0 0# "model_projected" "model_trace:14878"  : System__task_primitives__suspension_object.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-taspri.ads" 82 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at s-taprop.ads:511, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__task_primitives__operations__finalize__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of abstract state "clock_time" defined at a-reatim.ads:41, created in Gnat2Why.Decls.Translate_Abstract_State *)
module Ada__real_time__clock_time
 use import "_gnatprove_standard".Main

 val clock_time #"a-reatim.ads" 41 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "clock_time" defined at a-reatim.ads:41, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__clock_time___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "sc" defined at a-reatim.ads:141, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__real_time__split__sc
 use import "_gnatprove_standard".Main

 val sc #"a-reatim.ads" 141 0 0# "model_projected" "model_trace:4538"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 132 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "sc" defined at a-reatim.ads:141, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__split__sc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "ts" defined at a-reatim.ads:141, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__real_time__split__ts
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 val ts #"a-reatim.ads" 141 0 0#  : Ada__real_time__time_span.time_span__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "ts" defined at a-reatim.ads:141, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__real_time__split__ts___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of abstract state "elaborated_variables" defined at polyorb_hi-epoch.ads:35, created in Gnat2Why.Decls.Translate_Abstract_State *)
module Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main

 val elaborated_variables #"polyorb_hi-epoch.ads" 35 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "elaborated_variables" defined at polyorb_hi-epoch.ads:35, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__epoch__elaborated_variables___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "sst" defined at polyorb_hi-epoch.ads:43, created in Gnat2Why.Decls.Translate_Variable *)
module Polyorb_hi__epoch__system_startup_time__sst
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 val sst #"polyorb_hi-epoch.ads" 43 0 0#  : Ada__real_time__time.time__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "sst" defined at polyorb_hi-epoch.ads:43, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__epoch__system_startup_time__sst___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of abstract state "elaborated_variables" defined at polyorb_hi-output.ads:40, created in Gnat2Why.Decls.Translate_Abstract_State *)
module Polyorb_hi__output__elaborated_variables
 use import "_gnatprove_standard".Main

 val elaborated_variables #"polyorb_hi-output.ads" 40 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "elaborated_variables" defined at polyorb_hi-output.ads:40, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__elaborated_variables___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "lock" defined at polyorb_hi-output.adb:52, created in Gnat2Why.Decls.Translate_Variable *)
module Polyorb_hi__output__lock
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__output__lockT

 val lock #"polyorb_hi-output.adb" 52 0 0#  : Polyorb_hi__output__lockT.lockT__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-output.adb" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "lock" defined at polyorb_hi-output.adb:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__lock___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "start_time" defined at polyorb_hi-output.adb:106, created in Gnat2Why.Decls.Translate_Variable *)
module Polyorb_hi__output__build_timestamp__start_time
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 val start_time #"polyorb_hi-output.adb" 106 0 0#  : Ada__real_time__time.time__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "start_time" defined at polyorb_hi-output.adb:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__build_timestamp__start_time___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "elapsed" defined at polyorb_hi-output.adb:107, created in Gnat2Why.Decls.Translate_Variable *)
module Polyorb_hi__output__build_timestamp__elapsed
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 val elapsed #"polyorb_hi-output.adb" 107 0 0#  : Ada__real_time__time_span.time_span__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-reatim.ads" 56 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "elapsed" defined at polyorb_hi-output.adb:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__build_timestamp__elapsed___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "index" defined at polyorb_hi-output.adb:178, created in Gnat2Why.Decls.Translate_Variable *)
module Polyorb_hi__output__dump__index
 use import "_gnatprove_standard".Main

 val index #"polyorb_hi-output.adb" 178 0 0# "model_projected" "model_trace:2949"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-output.adb" 167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "index" defined at polyorb_hi-output.adb:178, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__dump__index___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "output" defined at polyorb_hi-output.adb:179, created in Gnat2Why.Decls.Translate_Variable *)
module Polyorb_hi__output__dump__output
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 val output #"polyorb_hi-output.adb" 179 0 0# "model_projected" "model_trace:2961"  : Array__Int__Standard__character.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-output.adb" 169 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "output" defined at polyorb_hi-output.adb:179, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__dump__output___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "j" defined at polyorb_hi-output.adb:181, created in Gnat2Why.Decls.Translate_Variable *)
module Polyorb_hi__output__dump__L_1__j
 use import "_gnatprove_standard".Main

 val j #"polyorb_hi-output.adb" 181 0 0# "model_projected" "model_trace:2974"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-output.adb" 181 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at polyorb_hi-output.adb:181, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__dump__L_1__j___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "s" defined at polyorb_hi-output.adb:202, created in Gnat2Why.Decls.Translate_Variable *)
module Polyorb_hi__output__Oadd__s
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__character

 val s #"polyorb_hi-output.adb" 202 0 0# "model_projected" "model_trace:3073"  : Array__Int__Standard__character.map__ref 
 
 function s__first #"polyorb_hi-output.adb" 202 0 0# "model_projected" "model_trace:3073'First" 
   : Standard__integer.integer
 
 function s__last #"polyorb_hi-output.adb" 202 0 0# "model_projected" "model_trace:3073'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at polyorb_hi-output.adb:202, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__Oadd__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "polyorb_hi__epoch__epoch_data," created in Gnat2Why.Decls.Translate_External_Object *)
module Polyorb_hi__epoch__epoch_data
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val epoch_data #"system.ads" 1 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "polyorb_hi__epoch__epoch_data", created in Gnat2Why.Decls.Translate_External_Object *)
module Polyorb_hi__epoch__epoch_data___axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "polyorb_hi__output_low_level__new_line__s," created in Gnat2Why.Decls.Translate_External_Object *)
module Polyorb_hi__output_low_level__new_line__s
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val s #"system.ads" 1 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "polyorb_hi__output_low_level__new_line__s", created in Gnat2Why.Decls.Translate_External_Object *)
module Polyorb_hi__output_low_level__new_line__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "polyorb_hi__epoch__set_epoch__ctime," created in Gnat2Why.Decls.Translate_External_Object *)
module Polyorb_hi__epoch__set_epoch__ctime
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 val ctime #"system.ads" 1 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "polyorb_hi__epoch__set_epoch__ctime", created in Gnat2Why.Decls.Translate_External_Object *)
module Polyorb_hi__epoch__set_epoch__ctime___axiom
 use import "_gnatprove_standard".Main


end
(* Module giving axioms for type "short_short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_short_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_short_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_3 : int) (temp___is_init_0 : bool) (temp___do_constant_1 : bool) (temp___do_toplevel_2 : bool)  =
  (if (( temp___is_init_0 \/ (Standard__short_short_integer.first <= Standard__short_short_integer.last) )) then (
   (Standard__short_short_integer.dynamic_property Standard__short_short_integer.first Standard__short_short_integer.last temp___expr_3)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___4 : int) (temp___5 : bool)  =
  true

end

(* Module giving axioms for type "short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_9 : int) (temp___is_init_6 : bool) (temp___do_constant_7 : bool) (temp___do_toplevel_8 : bool)  =
  (if (( temp___is_init_6 \/ (Standard__short_integer.first <= Standard__short_integer.last) )) then (
   (Standard__short_integer.dynamic_property Standard__short_integer.first Standard__short_integer.last temp___expr_9)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___10 : int) (temp___11 : bool)  =
  true

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_15 : int) (temp___is_init_12 : bool) (temp___do_constant_13 : bool) (temp___do_toplevel_14 : bool)  =
  (if (( temp___is_init_12 \/ (Standard__integer.first <= Standard__integer.last) )) then (
   (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last temp___expr_15)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___16 : int) (temp___17 : bool)  =
  true

end

(* Module giving axioms for type "long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_21 : int) (temp___is_init_18 : bool) (temp___do_constant_19 : bool) (temp___do_toplevel_20 : bool)  =
  (if (( temp___is_init_18 \/ (Standard__long_integer.first <= Standard__long_integer.last) )) then (
   (Standard__long_integer.dynamic_property Standard__long_integer.first Standard__long_integer.last temp___expr_21)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___22 : int) (temp___23 : bool)  =
  true

end

(* Module giving axioms for type "long_long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_long_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_27 : int) (temp___is_init_24 : bool) (temp___do_constant_25 : bool) (temp___do_toplevel_26 : bool)  =
  (if (( temp___is_init_24 \/ (Standard__long_long_integer.first <= Standard__long_long_integer.last) )) then (
   (Standard__long_long_integer.dynamic_property Standard__long_long_integer.first Standard__long_long_integer.last temp___expr_27)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___28 : int) (temp___29 : bool)  =
  true

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_33 : int) (temp___is_init_30 : bool) (temp___do_constant_31 : bool) (temp___do_toplevel_32 : bool)  =
  (if (( temp___is_init_30 \/ (Standard__natural.first <= Standard__natural.last) )) then (
   (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last temp___expr_33)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___34 : int) (temp___35 : bool)  =
  true

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_39 : int) (temp___is_init_36 : bool) (temp___do_constant_37 : bool) (temp___do_toplevel_38 : bool)  =
  (if (( temp___is_init_36 \/ (Standard__positive.first <= Standard__positive.last) )) then (
   (Standard__positive.dynamic_property Standard__positive.first Standard__positive.last temp___expr_39)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___40 : int) (temp___41 : bool)  =
  true

end

(* Module giving axioms for type "short_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_float___axiom
 use import "_gnatprove_standard".Main
 use        Standard__short_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_45 : Standard__short_float.short_float) (temp___is_init_42 : bool) (temp___do_constant_43 : bool) (temp___do_toplevel_44 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___46 : Standard__short_float.short_float) (temp___47 : bool)  =
  true

end

(* Module giving axioms for type "float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__float___axiom
 use import "_gnatprove_standard".Main
 use        Standard__float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_51 : Standard__float.float) (temp___is_init_48 : bool) (temp___do_constant_49 : bool) (temp___do_toplevel_50 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___52 : Standard__float.float) (temp___53 : bool)  =
  true

end

(* Module giving axioms for type "long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_float___axiom
 use import "_gnatprove_standard".Main
 use        Standard__long_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_57 : Standard__long_float.long_float) (temp___is_init_54 : bool) (temp___do_constant_55 : bool) (temp___do_toplevel_56 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___58 : Standard__long_float.long_float) (temp___59 : bool)  =
  true

end

(* Module giving axioms for type "long_long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_float___axiom
 use import "_gnatprove_standard".Main
 use        Standard__long_long_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_63 : Standard__long_long_float.long_long_float) (temp___is_init_60 : bool) (temp___do_constant_61 : bool) (temp___do_toplevel_62 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___64 : Standard__long_long_float.long_long_float) (temp___65 : bool)  =
  true

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_69 : int) (temp___is_init_66 : bool) (temp___do_constant_67 : bool) (temp___do_toplevel_68 : bool)  =
  (if (( temp___is_init_66 \/ (Standard__character.first <= Standard__character.last) )) then (
   (Standard__character.dynamic_property Standard__character.first Standard__character.last temp___expr_69)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___70 : int) (temp___71 : bool)  =
  true

end

(* Module giving axioms for type "wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_75 : int) (temp___is_init_72 : bool) (temp___do_constant_73 : bool) (temp___do_toplevel_74 : bool)  =
  (if (( temp___is_init_72 \/ (Standard__wide_character.first <= Standard__wide_character.last) )) then (
   (Standard__wide_character.dynamic_property Standard__wide_character.first Standard__wide_character.last temp___expr_75)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___76 : int) (temp___77 : bool)  =
  true

end

(* Module giving axioms for type "wide_wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_81 : int) (temp___is_init_78 : bool) (temp___do_constant_79 : bool) (temp___do_toplevel_80 : bool)  =
  (if (( temp___is_init_78 \/ (Standard__wide_wide_character.first <= Standard__wide_wide_character.last) )) then (
   (Standard__wide_wide_character.dynamic_property Standard__wide_wide_character.first Standard__wide_wide_character.last temp___expr_81)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___82 : int) (temp___83 : bool)  =
  true

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_87 : Standard__string.string) (temp___is_init_84 : bool) (temp___do_constant_85 : bool) (temp___do_toplevel_86 : bool)  =
  (if (temp___do_constant_85) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first temp___expr_87) (Standard__string.last temp___expr_87))))

end

(* Module giving axioms for type "wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_string

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_92 : Standard__wide_string.wide_string) (temp___is_init_89 : bool) (temp___do_constant_90 : bool) (temp___do_toplevel_91 : bool)  =
  (if (temp___do_constant_90) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_string.first temp___expr_92) (Standard__wide_string.last temp___expr_92))))

end

(* Module giving axioms for type "wide_wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_wide_string

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_97 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_94 : bool) (temp___do_constant_95 : bool) (temp___do_toplevel_96 : bool)  =
  (if (temp___do_constant_95) then (
   true) else (
   (Standard__wide_wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_wide_string.first temp___expr_97) (Standard__wide_wide_string.last temp___expr_97))))

end

(* Module giving axioms for type "duration", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__duration___axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_102 : Standard__duration.duration) (temp___is_init_99 : bool) (temp___do_constant_100 : bool) (temp___do_toplevel_101 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___103 : Standard__duration.duration) (temp___104 : bool)  =
  true

end

(* Module giving axioms for type "integer_8", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_8___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_8

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_108 : int) (temp___is_init_105 : bool) (temp___do_constant_106 : bool) (temp___do_toplevel_107 : bool)  =
  (if (( temp___is_init_105 \/ (Standard__integer_8.first <= Standard__integer_8.last) )) then (
   (Standard__integer_8.dynamic_property Standard__integer_8.first Standard__integer_8.last temp___expr_108)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___109 : int) (temp___110 : bool)  =
  true

end

(* Module giving axioms for type "integer_16", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_16___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_16

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_114 : int) (temp___is_init_111 : bool) (temp___do_constant_112 : bool) (temp___do_toplevel_113 : bool)  =
  (if (( temp___is_init_111 \/ (Standard__integer_16.first <= Standard__integer_16.last) )) then (
   (Standard__integer_16.dynamic_property Standard__integer_16.first Standard__integer_16.last temp___expr_114)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___115 : int) (temp___116 : bool)  =
  true

end

(* Module giving axioms for type "integer_32", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_32___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_32

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_120 : int) (temp___is_init_117 : bool) (temp___do_constant_118 : bool) (temp___do_toplevel_119 : bool)  =
  (if (( temp___is_init_117 \/ (Standard__integer_32.first <= Standard__integer_32.last) )) then (
   (Standard__integer_32.dynamic_property Standard__integer_32.first Standard__integer_32.last temp___expr_120)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___121 : int) (temp___122 : bool)  =
  true

end

(* Module giving axioms for type "integer_64", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_64___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_64

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_126 : int) (temp___is_init_123 : bool) (temp___do_constant_124 : bool) (temp___do_toplevel_125 : bool)  =
  (if (( temp___is_init_123 \/ (Standard__integer_64.first <= Standard__integer_64.last) )) then (
   (Standard__integer_64.dynamic_property Standard__integer_64.first Standard__integer_64.last temp___expr_126)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___127 : int) (temp___128 : bool)  =
  true

end

(* Module giving axioms for type "universal_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__universal_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_132 : int) (temp___is_init_129 : bool) (temp___do_constant_130 : bool) (temp___do_toplevel_131 : bool)  =
  (if (( temp___is_init_129 \/ (Standard__universal_integer.first <= Standard__universal_integer.last) )) then (
   (Standard__universal_integer.dynamic_property Standard__universal_integer.first Standard__universal_integer.last temp___expr_132)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___133 : int) (temp___134 : bool)  =
  true

end

(* Module giving axioms for type "universal_real", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_real___axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_138 : Standard__universal_real.universal_real) (temp___is_init_135 : bool) (temp___do_constant_136 : bool) (temp___do_toplevel_137 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___139 : Standard__universal_real.universal_real) (temp___140 : bool)  =
  true

end

(* Module for defining the constant "min_int" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant *)
module System__min_int
 use import "_gnatprove_standard".Main

 function min_int #"system.ads" 51 0 0# "model" "model_trace:4804" 
   : int

end

(* Module for defining the constant "max_int" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_int
 use import "_gnatprove_standard".Main

 function max_int #"system.ads" 52 0 0# "model" "model_trace:4815" 
   : int

end

(* Module for defining the constant "max_binary_modulus" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_binary_modulus
 use import "_gnatprove_standard".Main

 function max_binary_modulus #"system.ads" 54 0 0# "model" "model_trace:4826" 
   : int

end

(* Module for defining the constant "max_nonbinary_modulus" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_nonbinary_modulus
 use import "_gnatprove_standard".Main

 function max_nonbinary_modulus #"system.ads" 55 0 0# "model" "model_trace:4839" 
   : int

end

(* Module for defining the constant "max_base_digits" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_base_digits
 use import "_gnatprove_standard".Main

 function max_base_digits #"system.ads" 57 0 0# "model" "model_trace:4854" 
   : int

end

(* Module for defining the constant "max_digits" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_digits
 use import "_gnatprove_standard".Main

 function max_digits #"system.ads" 58 0 0# "model" "model_trace:4864" 
   : int

end

(* Module for defining the constant "max_mantissa" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_mantissa
 use import "_gnatprove_standard".Main

 function max_mantissa #"system.ads" 60 0 0# "model" "model_trace:4874" 
   : int

end

(* Module for defining the constant "fine_delta" defined at system.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module System__fine_delta
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function fine_delta #"system.ads" 61 0 0# 
   : Standard__universal_real.universal_real

end

(* Module for defining the constant "tick" defined at system.ads:63, created in Gnat2Why.Decls.Translate_Constant *)
module System__tick
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function tick #"system.ads" 63 0 0# 
   : Standard__universal_real.universal_real

end

(* Module for defining the constant "storage_unit" defined at system.ads:71, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_unit
 use import "_gnatprove_standard".Main

 function storage_unit #"system.ads" 71 0 0# "model" "model_trace:4925" 
   : int

end

(* Module for defining the constant "word_size" defined at system.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module System__word_size
 use import "_gnatprove_standard".Main

 function word_size #"system.ads" 72 0 0# "model" "model_trace:4934" 
   : int

end

(* Module for defining the constant "memory_size" defined at system.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module System__memory_size
 use import "_gnatprove_standard".Main

 function memory_size #"system.ads" 73 0 0# "model" "model_trace:4943" 
   : int

end

(* Module for possibly declaring a logic function for "new_line" defined at polyorb_hi-output_low_level.ads:36, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__output_low_level__new_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put" defined at polyorb_hi-output_low_level.ads:40, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__output_low_level__put
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "long_bits" defined at s-parame.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__long_bits
 use import "_gnatprove_standard".Main

 function long_bits #"s-parame.ads" 110 0 0# "model" "model_trace:11728" 
   : int

end

(* Module for defining a value for string literal  defined at s-parame.ads:119, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___141
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___141 #"s-parame.ads" 119 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining the constant "max_attribute_count" defined at s-parame.ads:183, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__max_attribute_count
 use import "_gnatprove_standard".Main

 function max_attribute_count #"s-parame.ads" 183 0 0# "model" "model_trace:11801" 
   : int

end

(* Module for defining the constant "max_task_image_length" defined at s-parame.ads:199, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__max_task_image_length
 use import "_gnatprove_standard".Main

 function max_task_image_length #"s-parame.ads" 199 0 0# "model" "model_trace:11820" 
   : int

end

(* Module for defining the constant "default_exception_msg_max_length" defined at s-parame.ads:206, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__default_exception_msg_max_length
 use import "_gnatprove_standard".Main

 function default_exception_msg_max_length #"s-parame.ads" 206 0 0# "model" "model_trace:11829" 
   : int

end

(* Module for defining a value for string literal  defined at s-stalib.ads:142, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___142
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___142 #"s-stalib.ads" 142 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at s-stalib.ads:143, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___143
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___143 #"s-stalib.ads" 143 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at s-stalib.ads:144, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___144
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___144 #"s-stalib.ads" 144 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at s-stalib.ads:145, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___145
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___145 #"s-stalib.ads" 145 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at s-stalib.ads:146, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___146
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___146 #"s-stalib.ads" 146 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at s-stalib.ads:148, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___147
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___147 #"s-stalib.ads" 148 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for possibly declaring a logic function for "abort_undefer_direct" defined at s-stalib.ads:254, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__standard_library__abort_undefer_direct
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "adafinal" defined at s-stalib.ads:259, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__standard_library__adafinal
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "raise_exception" defined at a-except.ads:90, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__raise_exception
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reraise_occurrence" defined at a-except.ads:96, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__reraise_occurrence
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "save_occurrence" defined at a-except.ads:123, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__save_occurrence
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "exception_msg_max_length" defined at a-except.ads:153, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_msg_max_length
 use import "_gnatprove_standard".Main

 function exception_msg_max_length #"a-except.ads" 153 0 0# "model" "model_trace:17938" 
   : int

end

(* Module for possibly declaring a logic function for "raise_exception_always" defined at a-except.ads:188, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__raise_exception_always
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "raise_from_signal_handler" defined at a-except.ads:197, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__raise_from_signal_handler
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "raise_from_controlled_operation" defined at a-except.ads:215, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__raise_from_controlled_operation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reraise_library_exception_if_any" defined at a-except.ads:224, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__reraise_library_exception_if_any
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reraise_occurrence_always" defined at a-except.ads:231, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__reraise_occurrence_always
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reraise_occurrence_no_defer" defined at a-except.ads:238, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__reraise_occurrence_no_defer
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "poll" defined at a-except.ads:270, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__poll
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "max_tracebacks" defined at a-except.ads:280, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__max_tracebacks
 use import "_gnatprove_standard".Main

 function max_tracebacks #"a-except.ads" 280 0 0# "model" "model_trace:18266" 
   : int

end

(* Module for possibly declaring a logic function for "abort_defer_nt" defined at s-soflin.ads:136, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__abort_defer_nt
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "abort_undefer_nt" defined at s-soflin.ads:139, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__abort_undefer_nt
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "abort_handler_nt" defined at s-soflin.ads:142, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__abort_handler_nt
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "task_lock_nt" defined at s-soflin.ads:150, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__task_lock_nt
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "task_unlock_nt" defined at s-soflin.ads:153, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__task_unlock_nt
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "task_termination_nt" defined at s-soflin.ads:156, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__task_termination_nt
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "adafinal_nt" defined at s-soflin.ads:160, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__adafinal_nt
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_jmpbuf_address_nt" defined at s-soflin.ads:226, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__set_jmpbuf_address_nt
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_sec_stack_addr_nt" defined at s-soflin.ads:232, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__set_sec_stack_addr_nt
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "enter_master_nt" defined at s-soflin.ads:254, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__enter_master_nt
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "complete_master_nt" defined at s-soflin.ads:255, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__complete_master_nt
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_jmpbuf_address_soft" defined at s-soflin.ads:369, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__set_jmpbuf_address_soft
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_sec_stack_addr_soft" defined at s-soflin.ads:374, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__soft_links__set_sec_stack_addr_soft
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "char_bit" defined at i-c.ads:23, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__char_bit
 use import "_gnatprove_standard".Main

 function char_bit #"i-c.ads" 23 0 0# "model" "model_trace:10228" 
   : int

end

(* Module for defining the constant "schar_min" defined at i-c.ads:24, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__schar_min
 use import "_gnatprove_standard".Main

 function schar_min #"i-c.ads" 24 0 0# "model" "model_trace:10237" 
   : int

end

(* Module for defining the constant "schar_max" defined at i-c.ads:25, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__schar_max
 use import "_gnatprove_standard".Main

 function schar_max #"i-c.ads" 25 0 0# "model" "model_trace:10247" 
   : int

end

(* Module for defining the constant "uchar_max" defined at i-c.ads:26, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__uchar_max
 use import "_gnatprove_standard".Main

 function uchar_max #"i-c.ads" 26 0 0# "model" "model_trace:10256" 
   : int

end

(* Module for possibly declaring a logic function for "to_c__3" defined at i-c.ads:92, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__3" defined at i-c.ads:98, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__6" defined at i-c.ads:128, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__6
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__6" defined at i-c.ads:134, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__6
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__9" defined at i-c.ads:174, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__9
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__9" defined at i-c.ads:181, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__9
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__12" defined at i-c.ads:216, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__12
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__12" defined at i-c.ads:223, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__12
 use import "_gnatprove_standard".Main


end

(* Module for defining a value for string literal  defined at s-oscons.ads:59, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___148
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___148 #"s-oscons.ads" 59 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining the constant "sizeof_unsigned_int" defined at s-oscons.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__sizeof_unsigned_int
 use import "_gnatprove_standard".Main

 function sizeof_unsigned_int #"s-oscons.ads" 60 0 0# "model" "model_trace:11921" 
   : int

end

(* Module for defining the constant "iov_max" defined at s-oscons.ads:66, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__iov_max
 use import "_gnatprove_standard".Main

 function iov_max #"s-oscons.ads" 66 0 0# "model" "model_trace:11930" 
   : int

end

(* Module for defining the constant "name_max" defined at s-oscons.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__name_max
 use import "_gnatprove_standard".Main

 function name_max #"s-oscons.ads" 67 0 0# "model" "model_trace:11939" 
   : int

end

(* Module for defining the constant "o_rdwr" defined at s-oscons.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__o_rdwr
 use import "_gnatprove_standard".Main

 function o_rdwr #"s-oscons.ads" 73 0 0# "model" "model_trace:11948" 
   : int

end

(* Module for defining the constant "o_noctty" defined at s-oscons.ads:74, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__o_noctty
 use import "_gnatprove_standard".Main

 function o_noctty #"s-oscons.ads" 74 0 0# "model" "model_trace:11957" 
   : int

end

(* Module for defining the constant "o_ndelay" defined at s-oscons.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__o_ndelay
 use import "_gnatprove_standard".Main

 function o_ndelay #"s-oscons.ads" 75 0 0# "model" "model_trace:11966" 
   : int

end

(* Module for defining the constant "f_getfl" defined at s-oscons.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__f_getfl
 use import "_gnatprove_standard".Main

 function f_getfl #"s-oscons.ads" 81 0 0# "model" "model_trace:11975" 
   : int

end

(* Module for defining the constant "f_setfl" defined at s-oscons.ads:82, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__f_setfl
 use import "_gnatprove_standard".Main

 function f_setfl #"s-oscons.ads" 82 0 0# "model" "model_trace:11984" 
   : int

end

(* Module for defining the constant "fndelay" defined at s-oscons.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__fndelay
 use import "_gnatprove_standard".Main

 function fndelay #"s-oscons.ads" 88 0 0# "model" "model_trace:11993" 
   : int

end

(* Module for defining the constant "fionbio" defined at s-oscons.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__fionbio
 use import "_gnatprove_standard".Main

 function fionbio #"s-oscons.ads" 95 0 0# "model" "model_trace:12015" 
   : int

end

(* Module for defining the constant "fionread" defined at s-oscons.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__fionread
 use import "_gnatprove_standard".Main

 function fionread #"s-oscons.ads" 96 0 0# "model" "model_trace:12025" 
   : int

end

(* Module for defining the constant "eagain" defined at s-oscons.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__eagain
 use import "_gnatprove_standard".Main

 function eagain #"s-oscons.ads" 104 0 0# "model" "model_trace:12034" 
   : int

end

(* Module for defining the constant "enoent" defined at s-oscons.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__enoent
 use import "_gnatprove_standard".Main

 function enoent #"s-oscons.ads" 105 0 0# "model" "model_trace:12043" 
   : int

end

(* Module for defining the constant "enomem" defined at s-oscons.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__enomem
 use import "_gnatprove_standard".Main

 function enomem #"s-oscons.ads" 106 0 0# "model" "model_trace:12052" 
   : int

end

(* Module for defining the constant "eacces" defined at s-oscons.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__eacces
 use import "_gnatprove_standard".Main

 function eacces #"s-oscons.ads" 107 0 0# "model" "model_trace:12061" 
   : int

end

(* Module for defining the constant "eaddrinuse" defined at s-oscons.ads:108, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__eaddrinuse
 use import "_gnatprove_standard".Main

 function eaddrinuse #"s-oscons.ads" 108 0 0# "model" "model_trace:12070" 
   : int

end

(* Module for defining the constant "eaddrnotavail" defined at s-oscons.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__eaddrnotavail
 use import "_gnatprove_standard".Main

 function eaddrnotavail #"s-oscons.ads" 109 0 0# "model" "model_trace:12079" 
   : int

end

(* Module for defining the constant "eafnosupport" defined at s-oscons.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__eafnosupport
 use import "_gnatprove_standard".Main

 function eafnosupport #"s-oscons.ads" 110 0 0# "model" "model_trace:12088" 
   : int

end

(* Module for defining the constant "ealready" defined at s-oscons.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ealready
 use import "_gnatprove_standard".Main

 function ealready #"s-oscons.ads" 111 0 0# "model" "model_trace:12097" 
   : int

end

(* Module for defining the constant "ebadf" defined at s-oscons.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ebadf
 use import "_gnatprove_standard".Main

 function ebadf #"s-oscons.ads" 112 0 0# "model" "model_trace:12106" 
   : int

end

(* Module for defining the constant "econnaborted" defined at s-oscons.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__econnaborted
 use import "_gnatprove_standard".Main

 function econnaborted #"s-oscons.ads" 113 0 0# "model" "model_trace:12115" 
   : int

end

(* Module for defining the constant "econnrefused" defined at s-oscons.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__econnrefused
 use import "_gnatprove_standard".Main

 function econnrefused #"s-oscons.ads" 114 0 0# "model" "model_trace:12124" 
   : int

end

(* Module for defining the constant "econnreset" defined at s-oscons.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__econnreset
 use import "_gnatprove_standard".Main

 function econnreset #"s-oscons.ads" 115 0 0# "model" "model_trace:12133" 
   : int

end

(* Module for defining the constant "edestaddrreq" defined at s-oscons.ads:116, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__edestaddrreq
 use import "_gnatprove_standard".Main

 function edestaddrreq #"s-oscons.ads" 116 0 0# "model" "model_trace:12142" 
   : int

end

(* Module for defining the constant "efault" defined at s-oscons.ads:117, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__efault
 use import "_gnatprove_standard".Main

 function efault #"s-oscons.ads" 117 0 0# "model" "model_trace:12151" 
   : int

end

(* Module for defining the constant "ehostdown" defined at s-oscons.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ehostdown
 use import "_gnatprove_standard".Main

 function ehostdown #"s-oscons.ads" 118 0 0# "model" "model_trace:12160" 
   : int

end

(* Module for defining the constant "ehostunreach" defined at s-oscons.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ehostunreach
 use import "_gnatprove_standard".Main

 function ehostunreach #"s-oscons.ads" 119 0 0# "model" "model_trace:12169" 
   : int

end

(* Module for defining the constant "einprogress" defined at s-oscons.ads:120, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__einprogress
 use import "_gnatprove_standard".Main

 function einprogress #"s-oscons.ads" 120 0 0# "model" "model_trace:12178" 
   : int

end

(* Module for defining the constant "eintr" defined at s-oscons.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__eintr
 use import "_gnatprove_standard".Main

 function eintr #"s-oscons.ads" 121 0 0# "model" "model_trace:12187" 
   : int

end

(* Module for defining the constant "einval" defined at s-oscons.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__einval
 use import "_gnatprove_standard".Main

 function einval #"s-oscons.ads" 122 0 0# "model" "model_trace:12196" 
   : int

end

(* Module for defining the constant "eio" defined at s-oscons.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__eio
 use import "_gnatprove_standard".Main

 function eio #"s-oscons.ads" 123 0 0# "model" "model_trace:12205" 
   : int

end

(* Module for defining the constant "eisconn" defined at s-oscons.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__eisconn
 use import "_gnatprove_standard".Main

 function eisconn #"s-oscons.ads" 124 0 0# "model" "model_trace:12214" 
   : int

end

(* Module for defining the constant "eloop" defined at s-oscons.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__eloop
 use import "_gnatprove_standard".Main

 function eloop #"s-oscons.ads" 125 0 0# "model" "model_trace:12223" 
   : int

end

(* Module for defining the constant "emfile" defined at s-oscons.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__emfile
 use import "_gnatprove_standard".Main

 function emfile #"s-oscons.ads" 126 0 0# "model" "model_trace:12232" 
   : int

end

(* Module for defining the constant "emsgsize" defined at s-oscons.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__emsgsize
 use import "_gnatprove_standard".Main

 function emsgsize #"s-oscons.ads" 127 0 0# "model" "model_trace:12241" 
   : int

end

(* Module for defining the constant "enametoolong" defined at s-oscons.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__enametoolong
 use import "_gnatprove_standard".Main

 function enametoolong #"s-oscons.ads" 128 0 0# "model" "model_trace:12250" 
   : int

end

(* Module for defining the constant "enetdown" defined at s-oscons.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__enetdown
 use import "_gnatprove_standard".Main

 function enetdown #"s-oscons.ads" 129 0 0# "model" "model_trace:12259" 
   : int

end

(* Module for defining the constant "enetreset" defined at s-oscons.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__enetreset
 use import "_gnatprove_standard".Main

 function enetreset #"s-oscons.ads" 130 0 0# "model" "model_trace:12268" 
   : int

end

(* Module for defining the constant "enetunreach" defined at s-oscons.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__enetunreach
 use import "_gnatprove_standard".Main

 function enetunreach #"s-oscons.ads" 131 0 0# "model" "model_trace:12277" 
   : int

end

(* Module for defining the constant "enobufs" defined at s-oscons.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__enobufs
 use import "_gnatprove_standard".Main

 function enobufs #"s-oscons.ads" 132 0 0# "model" "model_trace:12286" 
   : int

end

(* Module for defining the constant "enoprotoopt" defined at s-oscons.ads:133, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__enoprotoopt
 use import "_gnatprove_standard".Main

 function enoprotoopt #"s-oscons.ads" 133 0 0# "model" "model_trace:12295" 
   : int

end

(* Module for defining the constant "enotconn" defined at s-oscons.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__enotconn
 use import "_gnatprove_standard".Main

 function enotconn #"s-oscons.ads" 134 0 0# "model" "model_trace:12304" 
   : int

end

(* Module for defining the constant "enotsock" defined at s-oscons.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__enotsock
 use import "_gnatprove_standard".Main

 function enotsock #"s-oscons.ads" 135 0 0# "model" "model_trace:12313" 
   : int

end

(* Module for defining the constant "eopnotsupp" defined at s-oscons.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__eopnotsupp
 use import "_gnatprove_standard".Main

 function eopnotsupp #"s-oscons.ads" 136 0 0# "model" "model_trace:12322" 
   : int

end

(* Module for defining the constant "epipe" defined at s-oscons.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__epipe
 use import "_gnatprove_standard".Main

 function epipe #"s-oscons.ads" 137 0 0# "model" "model_trace:12331" 
   : int

end

(* Module for defining the constant "epfnosupport" defined at s-oscons.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__epfnosupport
 use import "_gnatprove_standard".Main

 function epfnosupport #"s-oscons.ads" 138 0 0# "model" "model_trace:12340" 
   : int

end

(* Module for defining the constant "eprotonosupport" defined at s-oscons.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__eprotonosupport
 use import "_gnatprove_standard".Main

 function eprotonosupport #"s-oscons.ads" 139 0 0# "model" "model_trace:12349" 
   : int

end

(* Module for defining the constant "eprototype" defined at s-oscons.ads:140, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__eprototype
 use import "_gnatprove_standard".Main

 function eprototype #"s-oscons.ads" 140 0 0# "model" "model_trace:12358" 
   : int

end

(* Module for defining the constant "erange" defined at s-oscons.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__erange
 use import "_gnatprove_standard".Main

 function erange #"s-oscons.ads" 141 0 0# "model" "model_trace:12367" 
   : int

end

(* Module for defining the constant "eshutdown" defined at s-oscons.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__eshutdown
 use import "_gnatprove_standard".Main

 function eshutdown #"s-oscons.ads" 142 0 0# "model" "model_trace:12376" 
   : int

end

(* Module for defining the constant "esocktnosupport" defined at s-oscons.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__esocktnosupport
 use import "_gnatprove_standard".Main

 function esocktnosupport #"s-oscons.ads" 143 0 0# "model" "model_trace:12385" 
   : int

end

(* Module for defining the constant "etimedout" defined at s-oscons.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__etimedout
 use import "_gnatprove_standard".Main

 function etimedout #"s-oscons.ads" 144 0 0# "model" "model_trace:12394" 
   : int

end

(* Module for defining the constant "etoomanyrefs" defined at s-oscons.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__etoomanyrefs
 use import "_gnatprove_standard".Main

 function etoomanyrefs #"s-oscons.ads" 145 0 0# "model" "model_trace:12403" 
   : int

end

(* Module for defining the constant "ewouldblock" defined at s-oscons.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ewouldblock
 use import "_gnatprove_standard".Main

 function ewouldblock #"s-oscons.ads" 146 0 0# "model" "model_trace:12412" 
   : int

end

(* Module for defining the constant "e2big" defined at s-oscons.ads:147, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__e2big
 use import "_gnatprove_standard".Main

 function e2big #"s-oscons.ads" 147 0 0# "model" "model_trace:12421" 
   : int

end

(* Module for defining the constant "eilseq" defined at s-oscons.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__eilseq
 use import "_gnatprove_standard".Main

 function eilseq #"s-oscons.ads" 148 0 0# "model" "model_trace:12430" 
   : int

end

(* Module for defining the constant "tcsanow" defined at s-oscons.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__tcsanow
 use import "_gnatprove_standard".Main

 function tcsanow #"s-oscons.ads" 154 0 0# "model" "model_trace:12439" 
   : int

end

(* Module for defining the constant "tciflush" defined at s-oscons.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__tciflush
 use import "_gnatprove_standard".Main

 function tciflush #"s-oscons.ads" 155 0 0# "model" "model_trace:12448" 
   : int

end

(* Module for defining the constant "ixon" defined at s-oscons.ads:156, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ixon
 use import "_gnatprove_standard".Main

 function ixon #"s-oscons.ads" 156 0 0# "model" "model_trace:12457" 
   : int

end

(* Module for defining the constant "clocal" defined at s-oscons.ads:157, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__clocal
 use import "_gnatprove_standard".Main

 function clocal #"s-oscons.ads" 157 0 0# "model" "model_trace:12466" 
   : int

end

(* Module for defining the constant "crtscts" defined at s-oscons.ads:158, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__crtscts
 use import "_gnatprove_standard".Main

 function crtscts #"s-oscons.ads" 158 0 0# "model" "model_trace:12475" 
   : int

end

(* Module for defining the constant "cread" defined at s-oscons.ads:159, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__cread
 use import "_gnatprove_standard".Main

 function cread #"s-oscons.ads" 159 0 0# "model" "model_trace:12484" 
   : int

end

(* Module for defining the constant "cs5" defined at s-oscons.ads:160, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__cs5
 use import "_gnatprove_standard".Main

 function cs5 #"s-oscons.ads" 160 0 0# "model" "model_trace:12493" 
   : int

end

(* Module for defining the constant "cs6" defined at s-oscons.ads:161, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__cs6
 use import "_gnatprove_standard".Main

 function cs6 #"s-oscons.ads" 161 0 0# "model" "model_trace:12502" 
   : int

end

(* Module for defining the constant "cs7" defined at s-oscons.ads:162, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__cs7
 use import "_gnatprove_standard".Main

 function cs7 #"s-oscons.ads" 162 0 0# "model" "model_trace:12511" 
   : int

end

(* Module for defining the constant "cs8" defined at s-oscons.ads:163, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__cs8
 use import "_gnatprove_standard".Main

 function cs8 #"s-oscons.ads" 163 0 0# "model" "model_trace:12520" 
   : int

end

(* Module for defining the constant "cstopb" defined at s-oscons.ads:164, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__cstopb
 use import "_gnatprove_standard".Main

 function cstopb #"s-oscons.ads" 164 0 0# "model" "model_trace:12529" 
   : int

end

(* Module for defining the constant "parenb" defined at s-oscons.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__parenb
 use import "_gnatprove_standard".Main

 function parenb #"s-oscons.ads" 165 0 0# "model" "model_trace:12538" 
   : int

end

(* Module for defining the constant "parodd" defined at s-oscons.ads:166, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__parodd
 use import "_gnatprove_standard".Main

 function parodd #"s-oscons.ads" 166 0 0# "model" "model_trace:12547" 
   : int

end

(* Module for defining the constant "b0" defined at s-oscons.ads:167, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b0
 use import "_gnatprove_standard".Main

 function b0 #"s-oscons.ads" 167 0 0# "model" "model_trace:12556" 
   : int

end

(* Module for defining the constant "b50" defined at s-oscons.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b50
 use import "_gnatprove_standard".Main

 function b50 #"s-oscons.ads" 168 0 0# "model" "model_trace:12565" 
   : int

end

(* Module for defining the constant "b75" defined at s-oscons.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b75
 use import "_gnatprove_standard".Main

 function b75 #"s-oscons.ads" 169 0 0# "model" "model_trace:12574" 
   : int

end

(* Module for defining the constant "b110" defined at s-oscons.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b110
 use import "_gnatprove_standard".Main

 function b110 #"s-oscons.ads" 170 0 0# "model" "model_trace:12583" 
   : int

end

(* Module for defining the constant "b134" defined at s-oscons.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b134
 use import "_gnatprove_standard".Main

 function b134 #"s-oscons.ads" 171 0 0# "model" "model_trace:12592" 
   : int

end

(* Module for defining the constant "b150" defined at s-oscons.ads:172, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b150
 use import "_gnatprove_standard".Main

 function b150 #"s-oscons.ads" 172 0 0# "model" "model_trace:12601" 
   : int

end

(* Module for defining the constant "b200" defined at s-oscons.ads:173, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b200
 use import "_gnatprove_standard".Main

 function b200 #"s-oscons.ads" 173 0 0# "model" "model_trace:12610" 
   : int

end

(* Module for defining the constant "b300" defined at s-oscons.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b300
 use import "_gnatprove_standard".Main

 function b300 #"s-oscons.ads" 174 0 0# "model" "model_trace:12619" 
   : int

end

(* Module for defining the constant "b600" defined at s-oscons.ads:175, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b600
 use import "_gnatprove_standard".Main

 function b600 #"s-oscons.ads" 175 0 0# "model" "model_trace:12628" 
   : int

end

(* Module for defining the constant "b1200" defined at s-oscons.ads:176, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b1200
 use import "_gnatprove_standard".Main

 function b1200 #"s-oscons.ads" 176 0 0# "model" "model_trace:12637" 
   : int

end

(* Module for defining the constant "b1800" defined at s-oscons.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b1800
 use import "_gnatprove_standard".Main

 function b1800 #"s-oscons.ads" 177 0 0# "model" "model_trace:12646" 
   : int

end

(* Module for defining the constant "b2400" defined at s-oscons.ads:178, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b2400
 use import "_gnatprove_standard".Main

 function b2400 #"s-oscons.ads" 178 0 0# "model" "model_trace:12655" 
   : int

end

(* Module for defining the constant "b4800" defined at s-oscons.ads:179, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b4800
 use import "_gnatprove_standard".Main

 function b4800 #"s-oscons.ads" 179 0 0# "model" "model_trace:12664" 
   : int

end

(* Module for defining the constant "b9600" defined at s-oscons.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b9600
 use import "_gnatprove_standard".Main

 function b9600 #"s-oscons.ads" 180 0 0# "model" "model_trace:12673" 
   : int

end

(* Module for defining the constant "b19200" defined at s-oscons.ads:181, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b19200
 use import "_gnatprove_standard".Main

 function b19200 #"s-oscons.ads" 181 0 0# "model" "model_trace:12682" 
   : int

end

(* Module for defining the constant "b38400" defined at s-oscons.ads:182, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b38400
 use import "_gnatprove_standard".Main

 function b38400 #"s-oscons.ads" 182 0 0# "model" "model_trace:12691" 
   : int

end

(* Module for defining the constant "b57600" defined at s-oscons.ads:183, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b57600
 use import "_gnatprove_standard".Main

 function b57600 #"s-oscons.ads" 183 0 0# "model" "model_trace:12700" 
   : int

end

(* Module for defining the constant "b115200" defined at s-oscons.ads:184, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b115200
 use import "_gnatprove_standard".Main

 function b115200 #"s-oscons.ads" 184 0 0# "model" "model_trace:12709" 
   : int

end

(* Module for defining the constant "b230400" defined at s-oscons.ads:185, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b230400
 use import "_gnatprove_standard".Main

 function b230400 #"s-oscons.ads" 185 0 0# "model" "model_trace:12718" 
   : int

end

(* Module for defining the constant "b460800" defined at s-oscons.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b460800
 use import "_gnatprove_standard".Main

 function b460800 #"s-oscons.ads" 186 0 0# "model" "model_trace:12727" 
   : int

end

(* Module for defining the constant "b500000" defined at s-oscons.ads:187, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b500000
 use import "_gnatprove_standard".Main

 function b500000 #"s-oscons.ads" 187 0 0# "model" "model_trace:12736" 
   : int

end

(* Module for defining the constant "b576000" defined at s-oscons.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b576000
 use import "_gnatprove_standard".Main

 function b576000 #"s-oscons.ads" 188 0 0# "model" "model_trace:12745" 
   : int

end

(* Module for defining the constant "b921600" defined at s-oscons.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b921600
 use import "_gnatprove_standard".Main

 function b921600 #"s-oscons.ads" 189 0 0# "model" "model_trace:12754" 
   : int

end

(* Module for defining the constant "b1000000" defined at s-oscons.ads:190, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b1000000
 use import "_gnatprove_standard".Main

 function b1000000 #"s-oscons.ads" 190 0 0# "model" "model_trace:12763" 
   : int

end

(* Module for defining the constant "b1152000" defined at s-oscons.ads:191, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b1152000
 use import "_gnatprove_standard".Main

 function b1152000 #"s-oscons.ads" 191 0 0# "model" "model_trace:12772" 
   : int

end

(* Module for defining the constant "b1500000" defined at s-oscons.ads:192, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b1500000
 use import "_gnatprove_standard".Main

 function b1500000 #"s-oscons.ads" 192 0 0# "model" "model_trace:12781" 
   : int

end

(* Module for defining the constant "b2000000" defined at s-oscons.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b2000000
 use import "_gnatprove_standard".Main

 function b2000000 #"s-oscons.ads" 193 0 0# "model" "model_trace:12790" 
   : int

end

(* Module for defining the constant "b2500000" defined at s-oscons.ads:194, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b2500000
 use import "_gnatprove_standard".Main

 function b2500000 #"s-oscons.ads" 194 0 0# "model" "model_trace:12799" 
   : int

end

(* Module for defining the constant "b3000000" defined at s-oscons.ads:195, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b3000000
 use import "_gnatprove_standard".Main

 function b3000000 #"s-oscons.ads" 195 0 0# "model" "model_trace:12808" 
   : int

end

(* Module for defining the constant "b3500000" defined at s-oscons.ads:196, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b3500000
 use import "_gnatprove_standard".Main

 function b3500000 #"s-oscons.ads" 196 0 0# "model" "model_trace:12817" 
   : int

end

(* Module for defining the constant "b4000000" defined at s-oscons.ads:197, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__b4000000
 use import "_gnatprove_standard".Main

 function b4000000 #"s-oscons.ads" 197 0 0# "model" "model_trace:12826" 
   : int

end

(* Module for defining the constant "vintr" defined at s-oscons.ads:203, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__vintr
 use import "_gnatprove_standard".Main

 function vintr #"s-oscons.ads" 203 0 0# "model" "model_trace:12835" 
   : int

end

(* Module for defining the constant "vquit" defined at s-oscons.ads:204, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__vquit
 use import "_gnatprove_standard".Main

 function vquit #"s-oscons.ads" 204 0 0# "model" "model_trace:12844" 
   : int

end

(* Module for defining the constant "verase" defined at s-oscons.ads:205, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__verase
 use import "_gnatprove_standard".Main

 function verase #"s-oscons.ads" 205 0 0# "model" "model_trace:12853" 
   : int

end

(* Module for defining the constant "vkill" defined at s-oscons.ads:206, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__vkill
 use import "_gnatprove_standard".Main

 function vkill #"s-oscons.ads" 206 0 0# "model" "model_trace:12862" 
   : int

end

(* Module for defining the constant "veof" defined at s-oscons.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__veof
 use import "_gnatprove_standard".Main

 function veof #"s-oscons.ads" 207 0 0# "model" "model_trace:12871" 
   : int

end

(* Module for defining the constant "vtime" defined at s-oscons.ads:208, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__vtime
 use import "_gnatprove_standard".Main

 function vtime #"s-oscons.ads" 208 0 0# "model" "model_trace:12880" 
   : int

end

(* Module for defining the constant "vmin" defined at s-oscons.ads:209, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__vmin
 use import "_gnatprove_standard".Main

 function vmin #"s-oscons.ads" 209 0 0# "model" "model_trace:12889" 
   : int

end

(* Module for defining the constant "vswtc" defined at s-oscons.ads:210, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__vswtc
 use import "_gnatprove_standard".Main

 function vswtc #"s-oscons.ads" 210 0 0# "model" "model_trace:12898" 
   : int

end

(* Module for defining the constant "vstart" defined at s-oscons.ads:211, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__vstart
 use import "_gnatprove_standard".Main

 function vstart #"s-oscons.ads" 211 0 0# "model" "model_trace:12908" 
   : int

end

(* Module for defining the constant "vstop" defined at s-oscons.ads:212, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__vstop
 use import "_gnatprove_standard".Main

 function vstop #"s-oscons.ads" 212 0 0# "model" "model_trace:12917" 
   : int

end

(* Module for defining the constant "vsusp" defined at s-oscons.ads:213, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__vsusp
 use import "_gnatprove_standard".Main

 function vsusp #"s-oscons.ads" 213 0 0# "model" "model_trace:12926" 
   : int

end

(* Module for defining the constant "veol" defined at s-oscons.ads:214, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__veol
 use import "_gnatprove_standard".Main

 function veol #"s-oscons.ads" 214 0 0# "model" "model_trace:12935" 
   : int

end

(* Module for defining the constant "vreprint" defined at s-oscons.ads:215, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__vreprint
 use import "_gnatprove_standard".Main

 function vreprint #"s-oscons.ads" 215 0 0# "model" "model_trace:12944" 
   : int

end

(* Module for defining the constant "vdiscard" defined at s-oscons.ads:216, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__vdiscard
 use import "_gnatprove_standard".Main

 function vdiscard #"s-oscons.ads" 216 0 0# "model" "model_trace:12953" 
   : int

end

(* Module for defining the constant "vwerase" defined at s-oscons.ads:217, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__vwerase
 use import "_gnatprove_standard".Main

 function vwerase #"s-oscons.ads" 217 0 0# "model" "model_trace:12962" 
   : int

end

(* Module for defining the constant "vlnext" defined at s-oscons.ads:218, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__vlnext
 use import "_gnatprove_standard".Main

 function vlnext #"s-oscons.ads" 218 0 0# "model" "model_trace:12971" 
   : int

end

(* Module for defining the constant "veol2" defined at s-oscons.ads:219, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__veol2
 use import "_gnatprove_standard".Main

 function veol2 #"s-oscons.ads" 219 0 0# "model" "model_trace:12980" 
   : int

end

(* Module for defining a value for string literal  defined at s-oscons.ads:225, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___149
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___149 #"s-oscons.ads" 225 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining the constant "af_inet" defined at s-oscons.ads:231, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__af_inet
 use import "_gnatprove_standard".Main

 function af_inet #"s-oscons.ads" 231 0 0# "model" "model_trace:12999" 
   : int

end

(* Module for defining the constant "af_inet6" defined at s-oscons.ads:232, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__af_inet6
 use import "_gnatprove_standard".Main

 function af_inet6 #"s-oscons.ads" 232 0 0# "model" "model_trace:13008" 
   : int

end

(* Module for defining the constant "sock_stream" defined at s-oscons.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__sock_stream
 use import "_gnatprove_standard".Main

 function sock_stream #"s-oscons.ads" 238 0 0# "model" "model_trace:13017" 
   : int

end

(* Module for defining the constant "sock_dgram" defined at s-oscons.ads:239, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__sock_dgram
 use import "_gnatprove_standard".Main

 function sock_dgram #"s-oscons.ads" 239 0 0# "model" "model_trace:13026" 
   : int

end

(* Module for defining the constant "host_not_found" defined at s-oscons.ads:245, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__host_not_found
 use import "_gnatprove_standard".Main

 function host_not_found #"s-oscons.ads" 245 0 0# "model" "model_trace:13035" 
   : int

end

(* Module for defining the constant "try_again" defined at s-oscons.ads:246, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__try_again
 use import "_gnatprove_standard".Main

 function try_again #"s-oscons.ads" 246 0 0# "model" "model_trace:13044" 
   : int

end

(* Module for defining the constant "no_data" defined at s-oscons.ads:247, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__no_data
 use import "_gnatprove_standard".Main

 function no_data #"s-oscons.ads" 247 0 0# "model" "model_trace:13053" 
   : int

end

(* Module for defining the constant "no_recovery" defined at s-oscons.ads:248, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__no_recovery
 use import "_gnatprove_standard".Main

 function no_recovery #"s-oscons.ads" 248 0 0# "model" "model_trace:13062" 
   : int

end

(* Module for defining the constant "shut_rd" defined at s-oscons.ads:254, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__shut_rd
 use import "_gnatprove_standard".Main

 function shut_rd #"s-oscons.ads" 254 0 0# "model" "model_trace:13071" 
   : int

end

(* Module for defining the constant "shut_wr" defined at s-oscons.ads:255, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__shut_wr
 use import "_gnatprove_standard".Main

 function shut_wr #"s-oscons.ads" 255 0 0# "model" "model_trace:13080" 
   : int

end

(* Module for defining the constant "shut_rdwr" defined at s-oscons.ads:256, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__shut_rdwr
 use import "_gnatprove_standard".Main

 function shut_rdwr #"s-oscons.ads" 256 0 0# "model" "model_trace:13089" 
   : int

end

(* Module for defining the constant "sol_socket" defined at s-oscons.ads:262, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__sol_socket
 use import "_gnatprove_standard".Main

 function sol_socket #"s-oscons.ads" 262 0 0# "model" "model_trace:13098" 
   : int

end

(* Module for defining the constant "ipproto_ip" defined at s-oscons.ads:263, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ipproto_ip
 use import "_gnatprove_standard".Main

 function ipproto_ip #"s-oscons.ads" 263 0 0# "model" "model_trace:13107" 
   : int

end

(* Module for defining the constant "ipproto_udp" defined at s-oscons.ads:264, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ipproto_udp
 use import "_gnatprove_standard".Main

 function ipproto_udp #"s-oscons.ads" 264 0 0# "model" "model_trace:13116" 
   : int

end

(* Module for defining the constant "ipproto_tcp" defined at s-oscons.ads:265, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ipproto_tcp
 use import "_gnatprove_standard".Main

 function ipproto_tcp #"s-oscons.ads" 265 0 0# "model" "model_trace:13125" 
   : int

end

(* Module for defining the constant "msg_oob" defined at s-oscons.ads:271, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__msg_oob
 use import "_gnatprove_standard".Main

 function msg_oob #"s-oscons.ads" 271 0 0# "model" "model_trace:13134" 
   : int

end

(* Module for defining the constant "msg_peek" defined at s-oscons.ads:272, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__msg_peek
 use import "_gnatprove_standard".Main

 function msg_peek #"s-oscons.ads" 272 0 0# "model" "model_trace:13143" 
   : int

end

(* Module for defining the constant "msg_eor" defined at s-oscons.ads:273, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__msg_eor
 use import "_gnatprove_standard".Main

 function msg_eor #"s-oscons.ads" 273 0 0# "model" "model_trace:13152" 
   : int

end

(* Module for defining the constant "msg_waitall" defined at s-oscons.ads:274, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__msg_waitall
 use import "_gnatprove_standard".Main

 function msg_waitall #"s-oscons.ads" 274 0 0# "model" "model_trace:13161" 
   : int

end

(* Module for defining the constant "msg_nosignal" defined at s-oscons.ads:275, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__msg_nosignal
 use import "_gnatprove_standard".Main

 function msg_nosignal #"s-oscons.ads" 275 0 0# "model" "model_trace:13170" 
   : int

end

(* Module for defining the constant "msg_forced_flags" defined at s-oscons.ads:276, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__msg_forced_flags
 use import "_gnatprove_standard".Main

 function msg_forced_flags #"s-oscons.ads" 276 0 0# "model" "model_trace:13180" 
   : int

end

(* Module for defining the constant "tcp_nodelay" defined at s-oscons.ads:283, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__tcp_nodelay
 use import "_gnatprove_standard".Main

 function tcp_nodelay #"s-oscons.ads" 283 0 0# "model" "model_trace:13189" 
   : int

end

(* Module for defining the constant "so_reuseaddr" defined at s-oscons.ads:284, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__so_reuseaddr
 use import "_gnatprove_standard".Main

 function so_reuseaddr #"s-oscons.ads" 284 0 0# "model" "model_trace:13198" 
   : int

end

(* Module for defining the constant "so_reuseport" defined at s-oscons.ads:285, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__so_reuseport
 use import "_gnatprove_standard".Main

 function so_reuseport #"s-oscons.ads" 285 0 0# "model" "model_trace:13207" 
   : int

end

(* Module for defining the constant "so_keepalive" defined at s-oscons.ads:286, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__so_keepalive
 use import "_gnatprove_standard".Main

 function so_keepalive #"s-oscons.ads" 286 0 0# "model" "model_trace:13216" 
   : int

end

(* Module for defining the constant "so_linger" defined at s-oscons.ads:287, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__so_linger
 use import "_gnatprove_standard".Main

 function so_linger #"s-oscons.ads" 287 0 0# "model" "model_trace:13225" 
   : int

end

(* Module for defining the constant "so_broadcast" defined at s-oscons.ads:288, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__so_broadcast
 use import "_gnatprove_standard".Main

 function so_broadcast #"s-oscons.ads" 288 0 0# "model" "model_trace:13234" 
   : int

end

(* Module for defining the constant "so_sndbuf" defined at s-oscons.ads:289, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__so_sndbuf
 use import "_gnatprove_standard".Main

 function so_sndbuf #"s-oscons.ads" 289 0 0# "model" "model_trace:13243" 
   : int

end

(* Module for defining the constant "so_rcvbuf" defined at s-oscons.ads:290, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__so_rcvbuf
 use import "_gnatprove_standard".Main

 function so_rcvbuf #"s-oscons.ads" 290 0 0# "model" "model_trace:13252" 
   : int

end

(* Module for defining the constant "so_sndtimeo" defined at s-oscons.ads:291, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__so_sndtimeo
 use import "_gnatprove_standard".Main

 function so_sndtimeo #"s-oscons.ads" 291 0 0# "model" "model_trace:13261" 
   : int

end

(* Module for defining the constant "so_rcvtimeo" defined at s-oscons.ads:292, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__so_rcvtimeo
 use import "_gnatprove_standard".Main

 function so_rcvtimeo #"s-oscons.ads" 292 0 0# "model" "model_trace:13270" 
   : int

end

(* Module for defining the constant "so_error" defined at s-oscons.ads:293, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__so_error
 use import "_gnatprove_standard".Main

 function so_error #"s-oscons.ads" 293 0 0# "model" "model_trace:13279" 
   : int

end

(* Module for defining the constant "so_busy_poll" defined at s-oscons.ads:294, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__so_busy_poll
 use import "_gnatprove_standard".Main

 function so_busy_poll #"s-oscons.ads" 294 0 0# "model" "model_trace:13288" 
   : int

end

(* Module for defining the constant "ip_multicast_if" defined at s-oscons.ads:295, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ip_multicast_if
 use import "_gnatprove_standard".Main

 function ip_multicast_if #"s-oscons.ads" 295 0 0# "model" "model_trace:13298" 
   : int

end

(* Module for defining the constant "ip_multicast_ttl" defined at s-oscons.ads:296, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ip_multicast_ttl
 use import "_gnatprove_standard".Main

 function ip_multicast_ttl #"s-oscons.ads" 296 0 0# "model" "model_trace:13307" 
   : int

end

(* Module for defining the constant "ip_multicast_loop" defined at s-oscons.ads:297, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ip_multicast_loop
 use import "_gnatprove_standard".Main

 function ip_multicast_loop #"s-oscons.ads" 297 0 0# "model" "model_trace:13316" 
   : int

end

(* Module for defining the constant "ip_add_membership" defined at s-oscons.ads:298, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ip_add_membership
 use import "_gnatprove_standard".Main

 function ip_add_membership #"s-oscons.ads" 298 0 0# "model" "model_trace:13325" 
   : int

end

(* Module for defining the constant "ip_drop_membership" defined at s-oscons.ads:299, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ip_drop_membership
 use import "_gnatprove_standard".Main

 function ip_drop_membership #"s-oscons.ads" 299 0 0# "model" "model_trace:13334" 
   : int

end

(* Module for defining the constant "ip_pktinfo" defined at s-oscons.ads:300, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__ip_pktinfo
 use import "_gnatprove_standard".Main

 function ip_pktinfo #"s-oscons.ads" 300 0 0# "model" "model_trace:13343" 
   : int

end

(* Module for defining the constant "sizeof_tv_sec" defined at s-oscons.ads:307, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__sizeof_tv_sec
 use import "_gnatprove_standard".Main

 function sizeof_tv_sec #"s-oscons.ads" 307 0 0# "model" "model_trace:13352" 
   : int

end

(* Module for defining the constant "sizeof_tv_usec" defined at s-oscons.ads:308, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__sizeof_tv_usec
 use import "_gnatprove_standard".Main

 function sizeof_tv_usec #"s-oscons.ads" 308 0 0# "model" "model_trace:13361" 
   : int

end

(* Module for defining the constant "max_tv_sec" defined at s-oscons.ads:311, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__max_tv_sec
 use import "_gnatprove_standard".Main

 function max_tv_sec #"s-oscons.ads" 311 0 0# "model" "model_trace:13370" 
   : int

end

(* Module for defining the constant "sizeof_sockaddr_in" defined at s-oscons.ads:314, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__sizeof_sockaddr_in
 use import "_gnatprove_standard".Main

 function sizeof_sockaddr_in #"s-oscons.ads" 314 0 0# "model" "model_trace:13387" 
   : int

end

(* Module for defining the constant "sizeof_sockaddr_in6" defined at s-oscons.ads:315, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__sizeof_sockaddr_in6
 use import "_gnatprove_standard".Main

 function sizeof_sockaddr_in6 #"s-oscons.ads" 315 0 0# "model" "model_trace:13396" 
   : int

end

(* Module for defining the constant "sizeof_fd_set" defined at s-oscons.ads:316, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__sizeof_fd_set
 use import "_gnatprove_standard".Main

 function sizeof_fd_set #"s-oscons.ads" 316 0 0# "model" "model_trace:13405" 
   : int

end

(* Module for defining the constant "fd_setsize" defined at s-oscons.ads:317, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__fd_setsize
 use import "_gnatprove_standard".Main

 function fd_setsize #"s-oscons.ads" 317 0 0# "model" "model_trace:13414" 
   : int

end

(* Module for defining the constant "sizeof_struct_hostent" defined at s-oscons.ads:318, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__sizeof_struct_hostent
 use import "_gnatprove_standard".Main

 function sizeof_struct_hostent #"s-oscons.ads" 318 0 0# "model" "model_trace:13423" 
   : int

end

(* Module for defining the constant "sizeof_struct_servent" defined at s-oscons.ads:319, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__sizeof_struct_servent
 use import "_gnatprove_standard".Main

 function sizeof_struct_servent #"s-oscons.ads" 319 0 0# "model" "model_trace:13432" 
   : int

end

(* Module for defining the constant "need_netdb_buffer" defined at s-oscons.ads:328, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__need_netdb_buffer
 use import "_gnatprove_standard".Main

 function need_netdb_buffer #"s-oscons.ads" 328 0 0# "model" "model_trace:13454" 
   : int

end

(* Module for defining the constant "need_netdb_lock" defined at s-oscons.ads:329, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__need_netdb_lock
 use import "_gnatprove_standard".Main

 function need_netdb_lock #"s-oscons.ads" 329 0 0# "model" "model_trace:13463" 
   : int

end

(* Module for defining the constant "has_sockaddr_len" defined at s-oscons.ads:330, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__has_sockaddr_len
 use import "_gnatprove_standard".Main

 function has_sockaddr_len #"s-oscons.ads" 330 0 0# "model" "model_trace:13472" 
   : int

end

(* Module for defining a value for string literal  defined at s-oscons.ads:334, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___150
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___150 #"s-oscons.ads" 334 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining the constant "clock_realtime" defined at s-oscons.ads:342, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__clock_realtime
 use import "_gnatprove_standard".Main

 function clock_realtime #"s-oscons.ads" 342 0 0# "model" "model_trace:13501" 
   : int

end

(* Module for defining the constant "clock_thread_cputime_id" defined at s-oscons.ads:343, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__clock_thread_cputime_id
 use import "_gnatprove_standard".Main

 function clock_thread_cputime_id #"s-oscons.ads" 343 0 0# "model" "model_trace:13511" 
   : int

end

(* Module for defining the constant "clock_rt_ada" defined at s-oscons.ads:344, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__clock_rt_ada
 use import "_gnatprove_standard".Main

 function clock_rt_ada #"s-oscons.ads" 344 0 0# "model" "model_trace:13521" 
   : int

end

(* Module for defining the constant "pthread_size" defined at s-oscons.ads:349, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__pthread_size
 use import "_gnatprove_standard".Main

 function pthread_size #"s-oscons.ads" 349 0 0# "model" "model_trace:13530" 
   : int

end

(* Module for defining the constant "pthread_attr_size" defined at s-oscons.ads:350, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__pthread_attr_size
 use import "_gnatprove_standard".Main

 function pthread_attr_size #"s-oscons.ads" 350 0 0# "model" "model_trace:13539" 
   : int

end

(* Module for defining the constant "pthread_mutexattr_size" defined at s-oscons.ads:351, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__pthread_mutexattr_size
 use import "_gnatprove_standard".Main

 function pthread_mutexattr_size #"s-oscons.ads" 351 0 0# "model" "model_trace:13548" 
   : int

end

(* Module for defining the constant "pthread_mutex_size" defined at s-oscons.ads:352, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__pthread_mutex_size
 use import "_gnatprove_standard".Main

 function pthread_mutex_size #"s-oscons.ads" 352 0 0# "model" "model_trace:13557" 
   : int

end

(* Module for defining the constant "pthread_condattr_size" defined at s-oscons.ads:353, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__pthread_condattr_size
 use import "_gnatprove_standard".Main

 function pthread_condattr_size #"s-oscons.ads" 353 0 0# "model" "model_trace:13566" 
   : int

end

(* Module for defining the constant "pthread_cond_size" defined at s-oscons.ads:354, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__pthread_cond_size
 use import "_gnatprove_standard".Main

 function pthread_cond_size #"s-oscons.ads" 354 0 0# "model" "model_trace:13575" 
   : int

end

(* Module for defining the constant "pthread_rwlockattr_size" defined at s-oscons.ads:355, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__pthread_rwlockattr_size
 use import "_gnatprove_standard".Main

 function pthread_rwlockattr_size #"s-oscons.ads" 355 0 0# "model" "model_trace:13584" 
   : int

end

(* Module for defining the constant "pthread_rwlock_size" defined at s-oscons.ads:356, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__pthread_rwlock_size
 use import "_gnatprove_standard".Main

 function pthread_rwlock_size #"s-oscons.ads" 356 0 0# "model" "model_trace:13593" 
   : int

end

(* Module for defining the constant "pthread_once_size" defined at s-oscons.ads:357, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__pthread_once_size
 use import "_gnatprove_standard".Main

 function pthread_once_size #"s-oscons.ads" 357 0 0# "model" "model_trace:13602" 
   : int

end

(* Module for defining the constant "sizeof_struct_file_attributes" defined at s-oscons.ads:363, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__sizeof_struct_file_attributes
 use import "_gnatprove_standard".Main

 function sizeof_struct_file_attributes #"s-oscons.ads" 363 0 0# "model" "model_trace:13611" 
   : int

end

(* Module for defining the constant "sizeof_struct_dirent_alloc" defined at s-oscons.ads:364, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__sizeof_struct_dirent_alloc
 use import "_gnatprove_standard".Main

 function sizeof_struct_dirent_alloc #"s-oscons.ads" 364 0 0# "model" "model_trace:13620" 
   : int

end

(* Module for defining the constant "eintr" defined at s-osinte.ads:64, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__eintr
 use import "_gnatprove_standard".Main

 function eintr #"s-osinte.ads" 64 0 0# "model" "model_trace:5980" 
   : int

end

(* Module for defining the constant "enomem" defined at s-osinte.ads:65, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__enomem
 use import "_gnatprove_standard".Main

 function enomem #"s-osinte.ads" 65 0 0# "model" "model_trace:5989" 
   : int

end

(* Module for defining the constant "einval" defined at s-osinte.ads:66, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__einval
 use import "_gnatprove_standard".Main

 function einval #"s-osinte.ads" 66 0 0# "model" "model_trace:5998" 
   : int

end

(* Module for defining the constant "eagain" defined at s-osinte.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__eagain
 use import "_gnatprove_standard".Main

 function eagain #"s-osinte.ads" 67 0 0# "model" "model_trace:6007" 
   : int

end

(* Module for defining the constant "etimedout" defined at s-osinte.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__etimedout
 use import "_gnatprove_standard".Main

 function etimedout #"s-osinte.ads" 68 0 0# "model" "model_trace:6016" 
   : int

end

(* Module for defining the constant "max_interrupt" defined at s-osinte.ads:74, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__max_interrupt
 use import "_gnatprove_standard".Main

 function max_interrupt #"s-osinte.ads" 74 0 0# "model" "model_trace:6025" 
   : int

end

(* Module for defining the constant "sighup" defined at s-osinte.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sighup
 use import "_gnatprove_standard".Main

 function sighup #"s-osinte.ads" 78 0 0# "model" "model_trace:6057" 
   : int

end

(* Module for defining the constant "sigint" defined at s-osinte.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigint
 use import "_gnatprove_standard".Main

 function sigint #"s-osinte.ads" 79 0 0# "model" "model_trace:6066" 
   : int

end

(* Module for defining the constant "sigquit" defined at s-osinte.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigquit
 use import "_gnatprove_standard".Main

 function sigquit #"s-osinte.ads" 80 0 0# "model" "model_trace:6075" 
   : int

end

(* Module for defining the constant "sigill" defined at s-osinte.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigill
 use import "_gnatprove_standard".Main

 function sigill #"s-osinte.ads" 81 0 0# "model" "model_trace:6084" 
   : int

end

(* Module for defining the constant "sigtrap" defined at s-osinte.ads:82, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigtrap
 use import "_gnatprove_standard".Main

 function sigtrap #"s-osinte.ads" 82 0 0# "model" "model_trace:6093" 
   : int

end

(* Module for defining the constant "sigiot" defined at s-osinte.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigiot
 use import "_gnatprove_standard".Main

 function sigiot #"s-osinte.ads" 83 0 0# "model" "model_trace:6102" 
   : int

end

(* Module for defining the constant "sigabrt" defined at s-osinte.ads:84, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigabrt
 use import "_gnatprove_standard".Main

 function sigabrt #"s-osinte.ads" 84 0 0# "model" "model_trace:6111" 
   : int

end

(* Module for defining the constant "sigemt" defined at s-osinte.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigemt
 use import "_gnatprove_standard".Main

 function sigemt #"s-osinte.ads" 85 0 0# "model" "model_trace:6120" 
   : int

end

(* Module for defining the constant "sigfpe" defined at s-osinte.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigfpe
 use import "_gnatprove_standard".Main

 function sigfpe #"s-osinte.ads" 86 0 0# "model" "model_trace:6129" 
   : int

end

(* Module for defining the constant "sigkill" defined at s-osinte.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigkill
 use import "_gnatprove_standard".Main

 function sigkill #"s-osinte.ads" 87 0 0# "model" "model_trace:6138" 
   : int

end

(* Module for defining the constant "sigbus" defined at s-osinte.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigbus
 use import "_gnatprove_standard".Main

 function sigbus #"s-osinte.ads" 88 0 0# "model" "model_trace:6147" 
   : int

end

(* Module for defining the constant "sigsegv" defined at s-osinte.ads:89, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigsegv
 use import "_gnatprove_standard".Main

 function sigsegv #"s-osinte.ads" 89 0 0# "model" "model_trace:6156" 
   : int

end

(* Module for defining the constant "sigsys" defined at s-osinte.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigsys
 use import "_gnatprove_standard".Main

 function sigsys #"s-osinte.ads" 90 0 0# "model" "model_trace:6165" 
   : int

end

(* Module for defining the constant "sigpipe" defined at s-osinte.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigpipe
 use import "_gnatprove_standard".Main

 function sigpipe #"s-osinte.ads" 91 0 0# "model" "model_trace:6174" 
   : int

end

(* Module for defining the constant "sigalrm" defined at s-osinte.ads:92, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigalrm
 use import "_gnatprove_standard".Main

 function sigalrm #"s-osinte.ads" 92 0 0# "model" "model_trace:6183" 
   : int

end

(* Module for defining the constant "sigterm" defined at s-osinte.ads:93, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigterm
 use import "_gnatprove_standard".Main

 function sigterm #"s-osinte.ads" 93 0 0# "model" "model_trace:6192" 
   : int

end

(* Module for defining the constant "sigurg" defined at s-osinte.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigurg
 use import "_gnatprove_standard".Main

 function sigurg #"s-osinte.ads" 94 0 0# "model" "model_trace:6201" 
   : int

end

(* Module for defining the constant "sigstop" defined at s-osinte.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigstop
 use import "_gnatprove_standard".Main

 function sigstop #"s-osinte.ads" 95 0 0# "model" "model_trace:6210" 
   : int

end

(* Module for defining the constant "sigtstp" defined at s-osinte.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigtstp
 use import "_gnatprove_standard".Main

 function sigtstp #"s-osinte.ads" 96 0 0# "model" "model_trace:6219" 
   : int

end

(* Module for defining the constant "sigcont" defined at s-osinte.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigcont
 use import "_gnatprove_standard".Main

 function sigcont #"s-osinte.ads" 97 0 0# "model" "model_trace:6228" 
   : int

end

(* Module for defining the constant "sigchld" defined at s-osinte.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigchld
 use import "_gnatprove_standard".Main

 function sigchld #"s-osinte.ads" 98 0 0# "model" "model_trace:6237" 
   : int

end

(* Module for defining the constant "sigttin" defined at s-osinte.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigttin
 use import "_gnatprove_standard".Main

 function sigttin #"s-osinte.ads" 99 0 0# "model" "model_trace:6246" 
   : int

end

(* Module for defining the constant "sigttou" defined at s-osinte.ads:100, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigttou
 use import "_gnatprove_standard".Main

 function sigttou #"s-osinte.ads" 100 0 0# "model" "model_trace:6255" 
   : int

end

(* Module for defining the constant "sigio" defined at s-osinte.ads:101, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigio
 use import "_gnatprove_standard".Main

 function sigio #"s-osinte.ads" 101 0 0# "model" "model_trace:6264" 
   : int

end

(* Module for defining the constant "sigxcpu" defined at s-osinte.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigxcpu
 use import "_gnatprove_standard".Main

 function sigxcpu #"s-osinte.ads" 102 0 0# "model" "model_trace:6273" 
   : int

end

(* Module for defining the constant "sigxfsz" defined at s-osinte.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigxfsz
 use import "_gnatprove_standard".Main

 function sigxfsz #"s-osinte.ads" 103 0 0# "model" "model_trace:6282" 
   : int

end

(* Module for defining the constant "sigvtalrm" defined at s-osinte.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigvtalrm
 use import "_gnatprove_standard".Main

 function sigvtalrm #"s-osinte.ads" 104 0 0# "model" "model_trace:6291" 
   : int

end

(* Module for defining the constant "sigprof" defined at s-osinte.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigprof
 use import "_gnatprove_standard".Main

 function sigprof #"s-osinte.ads" 105 0 0# "model" "model_trace:6300" 
   : int

end

(* Module for defining the constant "sigwinch" defined at s-osinte.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigwinch
 use import "_gnatprove_standard".Main

 function sigwinch #"s-osinte.ads" 106 0 0# "model" "model_trace:6309" 
   : int

end

(* Module for defining the constant "siginfo" defined at s-osinte.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__siginfo
 use import "_gnatprove_standard".Main

 function siginfo #"s-osinte.ads" 107 0 0# "model" "model_trace:6318" 
   : int

end

(* Module for defining the constant "sigusr1" defined at s-osinte.ads:108, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigusr1
 use import "_gnatprove_standard".Main

 function sigusr1 #"s-osinte.ads" 108 0 0# "model" "model_trace:6327" 
   : int

end

(* Module for defining the constant "sigusr2" defined at s-osinte.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigusr2
 use import "_gnatprove_standard".Main

 function sigusr2 #"s-osinte.ads" 109 0 0# "model" "model_trace:6336" 
   : int

end

(* Module for defining the constant "sigadaabort" defined at s-osinte.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sigadaabort
 use import "_gnatprove_standard".Main

 function sigadaabort #"s-osinte.ads" 111 0 0# "model" "model_trace:6345" 
   : int

end

(* Module for defining the value of the aggregate at s-osinte.ads:118, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module System__os_interface__unmasked__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__signal
 use        Array__Int__System__os_interface__signal
 use        Array__Int__System__os_interface__signal
 use        Array__Int__System__os_interface__signal

 function system__os_interface__unmasked__aggregate_def #"s-osinte.ads" 118 0 0# 
   (temp___152 : int) (temp___153 : int) (temp___154 : int) (temp___155 : int) : Array__Int__System__os_interface__signal.map
 
 axiom def_axiom :
  (forall temp___152 temp___153 temp___154 temp___155 : int.
   (let temp___151 = (system__os_interface__unmasked__aggregate_def temp___152 temp___153 temp___154 temp___155) in (
    ( ( ( ((Array__Int__System__os_interface__signal.get temp___151 0) = (System__os_interface__signal.of_rep temp___152)) /\ ((Array__Int__System__os_interface__signal.get temp___151 1) = (System__os_interface__signal.of_rep temp___153)) ) /\ ((Array__Int__System__os_interface__signal.get temp___151 2) = (System__os_interface__signal.of_rep temp___154)) ) /\ ((Array__Int__System__os_interface__signal.get temp___151 3) = (System__os_interface__signal.of_rep temp___155)) )))
  )

end

(* Module for defining the value of the aggregate at s-osinte.ads:121, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module System__os_interface__reserved__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__signal
 use        Array__Int__System__os_interface__signal
 use        Array__Int__System__os_interface__signal
 use        Array__Int__System__os_interface__signal

 function system__os_interface__reserved__aggregate_def #"s-osinte.ads" 121 0 0# 
   (temp___158 : int) (temp___159 : int) : Array__Int__System__os_interface__signal.map
 
 axiom def_axiom :
  (forall temp___158 temp___159 : int.
   (let temp___157 = (system__os_interface__reserved__aggregate_def temp___158 temp___159) in (
    ( ((Array__Int__System__os_interface__signal.get temp___157 0) = (System__os_interface__signal.of_rep temp___158)) /\ ((Array__Int__System__os_interface__signal.get temp___157 1) = (System__os_interface__signal.of_rep temp___159)) )))
  )

end

(* Module for defining the value of the aggregate at s-osinte.ads:124, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module System__os_interface__exception_signals__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__signal
 use        Array__Int__System__os_interface__signal
 use        Array__Int__System__os_interface__signal
 use        Array__Int__System__os_interface__signal

 function system__os_interface__exception_signals__aggregate_def #"s-osinte.ads" 124 0 0# 
   (temp___162 : int) (temp___163 : int) (temp___164 : int) (temp___165 : int) : Array__Int__System__os_interface__signal.map
 
 axiom def_axiom :
  (forall temp___162 temp___163 temp___164 temp___165 : int.
   (let temp___161 = (system__os_interface__exception_signals__aggregate_def temp___162 temp___163 temp___164 temp___165) in (
    ( ( ( ((Array__Int__System__os_interface__signal.get temp___161 0) = (System__os_interface__signal.of_rep temp___162)) /\ ((Array__Int__System__os_interface__signal.get temp___161 1) = (System__os_interface__signal.of_rep temp___163)) ) /\ ((Array__Int__System__os_interface__signal.get temp___161 2) = (System__os_interface__signal.of_rep temp___164)) ) /\ ((Array__Int__System__os_interface__signal.get temp___161 3) = (System__os_interface__signal.of_rep temp___165)) )))
  )

end

(* Module for defining the constant "sig_block" defined at s-osinte.ads:161, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sig_block
 use import "_gnatprove_standard".Main

 function sig_block #"s-osinte.ads" 161 0 0# "model" "model_trace:6695" 
   : int

end

(* Module for defining the constant "sig_unblock" defined at s-osinte.ads:162, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sig_unblock
 use import "_gnatprove_standard".Main

 function sig_unblock #"s-osinte.ads" 162 0 0# "model" "model_trace:6704" 
   : int

end

(* Module for defining the constant "sig_setmask" defined at s-osinte.ads:163, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sig_setmask
 use import "_gnatprove_standard".Main

 function sig_setmask #"s-osinte.ads" 163 0 0# "model" "model_trace:6713" 
   : int

end

(* Module for defining the constant "sig_dfl" defined at s-osinte.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sig_dfl
 use import "_gnatprove_standard".Main

 function sig_dfl #"s-osinte.ads" 165 0 0# "model" "model_trace:6722" 
   : int

end

(* Module for defining the constant "sig_ign" defined at s-osinte.ads:166, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sig_ign
 use import "_gnatprove_standard".Main

 function sig_ign #"s-osinte.ads" 166 0 0# "model" "model_trace:6731" 
   : int

end

(* Module for defining the constant "sa_siginfo" defined at s-osinte.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sa_siginfo
 use import "_gnatprove_standard".Main

 function sa_siginfo #"s-osinte.ads" 168 0 0# "model" "model_trace:6740" 
   : int

end

(* Module for defining the constant "sa_onstack" defined at s-osinte.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sa_onstack
 use import "_gnatprove_standard".Main

 function sa_onstack #"s-osinte.ads" 169 0 0# "model" "model_trace:6749" 
   : int

end

(* Module for defining the constant "sched_other" defined at s-osinte.ads:206, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sched_other
 use import "_gnatprove_standard".Main

 function sched_other #"s-osinte.ads" 206 0 0# "model" "model_trace:6935" 
   : int

end

(* Module for defining the constant "sched_rr" defined at s-osinte.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sched_rr
 use import "_gnatprove_standard".Main

 function sched_rr #"s-osinte.ads" 207 0 0# "model" "model_trace:6944" 
   : int

end

(* Module for defining the constant "sched_fifo" defined at s-osinte.ads:208, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__sched_fifo
 use import "_gnatprove_standard".Main

 function sched_fifo #"s-osinte.ads" 208 0 0# "model" "model_trace:6953" 
   : int

end

(* Module for defining the constant "pthread_create_detached" defined at s-osinte.ads:256, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_create_detached
 use import "_gnatprove_standard".Main

 function pthread_create_detached #"s-osinte.ads" 256 0 0# "model" "model_trace:7183" 
   : int

end

(* Module for defining the constant "pthread_scope_process" defined at s-osinte.ads:258, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_scope_process
 use import "_gnatprove_standard".Main

 function pthread_scope_process #"s-osinte.ads" 258 0 0# "model" "model_trace:7192" 
   : int

end

(* Module for defining the constant "pthread_scope_system" defined at s-osinte.ads:259, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_scope_system
 use import "_gnatprove_standard".Main

 function pthread_scope_system #"s-osinte.ads" 259 0 0# "model" "model_trace:7201" 
   : int

end

(* Module for defining the constant "alternate_stack_size" defined at s-osinte.ads:289, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__alternate_stack_size
 use import "_gnatprove_standard".Main

 function alternate_stack_size #"s-osinte.ads" 289 0 0# "model" "model_trace:7335" 
   : int

end

(* Module for defining the constant "prot_none" defined at s-osinte.ads:307, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__prot_none
 use import "_gnatprove_standard".Main

 function prot_none #"s-osinte.ads" 307 0 0# "model" "model_trace:7399" 
   : int

end

(* Module for defining the constant "prot_read" defined at s-osinte.ads:308, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__prot_read
 use import "_gnatprove_standard".Main

 function prot_read #"s-osinte.ads" 308 0 0# "model" "model_trace:7408" 
   : int

end

(* Module for defining the constant "prot_write" defined at s-osinte.ads:309, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__prot_write
 use import "_gnatprove_standard".Main

 function prot_write #"s-osinte.ads" 309 0 0# "model" "model_trace:7417" 
   : int

end

(* Module for defining the constant "prot_exec" defined at s-osinte.ads:310, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__prot_exec
 use import "_gnatprove_standard".Main

 function prot_exec #"s-osinte.ads" 310 0 0# "model" "model_trace:7426" 
   : int

end

(* Module for defining the constant "prot_all" defined at s-osinte.ads:311, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__prot_all
 use import "_gnatprove_standard".Main

 function prot_all #"s-osinte.ads" 311 0 0# "model" "model_trace:7435" 
   : int

end

(* Module for defining the constant "prot_on" defined at s-osinte.ads:313, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__prot_on
 use import "_gnatprove_standard".Main

 function prot_on #"s-osinte.ads" 313 0 0# "model" "model_trace:7448" 
   : int

end

(* Module for defining the constant "prot_off" defined at s-osinte.ads:314, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__prot_off
 use import "_gnatprove_standard".Main

 function prot_off #"s-osinte.ads" 314 0 0# "model" "model_trace:7457" 
   : int

end

(* Module for possibly declaring a logic function for "pthread_init" defined at s-osinte.ads:326, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__pthread_init
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "pthread_prio_none" defined at s-osinte.ads:407, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_prio_none
 use import "_gnatprove_standard".Main

 function pthread_prio_none #"s-osinte.ads" 407 0 0# "model" "model_trace:8065" 
   : int

end

(* Module for defining the constant "pthread_prio_inherit" defined at s-osinte.ads:408, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_prio_inherit
 use import "_gnatprove_standard".Main

 function pthread_prio_inherit #"s-osinte.ads" 408 0 0# "model" "model_trace:8074" 
   : int

end

(* Module for defining the constant "pthread_prio_protect" defined at s-osinte.ads:409, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_interface__pthread_prio_protect
 use import "_gnatprove_standard".Main

 function pthread_prio_protect #"s-osinte.ads" 409 0 0# "model" "model_trace:8083" 
   : int

end

(* Module for possibly declaring a logic function for "pthread_exit" defined at s-osinte.ads:486, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__os_interface__pthread_exit
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "alternate_stack_size" defined at s-taspri.ads:70, created in Gnat2Why.Decls.Translate_Constant *)
module System__task_primitives__alternate_stack_size
 use import "_gnatprove_standard".Main

 function alternate_stack_size #"s-taspri.ads" 70 0 0# "model" "model_trace:5619" 
   : int

end

(* Module for defining the constant "task_name_length" defined at s-stausa.ads:49, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_usage__task_name_length
 use import "_gnatprove_standard".Main

 function task_name_length #"s-stausa.ads" 49 0 0# "model" "model_trace:21289" 
   : int

end

(* Module for possibly declaring a logic function for "initialize" defined at s-stausa.ads:203, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__stack_usage__initialize
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fill_stack" defined at s-stausa.ads:209, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__stack_usage__fill_stack
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "initialize_analyzer" defined at s-stausa.ads:225, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__stack_usage__initialize_analyzer
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "compute_result" defined at s-stausa.ads:242, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__stack_usage__compute_result
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "report_result" defined at s-stausa.ads:262, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__stack_usage__report_result
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "output_results" defined at s-stausa.ads:268, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__stack_usage__output_results
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "bytes_per_pattern" defined at s-stausa.ads:280, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_usage__bytes_per_pattern
 use import "_gnatprove_standard".Main

 function bytes_per_pattern #"s-stausa.ads" 280 0 0# "model" "model_trace:21568" 
   : int

end

(* Module for defining the constant "null_entry" defined at s-taskin.ads:223, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__null_entry
 use import "_gnatprove_standard".Main

 function null_entry #"s-taskin.ads" 223 0 0# "model" "model_trace:15451" 
   : int

end

(* Module for defining the constant "max_entry" defined at s-taskin.ads:225, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__max_entry
 use import "_gnatprove_standard".Main

 function max_entry #"s-taskin.ads" 225 0 0# "model" "model_trace:15460" 
   : int

end

(* Module for defining the constant "interrupt_entry" defined at s-taskin.ads:227, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__interrupt_entry
 use import "_gnatprove_standard".Main

 function interrupt_entry #"s-taskin.ads" 227 0 0# "model" "model_trace:15471" 
   : int

end

(* Module for defining the constant "cancelled_entry" defined at s-taskin.ads:229, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__cancelled_entry
 use import "_gnatprove_standard".Main

 function cancelled_entry #"s-taskin.ads" 229 0 0# "model" "model_trace:15481" 
   : int

end

(* Module for defining the constant "null_task_entry" defined at s-taskin.ads:233, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__null_task_entry
 use import "_gnatprove_standard".Main

 function null_task_entry #"s-taskin.ads" 233 0 0# "model" "model_trace:15502" 
   : int

end

(* Module for defining the constant "max_task_entry" defined at s-taskin.ads:235, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__max_task_entry
 use import "_gnatprove_standard".Main

 function max_task_entry #"s-taskin.ads" 235 0 0# "model" "model_trace:15511" 
   : int

end

(* Module for defining the constant "unspecified_cpu" defined at s-taskin.ads:791, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__unspecified_cpu
 use import "_gnatprove_standard".Main

 function unspecified_cpu #"s-taskin.ads" 791 0 0# "model" "model_trace:16534" 
   : int

end

(* Module for defining the constant "no_rendezvous" defined at s-taskin.ads:798, created in Gnat2Why.Decls.Translate_Constant *)
module System__tasking__no_rendezvous
 use import "_gnatprove_standard".Main

 function no_rendezvous #"s-taskin.ads" 798 0 0# "model" "model_trace:16544" 
   : int

end

(* Module for possibly declaring a logic function for "initialize" defined at s-taskin.ads:1155, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__tasking__initialize
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exit_task" defined at s-taprop.ads:84, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__task_primitives__operations__exit_task
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "yield" defined at s-taprop.ads:314, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__task_primitives__operations__yield
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "lock_rts" defined at s-taprop.ads:434, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__task_primitives__operations__lock_rts
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "unlock_rts" defined at s-taprop.ads:437, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__task_primitives__operations__unlock_rts
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_false" defined at s-taprop.ads:493, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__task_primitives__operations__set_false
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_true" defined at s-taprop.ads:496, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__task_primitives__operations__set_true
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "suspend_until_true" defined at s-taprop.ads:501, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__task_primitives__operations__suspend_until_true
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "initialize__2" defined at s-taprop.ads:508, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__task_primitives__operations__initialize__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "finalize" defined at s-taprop.ads:511, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__task_primitives__operations__finalize
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "stop_all_tasks" defined at s-taprop.ads:546, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__task_primitives__operations__stop_all_tasks
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "time_unit" defined at a-reatim.ads:54, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__real_time__time_unit
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function time_unit #"a-reatim.ads" 54 0 0# 
   : Standard__universal_real.universal_real

end

(* Module for possibly declaring a logic function for "clock" defined at a-reatim.ads:63, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__clock
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "split" defined at a-reatim.ads:141, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__real_time__split
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "system_startup_time" defined at polyorb_hi-epoch.ads:43, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__epoch__system_startup_time
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_epoch" defined at polyorb_hi-epoch.ads:47, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__epoch__set_epoch
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_line" defined at polyorb_hi-output.ads:67, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__output__put_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put" defined at polyorb_hi-output.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__output__put
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_line__2" defined at polyorb_hi-output.ads:79, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__output__put_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__2" defined at polyorb_hi-output.ads:85, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__output__put__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "dump" defined at polyorb_hi-output.ads:92, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__output__dump
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "build_timestamp" defined at polyorb_hi-output.adb:43, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__output__build_timestamp
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put" defined at polyorb_hi-output.adb:55, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__output__lockT__put
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_line" defined at polyorb_hi-output.adb:60, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__output__lockT__put_line
 use import "_gnatprove_standard".Main


end

(* Module for defining a value for string literal  defined at polyorb_hi-output.adb:171, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___167
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___167 #"polyorb_hi-output.adb" 171 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining the value of the aggregate at polyorb_hi-output.adb:172, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Polyorb_hi__output__nil__aggregate_def
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function polyorb_hi__output__nil__aggregate_def #"polyorb_hi-output.adb" 172 0 0# 
   (temp___169 : int) : Array__Int__Standard__character.map
 
 axiom def_axiom :
  (forall temp___169 : int.
   (let temp___168 = (polyorb_hi__output__nil__aggregate_def temp___169) in (
    (forall temp___170 : int.
     ((Array__Int__Standard__character.get temp___168 temp___170) = (Standard__character.of_rep temp___169)))))
  )

end

(* Module for defining the loop exit exception for the loop "L_1" defined at polyorb_hi-output.adb:181, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Polyorb_hi__output__dump__L_1
 use import "_gnatprove_standard".Main

 exception L_1

end

(* Module giving an empty axiom for the entity "L_1" defined at polyorb_hi-output.adb:181, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__output__dump__L_1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "name" defined at system.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__name

 predicate dynamic_invariant #"polyorb_hi-output.adb" 181 0 0# "inline" 
   (temp___expr_174 : int) (temp___is_init_171 : bool) (temp___do_constant_172 : bool) (temp___do_toplevel_173 : bool)  =
  (if (( temp___is_init_171 \/ (System__name.first <= System__name.last) )) then (
   (System__name.dynamic_property System__name.first System__name.last temp___expr_174)) else true)
 
 predicate default_initial_assumption #"system.ads" 46 0 0# "inline" 
   (temp___175 : int) (temp___176 : bool)  =
  true

end

(* Module giving axioms for type "address" defined at system.ads:134, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__address___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address

 predicate dynamic_invariant #"system.ads" 46 0 0# "inline" 
   (temp___expr_180 : BV64.t) (temp___is_init_177 : bool) (temp___do_constant_178 : bool) (temp___do_toplevel_179 : bool)  =
  (if (( temp___is_init_177 \/ (BV64.ule System__address.first System__address.last) )) then (
   (System__address.dynamic_property System__address.first System__address.last temp___expr_180)) else true)
 
 predicate default_initial_assumption #"system.ads" 134 0 0# "inline" 
   (temp___181 : BV64.t) (temp___182 : bool)  =
  true

end

(* Module giving axioms for type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__bit_order___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__bit_order

 predicate dynamic_invariant #"system.ads" 134 0 0# "inline" 
   (temp___expr_186 : int) (temp___is_init_183 : bool) (temp___do_constant_184 : bool) (temp___do_toplevel_185 : bool)  =
  (if (( temp___is_init_183 \/ (System__bit_order.first <= System__bit_order.last) )) then (
   (System__bit_order.dynamic_property System__bit_order.first System__bit_order.last temp___expr_186)) else true)
 
 predicate default_initial_assumption #"system.ads" 91 0 0# "inline" 
   (temp___187 : int) (temp___188 : bool)  =
  true

end

(* Module giving axioms for type "any_priority" defined at system.ads:124, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__any_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__any_priority

 predicate dynamic_invariant #"system.ads" 91 0 0# "inline" 
   (temp___expr_192 : int) (temp___is_init_189 : bool) (temp___do_constant_190 : bool) (temp___do_toplevel_191 : bool)  =
  (if (( temp___is_init_189 \/ (System__any_priority.first <= System__any_priority.last) )) then (
   (System__any_priority.dynamic_property System__any_priority.first System__any_priority.last temp___expr_192)) else true)
 
 predicate default_initial_assumption #"system.ads" 124 0 0# "inline" 
   (temp___193 : int) (temp___194 : bool)  =
  true

end

(* Module giving axioms for type "priority" defined at system.ads:125, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__priority

 predicate dynamic_invariant #"system.ads" 124 0 0# "inline" 
   (temp___expr_198 : int) (temp___is_init_195 : bool) (temp___do_constant_196 : bool) (temp___do_toplevel_197 : bool)  =
  (if (( temp___is_init_195 \/ (System__priority.first <= System__priority.last) )) then (
   (System__priority.dynamic_property System__priority.first System__priority.last temp___expr_198)) else true)
 
 predicate default_initial_assumption #"system.ads" 125 0 0# "inline" 
   (temp___199 : int) (temp___200 : bool)  =
  true

end

(* Module giving axioms for type "interrupt_priority" defined at system.ads:126, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__interrupt_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__interrupt_priority

 predicate dynamic_invariant #"system.ads" 125 0 0# "inline" 
   (temp___expr_204 : int) (temp___is_init_201 : bool) (temp___do_constant_202 : bool) (temp___do_toplevel_203 : bool)  =
  (if (( temp___is_init_201 \/ (System__interrupt_priority.first <= System__interrupt_priority.last) )) then (
   (System__interrupt_priority.dynamic_property System__interrupt_priority.first System__interrupt_priority.last temp___expr_204)) else true)
 
 predicate default_initial_assumption #"system.ads" 126 0 0# "inline" 
   (temp___205 : int) (temp___206 : bool)  =
  true

end

(* Module giving axioms for type "Ttask_storage_sizeB" defined at s-parame.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__Ttask_storage_sizeB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "task_storage_size" defined at s-parame.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__task_storage_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__task_storage_size

 predicate dynamic_invariant #"system.ads" 126 0 0# "inline" 
   (temp___expr_210 : int) (temp___is_init_207 : bool) (temp___do_constant_208 : bool) (temp___do_toplevel_209 : bool)  =
  (if (( temp___is_init_207 \/ (System__parameters__task_storage_size.first <= System__parameters__task_storage_size.last) )) then (
   (System__parameters__task_storage_size.dynamic_property System__parameters__task_storage_size.first System__parameters__task_storage_size.last temp___expr_210)) else true)
 
 predicate default_initial_assumption #"s-parame.ads" 58 0 0# "inline" 
   (temp___211 : int) (temp___212 : bool)  =
  true

end

(* Module giving axioms for type "Tsize_typeB" defined at s-parame.ads:61, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__Tsize_typeB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "size_type" defined at s-parame.ads:61, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__size_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__size_type

 predicate dynamic_invariant #"s-parame.ads" 58 0 0# "inline" 
   (temp___expr_216 : int) (temp___is_init_213 : bool) (temp___do_constant_214 : bool) (temp___do_toplevel_215 : bool)  =
  (if (( temp___is_init_213 \/ (System__parameters__size_type.first <= System__parameters__size_type.last) )) then (
   (System__parameters__size_type.dynamic_property System__parameters__size_type.first System__parameters__size_type.last temp___expr_216)) else true)
 
 predicate default_initial_assumption #"s-parame.ads" 61 0 0# "inline" 
   (temp___217 : int) (temp___218 : bool)  =
  true

end

(* Module giving axioms for type "percentage" defined at s-parame.ads:67, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__percentage___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__percentage

 predicate dynamic_invariant #"s-parame.ads" 61 0 0# "inline" 
   (temp___expr_222 : int) (temp___is_init_219 : bool) (temp___do_constant_220 : bool) (temp___do_toplevel_221 : bool)  =
  (if (( temp___is_init_219 \/ (System__parameters__percentage.first <= System__parameters__percentage.last) )) then (
   (System__parameters__percentage.dynamic_property System__parameters__percentage.first System__parameters__percentage.last temp___expr_222)) else true)
 
 predicate default_initial_assumption #"s-parame.ads" 67 0 0# "inline" 
   (temp___223 : int) (temp___224 : bool)  =
  true

end

(* Module giving axioms for type "c_address" defined at s-parame.ads:116, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__c_address___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T1s" defined at s-parame.ads:119, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__T1s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Tbig_stringP1" defined at s-stalib.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__Tbig_stringP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "big_string" defined at s-stalib.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__big_string___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 predicate dynamic_invariant #"s-parame.ads" 67 0 0# "inline" 
   (temp___expr_228 : Array__Int__Standard__character.map) (temp___is_init_225 : bool) (temp___do_constant_226 : bool) (temp___do_toplevel_227 : bool)  =
  true
 
 predicate default_initial_assumption #"s-stalib.ads" 62 0 0# "inline" 
   (temp___230 : Array__Int__Standard__character.map) (temp___231 : bool)  =
  true

end

(* Module giving axioms for type "source" defined at a-unccon.ads:17 instantiated at s-stalib.ads:76, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__to_ptrGP4411__source___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T2s" defined at s-stalib.ads:142, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T2s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T3s" defined at s-stalib.ads:143, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T3s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at s-stalib.ads:144, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T4s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T5s" defined at s-stalib.ads:145, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T5s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6s" defined at s-stalib.ads:146, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T6s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7s" defined at s-stalib.ads:148, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T7s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "exception_trace_kind" defined at s-stalib.ads:218, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__exception_trace_kind___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__standard_library__exception_trace_kind

 predicate dynamic_invariant #"s-stalib.ads" 62 0 0# "inline" 
   (temp___expr_237 : int) (temp___is_init_234 : bool) (temp___do_constant_235 : bool) (temp___do_toplevel_236 : bool)  =
  (if (( temp___is_init_234 \/ (System__standard_library__exception_trace_kind.first <= System__standard_library__exception_trace_kind.last) )) then (
   (System__standard_library__exception_trace_kind.dynamic_property System__standard_library__exception_trace_kind.first System__standard_library__exception_trace_kind.last temp___expr_237)) else true)
 
 predicate default_initial_assumption #"s-stalib.ads" 218 0 0# "inline" 
   (temp___238 : int) (temp___239 : bool)  =
  true

end

(* Module giving axioms for type "traceback_entry" defined at s-traent.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__traceback_entries__traceback_entry___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "tracebacks_array" defined at s-traent.ads:56, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__traceback_entries__tracebacks_array___axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        System__traceback_entries__tracebacks_array

 predicate dynamic_invariant #"s-stalib.ads" 218 0 0# "inline" 
   (temp___expr_243 : System__traceback_entries__tracebacks_array.tracebacks_array) (temp___is_init_240 : bool) (temp___do_constant_241 : bool) (temp___do_toplevel_242 : bool)  =
  (if (temp___do_constant_241) then (
   true) else (
   (System__traceback_entries__tracebacks_array.dynamic_property Standard__positive.first Standard__positive.last (System__traceback_entries__tracebacks_array.first temp___expr_243) (System__traceback_entries__tracebacks_array.last temp___expr_243))))

end

(* Module giving axioms for type "exception_id" defined at a-except.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_id___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 predicate dynamic_invariant #"s-traent.ads" 56 0 0# "inline" 
   (temp___expr_248 : Ada__exceptions__exception_id.exception_id) (temp___is_init_245 : bool) (temp___do_constant_246 : bool) (temp___do_toplevel_247 : bool)  =
  true
 
 predicate default_initial_assumption #"a-except.ads" 58 0 0# "inline" 
   (temp___249 : Ada__exceptions__exception_id.exception_id) (temp___250 : bool)  =
  true

end

(* Module giving axioms for type "T5s" defined at a-except.ads:297, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_occurrence__T5s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6s" defined at a-except.ads:297, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_occurrence__T6s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7s" defined at a-except.ads:312, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_occurrence__T7s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Ttracebacks_arrayP1" defined at a-except.ads:283, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__Ttracebacks_arrayP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "tracebacks_array" defined at a-except.ads:283, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__tracebacks_array___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__System__traceback_entries__traceback_entry
 use        Array__Int__System__traceback_entries__traceback_entry

 predicate dynamic_invariant #"a-except.ads" 58 0 0# "inline" 
   (temp___expr_254 : Array__Int__System__traceback_entries__traceback_entry.map) (temp___is_init_251 : bool) (temp___do_constant_252 : bool) (temp___do_toplevel_253 : bool)  =
  true
 
 predicate default_initial_assumption #"a-except.ads" 283 0 0# "inline" 
   (temp___256 : Array__Int__System__traceback_entries__traceback_entry.map) (temp___257 : bool)  =
  true

end

(* Module giving axioms for type "exception_occurrence" defined at a-except.ads:63, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_occurrence___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__Oeq

 axiom user_eq__def_axiom :
  (forall a b : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_occurrence.user_eq a b)].
   ((Ada__exceptions__exception_occurrence.user_eq a b) = (Ada__exceptions__Oeq.oeq a b)))
 
 predicate dynamic_invariant #"a-except.ads" 63 0 0# "inline" 
   (temp___expr_263 : Ada__exceptions__exception_occurrence.exception_occurrence) (temp___is_init_260 : bool) (temp___do_constant_261 : bool) (temp___do_toplevel_262 : bool)  =
  true
 
 predicate default_initial_assumption #"a-except.ads" 63 0 0# "inline" 
   (temp___264 : Ada__exceptions__exception_occurrence.exception_occurrence) (temp___265 : bool)  =
  true

end

(* Module giving axioms for type "code_loc" defined at a-except.ads:159, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__code_loc___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T9s" defined at a-except.ads:343, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__T9s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T10s" defined at a-except.ads:343, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__T10s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T11s" defined at a-except.ads:347, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__T11s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T12s" defined at a-except.ads:347, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__T12s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "scope_type" defined at s-tasinf.ads:75, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__task_info__scope_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__task_info__scope_type

 predicate dynamic_invariant #"a-except.ads" 63 0 0# "inline" 
   (temp___expr_269 : int) (temp___is_init_266 : bool) (temp___do_constant_267 : bool) (temp___do_toplevel_268 : bool)  =
  (if (( temp___is_init_266 \/ (System__task_info__scope_type.first <= System__task_info__scope_type.last) )) then (
   (System__task_info__scope_type.dynamic_property System__task_info__scope_type.first System__task_info__scope_type.last temp___expr_269)) else true)
 
 predicate default_initial_assumption #"s-tasinf.ads" 75 0 0# "inline" 
   (temp___270 : int) (temp___271 : bool)  =
  true

end

(* Module giving axioms for type "task_info_typeB" defined at s-tasinf.ads:84, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__task_info__task_info_typeB___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__task_info__task_info_typeB

 predicate dynamic_invariant #"s-tasinf.ads" 75 0 0# "inline" 
   (temp___expr_275 : int) (temp___is_init_272 : bool) (temp___do_constant_273 : bool) (temp___do_toplevel_274 : bool)  =
  (if (( temp___is_init_272 \/ (System__task_info__task_info_typeB.first <= System__task_info__task_info_typeB.last) )) then (
   (System__task_info__task_info_typeB.dynamic_property System__task_info__task_info_typeB.first System__task_info__task_info_typeB.last temp___expr_275)) else true)
 
 predicate default_initial_assumption #"s-tasinf.ads" 84 0 0# "inline" 
   (temp___276 : int) (temp___277 : bool)  =
  true

end

(* Module giving axioms for type "task_info_type" defined at s-tasinf.ads:84, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__task_info__task_info_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__task_info__task_info_type

 predicate dynamic_invariant #"s-tasinf.ads" 84 0 0# "inline" 
   (temp___expr_281 : int) (temp___is_init_278 : bool) (temp___do_constant_279 : bool) (temp___do_toplevel_280 : bool)  =
  (if (( temp___is_init_278 \/ (System__task_info__task_info_type.first <= System__task_info__task_info_type.last) )) then (
   (System__task_info__task_info_type.dynamic_property System__task_info__task_info_type.first System__task_info__task_info_type.last temp___expr_281)) else true)
 
 predicate default_initial_assumption #"s-tasinf.ads" 84 0 0# "inline" 
   (temp___282 : int) (temp___283 : bool)  =
  true

end

(* Module giving axioms for type "Tstorage_offsetB" defined at s-stoele.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__storage_elements__Tstorage_offsetB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "storage_offset" defined at s-stoele.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__storage_elements__storage_offset___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_elements__storage_offset

 predicate dynamic_invariant #"s-tasinf.ads" 84 0 0# "inline" 
   (temp___expr_287 : int) (temp___is_init_284 : bool) (temp___do_constant_285 : bool) (temp___do_toplevel_286 : bool)  =
  (if (( temp___is_init_284 \/ (System__storage_elements__storage_offset.first <= System__storage_elements__storage_offset.last) )) then (
   (System__storage_elements__storage_offset.dynamic_property System__storage_elements__storage_offset.first System__storage_elements__storage_offset.last temp___expr_287)) else true)
 
 predicate default_initial_assumption #"s-stoele.ads" 54 0 0# "inline" 
   (temp___288 : int) (temp___289 : bool)  =
  true

end

(* Module giving axioms for type "storage_count" defined at s-stoele.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__storage_elements__storage_count___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_elements__storage_count

 predicate dynamic_invariant #"s-stoele.ads" 54 0 0# "inline" 
   (temp___expr_293 : int) (temp___is_init_290 : bool) (temp___do_constant_291 : bool) (temp___do_toplevel_292 : bool)  =
  (if (( temp___is_init_290 \/ (System__storage_elements__storage_count.first <= System__storage_elements__storage_count.last) )) then (
   (System__storage_elements__storage_count.dynamic_property System__storage_elements__storage_count.first System__storage_elements__storage_count.last temp___expr_293)) else true)
 
 predicate default_initial_assumption #"s-stoele.ads" 62 0 0# "inline" 
   (temp___294 : int) (temp___295 : bool)  =
  true

end

(* Module giving axioms for type "storage_element" defined at s-stoele.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__storage_elements__storage_element___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        System__storage_elements__storage_element

 predicate dynamic_invariant #"s-stoele.ads" 62 0 0# "inline" 
   (temp___expr_299 : BV8.t) (temp___is_init_296 : bool) (temp___do_constant_297 : bool) (temp___do_toplevel_298 : bool)  =
  (if (( temp___is_init_296 \/ (BV8.ule System__storage_elements__storage_element.first System__storage_elements__storage_element.last) )) then (
   (System__storage_elements__storage_element.dynamic_property System__storage_elements__storage_element.first System__storage_elements__storage_element.last temp___expr_299)) else true)
 
 predicate default_initial_assumption #"s-stoele.ads" 64 0 0# "inline" 
   (temp___300 : BV8.t) (temp___301 : bool)  =
  true

end

(* Module giving axioms for type "storage_array" defined at s-stoele.ads:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__storage_elements__storage_array___axiom
 use import "_gnatprove_standard".Main
 use        System__storage_elements__storage_offset
 use        System__storage_elements__storage_array

 predicate dynamic_invariant #"s-stoele.ads" 64 0 0# "inline" 
   (temp___expr_305 : System__storage_elements__storage_array.storage_array) (temp___is_init_302 : bool) (temp___do_constant_303 : bool) (temp___do_toplevel_304 : bool)  =
  (if (temp___do_constant_303) then (
   true) else (
   (System__storage_elements__storage_array.dynamic_property System__storage_elements__storage_offset.first System__storage_elements__storage_offset.last (System__storage_elements__storage_array.first temp___expr_305) (System__storage_elements__storage_array.last temp___expr_305))))

end

(* Module giving axioms for type "integer_address" defined at s-stoele.ads:105, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__storage_elements__integer_address___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__storage_elements__integer_address

 predicate dynamic_invariant #"s-stoele.ads" 70 0 0# "inline" 
   (temp___expr_310 : BV64.t) (temp___is_init_307 : bool) (temp___do_constant_308 : bool) (temp___do_toplevel_309 : bool)  =
  (if (( temp___is_init_307 \/ (BV64.ule System__storage_elements__integer_address.first System__storage_elements__integer_address.last) )) then (
   (System__storage_elements__integer_address.dynamic_property System__storage_elements__integer_address.first System__storage_elements__integer_address.last temp___expr_310)) else true)
 
 predicate default_initial_assumption #"s-stoele.ads" 105 0 0# "inline" 
   (temp___311 : BV64.t) (temp___312 : bool)  =
  true

end

(* Module giving axioms for type "stack_info" defined at s-stache.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__stack_checking__stack_info___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64
 use        System__address
 use        System__null_address
 use        System__storage_elements__storage_offset
 use        System__stack_checking__stack_info

 predicate dynamic_invariant #"s-stoele.ads" 105 0 0# "inline" 
   (temp___expr_316 : System__stack_checking__stack_info.stack_info) (temp___is_init_313 : bool) (temp___do_constant_314 : bool) (temp___do_toplevel_315 : bool)  =
  true
 
 predicate default_initial_assumption #"s-stache.ads" 50 0 0# "inline" 
   (temp___317 : System__stack_checking__stack_info.stack_info) (temp___318 : bool)  =
  ( ( (if ((System__stack_checking__stack_info.system__stack_checking__stack_info__limit__pred temp___317)) then (
   ((System__address.to_rep (System__stack_checking__stack_info.rec__system__stack_checking__stack_info__limit (System__stack_checking__stack_info.__split_fields temp___317))) = System__null_address.null_address)) else true) /\ (if ((System__stack_checking__stack_info.system__stack_checking__stack_info__base__pred temp___317)) then (
   ((System__address.to_rep (System__stack_checking__stack_info.rec__system__stack_checking__stack_info__base (System__stack_checking__stack_info.__split_fields temp___317))) = System__null_address.null_address)) else true) ) /\ (if ((System__stack_checking__stack_info.system__stack_checking__stack_info__size__pred temp___317)) then (
   ((System__storage_elements__storage_offset.to_rep (System__stack_checking__stack_info.rec__system__stack_checking__stack_info__size (System__stack_checking__stack_info.__split_fields temp___317))) = 0)) else true) )

end

(* Module giving axioms for type "eo" defined at s-soflin.ads:49, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__soft_links__eo___axiom
 use import "_gnatprove_standard".Main
 use        System__soft_links__eo

 predicate dynamic_invariant #"s-stache.ads" 50 0 0# "inline" 
   (temp___expr_322 : System__soft_links__eo.eo) (temp___is_init_319 : bool) (temp___do_constant_320 : bool) (temp___do_toplevel_321 : bool)  =
  true
 
 predicate default_initial_assumption #"s-soflin.ads" 49 0 0# "inline" 
   (temp___323 : System__soft_links__eo.eo) (temp___324 : bool)  =
  true

end

(* Module giving axioms for type "dummy_communication_block" defined at s-soflin.ads:393, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__soft_links__dummy_communication_block___axiom
 use import "_gnatprove_standard".Main
 use        System__soft_links__dummy_communication_block

 predicate dynamic_invariant #"s-soflin.ads" 49 0 0# "inline" 
   (temp___expr_328 : System__soft_links__dummy_communication_block.dummy_communication_block) (temp___is_init_325 : bool) (temp___do_constant_326 : bool) (temp___do_toplevel_327 : bool)  =
  true
 
 predicate default_initial_assumption #"s-soflin.ads" 393 0 0# "inline" 
   (temp___329 : System__soft_links__dummy_communication_block.dummy_communication_block) (temp___330 : bool)  =
  true

end

(* Module giving axioms for type "Tinteger_8B" defined at interfac.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_8B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_8" defined at interfac.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_8___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_8

 predicate dynamic_invariant #"s-soflin.ads" 393 0 0# "inline" 
   (temp___expr_337 : int) (temp___is_init_334 : bool) (temp___do_constant_335 : bool) (temp___do_toplevel_336 : bool)  =
  (if (( temp___is_init_334 \/ (Interfaces__integer_8.first <= Interfaces__integer_8.last) )) then (
   (Interfaces__integer_8.dynamic_property Interfaces__integer_8.first Interfaces__integer_8.last temp___expr_337)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 46 0 0# "inline" 
   (temp___338 : int) (temp___339 : bool)  =
  true

end

(* Module giving axioms for type "Tinteger_16B" defined at interfac.ads:49, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_16B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_16" defined at interfac.ads:49, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_16___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_16

 predicate dynamic_invariant #"interfac.ads" 46 0 0# "inline" 
   (temp___expr_343 : int) (temp___is_init_340 : bool) (temp___do_constant_341 : bool) (temp___do_toplevel_342 : bool)  =
  (if (( temp___is_init_340 \/ (Interfaces__integer_16.first <= Interfaces__integer_16.last) )) then (
   (Interfaces__integer_16.dynamic_property Interfaces__integer_16.first Interfaces__integer_16.last temp___expr_343)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 49 0 0# "inline" 
   (temp___344 : int) (temp___345 : bool)  =
  true

end

(* Module giving axioms for type "Tinteger_32B" defined at interfac.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_32B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_32" defined at interfac.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_32___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_32

 predicate dynamic_invariant #"interfac.ads" 49 0 0# "inline" 
   (temp___expr_349 : int) (temp___is_init_346 : bool) (temp___do_constant_347 : bool) (temp___do_toplevel_348 : bool)  =
  (if (( temp___is_init_346 \/ (Interfaces__integer_32.first <= Interfaces__integer_32.last) )) then (
   (Interfaces__integer_32.dynamic_property Interfaces__integer_32.first Interfaces__integer_32.last temp___expr_349)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 52 0 0# "inline" 
   (temp___350 : int) (temp___351 : bool)  =
  true

end

(* Module giving axioms for type "Tinteger_64B" defined at interfac.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_64B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_64" defined at interfac.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_64___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_64

 predicate dynamic_invariant #"interfac.ads" 52 0 0# "inline" 
   (temp___expr_355 : int) (temp___is_init_352 : bool) (temp___do_constant_353 : bool) (temp___do_toplevel_354 : bool)  =
  (if (( temp___is_init_352 \/ (Interfaces__integer_64.first <= Interfaces__integer_64.last) )) then (
   (Interfaces__integer_64.dynamic_property Interfaces__integer_64.first Interfaces__integer_64.last temp___expr_355)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 55 0 0# "inline" 
   (temp___356 : int) (temp___357 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_8" defined at interfac.ads:63, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_8___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Interfaces__unsigned_8

 predicate dynamic_invariant #"interfac.ads" 55 0 0# "inline" 
   (temp___expr_361 : BV8.t) (temp___is_init_358 : bool) (temp___do_constant_359 : bool) (temp___do_toplevel_360 : bool)  =
  (if (( temp___is_init_358 \/ (BV8.ule Interfaces__unsigned_8.first Interfaces__unsigned_8.last) )) then (
   (Interfaces__unsigned_8.dynamic_property Interfaces__unsigned_8.first Interfaces__unsigned_8.last temp___expr_361)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 63 0 0# "inline" 
   (temp___362 : BV8.t) (temp___363 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_16" defined at interfac.ads:66, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_16___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Interfaces__unsigned_16

 predicate dynamic_invariant #"interfac.ads" 63 0 0# "inline" 
   (temp___expr_367 : BV16.t) (temp___is_init_364 : bool) (temp___do_constant_365 : bool) (temp___do_toplevel_366 : bool)  =
  (if (( temp___is_init_364 \/ (BV16.ule Interfaces__unsigned_16.first Interfaces__unsigned_16.last) )) then (
   (Interfaces__unsigned_16.dynamic_property Interfaces__unsigned_16.first Interfaces__unsigned_16.last temp___expr_367)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 66 0 0# "inline" 
   (temp___368 : BV16.t) (temp___369 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_24" defined at interfac.ads:69, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_24___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__unsigned_24

 predicate dynamic_invariant #"interfac.ads" 66 0 0# "inline" 
   (temp___expr_373 : BV32.t) (temp___is_init_370 : bool) (temp___do_constant_371 : bool) (temp___do_toplevel_372 : bool)  =
  (if (( temp___is_init_370 \/ (BV32.ule Interfaces__unsigned_24.first Interfaces__unsigned_24.last) )) then (
   (Interfaces__unsigned_24.dynamic_property Interfaces__unsigned_24.first Interfaces__unsigned_24.last temp___expr_373)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 69 0 0# "inline" 
   (temp___374 : BV32.t) (temp___375 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_32" defined at interfac.ads:74, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_32___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__unsigned_32

 predicate dynamic_invariant #"interfac.ads" 69 0 0# "inline" 
   (temp___expr_379 : BV32.t) (temp___is_init_376 : bool) (temp___do_constant_377 : bool) (temp___do_toplevel_378 : bool)  =
  (if (( temp___is_init_376 \/ (BV32.ule Interfaces__unsigned_32.first Interfaces__unsigned_32.last) )) then (
   (Interfaces__unsigned_32.dynamic_property Interfaces__unsigned_32.first Interfaces__unsigned_32.last temp___expr_379)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 74 0 0# "inline" 
   (temp___380 : BV32.t) (temp___381 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_64" defined at interfac.ads:77, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_64___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__unsigned_64

 predicate dynamic_invariant #"interfac.ads" 74 0 0# "inline" 
   (temp___expr_385 : BV64.t) (temp___is_init_382 : bool) (temp___do_constant_383 : bool) (temp___do_toplevel_384 : bool)  =
  (if (( temp___is_init_382 \/ (BV64.ule Interfaces__unsigned_64.first Interfaces__unsigned_64.last) )) then (
   (Interfaces__unsigned_64.dynamic_property Interfaces__unsigned_64.first Interfaces__unsigned_64.last temp___expr_385)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 77 0 0# "inline" 
   (temp___386 : BV64.t) (temp___387 : bool)  =
  true

end

(* Module giving axioms for type "Tieee_float_32B" defined at interfac.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_float_32B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ieee_float_32" defined at interfac.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_float_32___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__ieee_float_32

 predicate dynamic_invariant #"interfac.ads" 77 0 0# "inline" 
   (temp___expr_391 : Interfaces__ieee_float_32.ieee_float_32) (temp___is_init_388 : bool) (temp___do_constant_389 : bool) (temp___do_toplevel_390 : bool)  =
  true
 
 predicate default_initial_assumption #"interfac.ads" 169 0 0# "inline" 
   (temp___392 : Interfaces__ieee_float_32.ieee_float_32) (temp___393 : bool)  =
  true

end

(* Module giving axioms for type "Tieee_float_64B" defined at interfac.ads:172, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_float_64B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ieee_float_64" defined at interfac.ads:172, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_float_64___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__ieee_float_64

 predicate dynamic_invariant #"interfac.ads" 169 0 0# "inline" 
   (temp___expr_397 : Interfaces__ieee_float_64.ieee_float_64) (temp___is_init_394 : bool) (temp___do_constant_395 : bool) (temp___do_toplevel_396 : bool)  =
  true
 
 predicate default_initial_assumption #"interfac.ads" 172 0 0# "inline" 
   (temp___398 : Interfaces__ieee_float_64.ieee_float_64) (temp___399 : bool)  =
  true

end

(* Module giving axioms for type "Tieee_extended_floatB" defined at interfac.ads:182, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_extended_floatB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ieee_extended_float" defined at interfac.ads:182, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_extended_float___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__ieee_extended_float

 predicate dynamic_invariant #"interfac.ads" 172 0 0# "inline" 
   (temp___expr_403 : Interfaces__ieee_extended_float.ieee_extended_float) (temp___is_init_400 : bool) (temp___do_constant_401 : bool) (temp___do_toplevel_402 : bool)  =
  true
 
 predicate default_initial_assumption #"interfac.ads" 182 0 0# "inline" 
   (temp___404 : Interfaces__ieee_extended_float.ieee_extended_float) (temp___405 : bool)  =
  true

end

(* Module giving axioms for type "TintB" defined at i-c.ads:35, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__TintB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "int" defined at i-c.ads:35, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__int___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__int

 predicate dynamic_invariant #"interfac.ads" 182 0 0# "inline" 
   (temp___expr_409 : int) (temp___is_init_406 : bool) (temp___do_constant_407 : bool) (temp___do_toplevel_408 : bool)  =
  (if (( temp___is_init_406 \/ (Interfaces__c__int.first <= Interfaces__c__int.last) )) then (
   (Interfaces__c__int.dynamic_property Interfaces__c__int.first Interfaces__c__int.last temp___expr_409)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 35 0 0# "inline" 
   (temp___410 : int) (temp___411 : bool)  =
  true

end

(* Module giving axioms for type "TshortB" defined at i-c.ads:36, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__TshortB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "short" defined at i-c.ads:36, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__short___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__short

 predicate dynamic_invariant #"i-c.ads" 35 0 0# "inline" 
   (temp___expr_415 : int) (temp___is_init_412 : bool) (temp___do_constant_413 : bool) (temp___do_toplevel_414 : bool)  =
  (if (( temp___is_init_412 \/ (Interfaces__c__short.first <= Interfaces__c__short.last) )) then (
   (Interfaces__c__short.dynamic_property Interfaces__c__short.first Interfaces__c__short.last temp___expr_415)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 36 0 0# "inline" 
   (temp___416 : int) (temp___417 : bool)  =
  true

end

(* Module giving axioms for type "TlongB" defined at i-c.ads:37, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__TlongB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "long" defined at i-c.ads:37, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__long___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__long

 predicate dynamic_invariant #"i-c.ads" 36 0 0# "inline" 
   (temp___expr_421 : int) (temp___is_init_418 : bool) (temp___do_constant_419 : bool) (temp___do_toplevel_420 : bool)  =
  (if (( temp___is_init_418 \/ (Interfaces__c__long.first <= Interfaces__c__long.last) )) then (
   (Interfaces__c__long.dynamic_property Interfaces__c__long.first Interfaces__c__long.last temp___expr_421)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 37 0 0# "inline" 
   (temp___422 : int) (temp___423 : bool)  =
  true

end

(* Module giving axioms for type "Tsigned_charB" defined at i-c.ads:40, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__Tsigned_charB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "signed_char" defined at i-c.ads:40, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__signed_char___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__signed_char

 predicate dynamic_invariant #"i-c.ads" 37 0 0# "inline" 
   (temp___expr_427 : int) (temp___is_init_424 : bool) (temp___do_constant_425 : bool) (temp___do_toplevel_426 : bool)  =
  (if (( temp___is_init_424 \/ (Interfaces__c__signed_char.first <= Interfaces__c__signed_char.last) )) then (
   (Interfaces__c__signed_char.dynamic_property Interfaces__c__signed_char.first Interfaces__c__signed_char.last temp___expr_427)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 40 0 0# "inline" 
   (temp___428 : int) (temp___429 : bool)  =
  true

end

(* Module giving axioms for type "unsigned" defined at i-c.ads:43, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__unsigned___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__unsigned

 predicate dynamic_invariant #"i-c.ads" 40 0 0# "inline" 
   (temp___expr_433 : BV32.t) (temp___is_init_430 : bool) (temp___do_constant_431 : bool) (temp___do_toplevel_432 : bool)  =
  (if (( temp___is_init_430 \/ (BV32.ule Interfaces__c__unsigned.first Interfaces__c__unsigned.last) )) then (
   (Interfaces__c__unsigned.dynamic_property Interfaces__c__unsigned.first Interfaces__c__unsigned.last temp___expr_433)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 43 0 0# "inline" 
   (temp___434 : BV32.t) (temp___435 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_short" defined at i-c.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__unsigned_short___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Interfaces__c__unsigned_short

 predicate dynamic_invariant #"i-c.ads" 43 0 0# "inline" 
   (temp___expr_439 : BV16.t) (temp___is_init_436 : bool) (temp___do_constant_437 : bool) (temp___do_toplevel_438 : bool)  =
  (if (( temp___is_init_436 \/ (BV16.ule Interfaces__c__unsigned_short.first Interfaces__c__unsigned_short.last) )) then (
   (Interfaces__c__unsigned_short.dynamic_property Interfaces__c__unsigned_short.first Interfaces__c__unsigned_short.last temp___expr_439)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 44 0 0# "inline" 
   (temp___440 : BV16.t) (temp___441 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_long" defined at i-c.ads:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__unsigned_long___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c__unsigned_long

 predicate dynamic_invariant #"i-c.ads" 44 0 0# "inline" 
   (temp___expr_445 : BV64.t) (temp___is_init_442 : bool) (temp___do_constant_443 : bool) (temp___do_toplevel_444 : bool)  =
  (if (( temp___is_init_442 \/ (BV64.ule Interfaces__c__unsigned_long.first Interfaces__c__unsigned_long.last) )) then (
   (Interfaces__c__unsigned_long.dynamic_property Interfaces__c__unsigned_long.first Interfaces__c__unsigned_long.last temp___expr_445)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 45 0 0# "inline" 
   (temp___446 : BV64.t) (temp___447 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_char" defined at i-c.ads:47, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__unsigned_char___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Interfaces__c__unsigned_char

 predicate dynamic_invariant #"i-c.ads" 45 0 0# "inline" 
   (temp___expr_451 : BV8.t) (temp___is_init_448 : bool) (temp___do_constant_449 : bool) (temp___do_toplevel_450 : bool)  =
  (if (( temp___is_init_448 \/ (BV8.ule Interfaces__c__unsigned_char.first Interfaces__c__unsigned_char.last) )) then (
   (Interfaces__c__unsigned_char.dynamic_property Interfaces__c__unsigned_char.first Interfaces__c__unsigned_char.last temp___expr_451)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 47 0 0# "inline" 
   (temp___452 : BV8.t) (temp___453 : bool)  =
  true

end

(* Module giving axioms for type "plain_char" defined at i-c.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__plain_char___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Interfaces__c__plain_char

 predicate dynamic_invariant #"i-c.ads" 47 0 0# "inline" 
   (temp___expr_457 : BV8.t) (temp___is_init_454 : bool) (temp___do_constant_455 : bool) (temp___do_toplevel_456 : bool)  =
  (if (( temp___is_init_454 \/ (BV8.ule Interfaces__c__plain_char.first Interfaces__c__plain_char.last) )) then (
   (Interfaces__c__plain_char.dynamic_property Interfaces__c__plain_char.first Interfaces__c__plain_char.last temp___expr_457)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 50 0 0# "inline" 
   (temp___458 : BV8.t) (temp___459 : bool)  =
  true

end

(* Module giving axioms for type "Tptrdiff_tB" defined at i-c.ads:56, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__Tptrdiff_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ptrdiff_t" defined at i-c.ads:56, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__ptrdiff_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__ptrdiff_t

 predicate dynamic_invariant #"i-c.ads" 50 0 0# "inline" 
   (temp___expr_463 : int) (temp___is_init_460 : bool) (temp___do_constant_461 : bool) (temp___do_toplevel_462 : bool)  =
  (if (( temp___is_init_460 \/ (Interfaces__c__ptrdiff_t.first <= Interfaces__c__ptrdiff_t.last) )) then (
   (Interfaces__c__ptrdiff_t.dynamic_property Interfaces__c__ptrdiff_t.first Interfaces__c__ptrdiff_t.last temp___expr_463)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 56 0 0# "inline" 
   (temp___464 : int) (temp___465 : bool)  =
  true

end

(* Module giving axioms for type "size_t" defined at i-c.ads:60, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__size_t___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c__size_t

 predicate dynamic_invariant #"i-c.ads" 56 0 0# "inline" 
   (temp___expr_469 : BV64.t) (temp___is_init_466 : bool) (temp___do_constant_467 : bool) (temp___do_toplevel_468 : bool)  =
  (if (( temp___is_init_466 \/ (BV64.ule Interfaces__c__size_t.first Interfaces__c__size_t.last) )) then (
   (Interfaces__c__size_t.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last temp___expr_469)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 60 0 0# "inline" 
   (temp___470 : BV64.t) (temp___471 : bool)  =
  true

end

(* Module giving axioms for type "Tc_floatB" defined at i-c.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__Tc_floatB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "c_float" defined at i-c.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__c_float___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c__c_float

 predicate dynamic_invariant #"i-c.ads" 60 0 0# "inline" 
   (temp___expr_475 : Interfaces__c__c_float.c_float) (temp___is_init_472 : bool) (temp___do_constant_473 : bool) (temp___do_toplevel_474 : bool)  =
  true
 
 predicate default_initial_assumption #"i-c.ads" 64 0 0# "inline" 
   (temp___476 : Interfaces__c__c_float.c_float) (temp___477 : bool)  =
  true

end

(* Module giving axioms for type "TdoubleB" defined at i-c.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__TdoubleB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "double" defined at i-c.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__double___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c__double

 predicate dynamic_invariant #"i-c.ads" 64 0 0# "inline" 
   (temp___expr_481 : Interfaces__c__double.double) (temp___is_init_478 : bool) (temp___do_constant_479 : bool) (temp___do_toplevel_480 : bool)  =
  true
 
 predicate default_initial_assumption #"i-c.ads" 65 0 0# "inline" 
   (temp___482 : Interfaces__c__double.double) (temp___483 : bool)  =
  true

end

(* Module giving axioms for type "Tlong_doubleB" defined at i-c.ads:66, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__Tlong_doubleB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "long_double" defined at i-c.ads:66, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__long_double___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c__long_double

 predicate dynamic_invariant #"i-c.ads" 65 0 0# "inline" 
   (temp___expr_487 : Interfaces__c__long_double.long_double) (temp___is_init_484 : bool) (temp___do_constant_485 : bool) (temp___do_toplevel_486 : bool)  =
  true
 
 predicate default_initial_assumption #"i-c.ads" 66 0 0# "inline" 
   (temp___488 : Interfaces__c__long_double.long_double) (temp___489 : bool)  =
  true

end

(* Module giving axioms for type "TcharB" defined at i-c.ads:72, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__TcharB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "char" defined at i-c.ads:72, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__char___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char

 predicate dynamic_invariant #"i-c.ads" 66 0 0# "inline" 
   (temp___expr_493 : int) (temp___is_init_490 : bool) (temp___do_constant_491 : bool) (temp___do_toplevel_492 : bool)  =
  (if (( temp___is_init_490 \/ (Interfaces__c__char.first <= Interfaces__c__char.last) )) then (
   (Interfaces__c__char.dynamic_property Interfaces__c__char.first Interfaces__c__char.last temp___expr_493)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 72 0 0# "inline" 
   (temp___494 : int) (temp___495 : bool)  =
  true

end

(* Module giving axioms for type "char_array" defined at i-c.ads:79, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__char_array___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c__size_t
 use        Interfaces__c__char_array

 predicate dynamic_invariant #"i-c.ads" 72 0 0# "inline" 
   (temp___expr_499 : Interfaces__c__char_array.char_array) (temp___is_init_496 : bool) (temp___do_constant_497 : bool) (temp___do_toplevel_498 : bool)  =
  (if (temp___do_constant_497) then (
   true) else (
   (Interfaces__c__char_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last (Interfaces__c__char_array.first temp___expr_499) (Interfaces__c__char_array.last temp___expr_499))))

end

(* Module giving axioms for type "Twchar_tB" defined at i-c.ads:108, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__Twchar_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "wchar_t" defined at i-c.ads:108, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__wchar_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__wchar_t

 predicate dynamic_invariant #"i-c.ads" 79 0 0# "inline" 
   (temp___expr_506 : int) (temp___is_init_503 : bool) (temp___do_constant_504 : bool) (temp___do_toplevel_505 : bool)  =
  (if (( temp___is_init_503 \/ (Interfaces__c__wchar_t.first <= Interfaces__c__wchar_t.last) )) then (
   (Interfaces__c__wchar_t.dynamic_property Interfaces__c__wchar_t.first Interfaces__c__wchar_t.last temp___expr_506)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 108 0 0# "inline" 
   (temp___507 : int) (temp___508 : bool)  =
  true

end

(* Module giving axioms for type "wchar_array" defined at i-c.ads:116, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__wchar_array___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c__size_t
 use        Interfaces__c__wchar_array

 predicate dynamic_invariant #"i-c.ads" 108 0 0# "inline" 
   (temp___expr_512 : Interfaces__c__wchar_array.wchar_array) (temp___is_init_509 : bool) (temp___do_constant_510 : bool) (temp___do_toplevel_511 : bool)  =
  (if (temp___do_constant_510) then (
   true) else (
   (Interfaces__c__wchar_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last (Interfaces__c__wchar_array.first temp___expr_512) (Interfaces__c__wchar_array.last temp___expr_512))))

end

(* Module giving axioms for type "Tchar16_tB" defined at i-c.ads:146, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__Tchar16_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "char16_t" defined at i-c.ads:146, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__char16_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char16_t

 predicate dynamic_invariant #"i-c.ads" 116 0 0# "inline" 
   (temp___expr_519 : int) (temp___is_init_516 : bool) (temp___do_constant_517 : bool) (temp___do_toplevel_518 : bool)  =
  (if (( temp___is_init_516 \/ (Interfaces__c__char16_t.first <= Interfaces__c__char16_t.last) )) then (
   (Interfaces__c__char16_t.dynamic_property Interfaces__c__char16_t.first Interfaces__c__char16_t.last temp___expr_519)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 146 0 0# "inline" 
   (temp___520 : int) (temp___521 : bool)  =
  true

end

(* Module giving axioms for type "char16_array" defined at i-c.ads:158, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__char16_array___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c__size_t
 use        Interfaces__c__char16_array

 predicate dynamic_invariant #"i-c.ads" 146 0 0# "inline" 
   (temp___expr_525 : Interfaces__c__char16_array.char16_array) (temp___is_init_522 : bool) (temp___do_constant_523 : bool) (temp___do_toplevel_524 : bool)  =
  (if (temp___do_constant_523) then (
   true) else (
   (Interfaces__c__char16_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last (Interfaces__c__char16_array.first temp___expr_525) (Interfaces__c__char16_array.last temp___expr_525))))

end

(* Module giving axioms for type "Tchar32_tB" defined at i-c.ads:188, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__Tchar32_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "char32_t" defined at i-c.ads:188, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__char32_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char32_t

 predicate dynamic_invariant #"i-c.ads" 158 0 0# "inline" 
   (temp___expr_532 : int) (temp___is_init_529 : bool) (temp___do_constant_530 : bool) (temp___do_toplevel_531 : bool)  =
  (if (( temp___is_init_529 \/ (Interfaces__c__char32_t.first <= Interfaces__c__char32_t.last) )) then (
   (Interfaces__c__char32_t.dynamic_property Interfaces__c__char32_t.first Interfaces__c__char32_t.last temp___expr_532)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 188 0 0# "inline" 
   (temp___533 : int) (temp___534 : bool)  =
  true

end

(* Module giving axioms for type "char32_array" defined at i-c.ads:200, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__char32_array___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__c__size_t
 use        Interfaces__c__char32_array

 predicate dynamic_invariant #"i-c.ads" 188 0 0# "inline" 
   (temp___expr_538 : Interfaces__c__char32_array.char32_array) (temp___is_init_535 : bool) (temp___do_constant_536 : bool) (temp___do_toplevel_537 : bool)  =
  (if (temp___do_constant_536) then (
   true) else (
   (Interfaces__c__char32_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last (Interfaces__c__char32_array.first temp___expr_538) (Interfaces__c__char32_array.last temp___expr_538))))

end

(* Module giving axioms for type "os_type" defined at s-oscons.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_constants__os_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__os_type

 predicate dynamic_invariant #"i-c.ads" 200 0 0# "inline" 
   (temp___expr_545 : int) (temp___is_init_542 : bool) (temp___do_constant_543 : bool) (temp___do_toplevel_544 : bool)  =
  (if (( temp___is_init_542 \/ (System__os_constants__os_type.first <= System__os_constants__os_type.last) )) then (
   (System__os_constants__os_type.dynamic_property System__os_constants__os_type.first System__os_constants__os_type.last temp___expr_545)) else true)
 
 predicate default_initial_assumption #"s-oscons.ads" 52 0 0# "inline" 
   (temp___546 : int) (temp___547 : bool)  =
  true

end

(* Module giving axioms for type "T1s" defined at s-oscons.ads:59, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_constants__T1s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ioctl_req_t" defined at s-oscons.ads:94, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_constants__ioctl_req_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ioctl_req_t

 predicate dynamic_invariant #"s-oscons.ads" 52 0 0# "inline" 
   (temp___expr_551 : int) (temp___is_init_548 : bool) (temp___do_constant_549 : bool) (temp___do_toplevel_550 : bool)  =
  (if (( temp___is_init_548 \/ (System__os_constants__ioctl_req_t.first <= System__os_constants__ioctl_req_t.last) )) then (
   (System__os_constants__ioctl_req_t.dynamic_property System__os_constants__ioctl_req_t.first System__os_constants__ioctl_req_t.last temp___expr_551)) else true)
 
 predicate default_initial_assumption #"s-oscons.ads" 94 0 0# "inline" 
   (temp___552 : int) (temp___553 : bool)  =
  true

end

(* Module giving axioms for type "T2s" defined at s-oscons.ads:225, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_constants__T2s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "msg_iovlen_t" defined at s-oscons.ads:322, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_constants__msg_iovlen_t___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__os_constants__msg_iovlen_t

 predicate dynamic_invariant #"s-oscons.ads" 94 0 0# "inline" 
   (temp___expr_557 : BV64.t) (temp___is_init_554 : bool) (temp___do_constant_555 : bool) (temp___do_toplevel_556 : bool)  =
  (if (( temp___is_init_554 \/ (BV64.ule System__os_constants__msg_iovlen_t.first System__os_constants__msg_iovlen_t.last) )) then (
   (System__os_constants__msg_iovlen_t.dynamic_property System__os_constants__msg_iovlen_t.first System__os_constants__msg_iovlen_t.last temp___expr_557)) else true)
 
 predicate default_initial_assumption #"s-oscons.ads" 322 0 0# "inline" 
   (temp___558 : BV64.t) (temp___559 : bool)  =
  true

end

(* Module giving axioms for type "T3s" defined at s-oscons.ads:334, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_constants__T3s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "int" defined at s-osinte.ads:47, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__int___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__int

 predicate dynamic_invariant #"s-oscons.ads" 322 0 0# "inline" 
   (temp___expr_563 : int) (temp___is_init_560 : bool) (temp___do_constant_561 : bool) (temp___do_toplevel_562 : bool)  =
  (if (( temp___is_init_560 \/ (System__os_interface__int.first <= System__os_interface__int.last) )) then (
   (System__os_interface__int.dynamic_property System__os_interface__int.first System__os_interface__int.last temp___expr_563)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 47 0 0# "inline" 
   (temp___564 : int) (temp___565 : bool)  =
  true

end

(* Module giving axioms for type "short" defined at s-osinte.ads:48, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__short___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__short

 predicate dynamic_invariant #"s-osinte.ads" 47 0 0# "inline" 
   (temp___expr_569 : int) (temp___is_init_566 : bool) (temp___do_constant_567 : bool) (temp___do_toplevel_568 : bool)  =
  (if (( temp___is_init_566 \/ (System__os_interface__short.first <= System__os_interface__short.last) )) then (
   (System__os_interface__short.dynamic_property System__os_interface__short.first System__os_interface__short.last temp___expr_569)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 48 0 0# "inline" 
   (temp___570 : int) (temp___571 : bool)  =
  true

end

(* Module giving axioms for type "long" defined at s-osinte.ads:49, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__long___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__long

 predicate dynamic_invariant #"s-osinte.ads" 48 0 0# "inline" 
   (temp___expr_575 : int) (temp___is_init_572 : bool) (temp___do_constant_573 : bool) (temp___do_toplevel_574 : bool)  =
  (if (( temp___is_init_572 \/ (System__os_interface__long.first <= System__os_interface__long.last) )) then (
   (System__os_interface__long.dynamic_property System__os_interface__long.first System__os_interface__long.last temp___expr_575)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 49 0 0# "inline" 
   (temp___576 : int) (temp___577 : bool)  =
  true

end

(* Module giving axioms for type "unsigned" defined at s-osinte.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__unsigned___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__os_interface__unsigned

 predicate dynamic_invariant #"s-osinte.ads" 49 0 0# "inline" 
   (temp___expr_581 : BV32.t) (temp___is_init_578 : bool) (temp___do_constant_579 : bool) (temp___do_toplevel_580 : bool)  =
  (if (( temp___is_init_578 \/ (BV32.ule System__os_interface__unsigned.first System__os_interface__unsigned.last) )) then (
   (System__os_interface__unsigned.dynamic_property System__os_interface__unsigned.first System__os_interface__unsigned.last temp___expr_581)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 50 0 0# "inline" 
   (temp___582 : BV32.t) (temp___583 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_short" defined at s-osinte.ads:51, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__unsigned_short___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        System__os_interface__unsigned_short

 predicate dynamic_invariant #"s-osinte.ads" 50 0 0# "inline" 
   (temp___expr_587 : BV16.t) (temp___is_init_584 : bool) (temp___do_constant_585 : bool) (temp___do_toplevel_586 : bool)  =
  (if (( temp___is_init_584 \/ (BV16.ule System__os_interface__unsigned_short.first System__os_interface__unsigned_short.last) )) then (
   (System__os_interface__unsigned_short.dynamic_property System__os_interface__unsigned_short.first System__os_interface__unsigned_short.last temp___expr_587)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 51 0 0# "inline" 
   (temp___588 : BV16.t) (temp___589 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_long" defined at s-osinte.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__unsigned_long___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__os_interface__unsigned_long

 predicate dynamic_invariant #"s-osinte.ads" 51 0 0# "inline" 
   (temp___expr_593 : BV64.t) (temp___is_init_590 : bool) (temp___do_constant_591 : bool) (temp___do_toplevel_592 : bool)  =
  (if (( temp___is_init_590 \/ (BV64.ule System__os_interface__unsigned_long.first System__os_interface__unsigned_long.last) )) then (
   (System__os_interface__unsigned_long.dynamic_property System__os_interface__unsigned_long.first System__os_interface__unsigned_long.last temp___expr_593)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 52 0 0# "inline" 
   (temp___594 : BV64.t) (temp___595 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_char" defined at s-osinte.ads:53, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__unsigned_char___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        System__os_interface__unsigned_char

 predicate dynamic_invariant #"s-osinte.ads" 52 0 0# "inline" 
   (temp___expr_599 : BV8.t) (temp___is_init_596 : bool) (temp___do_constant_597 : bool) (temp___do_toplevel_598 : bool)  =
  (if (( temp___is_init_596 \/ (BV8.ule System__os_interface__unsigned_char.first System__os_interface__unsigned_char.last) )) then (
   (System__os_interface__unsigned_char.dynamic_property System__os_interface__unsigned_char.first System__os_interface__unsigned_char.last temp___expr_599)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 53 0 0# "inline" 
   (temp___600 : BV8.t) (temp___601 : bool)  =
  true

end

(* Module giving axioms for type "plain_char" defined at s-osinte.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__plain_char___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        System__os_interface__plain_char

 predicate dynamic_invariant #"s-osinte.ads" 53 0 0# "inline" 
   (temp___expr_605 : BV8.t) (temp___is_init_602 : bool) (temp___do_constant_603 : bool) (temp___do_toplevel_604 : bool)  =
  (if (( temp___is_init_602 \/ (BV8.ule System__os_interface__plain_char.first System__os_interface__plain_char.last) )) then (
   (System__os_interface__plain_char.dynamic_property System__os_interface__plain_char.first System__os_interface__plain_char.last temp___expr_605)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 54 0 0# "inline" 
   (temp___606 : BV8.t) (temp___607 : bool)  =
  true

end

(* Module giving axioms for type "size_t" defined at s-osinte.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__size_t___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__os_interface__size_t

 predicate dynamic_invariant #"s-osinte.ads" 54 0 0# "inline" 
   (temp___expr_611 : BV64.t) (temp___is_init_608 : bool) (temp___do_constant_609 : bool) (temp___do_toplevel_610 : bool)  =
  (if (( temp___is_init_608 \/ (BV64.ule System__os_interface__size_t.first System__os_interface__size_t.last) )) then (
   (System__os_interface__size_t.dynamic_property System__os_interface__size_t.first System__os_interface__size_t.last temp___expr_611)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 55 0 0# "inline" 
   (temp___612 : BV64.t) (temp___613 : bool)  =
  true

end

(* Module giving axioms for type "TsignalB" defined at s-osinte.ads:75, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__TsignalB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "signal" defined at s-osinte.ads:75, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__signal___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__signal

 predicate dynamic_invariant #"s-osinte.ads" 55 0 0# "inline" 
   (temp___expr_617 : int) (temp___is_init_614 : bool) (temp___do_constant_615 : bool) (temp___do_toplevel_616 : bool)  =
  (if (( temp___is_init_614 \/ (System__os_interface__signal.first <= System__os_interface__signal.last) )) then (
   (System__os_interface__signal.dynamic_property System__os_interface__signal.first System__os_interface__signal.last temp___expr_617)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 75 0 0# "inline" 
   (temp___618 : int) (temp___619 : bool)  =
  true

end

(* Module giving axioms for type "signal_set" defined at s-osinte.ads:115, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__signal_set___axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        System__os_interface__signal_set

 predicate dynamic_invariant #"s-osinte.ads" 75 0 0# "inline" 
   (temp___expr_623 : System__os_interface__signal_set.signal_set) (temp___is_init_620 : bool) (temp___do_constant_621 : bool) (temp___do_toplevel_622 : bool)  =
  (if (temp___do_constant_621) then (
   true) else (
   (System__os_interface__signal_set.dynamic_property Standard__natural.first Standard__natural.last (System__os_interface__signal_set.first temp___expr_623) (System__os_interface__signal_set.last temp___expr_623))))

end

(* Module giving axioms for type "T4s" defined at s-osinte.ads:118, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__T4s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T5s" defined at s-osinte.ads:118, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__T5s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6s" defined at s-osinte.ads:121, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__T6s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7s" defined at s-osinte.ads:121, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__T7s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T8s" defined at s-osinte.ads:124, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__T8s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T9s" defined at s-osinte.ads:124, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__T9s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Tsigset_tB" defined at s-osinte.ads:514, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__Tsigset_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "sigset_t" defined at s-osinte.ads:514, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__sigset_t___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__os_interface__sigset_t

 predicate dynamic_invariant #"s-osinte.ads" 115 0 0# "inline" 
   (temp___expr_628 : BV32.t) (temp___is_init_625 : bool) (temp___do_constant_626 : bool) (temp___do_toplevel_627 : bool)  =
  (if (( temp___is_init_625 \/ (BV32.ule System__os_interface__sigset_t.first System__os_interface__sigset_t.last) )) then (
   (System__os_interface__sigset_t.dynamic_property System__os_interface__sigset_t.first System__os_interface__sigset_t.last temp___expr_628)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 514 0 0# "inline" 
   (temp___629 : BV32.t) (temp___630 : bool)  =
  true

end

(* Module giving axioms for type "Tpad_typeD1" defined at s-osinte.ads:531, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__Tpad_typeD1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Tpad_typeB" defined at s-osinte.ads:531, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__Tpad_typeB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "pad_type" defined at s-osinte.ads:531, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pad_type___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__System__os_interface__unsigned_long
 use        Array__Int__System__os_interface__unsigned_long

 predicate dynamic_invariant #"s-osinte.ads" 514 0 0# "inline" 
   (temp___expr_634 : Array__Int__System__os_interface__unsigned_long.map) (temp___is_init_631 : bool) (temp___do_constant_632 : bool) (temp___do_toplevel_633 : bool)  =
  true
 
 predicate default_initial_assumption #"s-osinte.ads" 531 0 0# "inline" 
   (temp___636 : Array__Int__System__os_interface__unsigned_long.map) (temp___637 : bool)  =
  true

end

(* Module giving axioms for type "siginfo_t" defined at s-osinte.ads:532, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__siginfo_t___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__siginfo_t

 predicate dynamic_invariant #"s-osinte.ads" 531 0 0# "inline" 
   (temp___expr_643 : System__os_interface__siginfo_t.siginfo_t) (temp___is_init_640 : bool) (temp___do_constant_641 : bool) (temp___do_toplevel_642 : bool)  =
  true
 
 predicate default_initial_assumption #"s-osinte.ads" 532 0 0# "inline" 
   (temp___645 : System__os_interface__siginfo_t.siginfo_t) (temp___646 : bool)  =
  true

end

(* Module giving axioms for type "stack_t" defined at s-osinte.ads:273, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__stack_t___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__stack_t

 predicate dynamic_invariant #"s-osinte.ads" 532 0 0# "inline" 
   (temp___expr_662 : System__os_interface__stack_t.stack_t) (temp___is_init_659 : bool) (temp___do_constant_660 : bool) (temp___do_toplevel_661 : bool)  =
  true
 
 predicate default_initial_assumption #"s-osinte.ads" 273 0 0# "inline" 
   (temp___663 : System__os_interface__stack_t.stack_t) (temp___664 : bool)  =
  true

end

(* Module giving axioms for type "Tmcontext_tB" defined at s-osinte.ads:546, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__Tmcontext_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "mcontext_t" defined at s-osinte.ads:546, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__mcontext_t___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__os_interface__mcontext_t

 predicate dynamic_invariant #"s-osinte.ads" 273 0 0# "inline" 
   (temp___expr_671 : BV64.t) (temp___is_init_668 : bool) (temp___do_constant_669 : bool) (temp___do_toplevel_670 : bool)  =
  (if (( temp___is_init_668 \/ (BV64.ule System__os_interface__mcontext_t.first System__os_interface__mcontext_t.last) )) then (
   (System__os_interface__mcontext_t.dynamic_property System__os_interface__mcontext_t.first System__os_interface__mcontext_t.last temp___expr_671)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 546 0 0# "inline" 
   (temp___672 : BV64.t) (temp___673 : bool)  =
  true

end

(* Module giving axioms for type "ucontext_t" defined at s-osinte.ads:548, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__ucontext_t___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__ucontext_t

 predicate dynamic_invariant #"s-osinte.ads" 546 0 0# "inline" 
   (temp___expr_677 : System__os_interface__ucontext_t.ucontext_t) (temp___is_init_674 : bool) (temp___do_constant_675 : bool) (temp___do_toplevel_676 : bool)  =
  true
 
 predicate default_initial_assumption #"s-osinte.ads" 548 0 0# "inline" 
   (temp___678 : System__os_interface__ucontext_t.ucontext_t) (temp___679 : bool)  =
  true

end

(* Module giving axioms for type "struct_sigaction" defined at s-osinte.ads:153, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__struct_sigaction___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__struct_sigaction

 predicate dynamic_invariant #"s-osinte.ads" 548 0 0# "inline" 
   (temp___expr_692 : System__os_interface__struct_sigaction.struct_sigaction) (temp___is_init_689 : bool) (temp___do_constant_690 : bool) (temp___do_toplevel_691 : bool)  =
  true
 
 predicate default_initial_assumption #"s-osinte.ads" 153 0 0# "inline" 
   (temp___693 : System__os_interface__struct_sigaction.struct_sigaction) (temp___694 : bool)  =
  true

end

(* Module giving axioms for type "Ttime_tB" defined at s-osinte.ads:520, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__Ttime_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "time_t" defined at s-osinte.ads:520, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__time_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__time_t

 predicate dynamic_invariant #"s-osinte.ads" 153 0 0# "inline" 
   (temp___expr_701 : int) (temp___is_init_698 : bool) (temp___do_constant_699 : bool) (temp___do_toplevel_700 : bool)  =
  (if (( temp___is_init_698 \/ (System__os_interface__time_t.first <= System__os_interface__time_t.last) )) then (
   (System__os_interface__time_t.dynamic_property System__os_interface__time_t.first System__os_interface__time_t.last temp___expr_701)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 520 0 0# "inline" 
   (temp___702 : int) (temp___703 : bool)  =
  true

end

(* Module giving axioms for type "timespec" defined at s-osinte.ads:522, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__timespec___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__timespec

 predicate dynamic_invariant #"s-osinte.ads" 520 0 0# "inline" 
   (temp___expr_707 : System__os_interface__timespec.timespec) (temp___is_init_704 : bool) (temp___do_constant_705 : bool) (temp___do_toplevel_706 : bool)  =
  true
 
 predicate default_initial_assumption #"s-osinte.ads" 522 0 0# "inline" 
   (temp___708 : System__os_interface__timespec.timespec) (temp___709 : bool)  =
  true

end

(* Module giving axioms for type "Tclockid_tB" defined at s-osinte.ads:186, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__Tclockid_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "clockid_t" defined at s-osinte.ads:186, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__clockid_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__clockid_t

 predicate dynamic_invariant #"s-osinte.ads" 522 0 0# "inline" 
   (temp___expr_715 : int) (temp___is_init_712 : bool) (temp___do_constant_713 : bool) (temp___do_toplevel_714 : bool)  =
  (if (( temp___is_init_712 \/ (System__os_interface__clockid_t.first <= System__os_interface__clockid_t.last) )) then (
   (System__os_interface__clockid_t.dynamic_property System__os_interface__clockid_t.first System__os_interface__clockid_t.last temp___expr_715)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 186 0 0# "inline" 
   (temp___716 : int) (temp___717 : bool)  =
  true

end

(* Module giving axioms for type "Tint32_tB" defined at s-osinte.ads:516, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__Tint32_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Tpid_tB" defined at s-osinte.ads:518, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__Tpid_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "pid_t" defined at s-osinte.ads:518, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pid_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__pid_t

 predicate dynamic_invariant #"s-osinte.ads" 186 0 0# "inline" 
   (temp___expr_721 : int) (temp___is_init_718 : bool) (temp___do_constant_719 : bool) (temp___do_toplevel_720 : bool)  =
  (if (( temp___is_init_718 \/ (System__os_interface__pid_t.first <= System__os_interface__pid_t.last) )) then (
   (System__os_interface__pid_t.dynamic_property System__os_interface__pid_t.first System__os_interface__pid_t.last temp___expr_721)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 518 0 0# "inline" 
   (temp___722 : int) (temp___723 : bool)  =
  true

end

(* Module giving axioms for type "Tpthread_tB" defined at s-osinte.ads:561, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__Tpthread_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "pthread_t" defined at s-osinte.ads:561, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_t___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__os_interface__pthread_t

 predicate dynamic_invariant #"s-osinte.ads" 518 0 0# "inline" 
   (temp___expr_727 : BV64.t) (temp___is_init_724 : bool) (temp___do_constant_725 : bool) (temp___do_toplevel_726 : bool)  =
  (if (( temp___is_init_724 \/ (BV64.ule System__os_interface__pthread_t.first System__os_interface__pthread_t.last) )) then (
   (System__os_interface__pthread_t.dynamic_property System__os_interface__pthread_t.first System__os_interface__pthread_t.last temp___expr_727)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 561 0 0# "inline" 
   (temp___728 : BV64.t) (temp___729 : bool)  =
  true

end

(* Module giving axioms for type "thread_id" defined at s-osinte.ads:244, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__thread_id___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "padding" defined at s-osinte.ads:424, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__padding___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__int
 use        System__os_interface__padding

 predicate dynamic_invariant #"s-osinte.ads" 561 0 0# "inline" 
   (temp___expr_733 : System__os_interface__padding.padding) (temp___is_init_730 : bool) (temp___do_constant_731 : bool) (temp___do_toplevel_732 : bool)  =
  (if (temp___do_constant_731) then (
   true) else (
   (System__os_interface__padding.dynamic_property System__os_interface__int.first System__os_interface__int.last (System__os_interface__padding.first temp___expr_733) (System__os_interface__padding.last temp___expr_733))))

end

(* Module giving axioms for type "T113s" defined at s-osinte.ads:577, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_mutex_t__T113s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T114s" defined at s-osinte.ads:577, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_mutex_t__T114s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "pthread_mutex_t" defined at s-osinte.ads:575, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_mutex_t___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__pthread_mutex_t

 predicate dynamic_invariant #"s-osinte.ads" 424 0 0# "inline" 
   (temp___expr_738 : System__os_interface__pthread_mutex_t.pthread_mutex_t) (temp___is_init_735 : bool) (temp___do_constant_736 : bool) (temp___do_toplevel_737 : bool)  =
  true
 
 predicate default_initial_assumption #"s-osinte.ads" 575 0 0# "inline" 
   (temp___740 : System__os_interface__pthread_mutex_t.pthread_mutex_t) (temp___741 : bool)  =
  true

end

(* Module giving axioms for type "T117s" defined at s-osinte.ads:589, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_cond_t__T117s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T118s" defined at s-osinte.ads:589, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_cond_t__T118s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "pthread_cond_t" defined at s-osinte.ads:587, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_cond_t___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__pthread_cond_t

 predicate dynamic_invariant #"s-osinte.ads" 575 0 0# "inline" 
   (temp___expr_749 : System__os_interface__pthread_cond_t.pthread_cond_t) (temp___is_init_746 : bool) (temp___do_constant_747 : bool) (temp___do_toplevel_748 : bool)  =
  true
 
 predicate default_initial_assumption #"s-osinte.ads" 587 0 0# "inline" 
   (temp___751 : System__os_interface__pthread_cond_t.pthread_cond_t) (temp___752 : bool)  =
  true

end

(* Module giving axioms for type "T109s" defined at s-osinte.ads:565, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_attr_t__T109s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T110s" defined at s-osinte.ads:565, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_attr_t__T110s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "pthread_attr_t" defined at s-osinte.ads:563, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_attr_t___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__pthread_attr_t

 predicate dynamic_invariant #"s-osinte.ads" 587 0 0# "inline" 
   (temp___expr_760 : System__os_interface__pthread_attr_t.pthread_attr_t) (temp___is_init_757 : bool) (temp___do_constant_758 : bool) (temp___do_toplevel_759 : bool)  =
  true
 
 predicate default_initial_assumption #"s-osinte.ads" 563 0 0# "inline" 
   (temp___762 : System__os_interface__pthread_attr_t.pthread_attr_t) (temp___763 : bool)  =
  true

end

(* Module giving axioms for type "T111s" defined at s-osinte.ads:571, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_mutexattr_t__T111s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T112s" defined at s-osinte.ads:571, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_mutexattr_t__T112s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "pthread_mutexattr_t" defined at s-osinte.ads:569, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_mutexattr_t___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__pthread_mutexattr_t

 predicate dynamic_invariant #"s-osinte.ads" 563 0 0# "inline" 
   (temp___expr_771 : System__os_interface__pthread_mutexattr_t.pthread_mutexattr_t) (temp___is_init_768 : bool) (temp___do_constant_769 : bool) (temp___do_toplevel_770 : bool)  =
  true
 
 predicate default_initial_assumption #"s-osinte.ads" 569 0 0# "inline" 
   (temp___773 : System__os_interface__pthread_mutexattr_t.pthread_mutexattr_t) (temp___774 : bool)  =
  true

end

(* Module giving axioms for type "T115s" defined at s-osinte.ads:583, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_condattr_t__T115s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T116s" defined at s-osinte.ads:583, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_condattr_t__T116s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "pthread_condattr_t" defined at s-osinte.ads:581, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_condattr_t___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__pthread_condattr_t

 predicate dynamic_invariant #"s-osinte.ads" 569 0 0# "inline" 
   (temp___expr_782 : System__os_interface__pthread_condattr_t.pthread_condattr_t) (temp___is_init_779 : bool) (temp___do_constant_780 : bool) (temp___do_toplevel_781 : bool)  =
  true
 
 predicate default_initial_assumption #"s-osinte.ads" 581 0 0# "inline" 
   (temp___784 : System__os_interface__pthread_condattr_t.pthread_condattr_t) (temp___785 : bool)  =
  true

end

(* Module giving axioms for type "Tpthread_key_tB" defined at s-osinte.ads:599, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__Tpthread_key_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "pthread_key_t" defined at s-osinte.ads:599, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_key_t___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__os_interface__pthread_key_t

 predicate dynamic_invariant #"s-osinte.ads" 581 0 0# "inline" 
   (temp___expr_793 : BV64.t) (temp___is_init_790 : bool) (temp___do_constant_791 : bool) (temp___do_toplevel_792 : bool)  =
  (if (( temp___is_init_790 \/ (BV64.ule System__os_interface__pthread_key_t.first System__os_interface__pthread_key_t.last) )) then (
   (System__os_interface__pthread_key_t.dynamic_property System__os_interface__pthread_key_t.first System__os_interface__pthread_key_t.last temp___expr_793)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 599 0 0# "inline" 
   (temp___794 : BV64.t) (temp___795 : bool)  =
  true

end

(* Module giving axioms for type "pthread_rwlock_t" defined at s-osinte.ads:266, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_rwlock_t___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "pthread_rwlockattr_t" defined at s-osinte.ads:267, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_rwlockattr_t___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T79s" defined at s-osinte.ads:428, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__struct_sched_param__T79s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T80s" defined at s-osinte.ads:428, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__struct_sched_param__T80s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "struct_sched_param" defined at s-osinte.ads:426, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__struct_sched_param___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__struct_sched_param

 predicate dynamic_invariant #"s-osinte.ads" 599 0 0# "inline" 
   (temp___expr_799 : System__os_interface__struct_sched_param.struct_sched_param) (temp___is_init_796 : bool) (temp___do_constant_797 : bool) (temp___do_toplevel_798 : bool)  =
  true
 
 predicate default_initial_assumption #"s-osinte.ads" 426 0 0# "inline" 
   (temp___801 : System__os_interface__struct_sched_param.struct_sched_param) (temp___802 : bool)  =
  true

end

(* Module giving axioms for type "int32_t" defined at s-osinte.ads:516, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__int32_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__int32_t

 predicate dynamic_invariant #"s-osinte.ads" 426 0 0# "inline" 
   (temp___expr_810 : int) (temp___is_init_807 : bool) (temp___do_constant_808 : bool) (temp___do_toplevel_809 : bool)  =
  (if (( temp___is_init_807 \/ (System__os_interface__int32_t.first <= System__os_interface__int32_t.last) )) then (
   (System__os_interface__int32_t.dynamic_property System__os_interface__int32_t.first System__os_interface__int32_t.last temp___expr_810)) else true)
 
 predicate default_initial_assumption #"s-osinte.ads" 516 0 0# "inline" 
   (temp___811 : int) (temp___812 : bool)  =
  true

end

(* Module giving axioms for type "T119s" defined at s-osinte.ads:595, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_once_t__T119s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T120s" defined at s-osinte.ads:595, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_once_t__T120s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "pthread_once_t" defined at s-osinte.ads:593, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_interface__pthread_once_t___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__pthread_once_t

 predicate dynamic_invariant #"s-osinte.ads" 516 0 0# "inline" 
   (temp___expr_816 : System__os_interface__pthread_once_t.pthread_once_t) (temp___is_init_813 : bool) (temp___do_constant_814 : bool) (temp___do_toplevel_815 : bool)  =
  true
 
 predicate default_initial_assumption #"s-osinte.ads" 593 0 0# "inline" 
   (temp___818 : System__os_interface__pthread_once_t.pthread_once_t) (temp___819 : bool)  =
  true

end

(* Module giving axioms for type "lock" defined at s-taspri.ads:75, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__task_primitives__lock___axiom
 use import "_gnatprove_standard".Main
 use        System__task_primitives__lock

 predicate dynamic_invariant #"s-osinte.ads" 593 0 0# "inline" 
   (temp___expr_827 : System__task_primitives__lock.lock) (temp___is_init_824 : bool) (temp___do_constant_825 : bool) (temp___do_toplevel_826 : bool)  =
  true
 
 predicate default_initial_assumption #"s-taspri.ads" 75 0 0# "inline" 
   (temp___830 : System__task_primitives__lock.lock) (temp___831 : bool)  =
  true

end

(* Module giving axioms for type "suspension_object" defined at s-taspri.ads:82, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__task_primitives__suspension_object___axiom
 use import "_gnatprove_standard".Main
 use        System__task_primitives__suspension_object

 predicate dynamic_invariant #"s-taspri.ads" 75 0 0# "inline" 
   (temp___expr_845 : System__task_primitives__suspension_object.suspension_object) (temp___is_init_842 : bool) (temp___do_constant_843 : bool) (temp___do_toplevel_844 : bool)  =
  true
 
 predicate default_initial_assumption #"s-taspri.ads" 82 0 0# "inline" 
   (temp___848 : System__task_primitives__suspension_object.suspension_object) (temp___849 : bool)  =
  true

end

(* Module giving axioms for type "private_data" defined at s-taspri.ads:99, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__task_primitives__private_data___axiom
 use import "_gnatprove_standard".Main
 use        System__task_primitives__private_data

 predicate dynamic_invariant #"s-taspri.ads" 82 0 0# "inline" 
   (temp___expr_865 : System__task_primitives__private_data.private_data) (temp___is_init_862 : bool) (temp___do_constant_863 : bool) (temp___do_toplevel_864 : bool)  =
  true
 
 predicate default_initial_assumption #"s-taspri.ads" 99 0 0# "inline" 
   (temp___868 : System__task_primitives__private_data.private_data) (temp___869 : bool)  =
  true

end

(* Module giving axioms for type "task_address" defined at s-taspri.ads:66, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__task_primitives__task_address___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "stack_address" defined at s-stausa.ads:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__stack_usage__stack_address___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__stack_usage__stack_address

 predicate dynamic_invariant #"s-taspri.ads" 99 0 0# "inline" 
   (temp___expr_885 : BV64.t) (temp___is_init_882 : bool) (temp___do_constant_883 : bool) (temp___do_toplevel_884 : bool)  =
  (if (( temp___is_init_882 \/ (BV64.ule System__stack_usage__stack_address.first System__stack_usage__stack_address.last) )) then (
   (System__stack_usage__stack_address.dynamic_property System__stack_usage__stack_address.first System__stack_usage__stack_address.last temp___expr_885)) else true)
 
 predicate default_initial_assumption #"s-stausa.ads" 42 0 0# "inline" 
   (temp___886 : BV64.t) (temp___887 : bool)  =
  true

end

(* Module giving axioms for type "T1s" defined at s-stausa.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__stack_usage__task_result__T1s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T2s" defined at s-stausa.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__stack_usage__task_result__T2s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "task_result" defined at s-stausa.ads:53, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__stack_usage__task_result___axiom
 use import "_gnatprove_standard".Main
 use        System__stack_usage__task_result

 predicate dynamic_invariant #"s-stausa.ads" 42 0 0# "inline" 
   (temp___expr_891 : System__stack_usage__task_result.task_result) (temp___is_init_888 : bool) (temp___do_constant_889 : bool) (temp___do_toplevel_890 : bool)  =
  true
 
 predicate default_initial_assumption #"s-stausa.ads" 53 0 0# "inline" 
   (temp___893 : System__stack_usage__task_result.task_result) (temp___894 : bool)  =
  true

end

(* Module giving axioms for type "result_array_type" defined at s-stausa.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__stack_usage__result_array_type___axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        System__stack_usage__result_array_type

 predicate dynamic_invariant #"s-stausa.ads" 53 0 0# "inline" 
   (temp___expr_903 : System__stack_usage__result_array_type.result_array_type) (temp___is_init_900 : bool) (temp___do_constant_901 : bool) (temp___do_toplevel_902 : bool)  =
  (if (temp___do_constant_901) then (
   true) else (
   (System__stack_usage__result_array_type.dynamic_property Standard__positive.first Standard__positive.last (System__stack_usage__result_array_type.first temp___expr_903) (System__stack_usage__result_array_type.last temp___expr_903))))

end

(* Module giving axioms for type "T8s" defined at s-stausa.ads:283, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__stack_usage__stack_analyzer__T8s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T9s" defined at s-stausa.ads:283, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__stack_usage__stack_analyzer__T9s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "pattern_type" defined at s-stausa.ads:279, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__stack_usage__pattern_type___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__stack_usage__pattern_type

 predicate dynamic_invariant #"s-stausa.ads" 64 0 0# "inline" 
   (temp___expr_909 : BV32.t) (temp___is_init_906 : bool) (temp___do_constant_907 : bool) (temp___do_toplevel_908 : bool)  =
  (if (( temp___is_init_906 \/ (BV32.ule System__stack_usage__pattern_type.first System__stack_usage__pattern_type.last) )) then (
   (System__stack_usage__pattern_type.dynamic_property System__stack_usage__pattern_type.first System__stack_usage__pattern_type.last temp___expr_909)) else true)
 
 predicate default_initial_assumption #"s-stausa.ads" 279 0 0# "inline" 
   (temp___910 : BV32.t) (temp___911 : bool)  =
  true

end

(* Module giving axioms for type "stack_analyzer" defined at s-stausa.ads:282, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__stack_usage__stack_analyzer___axiom
 use import "_gnatprove_standard".Main
 use        System__stack_usage__stack_analyzer

 predicate dynamic_invariant #"s-stausa.ads" 279 0 0# "inline" 
   (temp___expr_915 : System__stack_usage__stack_analyzer.stack_analyzer) (temp___is_init_912 : bool) (temp___do_constant_913 : bool) (temp___do_toplevel_914 : bool)  =
  true
 
 predicate default_initial_assumption #"s-stausa.ads" 282 0 0# "inline" 
   (temp___917 : System__stack_usage__stack_analyzer.stack_analyzer) (temp___918 : bool)  =
  true

end

(* Module giving axioms for type "object" defined at s-atacco.ads:37 instantiated at s-stausa.ads:276, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__stack_usage__unsigned_32_addr__object___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__stack_usage__unsigned_32_addr__object

 predicate dynamic_invariant #"s-stausa.ads" 282 0 0# "inline" 
   (temp___expr_933 : BV32.t) (temp___is_init_930 : bool) (temp___do_constant_931 : bool) (temp___do_toplevel_932 : bool)  =
  (if (( temp___is_init_930 \/ (BV32.ule System__stack_usage__unsigned_32_addr__object.first System__stack_usage__unsigned_32_addr__object.last) )) then (
   (System__stack_usage__unsigned_32_addr__object.dynamic_property System__stack_usage__unsigned_32_addr__object.first System__stack_usage__unsigned_32_addr__object.last temp___expr_933)) else true)
 
 predicate default_initial_assumption #"s-atacco.ads" 37 0 0# "inline" 
   (temp___934 : BV32.t) (temp___935 : bool)  =
  true

end

(* Module giving axioms for type "Tcpu_rangeB" defined at s-multip.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__multiprocessors__Tcpu_rangeB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "cpu_range" defined at s-multip.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__multiprocessors__cpu_range___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__multiprocessors__cpu_range

 predicate dynamic_invariant #"s-atacco.ads" 37 0 0# "inline" 
   (temp___expr_939 : int) (temp___is_init_936 : bool) (temp___do_constant_937 : bool) (temp___do_toplevel_938 : bool)  =
  (if (( temp___is_init_936 \/ (System__multiprocessors__cpu_range.first <= System__multiprocessors__cpu_range.last) )) then (
   (System__multiprocessors__cpu_range.dynamic_property System__multiprocessors__cpu_range.first System__multiprocessors__cpu_range.last temp___expr_939)) else true)
 
 predicate default_initial_assumption #"s-multip.ads" 19 0 0# "inline" 
   (temp___940 : int) (temp___941 : bool)  =
  true

end

(* Module giving axioms for type "cpu" defined at s-multip.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__multiprocessors__cpu___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__multiprocessors__cpu

 predicate dynamic_invariant #"s-multip.ads" 19 0 0# "inline" 
   (temp___expr_945 : int) (temp___is_init_942 : bool) (temp___do_constant_943 : bool) (temp___do_toplevel_944 : bool)  =
  (if (( temp___is_init_942 \/ (System__multiprocessors__cpu.first <= System__multiprocessors__cpu.last) )) then (
   (System__multiprocessors__cpu.dynamic_property System__multiprocessors__cpu.first System__multiprocessors__cpu.last temp___expr_945)) else true)
 
 predicate default_initial_assumption #"s-multip.ads" 21 0 0# "inline" 
   (temp___946 : int) (temp___947 : bool)  =
  true

end

(* Module giving axioms for type "short_short_unsigned" defined at s-unstyp.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__short_short_unsigned___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        System__unsigned_types__short_short_unsigned

 predicate dynamic_invariant #"s-multip.ads" 21 0 0# "inline" 
   (temp___expr_951 : BV8.t) (temp___is_init_948 : bool) (temp___do_constant_949 : bool) (temp___do_toplevel_950 : bool)  =
  (if (( temp___is_init_948 \/ (BV8.ule System__unsigned_types__short_short_unsigned.first System__unsigned_types__short_short_unsigned.last) )) then (
   (System__unsigned_types__short_short_unsigned.dynamic_property System__unsigned_types__short_short_unsigned.first System__unsigned_types__short_short_unsigned.last temp___expr_951)) else true)
 
 predicate default_initial_assumption #"s-unstyp.ads" 44 0 0# "inline" 
   (temp___952 : BV8.t) (temp___953 : bool)  =
  true

end

(* Module giving axioms for type "short_unsigned" defined at s-unstyp.ads:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__short_unsigned___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        System__unsigned_types__short_unsigned

 predicate dynamic_invariant #"s-unstyp.ads" 44 0 0# "inline" 
   (temp___expr_957 : BV16.t) (temp___is_init_954 : bool) (temp___do_constant_955 : bool) (temp___do_toplevel_956 : bool)  =
  (if (( temp___is_init_954 \/ (BV16.ule System__unsigned_types__short_unsigned.first System__unsigned_types__short_unsigned.last) )) then (
   (System__unsigned_types__short_unsigned.dynamic_property System__unsigned_types__short_unsigned.first System__unsigned_types__short_unsigned.last temp___expr_957)) else true)
 
 predicate default_initial_assumption #"s-unstyp.ads" 45 0 0# "inline" 
   (temp___958 : BV16.t) (temp___959 : bool)  =
  true

end

(* Module giving axioms for type "unsigned" defined at s-unstyp.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__unsigned___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__unsigned_types__unsigned

 predicate dynamic_invariant #"s-unstyp.ads" 45 0 0# "inline" 
   (temp___expr_963 : BV32.t) (temp___is_init_960 : bool) (temp___do_constant_961 : bool) (temp___do_toplevel_962 : bool)  =
  (if (( temp___is_init_960 \/ (BV32.ule System__unsigned_types__unsigned.first System__unsigned_types__unsigned.last) )) then (
   (System__unsigned_types__unsigned.dynamic_property System__unsigned_types__unsigned.first System__unsigned_types__unsigned.last temp___expr_963)) else true)
 
 predicate default_initial_assumption #"s-unstyp.ads" 46 0 0# "inline" 
   (temp___964 : BV32.t) (temp___965 : bool)  =
  true

end

(* Module giving axioms for type "long_unsigned" defined at s-unstyp.ads:47, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__long_unsigned___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__unsigned_types__long_unsigned

 predicate dynamic_invariant #"s-unstyp.ads" 46 0 0# "inline" 
   (temp___expr_969 : BV64.t) (temp___is_init_966 : bool) (temp___do_constant_967 : bool) (temp___do_toplevel_968 : bool)  =
  (if (( temp___is_init_966 \/ (BV64.ule System__unsigned_types__long_unsigned.first System__unsigned_types__long_unsigned.last) )) then (
   (System__unsigned_types__long_unsigned.dynamic_property System__unsigned_types__long_unsigned.first System__unsigned_types__long_unsigned.last temp___expr_969)) else true)
 
 predicate default_initial_assumption #"s-unstyp.ads" 47 0 0# "inline" 
   (temp___970 : BV64.t) (temp___971 : bool)  =
  true

end

(* Module giving axioms for type "long_long_unsigned" defined at s-unstyp.ads:48, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__long_long_unsigned___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__unsigned_types__long_long_unsigned

 predicate dynamic_invariant #"s-unstyp.ads" 47 0 0# "inline" 
   (temp___expr_975 : BV64.t) (temp___is_init_972 : bool) (temp___do_constant_973 : bool) (temp___do_toplevel_974 : bool)  =
  (if (( temp___is_init_972 \/ (BV64.ule System__unsigned_types__long_long_unsigned.first System__unsigned_types__long_long_unsigned.last) )) then (
   (System__unsigned_types__long_long_unsigned.dynamic_property System__unsigned_types__long_long_unsigned.first System__unsigned_types__long_long_unsigned.last temp___expr_975)) else true)
 
 predicate default_initial_assumption #"s-unstyp.ads" 48 0 0# "inline" 
   (temp___976 : BV64.t) (temp___977 : bool)  =
  true

end

(* Module giving axioms for type "float_unsigned" defined at s-unstyp.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__float_unsigned___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__unsigned_types__float_unsigned

 predicate dynamic_invariant #"s-unstyp.ads" 48 0 0# "inline" 
   (temp___expr_981 : BV32.t) (temp___is_init_978 : bool) (temp___do_constant_979 : bool) (temp___do_toplevel_980 : bool)  =
  (if (( temp___is_init_978 \/ (BV32.ule System__unsigned_types__float_unsigned.first System__unsigned_types__float_unsigned.last) )) then (
   (System__unsigned_types__float_unsigned.dynamic_property System__unsigned_types__float_unsigned.first System__unsigned_types__float_unsigned.last temp___expr_981)) else true)
 
 predicate default_initial_assumption #"s-unstyp.ads" 50 0 0# "inline" 
   (temp___982 : BV32.t) (temp___983 : bool)  =
  true

end

(* Module giving axioms for type "packed_byte" defined at s-unstyp.ads:53, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__packed_byte___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        System__unsigned_types__packed_byte

 predicate dynamic_invariant #"s-unstyp.ads" 50 0 0# "inline" 
   (temp___expr_987 : BV8.t) (temp___is_init_984 : bool) (temp___do_constant_985 : bool) (temp___do_toplevel_986 : bool)  =
  (if (( temp___is_init_984 \/ (BV8.ule System__unsigned_types__packed_byte.first System__unsigned_types__packed_byte.last) )) then (
   (System__unsigned_types__packed_byte.dynamic_property System__unsigned_types__packed_byte.first System__unsigned_types__packed_byte.last temp___expr_987)) else true)
 
 predicate default_initial_assumption #"s-unstyp.ads" 53 0 0# "inline" 
   (temp___988 : BV8.t) (temp___989 : bool)  =
  true

end

(* Module giving axioms for type "packed_bytes1" defined at s-unstyp.ads:60, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__packed_bytes1___axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        System__unsigned_types__packed_bytes1

 predicate dynamic_invariant #"s-unstyp.ads" 53 0 0# "inline" 
   (temp___expr_993 : System__unsigned_types__packed_bytes1.packed_bytes1) (temp___is_init_990 : bool) (temp___do_constant_991 : bool) (temp___do_toplevel_992 : bool)  =
  (if (temp___do_constant_991) then (
   true) else (
   (System__unsigned_types__packed_bytes1.dynamic_property Standard__natural.first Standard__natural.last (System__unsigned_types__packed_bytes1.first temp___expr_993) (System__unsigned_types__packed_bytes1.last temp___expr_993))))

end

(* Module giving axioms for type "packed_bytes2" defined at s-unstyp.ads:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__packed_bytes2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        System__unsigned_types__packed_bytes2

 predicate dynamic_invariant #"s-unstyp.ads" 60 0 0# "inline" 
   (temp___expr_998 : System__unsigned_types__packed_bytes2.packed_bytes2) (temp___is_init_995 : bool) (temp___do_constant_996 : bool) (temp___do_toplevel_997 : bool)  =
  (if (temp___do_constant_996) then (
   true) else (
   (System__unsigned_types__packed_bytes2.dynamic_property Standard__natural.first Standard__natural.last (System__unsigned_types__packed_bytes2.first temp___expr_998) (System__unsigned_types__packed_bytes2.last temp___expr_998))))

end

(* Module giving axioms for type "packed_bytes4" defined at s-unstyp.ads:81, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__packed_bytes4___axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        System__unsigned_types__packed_bytes4

 predicate dynamic_invariant #"s-unstyp.ads" 70 0 0# "inline" 
   (temp___expr_1003 : System__unsigned_types__packed_bytes4.packed_bytes4) (temp___is_init_1000 : bool) (temp___do_constant_1001 : bool) (temp___do_toplevel_1002 : bool)  =
  (if (temp___do_constant_1001) then (
   true) else (
   (System__unsigned_types__packed_bytes4.dynamic_property Standard__natural.first Standard__natural.last (System__unsigned_types__packed_bytes4.first temp___expr_1003) (System__unsigned_types__packed_bytes4.last temp___expr_1003))))

end

(* Module giving axioms for type "bits_1" defined at s-unstyp.ads:92, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__bits_1___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        System__unsigned_types__bits_1

 predicate dynamic_invariant #"s-unstyp.ads" 81 0 0# "inline" 
   (temp___expr_1008 : BV8.t) (temp___is_init_1005 : bool) (temp___do_constant_1006 : bool) (temp___do_toplevel_1007 : bool)  =
  (if (( temp___is_init_1005 \/ (BV8.ule System__unsigned_types__bits_1.first System__unsigned_types__bits_1.last) )) then (
   (System__unsigned_types__bits_1.dynamic_property System__unsigned_types__bits_1.first System__unsigned_types__bits_1.last temp___expr_1008)) else true)
 
 predicate default_initial_assumption #"s-unstyp.ads" 92 0 0# "inline" 
   (temp___1009 : BV8.t) (temp___1010 : bool)  =
  true

end

(* Module giving axioms for type "bits_2" defined at s-unstyp.ads:93, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__bits_2___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        System__unsigned_types__bits_2

 predicate dynamic_invariant #"s-unstyp.ads" 92 0 0# "inline" 
   (temp___expr_1014 : BV8.t) (temp___is_init_1011 : bool) (temp___do_constant_1012 : bool) (temp___do_toplevel_1013 : bool)  =
  (if (( temp___is_init_1011 \/ (BV8.ule System__unsigned_types__bits_2.first System__unsigned_types__bits_2.last) )) then (
   (System__unsigned_types__bits_2.dynamic_property System__unsigned_types__bits_2.first System__unsigned_types__bits_2.last temp___expr_1014)) else true)
 
 predicate default_initial_assumption #"s-unstyp.ads" 93 0 0# "inline" 
   (temp___1015 : BV8.t) (temp___1016 : bool)  =
  true

end

(* Module giving axioms for type "bits_4" defined at s-unstyp.ads:94, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__bits_4___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        System__unsigned_types__bits_4

 predicate dynamic_invariant #"s-unstyp.ads" 93 0 0# "inline" 
   (temp___expr_1020 : BV8.t) (temp___is_init_1017 : bool) (temp___do_constant_1018 : bool) (temp___do_toplevel_1019 : bool)  =
  (if (( temp___is_init_1017 \/ (BV8.ule System__unsigned_types__bits_4.first System__unsigned_types__bits_4.last) )) then (
   (System__unsigned_types__bits_4.dynamic_property System__unsigned_types__bits_4.first System__unsigned_types__bits_4.last temp___expr_1020)) else true)
 
 predicate default_initial_assumption #"s-unstyp.ads" 94 0 0# "inline" 
   (temp___1021 : BV8.t) (temp___1022 : bool)  =
  true

end

(* Module giving axioms for type "Tbytes_fP1" defined at s-unstyp.ads:97, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__Tbytes_fP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "bytes_f" defined at s-unstyp.ads:97, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__bytes_f___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__System__unsigned_types__packed_byte
 use        Array__Int__System__unsigned_types__packed_byte

 predicate dynamic_invariant #"s-unstyp.ads" 94 0 0# "inline" 
   (temp___expr_1026 : Array__Int__System__unsigned_types__packed_byte.map) (temp___is_init_1023 : bool) (temp___do_constant_1024 : bool) (temp___do_toplevel_1025 : bool)  =
  true
 
 predicate default_initial_assumption #"s-unstyp.ads" 97 0 0# "inline" 
   (temp___1028 : Array__Int__System__unsigned_types__packed_byte.map) (temp___1029 : bool)  =
  true

end

(* Module giving axioms for type "packed_bytes" defined at s-unstyp.ads:212, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__packed_bytes___axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        System__unsigned_types__packed_bytes

 predicate dynamic_invariant #"s-unstyp.ads" 97 0 0# "inline" 
   (temp___expr_1035 : System__unsigned_types__packed_bytes.packed_bytes) (temp___is_init_1032 : bool) (temp___do_constant_1033 : bool) (temp___do_toplevel_1034 : bool)  =
  (if (temp___do_constant_1033) then (
   true) else (
   (System__unsigned_types__packed_bytes.dynamic_property Standard__natural.first Standard__natural.last (System__unsigned_types__packed_bytes.first temp___expr_1035) (System__unsigned_types__packed_bytes.last temp___expr_1035))))

end

(* Module giving axioms for type "packed_bytes_unaligned" defined at s-unstyp.ads:213, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__unsigned_types__packed_bytes_unaligned___axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        System__unsigned_types__packed_bytes_unaligned

 predicate dynamic_invariant #"s-unstyp.ads" 212 0 0# "inline" 
   (temp___expr_1040 : System__unsigned_types__packed_bytes_unaligned.packed_bytes_unaligned) (temp___is_init_1037 : bool) (temp___do_constant_1038 : bool) (temp___do_toplevel_1039 : bool)  =
  (if (temp___do_constant_1038) then (
   true) else (
   (System__unsigned_types__packed_bytes_unaligned.dynamic_property Standard__natural.first Standard__natural.last (System__unsigned_types__packed_bytes_unaligned.first temp___expr_1040) (System__unsigned_types__packed_bytes_unaligned.last temp___expr_1040))))

end

(* Module giving axioms for type "source" defined at a-unccon.ads:17 instantiated at s-taskin.ads:121, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__to_task_idGP5638__source___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "target" defined at a-unccon.ads:18 instantiated at s-taskin.ads:124, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__to_addressGP5753__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "task_states" defined at s-taskin.ads:132, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__task_states___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__task_states

 predicate dynamic_invariant #"s-unstyp.ads" 213 0 0# "inline" 
   (temp___expr_1045 : int) (temp___is_init_1042 : bool) (temp___do_constant_1043 : bool) (temp___do_toplevel_1044 : bool)  =
  (if (( temp___is_init_1042 \/ (System__tasking__task_states.first <= System__tasking__task_states.last) )) then (
   (System__tasking__task_states.dynamic_property System__tasking__task_states.first System__tasking__task_states.last temp___expr_1045)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 132 0 0# "inline" 
   (temp___1046 : int) (temp___1047 : bool)  =
  true

end

(* Module giving axioms for type "call_modes" defined at s-taskin.ads:212, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__call_modes___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__call_modes

 predicate dynamic_invariant #"s-taskin.ads" 132 0 0# "inline" 
   (temp___expr_1051 : int) (temp___is_init_1048 : bool) (temp___do_constant_1049 : bool) (temp___do_toplevel_1050 : bool)  =
  (if (( temp___is_init_1048 \/ (System__tasking__call_modes.first <= System__tasking__call_modes.last) )) then (
   (System__tasking__call_modes.dynamic_property System__tasking__call_modes.first System__tasking__call_modes.last temp___expr_1051)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 212 0 0# "inline" 
   (temp___1052 : int) (temp___1053 : bool)  =
  true

end

(* Module giving axioms for type "select_modes" defined at s-taskin.ads:215, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__select_modes___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__select_modes

 predicate dynamic_invariant #"s-taskin.ads" 212 0 0# "inline" 
   (temp___expr_1057 : int) (temp___is_init_1054 : bool) (temp___do_constant_1055 : bool) (temp___do_toplevel_1056 : bool)  =
  (if (( temp___is_init_1054 \/ (System__tasking__select_modes.first <= System__tasking__select_modes.last) )) then (
   (System__tasking__select_modes.dynamic_property System__tasking__select_modes.first System__tasking__select_modes.last temp___expr_1057)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 215 0 0# "inline" 
   (temp___1058 : int) (temp___1059 : bool)  =
  true

end

(* Module giving axioms for type "delay_modes" defined at s-taskin.ads:217, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__delay_modes___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__delay_modes

 predicate dynamic_invariant #"s-taskin.ads" 215 0 0# "inline" 
   (temp___expr_1063 : int) (temp___is_init_1060 : bool) (temp___do_constant_1061 : bool) (temp___do_toplevel_1062 : bool)  =
  (if (( temp___is_init_1060 \/ (System__tasking__delay_modes.first <= System__tasking__delay_modes.last) )) then (
   (System__tasking__delay_modes.dynamic_property System__tasking__delay_modes.first System__tasking__delay_modes.last temp___expr_1063)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 217 0 0# "inline" 
   (temp___1064 : int) (temp___1065 : bool)  =
  true

end

(* Module giving axioms for type "Tentry_indexB" defined at s-taskin.ads:231, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__Tentry_indexB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "entry_index" defined at s-taskin.ads:231, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__entry_index___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__entry_index

 predicate dynamic_invariant #"s-taskin.ads" 217 0 0# "inline" 
   (temp___expr_1069 : int) (temp___is_init_1066 : bool) (temp___do_constant_1067 : bool) (temp___do_toplevel_1068 : bool)  =
  (if (( temp___is_init_1066 \/ (System__tasking__entry_index.first <= System__tasking__entry_index.last) )) then (
   (System__tasking__entry_index.dynamic_property System__tasking__entry_index.first System__tasking__entry_index.last temp___expr_1069)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 231 0 0# "inline" 
   (temp___1070 : int) (temp___1071 : bool)  =
  true

end

(* Module giving axioms for type "Ttask_entry_indexB" defined at s-taskin.ads:237, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__Ttask_entry_indexB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "task_entry_index" defined at s-taskin.ads:237, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__task_entry_index___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__task_entry_index

 predicate dynamic_invariant #"s-taskin.ads" 231 0 0# "inline" 
   (temp___expr_1075 : int) (temp___is_init_1072 : bool) (temp___do_constant_1073 : bool) (temp___do_toplevel_1074 : bool)  =
  (if (( temp___is_init_1072 \/ (System__tasking__task_entry_index.first <= System__tasking__task_entry_index.last) )) then (
   (System__tasking__task_entry_index.dynamic_property System__tasking__task_entry_index.first System__tasking__task_entry_index.last temp___expr_1075)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 237 0 0# "inline" 
   (temp___1076 : int) (temp___1077 : bool)  =
  true

end

(* Module giving axioms for type "entry_call_state" defined at s-taskin.ads:261, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__entry_call_state___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__entry_call_state

 predicate dynamic_invariant #"s-taskin.ads" 237 0 0# "inline" 
   (temp___expr_1081 : int) (temp___is_init_1078 : bool) (temp___do_constant_1079 : bool) (temp___do_toplevel_1080 : bool)  =
  (if (( temp___is_init_1078 \/ (System__tasking__entry_call_state.first <= System__tasking__entry_call_state.last) )) then (
   (System__tasking__entry_call_state.dynamic_property System__tasking__entry_call_state.first System__tasking__entry_call_state.last temp___expr_1081)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 261 0 0# "inline" 
   (temp___1082 : int) (temp___1083 : bool)  =
  true

end

(* Module giving axioms for type "cause_of_termination" defined at s-taskin.ads:352, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__cause_of_termination___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__cause_of_termination

 predicate dynamic_invariant #"s-taskin.ads" 261 0 0# "inline" 
   (temp___expr_1087 : int) (temp___is_init_1084 : bool) (temp___do_constant_1085 : bool) (temp___do_toplevel_1086 : bool)  =
  (if (( temp___is_init_1084 \/ (System__tasking__cause_of_termination.first <= System__tasking__cause_of_termination.last) )) then (
   (System__tasking__cause_of_termination.dynamic_property System__tasking__cause_of_termination.first System__tasking__cause_of_termination.last temp___expr_1087)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 352 0 0# "inline" 
   (temp___1088 : int) (temp___1089 : bool)  =
  true

end

(* Module giving axioms for type "dispatching_domain" defined at s-taskin.ads:379, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__dispatching_domain___axiom
 use import "_gnatprove_standard".Main
 use        System__multiprocessors__cpu
 use        System__tasking__dispatching_domain

 predicate dynamic_invariant #"s-taskin.ads" 352 0 0# "inline" 
   (temp___expr_1093 : System__tasking__dispatching_domain.dispatching_domain) (temp___is_init_1090 : bool) (temp___do_constant_1091 : bool) (temp___do_toplevel_1092 : bool)  =
  (if (temp___do_constant_1091) then (
   true) else (
   (System__tasking__dispatching_domain.dynamic_property System__multiprocessors__cpu.first System__multiprocessors__cpu.last (System__tasking__dispatching_domain.first temp___expr_1093) (System__tasking__dispatching_domain.last temp___expr_1093))))

end

(* Module giving axioms for type "array_allocated_tasks" defined at s-taskin.ads:399, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__array_allocated_tasks___axiom
 use import "_gnatprove_standard".Main
 use        System__multiprocessors__cpu
 use        System__tasking__array_allocated_tasks

 predicate dynamic_invariant #"s-taskin.ads" 379 0 0# "inline" 
   (temp___expr_1098 : System__tasking__array_allocated_tasks.array_allocated_tasks) (temp___is_init_1095 : bool) (temp___do_constant_1096 : bool) (temp___do_toplevel_1097 : bool)  =
  (if (temp___do_constant_1096) then (
   true) else (
   (System__tasking__array_allocated_tasks.dynamic_property System__multiprocessors__cpu.first System__multiprocessors__cpu.last (System__tasking__array_allocated_tasks.first temp___expr_1098) (System__tasking__array_allocated_tasks.last temp___expr_1098))))

end

(* Module giving axioms for type "activation_chain" defined at s-taskin.ads:435, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__activation_chain___axiom
 use import "_gnatprove_standard".Main
 use        System__tasking__activation_chain

 predicate dynamic_invariant #"s-taskin.ads" 399 0 0# "inline" 
   (temp___expr_1103 : System__tasking__activation_chain.activation_chain) (temp___is_init_1100 : bool) (temp___do_constant_1101 : bool) (temp___do_toplevel_1102 : bool)  =
  true
 
 predicate default_initial_assumption #"s-taskin.ads" 435 0 0# "inline" 
   (temp___1104 : System__tasking__activation_chain.activation_chain) (temp___1105 : bool)  =
  true

end

(* Module giving axioms for type "bit_array" defined at s-taskin.ads:456, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__bit_array___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        System__tasking__bit_array

 predicate dynamic_invariant #"s-taskin.ads" 435 0 0# "inline" 
   (temp___expr_1109 : System__tasking__bit_array.bit_array) (temp___is_init_1106 : bool) (temp___do_constant_1107 : bool) (temp___do_toplevel_1108 : bool)  =
  (if (temp___do_constant_1107) then (
   true) else (
   (System__tasking__bit_array.dynamic_property Standard__integer.first Standard__integer.last (System__tasking__bit_array.first temp___expr_1109) (System__tasking__bit_array.last temp___expr_1109))))

end

(* Module giving axioms for type "Tdebug_event_arrayP1" defined at s-taskin.ads:459, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__Tdebug_event_arrayP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "debug_event_array" defined at s-taskin.ads:459, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__debug_event_array___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Bool
 use        Array__Int__Bool

 predicate dynamic_invariant #"s-taskin.ads" 456 0 0# "inline" 
   (temp___expr_1114 : Array__Int__Bool.map) (temp___is_init_1111 : bool) (temp___do_constant_1112 : bool) (temp___do_toplevel_1113 : bool)  =
  true
 
 predicate default_initial_assumption #"s-taskin.ads" 459 0 0# "inline" 
   (temp___1116 : Array__Int__Bool.map) (temp___1117 : bool)  =
  true

end

(* Module giving axioms for type "T13s" defined at s-taskin.ads:556, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__common_atcb__T13s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T14s" defined at s-taskin.ads:556, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__common_atcb__T14s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "master_level" defined at s-taskin.ads:757, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__master_level___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__master_level

 predicate dynamic_invariant #"s-taskin.ads" 459 0 0# "inline" 
   (temp___expr_1123 : int) (temp___is_init_1120 : bool) (temp___do_constant_1121 : bool) (temp___do_toplevel_1122 : bool)  =
  (if (( temp___is_init_1120 \/ (System__tasking__master_level.first <= System__tasking__master_level.last) )) then (
   (System__tasking__master_level.dynamic_property System__tasking__master_level.first System__tasking__master_level.last temp___expr_1123)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 757 0 0# "inline" 
   (temp___1124 : int) (temp___1125 : bool)  =
  true

end

(* Module giving axioms for type "master_id" defined at s-taskin.ads:758, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__master_id___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__master_id

 predicate dynamic_invariant #"s-taskin.ads" 757 0 0# "inline" 
   (temp___expr_1129 : int) (temp___is_init_1126 : bool) (temp___do_constant_1127 : bool) (temp___do_toplevel_1128 : bool)  =
  (if (( temp___is_init_1126 \/ (System__tasking__master_id.first <= System__tasking__master_id.last) )) then (
   (System__tasking__master_id.dynamic_property System__tasking__master_id.first System__tasking__master_id.last temp___expr_1129)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 758 0 0# "inline" 
   (temp___1130 : int) (temp___1131 : bool)  =
  true

end

(* Module giving axioms for type "rendezvous_priority" defined at s-taskin.ads:784, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__rendezvous_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__rendezvous_priority

 predicate dynamic_invariant #"s-taskin.ads" 758 0 0# "inline" 
   (temp___expr_1135 : int) (temp___is_init_1132 : bool) (temp___do_constant_1133 : bool) (temp___do_toplevel_1134 : bool)  =
  (if (( temp___is_init_1132 \/ (System__tasking__rendezvous_priority.first <= System__tasking__rendezvous_priority.last) )) then (
   (System__tasking__rendezvous_priority.dynamic_property System__tasking__rendezvous_priority.first System__tasking__rendezvous_priority.last temp___expr_1135)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 784 0 0# "inline" 
   (temp___1136 : int) (temp___1137 : bool)  =
  true

end

(* Module giving axioms for type "select_index" defined at s-taskin.ads:803, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__select_index___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__select_index

 predicate dynamic_invariant #"s-taskin.ads" 784 0 0# "inline" 
   (temp___expr_1141 : int) (temp___is_init_1138 : bool) (temp___do_constant_1139 : bool) (temp___do_toplevel_1140 : bool)  =
  (if (( temp___is_init_1138 \/ (System__tasking__select_index.first <= System__tasking__select_index.last) )) then (
   (System__tasking__select_index.dynamic_property System__tasking__select_index.first System__tasking__select_index.last temp___expr_1141)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 803 0 0# "inline" 
   (temp___1142 : int) (temp___1143 : bool)  =
  true

end

(* Module giving axioms for type "positive_select_index" defined at s-taskin.ads:806, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__positive_select_index___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__positive_select_index

 predicate dynamic_invariant #"s-taskin.ads" 803 0 0# "inline" 
   (temp___expr_1147 : int) (temp___is_init_1144 : bool) (temp___do_constant_1145 : bool) (temp___do_toplevel_1146 : bool)  =
  (if (( temp___is_init_1144 \/ (System__tasking__positive_select_index.first <= System__tasking__positive_select_index.last) )) then (
   (System__tasking__positive_select_index.dynamic_property System__tasking__positive_select_index.first System__tasking__positive_select_index.last temp___expr_1147)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 806 0 0# "inline" 
   (temp___1148 : int) (temp___1149 : bool)  =
  true

end

(* Module giving axioms for type "accept_alternative" defined at s-taskin.ads:809, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__accept_alternative___axiom
 use import "_gnatprove_standard".Main
 use        System__tasking__accept_alternative

 predicate dynamic_invariant #"s-taskin.ads" 806 0 0# "inline" 
   (temp___expr_1153 : System__tasking__accept_alternative.accept_alternative) (temp___is_init_1150 : bool) (temp___do_constant_1151 : bool) (temp___do_toplevel_1152 : bool)  =
  true
 
 predicate default_initial_assumption #"s-taskin.ads" 809 0 0# "inline" 
   (temp___1154 : System__tasking__accept_alternative.accept_alternative) (temp___1155 : bool)  =
  true

end

(* Module giving axioms for type "accept_list" defined at s-taskin.ads:814, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__accept_list___axiom
 use import "_gnatprove_standard".Main
 use        System__tasking__positive_select_index
 use        System__tasking__accept_list

 predicate dynamic_invariant #"s-taskin.ads" 809 0 0# "inline" 
   (temp___expr_1161 : System__tasking__accept_list.accept_list) (temp___is_init_1158 : bool) (temp___do_constant_1159 : bool) (temp___do_toplevel_1160 : bool)  =
  (if (temp___do_constant_1159) then (
   true) else (
   (System__tasking__accept_list.dynamic_property System__tasking__positive_select_index.first System__tasking__positive_select_index.last (System__tasking__accept_list.first temp___expr_1161) (System__tasking__accept_list.last temp___expr_1161))))

end

(* Module giving axioms for type "atc_level_base" defined at s-taskin.ads:825, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__atc_level_base___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__atc_level_base

 predicate dynamic_invariant #"s-taskin.ads" 814 0 0# "inline" 
   (temp___expr_1166 : int) (temp___is_init_1163 : bool) (temp___do_constant_1164 : bool) (temp___do_toplevel_1165 : bool)  =
  (if (( temp___is_init_1163 \/ (System__tasking__atc_level_base.first <= System__tasking__atc_level_base.last) )) then (
   (System__tasking__atc_level_base.dynamic_property System__tasking__atc_level_base.first System__tasking__atc_level_base.last temp___expr_1166)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 825 0 0# "inline" 
   (temp___1167 : int) (temp___1168 : bool)  =
  true

end

(* Module giving axioms for type "atc_level" defined at s-taskin.ads:829, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__atc_level___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__atc_level

 predicate dynamic_invariant #"s-taskin.ads" 825 0 0# "inline" 
   (temp___expr_1172 : int) (temp___is_init_1169 : bool) (temp___do_constant_1170 : bool) (temp___do_toplevel_1171 : bool)  =
  (if (( temp___is_init_1169 \/ (System__tasking__atc_level.first <= System__tasking__atc_level.last) )) then (
   (System__tasking__atc_level.dynamic_property System__tasking__atc_level.first System__tasking__atc_level.last temp___expr_1172)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 829 0 0# "inline" 
   (temp___1173 : int) (temp___1174 : bool)  =
  true

end

(* Module giving axioms for type "atc_level_index" defined at s-taskin.ads:831, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__atc_level_index___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__atc_level_index

 predicate dynamic_invariant #"s-taskin.ads" 829 0 0# "inline" 
   (temp___expr_1178 : int) (temp___is_init_1175 : bool) (temp___do_constant_1176 : bool) (temp___do_toplevel_1177 : bool)  =
  (if (( temp___is_init_1175 \/ (System__tasking__atc_level_index.first <= System__tasking__atc_level_index.last) )) then (
   (System__tasking__atc_level_index.dynamic_property System__tasking__atc_level_index.first System__tasking__atc_level_index.last temp___expr_1178)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 831 0 0# "inline" 
   (temp___1179 : int) (temp___1180 : bool)  =
  true

end

(* Module giving axioms for type "atomic_address" defined at s-taskin.ads:943, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__atomic_address___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__tasking__atomic_address

 predicate dynamic_invariant #"s-taskin.ads" 831 0 0# "inline" 
   (temp___expr_1184 : BV64.t) (temp___is_init_1181 : bool) (temp___do_constant_1182 : bool) (temp___do_toplevel_1183 : bool)  =
  (if (( temp___is_init_1181 \/ (BV64.ule System__tasking__atomic_address.first System__tasking__atomic_address.last) )) then (
   (System__tasking__atomic_address.dynamic_property System__tasking__atomic_address.first System__tasking__atomic_address.last temp___expr_1184)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 943 0 0# "inline" 
   (temp___1185 : BV64.t) (temp___1186 : bool)  =
  true

end

(* Module giving axioms for type "Tattribute_arrayD1" defined at s-taskin.ads:945, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__Tattribute_arrayD1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Tattribute_arrayB" defined at s-taskin.ads:945, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__Tattribute_arrayB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "attribute_array" defined at s-taskin.ads:945, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__attribute_array___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__System__tasking__atomic_address
 use        Array__Int__System__tasking__atomic_address

 predicate dynamic_invariant #"s-taskin.ads" 943 0 0# "inline" 
   (temp___expr_1190 : Array__Int__System__tasking__atomic_address.map) (temp___is_init_1187 : bool) (temp___do_constant_1188 : bool) (temp___do_toplevel_1189 : bool)  =
  true
 
 predicate default_initial_assumption #"s-taskin.ads" 945 0 0# "inline" 
   (temp___1192 : Array__Int__System__tasking__atomic_address.map) (temp___1193 : bool)  =
  true

end

(* Module giving axioms for type "task_serial_number" defined at s-taskin.ads:951, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__task_serial_number___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__tasking__task_serial_number

 predicate dynamic_invariant #"s-taskin.ads" 945 0 0# "inline" 
   (temp___expr_1199 : BV64.t) (temp___is_init_1196 : bool) (temp___do_constant_1197 : bool) (temp___do_toplevel_1198 : bool)  =
  (if (( temp___is_init_1196 \/ (BV64.ule System__tasking__task_serial_number.first System__tasking__task_serial_number.last) )) then (
   (System__tasking__task_serial_number.dynamic_property System__tasking__task_serial_number.first System__tasking__task_serial_number.last temp___expr_1199)) else true)
 
 predicate default_initial_assumption #"s-taskin.ads" 951 0 0# "inline" 
   (temp___1200 : BV64.t) (temp___1201 : bool)  =
  true

end

(* Module giving axioms for type "T21s" defined at s-taskin.ads:1138, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__ada_task_control_block__T21s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T22s" defined at s-taskin.ads:1138, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__ada_task_control_block__T22s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T23s" defined at s-taskin.ads:1144, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__tasking__ada_task_control_block__T23s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "lock_level" defined at s-taprop.ads:139, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__task_primitives__operations__lock_level___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__task_primitives__operations__lock_level

 predicate dynamic_invariant #"s-taskin.ads" 951 0 0# "inline" 
   (temp___expr_1205 : int) (temp___is_init_1202 : bool) (temp___do_constant_1203 : bool) (temp___do_toplevel_1204 : bool)  =
  (if (( temp___is_init_1202 \/ (System__task_primitives__operations__lock_level.first <= System__task_primitives__operations__lock_level.last) )) then (
   (System__task_primitives__operations__lock_level.dynamic_property System__task_primitives__operations__lock_level.first System__task_primitives__operations__lock_level.last temp___expr_1205)) else true)
 
 predicate default_initial_assumption #"s-taprop.ads" 139 0 0# "inline" 
   (temp___1206 : int) (temp___1207 : bool)  =
  true

end

(* Module giving axioms for type "time" defined at a-reatim.ads:51, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__real_time__time___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time

 predicate dynamic_invariant #"s-taprop.ads" 139 0 0# "inline" 
   (temp___expr_1211 : Ada__real_time__time.time) (temp___is_init_1208 : bool) (temp___do_constant_1209 : bool) (temp___do_toplevel_1210 : bool)  =
  true
 
 predicate default_initial_assumption #"a-reatim.ads" 51 0 0# "inline" 
   (temp___1212 : Ada__real_time__time.time) (temp___1213 : bool)  =
  true

end

(* Module giving axioms for type "time_span" defined at a-reatim.ads:56, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__real_time__time_span___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span

 predicate dynamic_invariant #"a-reatim.ads" 51 0 0# "inline" 
   (temp___expr_1217 : Ada__real_time__time_span.time_span) (temp___is_init_1214 : bool) (temp___do_constant_1215 : bool) (temp___do_toplevel_1216 : bool)  =
  true
 
 predicate default_initial_assumption #"a-reatim.ads" 56 0 0# "inline" 
   (temp___1218 : Ada__real_time__time_span.time_span) (temp___1219 : bool)  =
  true

end

(* Module giving axioms for type "Tseconds_countB" defined at a-reatim.ads:132, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__real_time__Tseconds_countB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "seconds_count" defined at a-reatim.ads:132, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__real_time__seconds_count___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__real_time__seconds_count

 predicate dynamic_invariant #"a-reatim.ads" 56 0 0# "inline" 
   (temp___expr_1223 : int) (temp___is_init_1220 : bool) (temp___do_constant_1221 : bool) (temp___do_toplevel_1222 : bool)  =
  (if (( temp___is_init_1220 \/ (Ada__real_time__seconds_count.first <= Ada__real_time__seconds_count.last) )) then (
   (Ada__real_time__seconds_count.dynamic_property Ada__real_time__seconds_count.first Ada__real_time__seconds_count.last temp___expr_1223)) else true)
 
 predicate default_initial_assumption #"a-reatim.ads" 132 0 0# "inline" 
   (temp___1224 : int) (temp___1225 : bool)  =
  true

end

(* Module giving axioms for type "stream_element" defined at polyorb_hi-streams.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__streams__stream_element___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Polyorb_hi__streams__stream_element

 predicate dynamic_invariant #"a-reatim.ads" 132 0 0# "inline" 
   (temp___expr_1229 : BV8.t) (temp___is_init_1226 : bool) (temp___do_constant_1227 : bool) (temp___do_toplevel_1228 : bool)  =
  (if (( temp___is_init_1226 \/ (BV8.ule Polyorb_hi__streams__stream_element.first Polyorb_hi__streams__stream_element.last) )) then (
   (Polyorb_hi__streams__stream_element.dynamic_property Polyorb_hi__streams__stream_element.first Polyorb_hi__streams__stream_element.last temp___expr_1229)) else true)
 
 predicate default_initial_assumption #"polyorb_hi-streams.ads" 44 0 0# "inline" 
   (temp___1230 : BV8.t) (temp___1231 : bool)  =
  true

end

(* Module giving axioms for type "Tstream_element_offsetB" defined at polyorb_hi-streams.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__streams__Tstream_element_offsetB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "stream_element_offset" defined at polyorb_hi-streams.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__streams__stream_element_offset___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__streams__stream_element_offset

 predicate dynamic_invariant #"polyorb_hi-streams.ads" 44 0 0# "inline" 
   (temp___expr_1235 : int) (temp___is_init_1232 : bool) (temp___do_constant_1233 : bool) (temp___do_toplevel_1234 : bool)  =
  (if (( temp___is_init_1232 \/ (Polyorb_hi__streams__stream_element_offset.first <= Polyorb_hi__streams__stream_element_offset.last) )) then (
   (Polyorb_hi__streams__stream_element_offset.dynamic_property Polyorb_hi__streams__stream_element_offset.first Polyorb_hi__streams__stream_element_offset.last temp___expr_1235)) else true)
 
 predicate default_initial_assumption #"polyorb_hi-streams.ads" 46 0 0# "inline" 
   (temp___1236 : int) (temp___1237 : bool)  =
  true

end

(* Module giving axioms for type "stream_element_count" defined at polyorb_hi-streams.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__streams__stream_element_count___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__streams__stream_element_count

 predicate dynamic_invariant #"polyorb_hi-streams.ads" 46 0 0# "inline" 
   (temp___expr_1241 : int) (temp___is_init_1238 : bool) (temp___do_constant_1239 : bool) (temp___do_toplevel_1240 : bool)  =
  (if (( temp___is_init_1238 \/ (Polyorb_hi__streams__stream_element_count.first <= Polyorb_hi__streams__stream_element_count.last) )) then (
   (Polyorb_hi__streams__stream_element_count.dynamic_property Polyorb_hi__streams__stream_element_count.first Polyorb_hi__streams__stream_element_count.last temp___expr_1241)) else true)
 
 predicate default_initial_assumption #"polyorb_hi-streams.ads" 50 0 0# "inline" 
   (temp___1242 : int) (temp___1243 : bool)  =
  true

end

(* Module giving axioms for type "stream_element_array" defined at polyorb_hi-streams.ads:53, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__streams__stream_element_array___axiom
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__streams__stream_element_offset
 use        Polyorb_hi__streams__stream_element_array

 predicate dynamic_invariant #"polyorb_hi-streams.ads" 50 0 0# "inline" 
   (temp___expr_1247 : Polyorb_hi__streams__stream_element_array.stream_element_array) (temp___is_init_1244 : bool) (temp___do_constant_1245 : bool) (temp___do_toplevel_1246 : bool)  =
  (if (temp___do_constant_1245) then (
   true) else (
   (Polyorb_hi__streams__stream_element_array.dynamic_property Polyorb_hi__streams__stream_element_offset.first Polyorb_hi__streams__stream_element_offset.last (Polyorb_hi__streams__stream_element_array.first temp___expr_1247) (Polyorb_hi__streams__stream_element_array.last temp___expr_1247))))

end

(* Module giving axioms for type "verbosity" defined at polyorb_hi-output.ads:51, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__verbosity___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__output__verbosity

 predicate dynamic_invariant #"polyorb_hi-streams.ads" 53 0 0# "inline" 
   (temp___expr_1252 : int) (temp___is_init_1249 : bool) (temp___do_constant_1250 : bool) (temp___do_toplevel_1251 : bool)  =
  (if (( temp___is_init_1249 \/ (Polyorb_hi__output__verbosity.first <= Polyorb_hi__output__verbosity.last) )) then (
   (Polyorb_hi__output__verbosity.dynamic_property Polyorb_hi__output__verbosity.first Polyorb_hi__output__verbosity.last temp___expr_1252)) else true)
 
 predicate default_initial_assumption #"polyorb_hi-output.ads" 51 0 0# "inline" 
   (temp___1253 : int) (temp___1254 : bool)  =
  true

end

(* Module giving axioms for type "lockT" defined at polyorb_hi-output.adb:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__lockT___axiom
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__output__lockT

 predicate dynamic_invariant #"polyorb_hi-output.ads" 51 0 0# "inline" 
   (temp___expr_1258 : Polyorb_hi__output__lockT.lockT) (temp___is_init_1255 : bool) (temp___do_constant_1256 : bool) (temp___do_toplevel_1257 : bool)  =
  true
 
 predicate default_initial_assumption #"polyorb_hi-output.adb" 52 0 0# "inline" 
   (temp___1259 : Polyorb_hi__output__lockT.lockT) (temp___1260 : bool)  =
  true

end

(* Module giving axioms for type "TS7bP1" defined at polyorb_hi-output.adb:74, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__lockT__put_line__TS7bP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S7b" defined at polyorb_hi-output.adb:74, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__lockT__put_line__S7b___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__output__lockT__put_line__text
 use        Polyorb_hi__output__lockT__put_line__S7b

 predicate dynamic_invariant #"polyorb_hi-output.adb" 52 0 0# "inline" 
   (temp___expr_1264 : Polyorb_hi__output__lockT__put_line__S7b.s7b) (temp___is_init_1261 : bool) (temp___do_constant_1262 : bool) (temp___do_toplevel_1263 : bool)  =
  (if (temp___do_constant_1262) then (
   true) else (
   ( (Polyorb_hi__output__lockT__put_line__S7b.dynamic_property (Standard__string.first Polyorb_hi__output__lockT__put_line__text.text) (Standard__string.last Polyorb_hi__output__lockT__put_line__text.text) (Polyorb_hi__output__lockT__put_line__S7b.first temp___expr_1264) (Polyorb_hi__output__lockT__put_line__S7b.last temp___expr_1264)) /\ ( ((Polyorb_hi__output__lockT__put_line__S7b.first temp___expr_1264) = (Standard__string.first Polyorb_hi__output__lockT__put_line__text.text)) /\ ((Polyorb_hi__output__lockT__put_line__S7b.last temp___expr_1264) = (Standard__string.last Polyorb_hi__output__lockT__put_line__text.text)) ) )))
 
 predicate default_initial_assumption #"polyorb_hi-output.adb" 60 0 0# "inline" 
   (temp___1266 : Polyorb_hi__output__lockT__put_line__S7b.s7b) (temp___1267 : bool)  =
  true

end

(* Module giving axioms for type "T8b" defined at polyorb_hi-output.adb:77, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__lockT__put_line__T8b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T9b" defined at polyorb_hi-output.adb:80, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__lockT__put_line__T9b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TS12bP1" defined at polyorb_hi-output.adb:89, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__lockT__put__TS12bP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S12b" defined at polyorb_hi-output.adb:89, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__lockT__put__S12b___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__output__lockT__put__text
 use        Polyorb_hi__output__lockT__put__S12b

 predicate dynamic_invariant #"polyorb_hi-output.adb" 74 0 0# "inline" 
   (temp___expr_1273 : Polyorb_hi__output__lockT__put__S12b.s12b) (temp___is_init_1270 : bool) (temp___do_constant_1271 : bool) (temp___do_toplevel_1272 : bool)  =
  (if (temp___do_constant_1271) then (
   true) else (
   ( (Polyorb_hi__output__lockT__put__S12b.dynamic_property (Standard__string.first Polyorb_hi__output__lockT__put__text.text) (Standard__string.last Polyorb_hi__output__lockT__put__text.text) (Polyorb_hi__output__lockT__put__S12b.first temp___expr_1273) (Polyorb_hi__output__lockT__put__S12b.last temp___expr_1273)) /\ ( ((Polyorb_hi__output__lockT__put__S12b.first temp___expr_1273) = (Standard__string.first Polyorb_hi__output__lockT__put__text.text)) /\ ((Polyorb_hi__output__lockT__put__S12b.last temp___expr_1273) = (Standard__string.last Polyorb_hi__output__lockT__put__text.text)) ) )))
 
 predicate default_initial_assumption #"polyorb_hi-output.adb" 55 0 0# "inline" 
   (temp___1275 : Polyorb_hi__output__lockT__put__S12b.s12b) (temp___1276 : bool)  =
  true

end

(* Module giving axioms for type "T13b" defined at polyorb_hi-output.adb:92, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__lockT__put__T13b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T14b" defined at polyorb_hi-output.adb:95, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__lockT__put__T14b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TS16bP1" defined at polyorb_hi-output.adb:123, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__put_line__2__TS16bP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S16b" defined at polyorb_hi-output.adb:123, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__put_line__2__S16b___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__output__put_line__2__text
 use        Polyorb_hi__output__put_line__2__S16b

 predicate dynamic_invariant #"polyorb_hi-output.adb" 89 0 0# "inline" 
   (temp___expr_1282 : Polyorb_hi__output__put_line__2__S16b.s16b) (temp___is_init_1279 : bool) (temp___do_constant_1280 : bool) (temp___do_toplevel_1281 : bool)  =
  (if (temp___do_constant_1280) then (
   true) else (
   ( (Polyorb_hi__output__put_line__2__S16b.dynamic_property (Standard__string.first Polyorb_hi__output__put_line__2__text.text) (Standard__string.last Polyorb_hi__output__put_line__2__text.text) (Polyorb_hi__output__put_line__2__S16b.first temp___expr_1282) (Polyorb_hi__output__put_line__2__S16b.last temp___expr_1282)) /\ ( ((Polyorb_hi__output__put_line__2__S16b.first temp___expr_1282) = (Standard__string.first Polyorb_hi__output__put_line__2__text.text)) /\ ((Polyorb_hi__output__put_line__2__S16b.last temp___expr_1282) = (Standard__string.last Polyorb_hi__output__put_line__2__text.text)) ) )))
 
 predicate default_initial_assumption #"polyorb_hi-output.ads" 79 0 0# "inline" 
   (temp___1284 : Polyorb_hi__output__put_line__2__S16b.s16b) (temp___1285 : bool)  =
  true

end

(* Module giving axioms for type "TS17bP1" defined at polyorb_hi-output.adb:128, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__put_line__TS17bP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S17b" defined at polyorb_hi-output.adb:128, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__put_line__S17b___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__output__put_line__text
 use        Polyorb_hi__output__put_line__S17b

 predicate dynamic_invariant #"polyorb_hi-output.adb" 123 0 0# "inline" 
   (temp___expr_1291 : Polyorb_hi__output__put_line__S17b.s17b) (temp___is_init_1288 : bool) (temp___do_constant_1289 : bool) (temp___do_toplevel_1290 : bool)  =
  (if (temp___do_constant_1289) then (
   true) else (
   ( (Polyorb_hi__output__put_line__S17b.dynamic_property (Standard__string.first Polyorb_hi__output__put_line__text.text) (Standard__string.last Polyorb_hi__output__put_line__text.text) (Polyorb_hi__output__put_line__S17b.first temp___expr_1291) (Polyorb_hi__output__put_line__S17b.last temp___expr_1291)) /\ ( ((Polyorb_hi__output__put_line__S17b.first temp___expr_1291) = (Standard__string.first Polyorb_hi__output__put_line__text.text)) /\ ((Polyorb_hi__output__put_line__S17b.last temp___expr_1291) = (Standard__string.last Polyorb_hi__output__put_line__text.text)) ) )))
 
 predicate default_initial_assumption #"polyorb_hi-output.ads" 67 0 0# "inline" 
   (temp___1293 : Polyorb_hi__output__put_line__S17b.s17b) (temp___1294 : bool)  =
  true

end

(* Module giving axioms for type "TS18bP1" defined at polyorb_hi-output.adb:145, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__put__2__TS18bP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S18b" defined at polyorb_hi-output.adb:145, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__put__2__S18b___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__output__put__2__text
 use        Polyorb_hi__output__put__2__S18b

 predicate dynamic_invariant #"polyorb_hi-output.adb" 128 0 0# "inline" 
   (temp___expr_1300 : Polyorb_hi__output__put__2__S18b.s18b) (temp___is_init_1297 : bool) (temp___do_constant_1298 : bool) (temp___do_toplevel_1299 : bool)  =
  (if (temp___do_constant_1298) then (
   true) else (
   ( (Polyorb_hi__output__put__2__S18b.dynamic_property (Standard__string.first Polyorb_hi__output__put__2__text.text) (Standard__string.last Polyorb_hi__output__put__2__text.text) (Polyorb_hi__output__put__2__S18b.first temp___expr_1300) (Polyorb_hi__output__put__2__S18b.last temp___expr_1300)) /\ ( ((Polyorb_hi__output__put__2__S18b.first temp___expr_1300) = (Standard__string.first Polyorb_hi__output__put__2__text.text)) /\ ((Polyorb_hi__output__put__2__S18b.last temp___expr_1300) = (Standard__string.last Polyorb_hi__output__put__2__text.text)) ) )))
 
 predicate default_initial_assumption #"polyorb_hi-output.ads" 85 0 0# "inline" 
   (temp___1302 : Polyorb_hi__output__put__2__S18b.s18b) (temp___1303 : bool)  =
  true

end

(* Module giving axioms for type "TS19bP1" defined at polyorb_hi-output.adb:150, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__put__TS19bP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S19b" defined at polyorb_hi-output.adb:150, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__put__S19b___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__output__put__text
 use        Polyorb_hi__output__put__S19b

 predicate dynamic_invariant #"polyorb_hi-output.adb" 145 0 0# "inline" 
   (temp___expr_1309 : Polyorb_hi__output__put__S19b.s19b) (temp___is_init_1306 : bool) (temp___do_constant_1307 : bool) (temp___do_toplevel_1308 : bool)  =
  (if (temp___do_constant_1307) then (
   true) else (
   ( (Polyorb_hi__output__put__S19b.dynamic_property (Standard__string.first Polyorb_hi__output__put__text.text) (Standard__string.last Polyorb_hi__output__put__text.text) (Polyorb_hi__output__put__S19b.first temp___expr_1309) (Polyorb_hi__output__put__S19b.last temp___expr_1309)) /\ ( ((Polyorb_hi__output__put__S19b.first temp___expr_1309) = (Standard__string.first Polyorb_hi__output__put__text.text)) /\ ((Polyorb_hi__output__put__S19b.last temp___expr_1309) = (Standard__string.last Polyorb_hi__output__put__text.text)) ) )))
 
 predicate default_initial_assumption #"polyorb_hi-output.ads" 73 0 0# "inline" 
   (temp___1311 : Polyorb_hi__output__put__S19b.s19b) (temp___1312 : bool)  =
  true

end

(* Module giving axioms for type "output_position" defined at polyorb_hi-output.adb:167, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__output_position___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__output__output_position

 predicate dynamic_invariant #"polyorb_hi-output.adb" 150 0 0# "inline" 
   (temp___expr_1318 : int) (temp___is_init_1315 : bool) (temp___do_constant_1316 : bool) (temp___do_toplevel_1317 : bool)  =
  (if (( temp___is_init_1315 \/ (Polyorb_hi__output__output_position.first <= Polyorb_hi__output__output_position.last) )) then (
   (Polyorb_hi__output__output_position.dynamic_property Polyorb_hi__output__output_position.first Polyorb_hi__output__output_position.last temp___expr_1318)) else true)
 
 predicate default_initial_assumption #"polyorb_hi-output.adb" 167 0 0# "inline" 
   (temp___1319 : int) (temp___1320 : bool)  =
  true

end

(* Module giving axioms for type "output_line" defined at polyorb_hi-output.adb:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__output_line___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 predicate dynamic_invariant #"polyorb_hi-output.adb" 167 0 0# "inline" 
   (temp___expr_1324 : Array__Int__Standard__character.map) (temp___is_init_1321 : bool) (temp___do_constant_1322 : bool) (temp___do_toplevel_1323 : bool)  =
  true
 
 predicate default_initial_assumption #"polyorb_hi-output.adb" 169 0 0# "inline" 
   (temp___1326 : Array__Int__Standard__character.map) (temp___1327 : bool)  =
  true

end

(* Module giving axioms for type "ThexD1" defined at polyorb_hi-output.adb:171, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__ThexD1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ThexB" defined at polyorb_hi-output.adb:171, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__ThexB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ThexT" defined at polyorb_hi-output.adb:171, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__ThexT___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T22b" defined at polyorb_hi-output.adb:171, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__T22b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T23b" defined at polyorb_hi-output.adb:172, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__T23b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T24b" defined at polyorb_hi-output.adb:172, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__T24b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TS25bP1" defined at polyorb_hi-output.adb:174, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__dump__TS25bP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S25b" defined at polyorb_hi-output.adb:174, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__dump__S25b___axiom
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__streams__stream_element_array
 use        Polyorb_hi__output__dump__stream
 use        Polyorb_hi__output__dump__S25b

 predicate dynamic_invariant #"polyorb_hi-output.adb" 169 0 0# "inline" 
   (temp___expr_1333 : Polyorb_hi__output__dump__S25b.s25b) (temp___is_init_1330 : bool) (temp___do_constant_1331 : bool) (temp___do_toplevel_1332 : bool)  =
  (if (temp___do_constant_1331) then (
   true) else (
   ( (Polyorb_hi__output__dump__S25b.dynamic_property (Polyorb_hi__streams__stream_element_array.first Polyorb_hi__output__dump__stream.stream) (Polyorb_hi__streams__stream_element_array.last Polyorb_hi__output__dump__stream.stream) (Polyorb_hi__output__dump__S25b.first temp___expr_1333) (Polyorb_hi__output__dump__S25b.last temp___expr_1333)) /\ ( ((Polyorb_hi__output__dump__S25b.first temp___expr_1333) = (Polyorb_hi__streams__stream_element_array.first Polyorb_hi__output__dump__stream.stream)) /\ ((Polyorb_hi__output__dump__S25b.last temp___expr_1333) = (Polyorb_hi__streams__stream_element_array.last Polyorb_hi__output__dump__stream.stream)) ) )))
 
 predicate default_initial_assumption #"polyorb_hi-output.ads" 92 0 0# "inline" 
   (temp___1335 : Polyorb_hi__output__dump__S25b.s25b) (temp___1336 : bool)  =
  true

end

(* Module giving axioms for type "T26b" defined at polyorb_hi-output.adb:181, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__dump__L_1__T26b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T29b" defined at polyorb_hi-output.adb:183, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__dump__L_1__T29b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T30b" defined at polyorb_hi-output.adb:183, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__dump__L_1__T30b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TS32bP1" defined at polyorb_hi-output.adb:201, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__TS32bP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S32b" defined at polyorb_hi-output.adb:201, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__S32b___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__output__Oadd__s2
 use        Polyorb_hi__output__Oadd__S32b

 predicate dynamic_invariant #"polyorb_hi-output.adb" 174 0 0# "inline" 
   (temp___expr_1342 : Polyorb_hi__output__Oadd__S32b.s32b) (temp___is_init_1339 : bool) (temp___do_constant_1340 : bool) (temp___do_toplevel_1341 : bool)  =
  (if (temp___do_constant_1340) then (
   true) else (
   ( (Polyorb_hi__output__Oadd__S32b.dynamic_property (Standard__string.first Polyorb_hi__output__Oadd__s2.s2) (Standard__string.last Polyorb_hi__output__Oadd__s2.s2) (Polyorb_hi__output__Oadd__S32b.first temp___expr_1342) (Polyorb_hi__output__Oadd__S32b.last temp___expr_1342)) /\ ( ((Polyorb_hi__output__Oadd__S32b.first temp___expr_1342) = (Standard__string.first Polyorb_hi__output__Oadd__s2.s2)) /\ ((Polyorb_hi__output__Oadd__S32b.last temp___expr_1342) = (Standard__string.last Polyorb_hi__output__Oadd__s2.s2)) ) )))
 
 predicate default_initial_assumption #"polyorb_hi-output.ads" 97 0 0# "inline" 
   (temp___1344 : Polyorb_hi__output__Oadd__S32b.s32b) (temp___1345 : bool)  =
  true

end

(* Module giving axioms for type "TS31bP1" defined at polyorb_hi-output.adb:201, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__TS31bP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S31b" defined at polyorb_hi-output.adb:201, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__S31b___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__output__Oadd__s1
 use        Polyorb_hi__output__Oadd__S31b

 predicate dynamic_invariant #"polyorb_hi-output.adb" 201 0 0# "inline" 
   (temp___expr_1351 : Polyorb_hi__output__Oadd__S31b.s31b) (temp___is_init_1348 : bool) (temp___do_constant_1349 : bool) (temp___do_toplevel_1350 : bool)  =
  (if (temp___do_constant_1349) then (
   true) else (
   ( (Polyorb_hi__output__Oadd__S31b.dynamic_property (Standard__string.first Polyorb_hi__output__Oadd__s1.s1) (Standard__string.last Polyorb_hi__output__Oadd__s1.s1) (Polyorb_hi__output__Oadd__S31b.first temp___expr_1351) (Polyorb_hi__output__Oadd__S31b.last temp___expr_1351)) /\ ( ((Polyorb_hi__output__Oadd__S31b.first temp___expr_1351) = (Standard__string.first Polyorb_hi__output__Oadd__s1.s1)) /\ ((Polyorb_hi__output__Oadd__S31b.last temp___expr_1351) = (Standard__string.last Polyorb_hi__output__Oadd__s1.s1)) ) )))
 
 predicate default_initial_assumption #"polyorb_hi-output.ads" 97 0 0# "inline" 
   (temp___1353 : Polyorb_hi__output__Oadd__S31b.s31b) (temp___1354 : bool)  =
  true

end

(* Module giving axioms for type "TTsSP1" defined at polyorb_hi-output.adb:202, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__TTsSP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TsS" defined at polyorb_hi-output.adb:202, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__TsS___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        Polyorb_hi__output__Oadd__s1
 use        Polyorb_hi__output__Oadd__s2
 use        Polyorb_hi__output__Oadd__TsS

 predicate dynamic_invariant #"polyorb_hi-output.adb" 201 0 0# "inline" 
   (temp___expr_1360 : Polyorb_hi__output__Oadd__TsS.tsS) (temp___is_init_1357 : bool) (temp___do_constant_1358 : bool) (temp___do_toplevel_1359 : bool)  =
  (if (temp___do_constant_1358) then (
   true) else (
   ( (Polyorb_hi__output__Oadd__TsS.dynamic_property 1 ((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + (Standard__string.length Polyorb_hi__output__Oadd__s2.s2)) (Polyorb_hi__output__Oadd__TsS.first temp___expr_1360) (Polyorb_hi__output__Oadd__TsS.last temp___expr_1360)) /\ ( ((Polyorb_hi__output__Oadd__TsS.first temp___expr_1360) = 1) /\ ((Polyorb_hi__output__Oadd__TsS.last temp___expr_1360) = ((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + (Standard__string.length Polyorb_hi__output__Oadd__s2.s2))) ) )))
 
 predicate default_initial_assumption #"polyorb_hi-output.ads" 97 0 0# "inline" 
   (temp___1362 : Polyorb_hi__output__Oadd__TsS.tsS) (temp___1363 : bool)  =
  true

end

(* Module giving axioms for type "T33b" defined at polyorb_hi-output.adb:202, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__T33b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T34b" defined at polyorb_hi-output.adb:202, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__T34b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T35b" defined at polyorb_hi-output.adb:204, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__T35b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T36b" defined at polyorb_hi-output.adb:204, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__T36b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T37b" defined at polyorb_hi-output.adb:204, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__T37b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T38b" defined at polyorb_hi-output.adb:204, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__T38b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T39b" defined at polyorb_hi-output.adb:205, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__T39b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T40b" defined at polyorb_hi-output.adb:205, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__T40b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T41b" defined at polyorb_hi-output.adb:205, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__T41b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T42b" defined at polyorb_hi-output.adb:205, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__output__Oadd__T42b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of the aggregate at polyorb_hi-output.adb:202, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Polyorb_hi__output__Oadd__s__aggregate_def
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__Oadd__T34b
 use        Array__Int__Standard__character

 function polyorb_hi__output__Oadd__s__aggregate_def #"polyorb_hi-output.adb" 202 0 0# 
   (temp___1384 : int) : Polyorb_hi__output__Oadd__T34b.t34b
 
 axiom def_axiom :
  (forall temp___1384 : int.
   (let temp___1383 = (polyorb_hi__output__Oadd__s__aggregate_def temp___1384) in (
    (forall temp___1385 : int.
     ((Array__Int__Standard__character.get (Polyorb_hi__output__Oadd__T34b.to_array temp___1383) temp___1385) = (Standard__character.of_rep temp___1384)))))
  )

end

(* Module for defining a value for string literal  defined at polyorb_hi-output.adb:92, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1409
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1409 #"polyorb_hi-output.adb" 92 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at polyorb_hi-output.adb:95, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1410
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1410 #"polyorb_hi-output.adb" 95 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at polyorb_hi-output.adb:77, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1411
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1411 #"polyorb_hi-output.adb" 77 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at polyorb_hi-output.adb:80, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___1412
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___1412 #"polyorb_hi-output.adb" 80 0 0# 
   : Array__Int__Standard__character.map

end
(* Module for defining the value of constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__system_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__system_name

 axiom system_name__def_axiom :
  ((System__system_name.system_name ) = 0)

end

(* Module for defining the value of constant "min_int" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__min_int___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__min_int

 axiom min_int__def_axiom :
  ((System__min_int.min_int ) = ( -9223372036854775808 ))

end

(* Module for defining the value of constant "max_int" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_int___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_int

 axiom max_int__def_axiom :
  ((System__max_int.max_int ) = 9223372036854775807)

end

(* Module for defining the value of constant "max_binary_modulus" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_binary_modulus___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_binary_modulus

 axiom max_binary_modulus__def_axiom :
  ((System__max_binary_modulus.max_binary_modulus ) = 18446744073709551616)

end

(* Module for defining the value of constant "max_nonbinary_modulus" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_nonbinary_modulus___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_nonbinary_modulus

 axiom max_nonbinary_modulus__def_axiom :
  ((System__max_nonbinary_modulus.max_nonbinary_modulus ) = 4294967295)

end

(* Module for defining the value of constant "max_base_digits" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_base_digits___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_base_digits

 axiom max_base_digits__def_axiom :
  ((System__max_base_digits.max_base_digits ) = 18)

end

(* Module for defining the value of constant "max_digits" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_digits___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_digits

 axiom max_digits__def_axiom :
  ((System__max_digits.max_digits ) = 18)

end

(* Module for defining the value of constant "max_mantissa" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_mantissa___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_mantissa

 axiom max_mantissa__def_axiom :
  ((System__max_mantissa.max_mantissa ) = 63)

end

(* Module for defining the value of constant "fine_delta" defined at system.ads:61, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fine_delta___axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        System__fine_delta

 axiom fine_delta__def_axiom :
  ((System__fine_delta.fine_delta ) = (Standard__universal_real.of_real (0.000000000000000000108420217248550443400745280086994171142578125)))

end

(* Module for defining the value of constant "tick" defined at system.ads:63, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tick___axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        System__tick

 axiom tick__def_axiom :
  ((System__tick.tick ) = (Standard__universal_real.of_real (1.0E-2)))

end

(* Module for defining the value of constant "storage_unit" defined at system.ads:71, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__storage_unit___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_unit

 axiom storage_unit__def_axiom :
  ((System__storage_unit.storage_unit ) = 8)

end

(* Module for defining the value of constant "word_size" defined at system.ads:72, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__word_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__word_size

 axiom word_size__def_axiom :
  ((System__word_size.word_size ) = 64)

end

(* Module for defining the value of constant "memory_size" defined at system.ads:73, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__memory_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__memory_size

 axiom memory_size__def_axiom :
  ((System__memory_size.memory_size ) = 18446744073709551616)

end

(* Module for defining the value of constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_bit_order___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_bit_order

 axiom default_bit_order__def_axiom :
  ((System__default_bit_order.default_bit_order ) = 1)

end

(* Module for defining the value of constant "max_interrupt_priority" defined at system.ads:121, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_interrupt_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_interrupt_priority

 axiom max_interrupt_priority__def_axiom :
  ((System__max_interrupt_priority.max_interrupt_priority ) = 63)

end

(* Module for defining the value of constant "max_priority" defined at system.ads:122, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_priority

 axiom max_priority__def_axiom :
  ((System__max_priority.max_priority ) = 62)

end

(* Module for defining the value of constant "default_priority" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_priority

 axiom default_priority__def_axiom :
  ((System__default_priority.default_priority ) = 31)

end

(* Module for defining the value of constant "null_address" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__null_address___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64
 use        System__null_address

 axiom null_address__def_axiom :
  ((System__null_address.null_address ) = (BV64.of_int 0))

end

(* Module for defining the value of constant "backend_divide_checks" defined at system.ads:147, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_divide_checks___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_divide_checks

 axiom backend_divide_checks__def_axiom :
  ((System__backend_divide_checks.backend_divide_checks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "backend_overflow_checks" defined at system.ads:148, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_overflow_checks___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_overflow_checks

 axiom backend_overflow_checks__def_axiom :
  ((System__backend_overflow_checks.backend_overflow_checks ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "command_line_args" defined at system.ads:149, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__command_line_args___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__command_line_args

 axiom command_line_args__def_axiom :
  ((System__command_line_args.command_line_args ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "configurable_run_time" defined at system.ads:150, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__configurable_run_time___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__configurable_run_time

 axiom configurable_run_time__def_axiom :
  ((System__configurable_run_time.configurable_run_time ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "denorm" defined at system.ads:151, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__denorm___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__denorm

 axiom denorm__def_axiom :
  ((System__denorm.denorm ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "duration_32_bits" defined at system.ads:152, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__duration_32_bits___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__duration_32_bits

 axiom duration_32_bits__def_axiom :
  ((System__duration_32_bits.duration_32_bits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "exit_status_supported" defined at system.ads:153, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__exit_status_supported___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__exit_status_supported

 axiom exit_status_supported__def_axiom :
  ((System__exit_status_supported.exit_status_supported ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "fractional_fixed_ops" defined at system.ads:154, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fractional_fixed_ops___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__fractional_fixed_ops

 axiom fractional_fixed_ops__def_axiom :
  ((System__fractional_fixed_ops.fractional_fixed_ops ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_layout" defined at system.ads:155, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_layout___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_layout

 axiom frontend_layout__def_axiom :
  ((System__frontend_layout.frontend_layout ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_overflows" defined at system.ads:156, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_overflows___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_overflows

 axiom machine_overflows__def_axiom :
  ((System__machine_overflows.machine_overflows ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_rounds" defined at system.ads:157, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_rounds___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_rounds

 axiom machine_rounds__def_axiom :
  ((System__machine_rounds.machine_rounds ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "preallocated_stacks" defined at system.ads:158, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__preallocated_stacks___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__preallocated_stacks

 axiom preallocated_stacks__def_axiom :
  ((System__preallocated_stacks.preallocated_stacks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "signed_zeros" defined at system.ads:159, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__signed_zeros___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__signed_zeros

 axiom signed_zeros__def_axiom :
  ((System__signed_zeros.signed_zeros ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_default" defined at system.ads:160, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_default___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_default

 axiom stack_check_default__def_axiom :
  ((System__stack_check_default.stack_check_default ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "stack_check_probes" defined at system.ads:161, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_probes___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_probes

 axiom stack_check_probes__def_axiom :
  ((System__stack_check_probes.stack_check_probes ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_limits" defined at system.ads:162, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_limits___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_limits

 axiom stack_check_limits__def_axiom :
  ((System__stack_check_limits.stack_check_limits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "support_aggregates" defined at system.ads:163, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_aggregates___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_aggregates

 axiom support_aggregates__def_axiom :
  ((System__support_aggregates.support_aggregates ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_atomic_primitives" defined at system.ads:164, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_atomic_primitives___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_atomic_primitives

 axiom support_atomic_primitives__def_axiom :
  ((System__support_atomic_primitives.support_atomic_primitives ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_assign" defined at system.ads:165, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_assign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_assign

 axiom support_composite_assign__def_axiom :
  ((System__support_composite_assign.support_composite_assign ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_compare" defined at system.ads:166, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_compare___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_compare

 axiom support_composite_compare__def_axiom :
  ((System__support_composite_compare.support_composite_compare ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_long_shifts" defined at system.ads:167, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_long_shifts___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_long_shifts

 axiom support_long_shifts__def_axiom :
  ((System__support_long_shifts.support_long_shifts ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "always_compatible_rep" defined at system.ads:168, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__always_compatible_rep___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__always_compatible_rep

 axiom always_compatible_rep__def_axiom :
  ((System__always_compatible_rep.always_compatible_rep ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "suppress_standard_library" defined at system.ads:169, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__suppress_standard_library___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__suppress_standard_library

 axiom suppress_standard_library__def_axiom :
  ((System__suppress_standard_library.suppress_standard_library ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "use_ada_main_program_name" defined at system.ads:170, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__use_ada_main_program_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__use_ada_main_program_name

 axiom use_ada_main_program_name__def_axiom :
  ((System__use_ada_main_program_name.use_ada_main_program_name ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_exceptions" defined at system.ads:171, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_exceptions___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_exceptions

 axiom frontend_exceptions__def_axiom :
  ((System__frontend_exceptions.frontend_exceptions ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "zcx_by_default" defined at system.ads:172, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__zcx_by_default___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__zcx_by_default

 axiom zcx_by_default__def_axiom :
  ((System__zcx_by_default.zcx_by_default ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "unspecified_size" defined at s-parame.ads:64, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__unspecified_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__unspecified_size

 axiom unspecified_size__def_axiom :
  ((System__parameters__unspecified_size.unspecified_size ) = ( -2147483648 ))

end

(* Module for defining the value of constant "dynamic" defined at s-parame.ads:68, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__dynamic___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__dynamic

 axiom dynamic__def_axiom :
  ((System__parameters__dynamic.dynamic ) = ( -1 ))

end

(* Module for defining the value of constant "sec_stack_percentage" defined at s-parame.ads:75, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__sec_stack_percentage___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__sec_stack_percentage

 axiom sec_stack_percentage__def_axiom :
  ((System__parameters__sec_stack_percentage.sec_stack_percentage ) = ( -1 ))

end

(* Module for defining the value of constant "sec_stack_dynamic" defined at s-parame.ads:78, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__sec_stack_dynamic___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__sec_stack_dynamic

 axiom sec_stack_dynamic__def_axiom :
  ((System__parameters__sec_stack_dynamic.sec_stack_dynamic ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "default_env_stack_size" defined at s-parame.ads:96, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__default_env_stack_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__default_env_stack_size

 axiom default_env_stack_size__def_axiom :
  ((System__parameters__default_env_stack_size.default_env_stack_size ) = 8192000)

end

(* Module for defining the value of constant "stack_grows_down" defined at s-parame.ads:101, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__stack_grows_down___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__stack_grows_down

 axiom stack_grows_down__def_axiom :
  ((System__parameters__stack_grows_down.stack_grows_down ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "long_bits" defined at s-parame.ads:110, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__long_bits___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__long_bits

 axiom long_bits__def_axiom :
  ((System__parameters__long_bits.long_bits ) = 64)

end

(* Module for defining the value of constant "c_malloc_linkname" defined at s-parame.ads:119, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__c_malloc_linkname___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__parameters__c_malloc_linkname
 use        Temp___141

 axiom c_malloc_linkname__def_axiom :
  ((System__parameters__c_malloc_linkname.c_malloc_linkname ) = (Standard__string.of_array Temp___141.temp___141 1 13))

end

(* Module for defining the value of constant "garbage_collected" defined at s-parame.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__garbage_collected___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__garbage_collected

 axiom garbage_collected__def_axiom :
  ((System__parameters__garbage_collected.garbage_collected ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "single_lock" defined at s-parame.ads:157, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__single_lock___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__single_lock

 axiom single_lock__def_axiom :
  ((System__parameters__single_lock.single_lock ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "no_abort" defined at s-parame.ads:170, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__no_abort___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__no_abort

 axiom no_abort__def_axiom :
  ((System__parameters__no_abort.no_abort ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "max_attribute_count" defined at s-parame.ads:183, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__max_attribute_count___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__max_attribute_count

 axiom max_attribute_count__def_axiom :
  ((System__parameters__max_attribute_count.max_attribute_count ) = 32)

end

(* Module for defining the value of constant "runtime_traces" defined at s-parame.ads:190, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__runtime_traces___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__runtime_traces

 axiom runtime_traces__def_axiom :
  ((System__parameters__runtime_traces.runtime_traces ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "max_task_image_length" defined at s-parame.ads:199, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__max_task_image_length___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__max_task_image_length

 axiom max_task_image_length__def_axiom :
  ((System__parameters__max_task_image_length.max_task_image_length ) = 256)

end

(* Module for defining the value of constant "default_exception_msg_max_length" defined at s-parame.ads:206, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__default_exception_msg_max_length___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__default_exception_msg_max_length

 axiom default_exception_msg_max_length__def_axiom :
  ((System__parameters__default_exception_msg_max_length.default_exception_msg_max_length ) = 200)

end

(* Module for defining the value of constant "constraint_error_name" defined at s-stalib.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__constraint_error_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__constraint_error_name
 use        Temp___142

 axiom constraint_error_name__def_axiom :
  ((System__standard_library__constraint_error_name.constraint_error_name ) = (Standard__string.of_array Temp___142.temp___142 1 17))

end

(* Module for defining the value of constant "program_error_name" defined at s-stalib.ads:143, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__program_error_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__program_error_name
 use        Temp___143

 axiom program_error_name__def_axiom :
  ((System__standard_library__program_error_name.program_error_name ) = (Standard__string.of_array Temp___143.temp___143 1 14))

end

(* Module for defining the value of constant "storage_error_name" defined at s-stalib.ads:144, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__storage_error_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__storage_error_name
 use        Temp___144

 axiom storage_error_name__def_axiom :
  ((System__standard_library__storage_error_name.storage_error_name ) = (Standard__string.of_array Temp___144.temp___144 1 14))

end

(* Module for defining the value of constant "tasking_error_name" defined at s-stalib.ads:145, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__tasking_error_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__tasking_error_name
 use        Temp___145

 axiom tasking_error_name__def_axiom :
  ((System__standard_library__tasking_error_name.tasking_error_name ) = (Standard__string.of_array Temp___145.temp___145 1 14))

end

(* Module for defining the value of constant "abort_signal_name" defined at s-stalib.ads:146, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__abort_signal_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__abort_signal_name
 use        Temp___146

 axiom abort_signal_name__def_axiom :
  ((System__standard_library__abort_signal_name.abort_signal_name ) = (Standard__string.of_array Temp___146.temp___146 1 14))

end

(* Module for defining the value of constant "numeric_error_name" defined at s-stalib.ads:148, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__numeric_error_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__numeric_error_name
 use        Temp___147

 axiom numeric_error_name__def_axiom :
  ((System__standard_library__numeric_error_name.numeric_error_name ) = (Standard__string.of_array Temp___147.temp___147 1 14))

end

(* Module for defining the value of constant "null_tb_entry" defined at s-traent.ads:53, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__traceback_entries__null_tb_entry___axiom
 use import "_gnatprove_standard".Main
 use        System__null_address
 use        System__traceback_entries__null_tb_entry

 axiom null_tb_entry__def_axiom :
  ((System__traceback_entries__null_tb_entry.null_tb_entry ) = System__null_address.null_address)

end

(* Module for defining the value of constant "exception_msg_max_length" defined at a-except.ads:153, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__exceptions__exception_msg_max_length___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__exceptions__exception_msg_max_length

 axiom exception_msg_max_length__def_axiom :
  ((Ada__exceptions__exception_msg_max_length.exception_msg_max_length ) = 200)

end

(* Module for defining the value of constant "null_loc" defined at a-except.ads:164, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__exceptions__null_loc___axiom
 use import "_gnatprove_standard".Main
 use        System__null_address
 use        Ada__exceptions__null_loc

 axiom null_loc__def_axiom :
  ((Ada__exceptions__null_loc.null_loc ) = System__null_address.null_address)

end

(* Module for defining the value of constant "max_tracebacks" defined at a-except.ads:280, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__exceptions__max_tracebacks___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__exceptions__max_tracebacks

 axiom max_tracebacks__def_axiom :
  ((Ada__exceptions__max_tracebacks.max_tracebacks ) = 50)

end

(* Module for defining the value of constant "unspecified_task_info" defined at s-tasinf.ads:90, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__task_info__unspecified_task_info___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__task_info__unspecified_task_info

 axiom unspecified_task_info__def_axiom :
  ((System__task_info__unspecified_task_info.unspecified_task_info ) = 2)

end

(* Module for defining the value of constant "multi_processor" defined at s-stache.ads:68, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_checking__multi_processor___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_checking__multi_processor

 axiom multi_processor__def_axiom :
  ((System__stack_checking__multi_processor.multi_processor ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "char_bit" defined at i-c.ads:23, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c__char_bit___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char_bit

 axiom char_bit__def_axiom :
  ((Interfaces__c__char_bit.char_bit ) = 8)

end

(* Module for defining the value of constant "schar_min" defined at i-c.ads:24, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c__schar_min___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__schar_min

 axiom schar_min__def_axiom :
  ((Interfaces__c__schar_min.schar_min ) = ( -128 ))

end

(* Module for defining the value of constant "schar_max" defined at i-c.ads:25, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c__schar_max___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__schar_max

 axiom schar_max__def_axiom :
  ((Interfaces__c__schar_max.schar_max ) = 127)

end

(* Module for defining the value of constant "uchar_max" defined at i-c.ads:26, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c__uchar_max___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__uchar_max

 axiom uchar_max__def_axiom :
  ((Interfaces__c__uchar_max.uchar_max ) = 255)

end

(* Module for defining the value of constant "nul" defined at i-c.ads:74, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c__nul___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__nul

 axiom nul__def_axiom :
  ((Interfaces__c__nul.nul ) = 0)

end

(* Module for defining the value of constant "wide_nul" defined at i-c.ads:111, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c__wide_nul___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__wide_nul

 axiom wide_nul__def_axiom :
  ((Interfaces__c__wide_nul.wide_nul ) = 0)

end

(* Module for defining the value of constant "char16_nul" defined at i-c.ads:149, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c__char16_nul___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char16_nul

 axiom char16_nul__def_axiom :
  ((Interfaces__c__char16_nul.char16_nul ) = 0)

end

(* Module for defining the value of constant "char32_nul" defined at i-c.ads:191, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c__char32_nul___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char32_nul

 axiom char32_nul__def_axiom :
  ((Interfaces__c__char32_nul.char32_nul ) = 0)

end

(* Module for defining the value of constant "target_os" defined at s-oscons.ads:53, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__target_os___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__target_os

 axiom target_os__def_axiom :
  ((System__os_constants__target_os.target_os ) = 1)

end

(* Module for defining the value of constant "target_name" defined at s-oscons.ads:59, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__target_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__os_constants__target_name
 use        Temp___148

 axiom target_name__def_axiom :
  ((System__os_constants__target_name.target_name ) = (Standard__string.of_array Temp___148.temp___148 1 25))

end

(* Module for defining the value of constant "sizeof_unsigned_int" defined at s-oscons.ads:60, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__sizeof_unsigned_int___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__sizeof_unsigned_int

 axiom sizeof_unsigned_int__def_axiom :
  ((System__os_constants__sizeof_unsigned_int.sizeof_unsigned_int ) = 4)

end

(* Module for defining the value of constant "iov_max" defined at s-oscons.ads:66, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__iov_max___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__iov_max

 axiom iov_max__def_axiom :
  ((System__os_constants__iov_max.iov_max ) = 1024)

end

(* Module for defining the value of constant "name_max" defined at s-oscons.ads:67, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__name_max___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__name_max

 axiom name_max__def_axiom :
  ((System__os_constants__name_max.name_max ) = 255)

end

(* Module for defining the value of constant "o_rdwr" defined at s-oscons.ads:73, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__o_rdwr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__o_rdwr

 axiom o_rdwr__def_axiom :
  ((System__os_constants__o_rdwr.o_rdwr ) = 2)

end

(* Module for defining the value of constant "o_noctty" defined at s-oscons.ads:74, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__o_noctty___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__o_noctty

 axiom o_noctty__def_axiom :
  ((System__os_constants__o_noctty.o_noctty ) = 131072)

end

(* Module for defining the value of constant "o_ndelay" defined at s-oscons.ads:75, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__o_ndelay___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__o_ndelay

 axiom o_ndelay__def_axiom :
  ((System__os_constants__o_ndelay.o_ndelay ) = 4)

end

(* Module for defining the value of constant "f_getfl" defined at s-oscons.ads:81, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__f_getfl___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__f_getfl

 axiom f_getfl__def_axiom :
  ((System__os_constants__f_getfl.f_getfl ) = 3)

end

(* Module for defining the value of constant "f_setfl" defined at s-oscons.ads:82, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__f_setfl___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__f_setfl

 axiom f_setfl__def_axiom :
  ((System__os_constants__f_setfl.f_setfl ) = 4)

end

(* Module for defining the value of constant "fndelay" defined at s-oscons.ads:88, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__fndelay___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__fndelay

 axiom fndelay__def_axiom :
  ((System__os_constants__fndelay.fndelay ) = 4)

end

(* Module for defining the value of constant "fionbio" defined at s-oscons.ads:95, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__fionbio___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__fionbio

 axiom fionbio__def_axiom :
  ((System__os_constants__fionbio.fionbio ) = ( -2147195266 ))

end

(* Module for defining the value of constant "fionread" defined at s-oscons.ads:96, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__fionread___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__fionread

 axiom fionread__def_axiom :
  ((System__os_constants__fionread.fionread ) = 1074030207)

end

(* Module for defining the value of constant "eagain" defined at s-oscons.ads:104, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__eagain___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__eagain

 axiom eagain__def_axiom :
  ((System__os_constants__eagain.eagain ) = 35)

end

(* Module for defining the value of constant "enoent" defined at s-oscons.ads:105, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__enoent___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__enoent

 axiom enoent__def_axiom :
  ((System__os_constants__enoent.enoent ) = 2)

end

(* Module for defining the value of constant "enomem" defined at s-oscons.ads:106, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__enomem___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__enomem

 axiom enomem__def_axiom :
  ((System__os_constants__enomem.enomem ) = 12)

end

(* Module for defining the value of constant "eacces" defined at s-oscons.ads:107, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__eacces___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__eacces

 axiom eacces__def_axiom :
  ((System__os_constants__eacces.eacces ) = 13)

end

(* Module for defining the value of constant "eaddrinuse" defined at s-oscons.ads:108, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__eaddrinuse___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__eaddrinuse

 axiom eaddrinuse__def_axiom :
  ((System__os_constants__eaddrinuse.eaddrinuse ) = 48)

end

(* Module for defining the value of constant "eaddrnotavail" defined at s-oscons.ads:109, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__eaddrnotavail___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__eaddrnotavail

 axiom eaddrnotavail__def_axiom :
  ((System__os_constants__eaddrnotavail.eaddrnotavail ) = 49)

end

(* Module for defining the value of constant "eafnosupport" defined at s-oscons.ads:110, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__eafnosupport___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__eafnosupport

 axiom eafnosupport__def_axiom :
  ((System__os_constants__eafnosupport.eafnosupport ) = 47)

end

(* Module for defining the value of constant "ealready" defined at s-oscons.ads:111, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ealready___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ealready

 axiom ealready__def_axiom :
  ((System__os_constants__ealready.ealready ) = 37)

end

(* Module for defining the value of constant "ebadf" defined at s-oscons.ads:112, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ebadf___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ebadf

 axiom ebadf__def_axiom :
  ((System__os_constants__ebadf.ebadf ) = 9)

end

(* Module for defining the value of constant "econnaborted" defined at s-oscons.ads:113, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__econnaborted___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__econnaborted

 axiom econnaborted__def_axiom :
  ((System__os_constants__econnaborted.econnaborted ) = 53)

end

(* Module for defining the value of constant "econnrefused" defined at s-oscons.ads:114, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__econnrefused___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__econnrefused

 axiom econnrefused__def_axiom :
  ((System__os_constants__econnrefused.econnrefused ) = 61)

end

(* Module for defining the value of constant "econnreset" defined at s-oscons.ads:115, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__econnreset___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__econnreset

 axiom econnreset__def_axiom :
  ((System__os_constants__econnreset.econnreset ) = 54)

end

(* Module for defining the value of constant "edestaddrreq" defined at s-oscons.ads:116, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__edestaddrreq___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__edestaddrreq

 axiom edestaddrreq__def_axiom :
  ((System__os_constants__edestaddrreq.edestaddrreq ) = 39)

end

(* Module for defining the value of constant "efault" defined at s-oscons.ads:117, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__efault___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__efault

 axiom efault__def_axiom :
  ((System__os_constants__efault.efault ) = 14)

end

(* Module for defining the value of constant "ehostdown" defined at s-oscons.ads:118, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ehostdown___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ehostdown

 axiom ehostdown__def_axiom :
  ((System__os_constants__ehostdown.ehostdown ) = 64)

end

(* Module for defining the value of constant "ehostunreach" defined at s-oscons.ads:119, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ehostunreach___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ehostunreach

 axiom ehostunreach__def_axiom :
  ((System__os_constants__ehostunreach.ehostunreach ) = 65)

end

(* Module for defining the value of constant "einprogress" defined at s-oscons.ads:120, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__einprogress___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__einprogress

 axiom einprogress__def_axiom :
  ((System__os_constants__einprogress.einprogress ) = 36)

end

(* Module for defining the value of constant "eintr" defined at s-oscons.ads:121, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__eintr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__eintr

 axiom eintr__def_axiom :
  ((System__os_constants__eintr.eintr ) = 4)

end

(* Module for defining the value of constant "einval" defined at s-oscons.ads:122, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__einval___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__einval

 axiom einval__def_axiom :
  ((System__os_constants__einval.einval ) = 22)

end

(* Module for defining the value of constant "eio" defined at s-oscons.ads:123, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__eio___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__eio

 axiom eio__def_axiom :
  ((System__os_constants__eio.eio ) = 5)

end

(* Module for defining the value of constant "eisconn" defined at s-oscons.ads:124, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__eisconn___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__eisconn

 axiom eisconn__def_axiom :
  ((System__os_constants__eisconn.eisconn ) = 56)

end

(* Module for defining the value of constant "eloop" defined at s-oscons.ads:125, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__eloop___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__eloop

 axiom eloop__def_axiom :
  ((System__os_constants__eloop.eloop ) = 62)

end

(* Module for defining the value of constant "emfile" defined at s-oscons.ads:126, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__emfile___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__emfile

 axiom emfile__def_axiom :
  ((System__os_constants__emfile.emfile ) = 24)

end

(* Module for defining the value of constant "emsgsize" defined at s-oscons.ads:127, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__emsgsize___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__emsgsize

 axiom emsgsize__def_axiom :
  ((System__os_constants__emsgsize.emsgsize ) = 40)

end

(* Module for defining the value of constant "enametoolong" defined at s-oscons.ads:128, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__enametoolong___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__enametoolong

 axiom enametoolong__def_axiom :
  ((System__os_constants__enametoolong.enametoolong ) = 63)

end

(* Module for defining the value of constant "enetdown" defined at s-oscons.ads:129, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__enetdown___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__enetdown

 axiom enetdown__def_axiom :
  ((System__os_constants__enetdown.enetdown ) = 50)

end

(* Module for defining the value of constant "enetreset" defined at s-oscons.ads:130, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__enetreset___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__enetreset

 axiom enetreset__def_axiom :
  ((System__os_constants__enetreset.enetreset ) = 52)

end

(* Module for defining the value of constant "enetunreach" defined at s-oscons.ads:131, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__enetunreach___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__enetunreach

 axiom enetunreach__def_axiom :
  ((System__os_constants__enetunreach.enetunreach ) = 51)

end

(* Module for defining the value of constant "enobufs" defined at s-oscons.ads:132, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__enobufs___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__enobufs

 axiom enobufs__def_axiom :
  ((System__os_constants__enobufs.enobufs ) = 55)

end

(* Module for defining the value of constant "enoprotoopt" defined at s-oscons.ads:133, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__enoprotoopt___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__enoprotoopt

 axiom enoprotoopt__def_axiom :
  ((System__os_constants__enoprotoopt.enoprotoopt ) = 42)

end

(* Module for defining the value of constant "enotconn" defined at s-oscons.ads:134, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__enotconn___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__enotconn

 axiom enotconn__def_axiom :
  ((System__os_constants__enotconn.enotconn ) = 57)

end

(* Module for defining the value of constant "enotsock" defined at s-oscons.ads:135, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__enotsock___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__enotsock

 axiom enotsock__def_axiom :
  ((System__os_constants__enotsock.enotsock ) = 38)

end

(* Module for defining the value of constant "eopnotsupp" defined at s-oscons.ads:136, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__eopnotsupp___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__eopnotsupp

 axiom eopnotsupp__def_axiom :
  ((System__os_constants__eopnotsupp.eopnotsupp ) = 102)

end

(* Module for defining the value of constant "epipe" defined at s-oscons.ads:137, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__epipe___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__epipe

 axiom epipe__def_axiom :
  ((System__os_constants__epipe.epipe ) = 32)

end

(* Module for defining the value of constant "epfnosupport" defined at s-oscons.ads:138, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__epfnosupport___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__epfnosupport

 axiom epfnosupport__def_axiom :
  ((System__os_constants__epfnosupport.epfnosupport ) = 46)

end

(* Module for defining the value of constant "eprotonosupport" defined at s-oscons.ads:139, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__eprotonosupport___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__eprotonosupport

 axiom eprotonosupport__def_axiom :
  ((System__os_constants__eprotonosupport.eprotonosupport ) = 43)

end

(* Module for defining the value of constant "eprototype" defined at s-oscons.ads:140, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__eprototype___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__eprototype

 axiom eprototype__def_axiom :
  ((System__os_constants__eprototype.eprototype ) = 41)

end

(* Module for defining the value of constant "erange" defined at s-oscons.ads:141, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__erange___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__erange

 axiom erange__def_axiom :
  ((System__os_constants__erange.erange ) = 34)

end

(* Module for defining the value of constant "eshutdown" defined at s-oscons.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__eshutdown___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__eshutdown

 axiom eshutdown__def_axiom :
  ((System__os_constants__eshutdown.eshutdown ) = 58)

end

(* Module for defining the value of constant "esocktnosupport" defined at s-oscons.ads:143, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__esocktnosupport___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__esocktnosupport

 axiom esocktnosupport__def_axiom :
  ((System__os_constants__esocktnosupport.esocktnosupport ) = 44)

end

(* Module for defining the value of constant "etimedout" defined at s-oscons.ads:144, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__etimedout___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__etimedout

 axiom etimedout__def_axiom :
  ((System__os_constants__etimedout.etimedout ) = 60)

end

(* Module for defining the value of constant "etoomanyrefs" defined at s-oscons.ads:145, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__etoomanyrefs___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__etoomanyrefs

 axiom etoomanyrefs__def_axiom :
  ((System__os_constants__etoomanyrefs.etoomanyrefs ) = 59)

end

(* Module for defining the value of constant "ewouldblock" defined at s-oscons.ads:146, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ewouldblock___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ewouldblock

 axiom ewouldblock__def_axiom :
  ((System__os_constants__ewouldblock.ewouldblock ) = 35)

end

(* Module for defining the value of constant "e2big" defined at s-oscons.ads:147, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__e2big___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__e2big

 axiom e2big__def_axiom :
  ((System__os_constants__e2big.e2big ) = 7)

end

(* Module for defining the value of constant "eilseq" defined at s-oscons.ads:148, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__eilseq___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__eilseq

 axiom eilseq__def_axiom :
  ((System__os_constants__eilseq.eilseq ) = 92)

end

(* Module for defining the value of constant "tcsanow" defined at s-oscons.ads:154, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__tcsanow___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__tcsanow

 axiom tcsanow__def_axiom :
  ((System__os_constants__tcsanow.tcsanow ) = 0)

end

(* Module for defining the value of constant "tciflush" defined at s-oscons.ads:155, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__tciflush___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__tciflush

 axiom tciflush__def_axiom :
  ((System__os_constants__tciflush.tciflush ) = 1)

end

(* Module for defining the value of constant "ixon" defined at s-oscons.ads:156, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ixon___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ixon

 axiom ixon__def_axiom :
  ((System__os_constants__ixon.ixon ) = 512)

end

(* Module for defining the value of constant "clocal" defined at s-oscons.ads:157, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__clocal___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__clocal

 axiom clocal__def_axiom :
  ((System__os_constants__clocal.clocal ) = 32768)

end

(* Module for defining the value of constant "crtscts" defined at s-oscons.ads:158, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__crtscts___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__crtscts

 axiom crtscts__def_axiom :
  ((System__os_constants__crtscts.crtscts ) = 196608)

end

(* Module for defining the value of constant "cread" defined at s-oscons.ads:159, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__cread___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__cread

 axiom cread__def_axiom :
  ((System__os_constants__cread.cread ) = 2048)

end

(* Module for defining the value of constant "cs5" defined at s-oscons.ads:160, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__cs5___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__cs5

 axiom cs5__def_axiom :
  ((System__os_constants__cs5.cs5 ) = 0)

end

(* Module for defining the value of constant "cs6" defined at s-oscons.ads:161, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__cs6___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__cs6

 axiom cs6__def_axiom :
  ((System__os_constants__cs6.cs6 ) = 256)

end

(* Module for defining the value of constant "cs7" defined at s-oscons.ads:162, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__cs7___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__cs7

 axiom cs7__def_axiom :
  ((System__os_constants__cs7.cs7 ) = 512)

end

(* Module for defining the value of constant "cs8" defined at s-oscons.ads:163, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__cs8___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__cs8

 axiom cs8__def_axiom :
  ((System__os_constants__cs8.cs8 ) = 768)

end

(* Module for defining the value of constant "cstopb" defined at s-oscons.ads:164, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__cstopb___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__cstopb

 axiom cstopb__def_axiom :
  ((System__os_constants__cstopb.cstopb ) = 1024)

end

(* Module for defining the value of constant "parenb" defined at s-oscons.ads:165, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__parenb___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__parenb

 axiom parenb__def_axiom :
  ((System__os_constants__parenb.parenb ) = 4096)

end

(* Module for defining the value of constant "parodd" defined at s-oscons.ads:166, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__parodd___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__parodd

 axiom parodd__def_axiom :
  ((System__os_constants__parodd.parodd ) = 8192)

end

(* Module for defining the value of constant "b0" defined at s-oscons.ads:167, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b0___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b0

 axiom b0__def_axiom :
  ((System__os_constants__b0.b0 ) = 0)

end

(* Module for defining the value of constant "b50" defined at s-oscons.ads:168, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b50___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b50

 axiom b50__def_axiom :
  ((System__os_constants__b50.b50 ) = 50)

end

(* Module for defining the value of constant "b75" defined at s-oscons.ads:169, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b75___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b75

 axiom b75__def_axiom :
  ((System__os_constants__b75.b75 ) = 75)

end

(* Module for defining the value of constant "b110" defined at s-oscons.ads:170, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b110___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b110

 axiom b110__def_axiom :
  ((System__os_constants__b110.b110 ) = 110)

end

(* Module for defining the value of constant "b134" defined at s-oscons.ads:171, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b134___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b134

 axiom b134__def_axiom :
  ((System__os_constants__b134.b134 ) = 134)

end

(* Module for defining the value of constant "b150" defined at s-oscons.ads:172, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b150___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b150

 axiom b150__def_axiom :
  ((System__os_constants__b150.b150 ) = 150)

end

(* Module for defining the value of constant "b200" defined at s-oscons.ads:173, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b200___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b200

 axiom b200__def_axiom :
  ((System__os_constants__b200.b200 ) = 200)

end

(* Module for defining the value of constant "b300" defined at s-oscons.ads:174, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b300___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b300

 axiom b300__def_axiom :
  ((System__os_constants__b300.b300 ) = 300)

end

(* Module for defining the value of constant "b600" defined at s-oscons.ads:175, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b600___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b600

 axiom b600__def_axiom :
  ((System__os_constants__b600.b600 ) = 600)

end

(* Module for defining the value of constant "b1200" defined at s-oscons.ads:176, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b1200___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b1200

 axiom b1200__def_axiom :
  ((System__os_constants__b1200.b1200 ) = 1200)

end

(* Module for defining the value of constant "b1800" defined at s-oscons.ads:177, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b1800___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b1800

 axiom b1800__def_axiom :
  ((System__os_constants__b1800.b1800 ) = 1800)

end

(* Module for defining the value of constant "b2400" defined at s-oscons.ads:178, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b2400___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b2400

 axiom b2400__def_axiom :
  ((System__os_constants__b2400.b2400 ) = 2400)

end

(* Module for defining the value of constant "b4800" defined at s-oscons.ads:179, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b4800___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b4800

 axiom b4800__def_axiom :
  ((System__os_constants__b4800.b4800 ) = 4800)

end

(* Module for defining the value of constant "b9600" defined at s-oscons.ads:180, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b9600___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b9600

 axiom b9600__def_axiom :
  ((System__os_constants__b9600.b9600 ) = 9600)

end

(* Module for defining the value of constant "b19200" defined at s-oscons.ads:181, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b19200___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b19200

 axiom b19200__def_axiom :
  ((System__os_constants__b19200.b19200 ) = 19200)

end

(* Module for defining the value of constant "b38400" defined at s-oscons.ads:182, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b38400___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b38400

 axiom b38400__def_axiom :
  ((System__os_constants__b38400.b38400 ) = 38400)

end

(* Module for defining the value of constant "b57600" defined at s-oscons.ads:183, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b57600___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b57600

 axiom b57600__def_axiom :
  ((System__os_constants__b57600.b57600 ) = 57600)

end

(* Module for defining the value of constant "b115200" defined at s-oscons.ads:184, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b115200___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b115200

 axiom b115200__def_axiom :
  ((System__os_constants__b115200.b115200 ) = 115200)

end

(* Module for defining the value of constant "b230400" defined at s-oscons.ads:185, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b230400___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b230400

 axiom b230400__def_axiom :
  ((System__os_constants__b230400.b230400 ) = 230400)

end

(* Module for defining the value of constant "b460800" defined at s-oscons.ads:186, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b460800___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b460800

 axiom b460800__def_axiom :
  ((System__os_constants__b460800.b460800 ) = 4294967295)

end

(* Module for defining the value of constant "b500000" defined at s-oscons.ads:187, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b500000___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b500000

 axiom b500000__def_axiom :
  ((System__os_constants__b500000.b500000 ) = 4294967295)

end

(* Module for defining the value of constant "b576000" defined at s-oscons.ads:188, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b576000___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b576000

 axiom b576000__def_axiom :
  ((System__os_constants__b576000.b576000 ) = 4294967295)

end

(* Module for defining the value of constant "b921600" defined at s-oscons.ads:189, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b921600___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b921600

 axiom b921600__def_axiom :
  ((System__os_constants__b921600.b921600 ) = 4294967295)

end

(* Module for defining the value of constant "b1000000" defined at s-oscons.ads:190, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b1000000___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b1000000

 axiom b1000000__def_axiom :
  ((System__os_constants__b1000000.b1000000 ) = 4294967295)

end

(* Module for defining the value of constant "b1152000" defined at s-oscons.ads:191, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b1152000___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b1152000

 axiom b1152000__def_axiom :
  ((System__os_constants__b1152000.b1152000 ) = 4294967295)

end

(* Module for defining the value of constant "b1500000" defined at s-oscons.ads:192, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b1500000___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b1500000

 axiom b1500000__def_axiom :
  ((System__os_constants__b1500000.b1500000 ) = 4294967295)

end

(* Module for defining the value of constant "b2000000" defined at s-oscons.ads:193, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b2000000___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b2000000

 axiom b2000000__def_axiom :
  ((System__os_constants__b2000000.b2000000 ) = 4294967295)

end

(* Module for defining the value of constant "b2500000" defined at s-oscons.ads:194, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b2500000___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b2500000

 axiom b2500000__def_axiom :
  ((System__os_constants__b2500000.b2500000 ) = 4294967295)

end

(* Module for defining the value of constant "b3000000" defined at s-oscons.ads:195, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b3000000___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b3000000

 axiom b3000000__def_axiom :
  ((System__os_constants__b3000000.b3000000 ) = 4294967295)

end

(* Module for defining the value of constant "b3500000" defined at s-oscons.ads:196, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b3500000___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b3500000

 axiom b3500000__def_axiom :
  ((System__os_constants__b3500000.b3500000 ) = 4294967295)

end

(* Module for defining the value of constant "b4000000" defined at s-oscons.ads:197, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__b4000000___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__b4000000

 axiom b4000000__def_axiom :
  ((System__os_constants__b4000000.b4000000 ) = 4294967295)

end

(* Module for defining the value of constant "vintr" defined at s-oscons.ads:203, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__vintr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__vintr

 axiom vintr__def_axiom :
  ((System__os_constants__vintr.vintr ) = 8)

end

(* Module for defining the value of constant "vquit" defined at s-oscons.ads:204, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__vquit___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__vquit

 axiom vquit__def_axiom :
  ((System__os_constants__vquit.vquit ) = 9)

end

(* Module for defining the value of constant "verase" defined at s-oscons.ads:205, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__verase___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__verase

 axiom verase__def_axiom :
  ((System__os_constants__verase.verase ) = 3)

end

(* Module for defining the value of constant "vkill" defined at s-oscons.ads:206, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__vkill___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__vkill

 axiom vkill__def_axiom :
  ((System__os_constants__vkill.vkill ) = 5)

end

(* Module for defining the value of constant "veof" defined at s-oscons.ads:207, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__veof___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__veof

 axiom veof__def_axiom :
  ((System__os_constants__veof.veof ) = 0)

end

(* Module for defining the value of constant "vtime" defined at s-oscons.ads:208, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__vtime___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__vtime

 axiom vtime__def_axiom :
  ((System__os_constants__vtime.vtime ) = 17)

end

(* Module for defining the value of constant "vmin" defined at s-oscons.ads:209, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__vmin___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__vmin

 axiom vmin__def_axiom :
  ((System__os_constants__vmin.vmin ) = 16)

end

(* Module for defining the value of constant "vswtc" defined at s-oscons.ads:210, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__vswtc___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__vswtc

 axiom vswtc__def_axiom :
  ((System__os_constants__vswtc.vswtc ) = ( -1 ))

end

(* Module for defining the value of constant "vstart" defined at s-oscons.ads:211, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__vstart___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__vstart

 axiom vstart__def_axiom :
  ((System__os_constants__vstart.vstart ) = 12)

end

(* Module for defining the value of constant "vstop" defined at s-oscons.ads:212, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__vstop___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__vstop

 axiom vstop__def_axiom :
  ((System__os_constants__vstop.vstop ) = 13)

end

(* Module for defining the value of constant "vsusp" defined at s-oscons.ads:213, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__vsusp___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__vsusp

 axiom vsusp__def_axiom :
  ((System__os_constants__vsusp.vsusp ) = 10)

end

(* Module for defining the value of constant "veol" defined at s-oscons.ads:214, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__veol___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__veol

 axiom veol__def_axiom :
  ((System__os_constants__veol.veol ) = 1)

end

(* Module for defining the value of constant "vreprint" defined at s-oscons.ads:215, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__vreprint___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__vreprint

 axiom vreprint__def_axiom :
  ((System__os_constants__vreprint.vreprint ) = 6)

end

(* Module for defining the value of constant "vdiscard" defined at s-oscons.ads:216, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__vdiscard___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__vdiscard

 axiom vdiscard__def_axiom :
  ((System__os_constants__vdiscard.vdiscard ) = 15)

end

(* Module for defining the value of constant "vwerase" defined at s-oscons.ads:217, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__vwerase___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__vwerase

 axiom vwerase__def_axiom :
  ((System__os_constants__vwerase.vwerase ) = 4)

end

(* Module for defining the value of constant "vlnext" defined at s-oscons.ads:218, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__vlnext___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__vlnext

 axiom vlnext__def_axiom :
  ((System__os_constants__vlnext.vlnext ) = 14)

end

(* Module for defining the value of constant "veol2" defined at s-oscons.ads:219, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__veol2___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__veol2

 axiom veol2__def_axiom :
  ((System__os_constants__veol2.veol2 ) = 2)

end

(* Module for defining the value of constant "pty_library" defined at s-oscons.ads:225, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__pty_library___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__os_constants__pty_library
 use        Temp___149

 axiom pty_library__def_axiom :
  ((System__os_constants__pty_library.pty_library ) = (Standard__string.of_array Temp___149.temp___149 1 0))

end

(* Module for defining the value of constant "af_inet" defined at s-oscons.ads:231, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__af_inet___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__af_inet

 axiom af_inet__def_axiom :
  ((System__os_constants__af_inet.af_inet ) = 2)

end

(* Module for defining the value of constant "af_inet6" defined at s-oscons.ads:232, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__af_inet6___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__af_inet6

 axiom af_inet6__def_axiom :
  ((System__os_constants__af_inet6.af_inet6 ) = 30)

end

(* Module for defining the value of constant "sock_stream" defined at s-oscons.ads:238, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__sock_stream___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__sock_stream

 axiom sock_stream__def_axiom :
  ((System__os_constants__sock_stream.sock_stream ) = 1)

end

(* Module for defining the value of constant "sock_dgram" defined at s-oscons.ads:239, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__sock_dgram___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__sock_dgram

 axiom sock_dgram__def_axiom :
  ((System__os_constants__sock_dgram.sock_dgram ) = 2)

end

(* Module for defining the value of constant "host_not_found" defined at s-oscons.ads:245, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__host_not_found___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__host_not_found

 axiom host_not_found__def_axiom :
  ((System__os_constants__host_not_found.host_not_found ) = 1)

end

(* Module for defining the value of constant "try_again" defined at s-oscons.ads:246, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__try_again___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__try_again

 axiom try_again__def_axiom :
  ((System__os_constants__try_again.try_again ) = 2)

end

(* Module for defining the value of constant "no_data" defined at s-oscons.ads:247, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__no_data___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__no_data

 axiom no_data__def_axiom :
  ((System__os_constants__no_data.no_data ) = 4)

end

(* Module for defining the value of constant "no_recovery" defined at s-oscons.ads:248, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__no_recovery___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__no_recovery

 axiom no_recovery__def_axiom :
  ((System__os_constants__no_recovery.no_recovery ) = 3)

end

(* Module for defining the value of constant "shut_rd" defined at s-oscons.ads:254, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__shut_rd___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__shut_rd

 axiom shut_rd__def_axiom :
  ((System__os_constants__shut_rd.shut_rd ) = 0)

end

(* Module for defining the value of constant "shut_wr" defined at s-oscons.ads:255, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__shut_wr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__shut_wr

 axiom shut_wr__def_axiom :
  ((System__os_constants__shut_wr.shut_wr ) = 1)

end

(* Module for defining the value of constant "shut_rdwr" defined at s-oscons.ads:256, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__shut_rdwr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__shut_rdwr

 axiom shut_rdwr__def_axiom :
  ((System__os_constants__shut_rdwr.shut_rdwr ) = 2)

end

(* Module for defining the value of constant "sol_socket" defined at s-oscons.ads:262, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__sol_socket___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__sol_socket

 axiom sol_socket__def_axiom :
  ((System__os_constants__sol_socket.sol_socket ) = 65535)

end

(* Module for defining the value of constant "ipproto_ip" defined at s-oscons.ads:263, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ipproto_ip___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ipproto_ip

 axiom ipproto_ip__def_axiom :
  ((System__os_constants__ipproto_ip.ipproto_ip ) = 0)

end

(* Module for defining the value of constant "ipproto_udp" defined at s-oscons.ads:264, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ipproto_udp___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ipproto_udp

 axiom ipproto_udp__def_axiom :
  ((System__os_constants__ipproto_udp.ipproto_udp ) = 17)

end

(* Module for defining the value of constant "ipproto_tcp" defined at s-oscons.ads:265, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ipproto_tcp___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ipproto_tcp

 axiom ipproto_tcp__def_axiom :
  ((System__os_constants__ipproto_tcp.ipproto_tcp ) = 6)

end

(* Module for defining the value of constant "msg_oob" defined at s-oscons.ads:271, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__msg_oob___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__msg_oob

 axiom msg_oob__def_axiom :
  ((System__os_constants__msg_oob.msg_oob ) = 1)

end

(* Module for defining the value of constant "msg_peek" defined at s-oscons.ads:272, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__msg_peek___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__msg_peek

 axiom msg_peek__def_axiom :
  ((System__os_constants__msg_peek.msg_peek ) = 2)

end

(* Module for defining the value of constant "msg_eor" defined at s-oscons.ads:273, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__msg_eor___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__msg_eor

 axiom msg_eor__def_axiom :
  ((System__os_constants__msg_eor.msg_eor ) = 8)

end

(* Module for defining the value of constant "msg_waitall" defined at s-oscons.ads:274, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__msg_waitall___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__msg_waitall

 axiom msg_waitall__def_axiom :
  ((System__os_constants__msg_waitall.msg_waitall ) = 64)

end

(* Module for defining the value of constant "msg_nosignal" defined at s-oscons.ads:275, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__msg_nosignal___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__msg_nosignal

 axiom msg_nosignal__def_axiom :
  ((System__os_constants__msg_nosignal.msg_nosignal ) = ( -1 ))

end

(* Module for defining the value of constant "msg_forced_flags" defined at s-oscons.ads:276, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__msg_forced_flags___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__msg_forced_flags

 axiom msg_forced_flags__def_axiom :
  ((System__os_constants__msg_forced_flags.msg_forced_flags ) = 0)

end

(* Module for defining the value of constant "tcp_nodelay" defined at s-oscons.ads:283, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__tcp_nodelay___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__tcp_nodelay

 axiom tcp_nodelay__def_axiom :
  ((System__os_constants__tcp_nodelay.tcp_nodelay ) = 1)

end

(* Module for defining the value of constant "so_reuseaddr" defined at s-oscons.ads:284, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__so_reuseaddr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__so_reuseaddr

 axiom so_reuseaddr__def_axiom :
  ((System__os_constants__so_reuseaddr.so_reuseaddr ) = 4)

end

(* Module for defining the value of constant "so_reuseport" defined at s-oscons.ads:285, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__so_reuseport___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__so_reuseport

 axiom so_reuseport__def_axiom :
  ((System__os_constants__so_reuseport.so_reuseport ) = 512)

end

(* Module for defining the value of constant "so_keepalive" defined at s-oscons.ads:286, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__so_keepalive___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__so_keepalive

 axiom so_keepalive__def_axiom :
  ((System__os_constants__so_keepalive.so_keepalive ) = 8)

end

(* Module for defining the value of constant "so_linger" defined at s-oscons.ads:287, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__so_linger___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__so_linger

 axiom so_linger__def_axiom :
  ((System__os_constants__so_linger.so_linger ) = 128)

end

(* Module for defining the value of constant "so_broadcast" defined at s-oscons.ads:288, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__so_broadcast___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__so_broadcast

 axiom so_broadcast__def_axiom :
  ((System__os_constants__so_broadcast.so_broadcast ) = 32)

end

(* Module for defining the value of constant "so_sndbuf" defined at s-oscons.ads:289, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__so_sndbuf___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__so_sndbuf

 axiom so_sndbuf__def_axiom :
  ((System__os_constants__so_sndbuf.so_sndbuf ) = 4097)

end

(* Module for defining the value of constant "so_rcvbuf" defined at s-oscons.ads:290, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__so_rcvbuf___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__so_rcvbuf

 axiom so_rcvbuf__def_axiom :
  ((System__os_constants__so_rcvbuf.so_rcvbuf ) = 4098)

end

(* Module for defining the value of constant "so_sndtimeo" defined at s-oscons.ads:291, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__so_sndtimeo___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__so_sndtimeo

 axiom so_sndtimeo__def_axiom :
  ((System__os_constants__so_sndtimeo.so_sndtimeo ) = 4101)

end

(* Module for defining the value of constant "so_rcvtimeo" defined at s-oscons.ads:292, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__so_rcvtimeo___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__so_rcvtimeo

 axiom so_rcvtimeo__def_axiom :
  ((System__os_constants__so_rcvtimeo.so_rcvtimeo ) = 4102)

end

(* Module for defining the value of constant "so_error" defined at s-oscons.ads:293, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__so_error___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__so_error

 axiom so_error__def_axiom :
  ((System__os_constants__so_error.so_error ) = 4103)

end

(* Module for defining the value of constant "so_busy_poll" defined at s-oscons.ads:294, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__so_busy_poll___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__so_busy_poll

 axiom so_busy_poll__def_axiom :
  ((System__os_constants__so_busy_poll.so_busy_poll ) = ( -1 ))

end

(* Module for defining the value of constant "ip_multicast_if" defined at s-oscons.ads:295, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ip_multicast_if___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ip_multicast_if

 axiom ip_multicast_if__def_axiom :
  ((System__os_constants__ip_multicast_if.ip_multicast_if ) = 9)

end

(* Module for defining the value of constant "ip_multicast_ttl" defined at s-oscons.ads:296, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ip_multicast_ttl___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ip_multicast_ttl

 axiom ip_multicast_ttl__def_axiom :
  ((System__os_constants__ip_multicast_ttl.ip_multicast_ttl ) = 10)

end

(* Module for defining the value of constant "ip_multicast_loop" defined at s-oscons.ads:297, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ip_multicast_loop___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ip_multicast_loop

 axiom ip_multicast_loop__def_axiom :
  ((System__os_constants__ip_multicast_loop.ip_multicast_loop ) = 11)

end

(* Module for defining the value of constant "ip_add_membership" defined at s-oscons.ads:298, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ip_add_membership___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ip_add_membership

 axiom ip_add_membership__def_axiom :
  ((System__os_constants__ip_add_membership.ip_add_membership ) = 12)

end

(* Module for defining the value of constant "ip_drop_membership" defined at s-oscons.ads:299, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ip_drop_membership___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ip_drop_membership

 axiom ip_drop_membership__def_axiom :
  ((System__os_constants__ip_drop_membership.ip_drop_membership ) = 13)

end

(* Module for defining the value of constant "ip_pktinfo" defined at s-oscons.ads:300, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__ip_pktinfo___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ip_pktinfo

 axiom ip_pktinfo__def_axiom :
  ((System__os_constants__ip_pktinfo.ip_pktinfo ) = 26)

end

(* Module for defining the value of constant "sizeof_tv_sec" defined at s-oscons.ads:307, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__sizeof_tv_sec___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__sizeof_tv_sec

 axiom sizeof_tv_sec__def_axiom :
  ((System__os_constants__sizeof_tv_sec.sizeof_tv_sec ) = 8)

end

(* Module for defining the value of constant "sizeof_tv_usec" defined at s-oscons.ads:308, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__sizeof_tv_usec___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__sizeof_tv_usec

 axiom sizeof_tv_usec__def_axiom :
  ((System__os_constants__sizeof_tv_usec.sizeof_tv_usec ) = 4)

end

(* Module for defining the value of constant "max_tv_sec" defined at s-oscons.ads:311, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__max_tv_sec___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__max_tv_sec

 axiom max_tv_sec__def_axiom :
  ((System__os_constants__max_tv_sec.max_tv_sec ) = 9223372036854775807)

end

(* Module for defining the value of constant "sizeof_sockaddr_in" defined at s-oscons.ads:314, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__sizeof_sockaddr_in___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__sizeof_sockaddr_in

 axiom sizeof_sockaddr_in__def_axiom :
  ((System__os_constants__sizeof_sockaddr_in.sizeof_sockaddr_in ) = 16)

end

(* Module for defining the value of constant "sizeof_sockaddr_in6" defined at s-oscons.ads:315, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__sizeof_sockaddr_in6___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__sizeof_sockaddr_in6

 axiom sizeof_sockaddr_in6__def_axiom :
  ((System__os_constants__sizeof_sockaddr_in6.sizeof_sockaddr_in6 ) = 28)

end

(* Module for defining the value of constant "sizeof_fd_set" defined at s-oscons.ads:316, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__sizeof_fd_set___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__sizeof_fd_set

 axiom sizeof_fd_set__def_axiom :
  ((System__os_constants__sizeof_fd_set.sizeof_fd_set ) = 128)

end

(* Module for defining the value of constant "fd_setsize" defined at s-oscons.ads:317, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__fd_setsize___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__fd_setsize

 axiom fd_setsize__def_axiom :
  ((System__os_constants__fd_setsize.fd_setsize ) = 1024)

end

(* Module for defining the value of constant "sizeof_struct_hostent" defined at s-oscons.ads:318, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__sizeof_struct_hostent___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__sizeof_struct_hostent

 axiom sizeof_struct_hostent__def_axiom :
  ((System__os_constants__sizeof_struct_hostent.sizeof_struct_hostent ) = 32)

end

(* Module for defining the value of constant "sizeof_struct_servent" defined at s-oscons.ads:319, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__sizeof_struct_servent___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__sizeof_struct_servent

 axiom sizeof_struct_servent__def_axiom :
  ((System__os_constants__sizeof_struct_servent.sizeof_struct_servent ) = 32)

end

(* Module for defining the value of constant "need_netdb_buffer" defined at s-oscons.ads:328, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__need_netdb_buffer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__need_netdb_buffer

 axiom need_netdb_buffer__def_axiom :
  ((System__os_constants__need_netdb_buffer.need_netdb_buffer ) = 0)

end

(* Module for defining the value of constant "need_netdb_lock" defined at s-oscons.ads:329, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__need_netdb_lock___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__need_netdb_lock

 axiom need_netdb_lock__def_axiom :
  ((System__os_constants__need_netdb_lock.need_netdb_lock ) = 0)

end

(* Module for defining the value of constant "has_sockaddr_len" defined at s-oscons.ads:330, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__has_sockaddr_len___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__has_sockaddr_len

 axiom has_sockaddr_len__def_axiom :
  ((System__os_constants__has_sockaddr_len.has_sockaddr_len ) = 0)

end

(* Module for defining the value of constant "thread_blocking_io" defined at s-oscons.ads:331, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__thread_blocking_io___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__os_constants__thread_blocking_io

 axiom thread_blocking_io__def_axiom :
  ((System__os_constants__thread_blocking_io.thread_blocking_io ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "inet_pton_linkname" defined at s-oscons.ads:334, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__inet_pton_linkname___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__os_constants__inet_pton_linkname
 use        Temp___150

 axiom inet_pton_linkname__def_axiom :
  ((System__os_constants__inet_pton_linkname.inet_pton_linkname ) = (Standard__string.of_array Temp___150.temp___150 1 9))

end

(* Module for defining the value of constant "clock_realtime" defined at s-oscons.ads:342, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__clock_realtime___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__clock_realtime

 axiom clock_realtime__def_axiom :
  ((System__os_constants__clock_realtime.clock_realtime ) = ( -1 ))

end

(* Module for defining the value of constant "clock_thread_cputime_id" defined at s-oscons.ads:343, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__clock_thread_cputime_id___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__clock_thread_cputime_id

 axiom clock_thread_cputime_id__def_axiom :
  ((System__os_constants__clock_thread_cputime_id.clock_thread_cputime_id ) = ( -1 ))

end

(* Module for defining the value of constant "clock_rt_ada" defined at s-oscons.ads:344, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__clock_rt_ada___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__clock_rt_ada

 axiom clock_rt_ada__def_axiom :
  ((System__os_constants__clock_rt_ada.clock_rt_ada ) = ( -1 ))

end

(* Module for defining the value of constant "pthread_size" defined at s-oscons.ads:349, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__pthread_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__pthread_size

 axiom pthread_size__def_axiom :
  ((System__os_constants__pthread_size.pthread_size ) = 8176)

end

(* Module for defining the value of constant "pthread_attr_size" defined at s-oscons.ads:350, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__pthread_attr_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__pthread_attr_size

 axiom pthread_attr_size__def_axiom :
  ((System__os_constants__pthread_attr_size.pthread_attr_size ) = 56)

end

(* Module for defining the value of constant "pthread_mutexattr_size" defined at s-oscons.ads:351, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__pthread_mutexattr_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__pthread_mutexattr_size

 axiom pthread_mutexattr_size__def_axiom :
  ((System__os_constants__pthread_mutexattr_size.pthread_mutexattr_size ) = 8)

end

(* Module for defining the value of constant "pthread_mutex_size" defined at s-oscons.ads:352, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__pthread_mutex_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__pthread_mutex_size

 axiom pthread_mutex_size__def_axiom :
  ((System__os_constants__pthread_mutex_size.pthread_mutex_size ) = 56)

end

(* Module for defining the value of constant "pthread_condattr_size" defined at s-oscons.ads:353, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__pthread_condattr_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__pthread_condattr_size

 axiom pthread_condattr_size__def_axiom :
  ((System__os_constants__pthread_condattr_size.pthread_condattr_size ) = 8)

end

(* Module for defining the value of constant "pthread_cond_size" defined at s-oscons.ads:354, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__pthread_cond_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__pthread_cond_size

 axiom pthread_cond_size__def_axiom :
  ((System__os_constants__pthread_cond_size.pthread_cond_size ) = 40)

end

(* Module for defining the value of constant "pthread_rwlockattr_size" defined at s-oscons.ads:355, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__pthread_rwlockattr_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__pthread_rwlockattr_size

 axiom pthread_rwlockattr_size__def_axiom :
  ((System__os_constants__pthread_rwlockattr_size.pthread_rwlockattr_size ) = 16)

end

(* Module for defining the value of constant "pthread_rwlock_size" defined at s-oscons.ads:356, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__pthread_rwlock_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__pthread_rwlock_size

 axiom pthread_rwlock_size__def_axiom :
  ((System__os_constants__pthread_rwlock_size.pthread_rwlock_size ) = 192)

end

(* Module for defining the value of constant "pthread_once_size" defined at s-oscons.ads:357, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__pthread_once_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__pthread_once_size

 axiom pthread_once_size__def_axiom :
  ((System__os_constants__pthread_once_size.pthread_once_size ) = 8)

end

(* Module for defining the value of constant "sizeof_struct_file_attributes" defined at s-oscons.ads:363, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__sizeof_struct_file_attributes___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__sizeof_struct_file_attributes

 axiom sizeof_struct_file_attributes__def_axiom :
  ((System__os_constants__sizeof_struct_file_attributes.sizeof_struct_file_attributes ) = 32)

end

(* Module for defining the value of constant "sizeof_struct_dirent_alloc" defined at s-oscons.ads:364, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__sizeof_struct_dirent_alloc___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__sizeof_struct_dirent_alloc

 axiom sizeof_struct_dirent_alloc__def_axiom :
  ((System__os_constants__sizeof_struct_dirent_alloc.sizeof_struct_dirent_alloc ) = 277)

end

(* Module for defining the value of constant "eintr" defined at s-osinte.ads:64, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__eintr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__eintr

 axiom eintr__def_axiom :
  ((System__os_interface__eintr.eintr ) = 4)

end

(* Module for defining the value of constant "enomem" defined at s-osinte.ads:65, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__enomem___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__enomem

 axiom enomem__def_axiom :
  ((System__os_interface__enomem.enomem ) = 12)

end

(* Module for defining the value of constant "einval" defined at s-osinte.ads:66, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__einval___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__einval

 axiom einval__def_axiom :
  ((System__os_interface__einval.einval ) = 22)

end

(* Module for defining the value of constant "eagain" defined at s-osinte.ads:67, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__eagain___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__eagain

 axiom eagain__def_axiom :
  ((System__os_interface__eagain.eagain ) = 35)

end

(* Module for defining the value of constant "etimedout" defined at s-osinte.ads:68, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__etimedout___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__etimedout

 axiom etimedout__def_axiom :
  ((System__os_interface__etimedout.etimedout ) = 60)

end

(* Module for defining the value of constant "max_interrupt" defined at s-osinte.ads:74, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__max_interrupt___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__max_interrupt

 axiom max_interrupt__def_axiom :
  ((System__os_interface__max_interrupt.max_interrupt ) = 31)

end

(* Module for defining the value of constant "sighup" defined at s-osinte.ads:78, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sighup___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sighup

 axiom sighup__def_axiom :
  ((System__os_interface__sighup.sighup ) = 1)

end

(* Module for defining the value of constant "sigint" defined at s-osinte.ads:79, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigint___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigint

 axiom sigint__def_axiom :
  ((System__os_interface__sigint.sigint ) = 2)

end

(* Module for defining the value of constant "sigquit" defined at s-osinte.ads:80, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigquit___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigquit

 axiom sigquit__def_axiom :
  ((System__os_interface__sigquit.sigquit ) = 3)

end

(* Module for defining the value of constant "sigill" defined at s-osinte.ads:81, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigill___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigill

 axiom sigill__def_axiom :
  ((System__os_interface__sigill.sigill ) = 4)

end

(* Module for defining the value of constant "sigtrap" defined at s-osinte.ads:82, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigtrap___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigtrap

 axiom sigtrap__def_axiom :
  ((System__os_interface__sigtrap.sigtrap ) = 5)

end

(* Module for defining the value of constant "sigiot" defined at s-osinte.ads:83, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigiot___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigiot

 axiom sigiot__def_axiom :
  ((System__os_interface__sigiot.sigiot ) = 6)

end

(* Module for defining the value of constant "sigabrt" defined at s-osinte.ads:84, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigabrt___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigabrt

 axiom sigabrt__def_axiom :
  ((System__os_interface__sigabrt.sigabrt ) = 6)

end

(* Module for defining the value of constant "sigemt" defined at s-osinte.ads:85, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigemt___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigemt

 axiom sigemt__def_axiom :
  ((System__os_interface__sigemt.sigemt ) = 7)

end

(* Module for defining the value of constant "sigfpe" defined at s-osinte.ads:86, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigfpe___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigfpe

 axiom sigfpe__def_axiom :
  ((System__os_interface__sigfpe.sigfpe ) = 8)

end

(* Module for defining the value of constant "sigkill" defined at s-osinte.ads:87, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigkill___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigkill

 axiom sigkill__def_axiom :
  ((System__os_interface__sigkill.sigkill ) = 9)

end

(* Module for defining the value of constant "sigbus" defined at s-osinte.ads:88, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigbus___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigbus

 axiom sigbus__def_axiom :
  ((System__os_interface__sigbus.sigbus ) = 10)

end

(* Module for defining the value of constant "sigsegv" defined at s-osinte.ads:89, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigsegv___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigsegv

 axiom sigsegv__def_axiom :
  ((System__os_interface__sigsegv.sigsegv ) = 11)

end

(* Module for defining the value of constant "sigsys" defined at s-osinte.ads:90, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigsys___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigsys

 axiom sigsys__def_axiom :
  ((System__os_interface__sigsys.sigsys ) = 12)

end

(* Module for defining the value of constant "sigpipe" defined at s-osinte.ads:91, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigpipe___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigpipe

 axiom sigpipe__def_axiom :
  ((System__os_interface__sigpipe.sigpipe ) = 13)

end

(* Module for defining the value of constant "sigalrm" defined at s-osinte.ads:92, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigalrm___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigalrm

 axiom sigalrm__def_axiom :
  ((System__os_interface__sigalrm.sigalrm ) = 14)

end

(* Module for defining the value of constant "sigterm" defined at s-osinte.ads:93, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigterm___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigterm

 axiom sigterm__def_axiom :
  ((System__os_interface__sigterm.sigterm ) = 15)

end

(* Module for defining the value of constant "sigurg" defined at s-osinte.ads:94, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigurg___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigurg

 axiom sigurg__def_axiom :
  ((System__os_interface__sigurg.sigurg ) = 16)

end

(* Module for defining the value of constant "sigstop" defined at s-osinte.ads:95, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigstop___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigstop

 axiom sigstop__def_axiom :
  ((System__os_interface__sigstop.sigstop ) = 17)

end

(* Module for defining the value of constant "sigtstp" defined at s-osinte.ads:96, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigtstp___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigtstp

 axiom sigtstp__def_axiom :
  ((System__os_interface__sigtstp.sigtstp ) = 18)

end

(* Module for defining the value of constant "sigcont" defined at s-osinte.ads:97, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigcont___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigcont

 axiom sigcont__def_axiom :
  ((System__os_interface__sigcont.sigcont ) = 19)

end

(* Module for defining the value of constant "sigchld" defined at s-osinte.ads:98, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigchld___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigchld

 axiom sigchld__def_axiom :
  ((System__os_interface__sigchld.sigchld ) = 20)

end

(* Module for defining the value of constant "sigttin" defined at s-osinte.ads:99, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigttin___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigttin

 axiom sigttin__def_axiom :
  ((System__os_interface__sigttin.sigttin ) = 21)

end

(* Module for defining the value of constant "sigttou" defined at s-osinte.ads:100, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigttou___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigttou

 axiom sigttou__def_axiom :
  ((System__os_interface__sigttou.sigttou ) = 22)

end

(* Module for defining the value of constant "sigio" defined at s-osinte.ads:101, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigio___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigio

 axiom sigio__def_axiom :
  ((System__os_interface__sigio.sigio ) = 23)

end

(* Module for defining the value of constant "sigxcpu" defined at s-osinte.ads:102, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigxcpu___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigxcpu

 axiom sigxcpu__def_axiom :
  ((System__os_interface__sigxcpu.sigxcpu ) = 24)

end

(* Module for defining the value of constant "sigxfsz" defined at s-osinte.ads:103, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigxfsz___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigxfsz

 axiom sigxfsz__def_axiom :
  ((System__os_interface__sigxfsz.sigxfsz ) = 25)

end

(* Module for defining the value of constant "sigvtalrm" defined at s-osinte.ads:104, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigvtalrm___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigvtalrm

 axiom sigvtalrm__def_axiom :
  ((System__os_interface__sigvtalrm.sigvtalrm ) = 26)

end

(* Module for defining the value of constant "sigprof" defined at s-osinte.ads:105, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigprof___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigprof

 axiom sigprof__def_axiom :
  ((System__os_interface__sigprof.sigprof ) = 27)

end

(* Module for defining the value of constant "sigwinch" defined at s-osinte.ads:106, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigwinch___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigwinch

 axiom sigwinch__def_axiom :
  ((System__os_interface__sigwinch.sigwinch ) = 28)

end

(* Module for defining the value of constant "siginfo" defined at s-osinte.ads:107, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__siginfo___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__siginfo

 axiom siginfo__def_axiom :
  ((System__os_interface__siginfo.siginfo ) = 29)

end

(* Module for defining the value of constant "sigusr1" defined at s-osinte.ads:108, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigusr1___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigusr1

 axiom sigusr1__def_axiom :
  ((System__os_interface__sigusr1.sigusr1 ) = 30)

end

(* Module for defining the value of constant "sigusr2" defined at s-osinte.ads:109, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigusr2___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigusr2

 axiom sigusr2__def_axiom :
  ((System__os_interface__sigusr2.sigusr2 ) = 31)

end

(* Module for defining the value of constant "sigadaabort" defined at s-osinte.ads:111, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sigadaabort___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sigadaabort

 axiom sigadaabort__def_axiom :
  ((System__os_interface__sigadaabort.sigadaabort ) = 6)

end

(* Module for defining the value of constant "unmasked" defined at s-osinte.ads:117, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__unmasked___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__signal_set
 use        System__os_interface__T4s
 use        System__os_interface__unmasked
 use        System__os_interface__unmasked__aggregate_def
 use        Array__Int__System__os_interface__signal

 axiom unmasked__def_axiom :
  ((System__os_interface__unmasked.unmasked ) = (System__os_interface__signal_set.of_array (System__os_interface__unmasked__aggregate_def.system__os_interface__unmasked__aggregate_def 21 22 17 18) System__os_interface__T4s.first System__os_interface__T4s.last))

end

(* Module for defining the value of constant "reserved" defined at s-osinte.ads:120, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__reserved___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__signal_set
 use        System__os_interface__T6s
 use        System__os_interface__reserved
 use        System__os_interface__reserved__aggregate_def
 use        Array__Int__System__os_interface__signal

 axiom reserved__def_axiom :
  ((System__os_interface__reserved.reserved ) = (System__os_interface__signal_set.of_array (System__os_interface__reserved__aggregate_def.system__os_interface__reserved__aggregate_def 9 17) System__os_interface__T6s.first System__os_interface__T6s.last))

end

(* Module for defining the value of constant "exception_signals" defined at s-osinte.ads:123, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__exception_signals___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__signal_set
 use        System__os_interface__T8s
 use        System__os_interface__exception_signals
 use        System__os_interface__exception_signals__aggregate_def
 use        Array__Int__System__os_interface__signal

 axiom exception_signals__def_axiom :
  ((System__os_interface__exception_signals.exception_signals ) = (System__os_interface__signal_set.of_array (System__os_interface__exception_signals__aggregate_def.system__os_interface__exception_signals__aggregate_def 8 4 11 10) System__os_interface__T8s.first System__os_interface__T8s.last))

end

(* Module for defining the value of constant "sig_block" defined at s-osinte.ads:161, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sig_block___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sig_block

 axiom sig_block__def_axiom :
  ((System__os_interface__sig_block.sig_block ) = 1)

end

(* Module for defining the value of constant "sig_unblock" defined at s-osinte.ads:162, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sig_unblock___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sig_unblock

 axiom sig_unblock__def_axiom :
  ((System__os_interface__sig_unblock.sig_unblock ) = 2)

end

(* Module for defining the value of constant "sig_setmask" defined at s-osinte.ads:163, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sig_setmask___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sig_setmask

 axiom sig_setmask__def_axiom :
  ((System__os_interface__sig_setmask.sig_setmask ) = 3)

end

(* Module for defining the value of constant "sig_dfl" defined at s-osinte.ads:165, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sig_dfl___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sig_dfl

 axiom sig_dfl__def_axiom :
  ((System__os_interface__sig_dfl.sig_dfl ) = 0)

end

(* Module for defining the value of constant "sig_ign" defined at s-osinte.ads:166, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sig_ign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sig_ign

 axiom sig_ign__def_axiom :
  ((System__os_interface__sig_ign.sig_ign ) = 1)

end

(* Module for defining the value of constant "sa_siginfo" defined at s-osinte.ads:168, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sa_siginfo___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sa_siginfo

 axiom sa_siginfo__def_axiom :
  ((System__os_interface__sa_siginfo.sa_siginfo ) = 64)

end

(* Module for defining the value of constant "sa_onstack" defined at s-osinte.ads:169, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sa_onstack___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sa_onstack

 axiom sa_onstack__def_axiom :
  ((System__os_interface__sa_onstack.sa_onstack ) = 1)

end

(* Module for defining the value of constant "time_slice_supported" defined at s-osinte.ads:181, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__time_slice_supported___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__os_interface__time_slice_supported

 axiom time_slice_supported__def_axiom :
  ((System__os_interface__time_slice_supported.time_slice_supported ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "sched_other" defined at s-osinte.ads:206, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sched_other___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sched_other

 axiom sched_other__def_axiom :
  ((System__os_interface__sched_other.sched_other ) = 1)

end

(* Module for defining the value of constant "sched_rr" defined at s-osinte.ads:207, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sched_rr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sched_rr

 axiom sched_rr__def_axiom :
  ((System__os_interface__sched_rr.sched_rr ) = 2)

end

(* Module for defining the value of constant "sched_fifo" defined at s-osinte.ads:208, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__sched_fifo___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__sched_fifo

 axiom sched_fifo__def_axiom :
  ((System__os_interface__sched_fifo.sched_fifo ) = 4)

end

(* Module for defining the value of constant "pthread_create_detached" defined at s-osinte.ads:256, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__pthread_create_detached___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__pthread_create_detached

 axiom pthread_create_detached__def_axiom :
  ((System__os_interface__pthread_create_detached.pthread_create_detached ) = 2)

end

(* Module for defining the value of constant "pthread_scope_process" defined at s-osinte.ads:258, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__pthread_scope_process___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__pthread_scope_process

 axiom pthread_scope_process__def_axiom :
  ((System__os_interface__pthread_scope_process.pthread_scope_process ) = 2)

end

(* Module for defining the value of constant "pthread_scope_system" defined at s-osinte.ads:259, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__pthread_scope_system___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__pthread_scope_system

 axiom pthread_scope_system__def_axiom :
  ((System__os_interface__pthread_scope_system.pthread_scope_system ) = 1)

end

(* Module for defining the value of constant "alternate_stack_size" defined at s-osinte.ads:289, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__alternate_stack_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__alternate_stack_size

 axiom alternate_stack_size__def_axiom :
  ((System__os_interface__alternate_stack_size.alternate_stack_size ) = 32768)

end

(* Module for defining the value of constant "stack_base_available" defined at s-osinte.ads:292, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__stack_base_available___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__os_interface__stack_base_available

 axiom stack_base_available__def_axiom :
  ((System__os_interface__stack_base_available.stack_base_available ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "prot_none" defined at s-osinte.ads:307, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__prot_none___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__prot_none

 axiom prot_none__def_axiom :
  ((System__os_interface__prot_none.prot_none ) = 0)

end

(* Module for defining the value of constant "prot_read" defined at s-osinte.ads:308, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__prot_read___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__prot_read

 axiom prot_read__def_axiom :
  ((System__os_interface__prot_read.prot_read ) = 1)

end

(* Module for defining the value of constant "prot_write" defined at s-osinte.ads:309, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__prot_write___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__prot_write

 axiom prot_write__def_axiom :
  ((System__os_interface__prot_write.prot_write ) = 2)

end

(* Module for defining the value of constant "prot_exec" defined at s-osinte.ads:310, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__prot_exec___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__prot_exec

 axiom prot_exec__def_axiom :
  ((System__os_interface__prot_exec.prot_exec ) = 4)

end

(* Module for defining the value of constant "prot_all" defined at s-osinte.ads:311, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__prot_all___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__prot_all

 axiom prot_all__def_axiom :
  ((System__os_interface__prot_all.prot_all ) = 7)

end

(* Module for defining the value of constant "prot_on" defined at s-osinte.ads:313, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__prot_on___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__prot_on

 axiom prot_on__def_axiom :
  ((System__os_interface__prot_on.prot_on ) = 0)

end

(* Module for defining the value of constant "prot_off" defined at s-osinte.ads:314, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__prot_off___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__prot_off

 axiom prot_off__def_axiom :
  ((System__os_interface__prot_off.prot_off ) = 7)

end

(* Module for defining the value of constant "relative_timed_wait" defined at s-osinte.ads:400, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__relative_timed_wait___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__os_interface__relative_timed_wait

 axiom relative_timed_wait__def_axiom :
  ((System__os_interface__relative_timed_wait.relative_timed_wait ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "pthread_prio_none" defined at s-osinte.ads:407, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__pthread_prio_none___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__pthread_prio_none

 axiom pthread_prio_none__def_axiom :
  ((System__os_interface__pthread_prio_none.pthread_prio_none ) = 0)

end

(* Module for defining the value of constant "pthread_prio_inherit" defined at s-osinte.ads:408, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__pthread_prio_inherit___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__pthread_prio_inherit

 axiom pthread_prio_inherit__def_axiom :
  ((System__os_interface__pthread_prio_inherit.pthread_prio_inherit ) = 1)

end

(* Module for defining the value of constant "pthread_prio_protect" defined at s-osinte.ads:409, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_interface__pthread_prio_protect___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_interface__pthread_prio_protect

 axiom pthread_prio_protect__def_axiom :
  ((System__os_interface__pthread_prio_protect.pthread_prio_protect ) = 2)

end

(* Module for defining the value of constant "alternate_stack_size" defined at s-taspri.ads:70, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__task_primitives__alternate_stack_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__task_primitives__alternate_stack_size

 axiom alternate_stack_size__def_axiom :
  ((System__task_primitives__alternate_stack_size.alternate_stack_size ) = 32768)

end

(* Module for defining the value of constant "task_name_length" defined at s-stausa.ads:49, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_usage__task_name_length___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__stack_usage__task_name_length

 axiom task_name_length__def_axiom :
  ((System__stack_usage__task_name_length.task_name_length ) = 32)

end

(* Module for defining the value of constant "bytes_per_pattern" defined at s-stausa.ads:280, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_usage__bytes_per_pattern___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__stack_usage__bytes_per_pattern

 axiom bytes_per_pattern__def_axiom :
  ((System__stack_usage__bytes_per_pattern.bytes_per_pattern ) = 4)

end

(* Module for defining the value of constant "not_a_specific_cpu" defined at s-multip.ads:23, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__multiprocessors__not_a_specific_cpu___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__multiprocessors__not_a_specific_cpu

 axiom not_a_specific_cpu__def_axiom :
  ((System__multiprocessors__not_a_specific_cpu.not_a_specific_cpu ) = 0)

end

(* Module for defining the value of constant "null_entry" defined at s-taskin.ads:223, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__null_entry___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__null_entry

 axiom null_entry__def_axiom :
  ((System__tasking__null_entry.null_entry ) = 0)

end

(* Module for defining the value of constant "max_entry" defined at s-taskin.ads:225, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__max_entry___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__max_entry

 axiom max_entry__def_axiom :
  ((System__tasking__max_entry.max_entry ) = 2147483647)

end

(* Module for defining the value of constant "interrupt_entry" defined at s-taskin.ads:227, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__interrupt_entry___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__interrupt_entry

 axiom interrupt_entry__def_axiom :
  ((System__tasking__interrupt_entry.interrupt_entry ) = ( -2 ))

end

(* Module for defining the value of constant "cancelled_entry" defined at s-taskin.ads:229, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__cancelled_entry___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__cancelled_entry

 axiom cancelled_entry__def_axiom :
  ((System__tasking__cancelled_entry.cancelled_entry ) = ( -1 ))

end

(* Module for defining the value of constant "null_task_entry" defined at s-taskin.ads:233, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__null_task_entry___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__null_task_entry

 axiom null_task_entry__def_axiom :
  ((System__tasking__null_task_entry.null_task_entry ) = 0)

end

(* Module for defining the value of constant "max_task_entry" defined at s-taskin.ads:235, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__max_task_entry___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__max_task_entry

 axiom max_task_entry__def_axiom :
  ((System__tasking__max_task_entry.max_task_entry ) = 2147483647)

end

(* Module for defining the value of constant "foreign_task_level" defined at s-taskin.ads:770, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__foreign_task_level___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__foreign_task_level

 axiom foreign_task_level__def_axiom :
  ((System__tasking__foreign_task_level.foreign_task_level ) = 0)

end

(* Module for defining the value of constant "environment_task_level" defined at s-taskin.ads:771, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__environment_task_level___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__environment_task_level

 axiom environment_task_level__def_axiom :
  ((System__tasking__environment_task_level.environment_task_level ) = 1)

end

(* Module for defining the value of constant "independent_task_level" defined at s-taskin.ads:772, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__independent_task_level___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__independent_task_level

 axiom independent_task_level__def_axiom :
  ((System__tasking__independent_task_level.independent_task_level ) = 2)

end

(* Module for defining the value of constant "library_task_level" defined at s-taskin.ads:773, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__library_task_level___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__library_task_level

 axiom library_task_level__def_axiom :
  ((System__tasking__library_task_level.library_task_level ) = 3)

end

(* Module for defining the value of constant "unspecified_priority" defined at s-taskin.ads:779, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__unspecified_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__unspecified_priority

 axiom unspecified_priority__def_axiom :
  ((System__tasking__unspecified_priority.unspecified_priority ) = ( -1 ))

end

(* Module for defining the value of constant "priority_not_boosted" defined at s-taskin.ads:781, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__priority_not_boosted___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__priority_not_boosted

 axiom priority_not_boosted__def_axiom :
  ((System__tasking__priority_not_boosted.priority_not_boosted ) = ( -1 ))

end

(* Module for defining the value of constant "unspecified_cpu" defined at s-taskin.ads:791, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__unspecified_cpu___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__unspecified_cpu

 axiom unspecified_cpu__def_axiom :
  ((System__tasking__unspecified_cpu.unspecified_cpu ) = ( -1 ))

end

(* Module for defining the value of constant "no_rendezvous" defined at s-taskin.ads:798, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__no_rendezvous___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__no_rendezvous

 axiom no_rendezvous__def_axiom :
  ((System__tasking__no_rendezvous.no_rendezvous ) = 0)

end

(* Module for defining the value of constant "max_select" defined at s-taskin.ads:800, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__max_select___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__max_select

 axiom max_select__def_axiom :
  ((System__tasking__max_select.max_select ) = 2147483647)

end

(* Module for defining the value of constant "max_atc_nesting" defined at s-taskin.ads:823, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__max_atc_nesting___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__max_atc_nesting

 axiom max_atc_nesting__def_axiom :
  ((System__tasking__max_atc_nesting.max_atc_nesting ) = 20)

end

(* Module for defining the value of constant "atc_level_infinity" defined at s-taskin.ads:827, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tasking__atc_level_infinity___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__tasking__atc_level_infinity

 axiom atc_level_infinity__def_axiom :
  ((System__tasking__atc_level_infinity.atc_level_infinity ) = 20)

end

(* Module for defining the value of constant "time_unit" defined at a-reatim.ads:54, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__real_time__time_unit___axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        Ada__real_time__time_unit

 axiom time_unit__def_axiom :
  ((Ada__real_time__time_unit.time_unit ) = (Standard__universal_real.of_real (10.0E-10)))

end

(* Module for defining the value of constant "current_mode" defined at polyorb_hi-output.ads:64, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi__output__current_mode___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__output__current_mode

 axiom current_mode__def_axiom :
  ((Polyorb_hi__output__current_mode.current_mode ) = 1)

end

(* Module for defining the value of constant "elapsed" defined at polyorb_hi-output.adb:75, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi__output__lockT__put_line__elapsed___axiom
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "elapsed" defined at polyorb_hi-output.adb:90, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi__output__lockT__put__elapsed___axiom
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "now" defined at polyorb_hi-output.adb:108, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi__output__build_timestamp__now___axiom
 use        Ada__real_time__clock_time
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "hex" defined at polyorb_hi-output.adb:171, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi__output__hex___axiom
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__output__hex
 use        Array__Int__Standard__character
 use        Temp___167

 axiom hex__def_axiom :
  ((Polyorb_hi__output__hex.hex ) = Temp___167.temp___167)

end

(* Module for defining the value of constant "nil" defined at polyorb_hi-output.adb:172, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi__output__nil___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__output__nil
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__nil__aggregate_def
 use        Array__Int__Standard__character

 axiom nil__def_axiom :
  ((Polyorb_hi__output__nil.nil ) = (Polyorb_hi__output__nil__aggregate_def.polyorb_hi__output__nil__aggregate_def 32))

end

(* Module for defining the value of constant "R27b" defined at polyorb_hi-output.adb:183, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi__output__dump__L_1__R27b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "R28b" defined at polyorb_hi-output.adb:183, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi__output__dump__L_1__R28b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly an axiom) for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Olt___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__Olt

 val olt #"system.ads" 77 0 0# 
   (left : BV64.t) (right : BV64.t) : bool
  requires { true }
  ensures { (result = (System__Olt.olt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ole___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__Ole

 val ole #"system.ads" 78 0 0# 
   (left : BV64.t) (right : BV64.t) : bool
  requires { true }
  ensures { (result = (System__Ole.ole left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ogt___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__Ogt

 val ogt #"system.ads" 79 0 0# 
   (left : BV64.t) (right : BV64.t) : bool
  requires { true }
  ensures { (result = (System__Ogt.ogt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oge___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__Oge

 val oge #"system.ads" 80 0 0# 
   (left : BV64.t) (right : BV64.t) : bool
  requires { true }
  ensures { (result = (System__Oge.oge left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oeq___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__Oeq

 val oeq #"system.ads" 81 0 0# 
   (left : BV64.t) (right : BV64.t) : bool
  requires { true }
  ensures { (result = (System__Oeq.oeq left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "new_line" defined at polyorb_hi-output_low_level.ads:36, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__output_low_level__new_line___axiom
 use import "_gnatprove_standard".Main

 val new_line #"polyorb_hi-output_low_level.ads" 36 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "put" defined at polyorb_hi-output_low_level.ads:40, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__output_low_level__put___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val put #"polyorb_hi-output_low_level.ads" 40 0 0# 
   (s : Standard__string.string) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "default_stack_size" defined at s-parame.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__parameters__default_stack_size___axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type___axiom
 use        System__parameters__default_stack_size

 val default_stack_size #"s-parame.ads" 81 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (System__parameters__default_stack_size.default_stack_size ())) /\ (System__parameters__size_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom default_stack_size__post_axiom :
  (forall __void_param : unit [(System__parameters__default_stack_size.default_stack_size __void_param)].
   ( true -> (let result = (System__parameters__default_stack_size.default_stack_size __void_param) in (
    (System__parameters__size_type___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "minimum_stack_size" defined at s-parame.ads:84, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__parameters__minimum_stack_size___axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type___axiom
 use        System__parameters__minimum_stack_size

 val minimum_stack_size #"s-parame.ads" 84 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (System__parameters__minimum_stack_size.minimum_stack_size ())) /\ (System__parameters__size_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom minimum_stack_size__post_axiom :
  (forall __void_param : unit [(System__parameters__minimum_stack_size.minimum_stack_size __void_param)].
   ( true -> (let result = (System__parameters__minimum_stack_size.minimum_stack_size __void_param) in (
    (System__parameters__size_type___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "adjust_storage_size" defined at s-parame.ads:87, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__parameters__adjust_storage_size___axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        System__parameters__size_type___axiom
 use        System__parameters__adjust_storage_size

 val adjust_storage_size #"s-parame.ads" 87 0 0# 
   (size : int) : int
  requires { true }
  ensures { ( (result = (System__parameters__adjust_storage_size.adjust_storage_size size)) /\ (System__parameters__size_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom adjust_storage_size__post_axiom :
  (forall size : int [(System__parameters__adjust_storage_size.adjust_storage_size size)].
   ( (System__parameters__size_type.in_range size) -> (let result = (System__parameters__adjust_storage_size.adjust_storage_size size) in (
    (System__parameters__size_type___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "abort_undefer_direct" defined at s-stalib.ads:254, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__standard_library__abort_undefer_direct___axiom
 use import "_gnatprove_standard".Main

 val abort_undefer_direct #"s-stalib.ads" 254 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "adafinal" defined at s-stalib.ads:259, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__standard_library__adafinal___axiom
 use import "_gnatprove_standard".Main

 val adafinal #"s-stalib.ads" 259 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "pc_for" defined at s-traent.ads:58, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__traceback_entries__pc_for___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__traceback_entries__traceback_entry
 use        System__traceback_entries__pc_for

 val pc_for #"s-traent.ads" 58 0 0# 
   (tb_entry : BV64.t) : BV64.t
  requires { true }
  ensures { ( (result = (System__traceback_entries__pc_for.pc_for tb_entry)) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom pc_for__post_axiom :
  (forall tb_entry : BV64.t [(System__traceback_entries__pc_for.pc_for tb_entry)].
   ( (if (( True \/ (BV64.ule System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last) )) then (
    (System__traceback_entries__traceback_entry.dynamic_property System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last tb_entry)) else true) -> (let result = (System__traceback_entries__pc_for.pc_for tb_entry) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "tb_entry_for" defined at s-traent.ads:63, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__traceback_entries__tb_entry_for___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__traceback_entries__traceback_entry
 use        System__traceback_entries__tb_entry_for

 val tb_entry_for #"s-traent.ads" 63 0 0# 
   (pc : BV64.t) : BV64.t
  requires { true }
  ensures { ( (result = (System__traceback_entries__tb_entry_for.tb_entry_for pc)) /\ (if (( True \/ (BV64.ule System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last) )) then (
   (System__traceback_entries__traceback_entry.dynamic_property System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last result)) else true) ) }
 
 axiom tb_entry_for__post_axiom :
  (forall pc : BV64.t [(System__traceback_entries__tb_entry_for.tb_entry_for pc)].
   ( (System__address___axiom.dynamic_invariant pc True True True) -> (let result = (System__traceback_entries__tb_entry_for.tb_entry_for pc) in (
    (if (( True \/ (BV64.ule System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last) )) then (
     (System__traceback_entries__traceback_entry.dynamic_property System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last result)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "exception_name" defined at a-except.ads:70, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_name___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id___axiom
 use        Ada__exceptions__exception_name

 val exception_name #"a-except.ads" 70 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__exceptions__exception_name.exception_name id)) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_name__post_axiom :
  (forall id : Ada__exceptions__exception_id.exception_id [(Ada__exceptions__exception_name.exception_name id)].
   ( (Ada__exceptions__exception_id___axiom.dynamic_invariant id True True True) -> (let result = (Ada__exceptions__exception_name.exception_name id) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "exception_name__2" defined at a-except.ads:72, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_name__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__exception_name__2

 val exception_name__2 #"a-except.ads" 72 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__exceptions__exception_name__2.exception_name__2 x)) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_name__2__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_name__2.exception_name__2 x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_name__2.exception_name__2 x) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "wide_exception_name" defined at a-except.ads:74, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__wide_exception_name___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Standard__wide_string___axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id___axiom
 use        Ada__exceptions__wide_exception_name

 val wide_exception_name #"a-except.ads" 74 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__wide_string.wide_string
  requires { true }
  ensures { ( (result = (Ada__exceptions__wide_exception_name.wide_exception_name id)) /\ (Standard__wide_string___axiom.dynamic_invariant result True False True) ) }
 
 axiom wide_exception_name__post_axiom :
  (forall id : Ada__exceptions__exception_id.exception_id [(Ada__exceptions__wide_exception_name.wide_exception_name id)].
   ( (Ada__exceptions__exception_id___axiom.dynamic_invariant id True True True) -> (let result = (Ada__exceptions__wide_exception_name.wide_exception_name id) in (
    (Standard__wide_string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "wide_exception_name__2" defined at a-except.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__wide_exception_name__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Standard__wide_string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__wide_exception_name__2

 val wide_exception_name__2 #"a-except.ads" 78 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__wide_string.wide_string
  requires { true }
  ensures { ( (result = (Ada__exceptions__wide_exception_name__2.wide_exception_name__2 x)) /\ (Standard__wide_string___axiom.dynamic_invariant result True False True) ) }
 
 axiom wide_exception_name__2__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__wide_exception_name__2.wide_exception_name__2 x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__wide_exception_name__2.wide_exception_name__2 x) in (
    (Standard__wide_string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "wide_wide_exception_name" defined at a-except.ads:82, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__wide_wide_exception_name___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Standard__wide_wide_string___axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id___axiom
 use        Ada__exceptions__wide_wide_exception_name

 val wide_wide_exception_name #"a-except.ads" 82 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__wide_wide_string.wide_wide_string
  requires { true }
  ensures { ( (result = (Ada__exceptions__wide_wide_exception_name.wide_wide_exception_name id)) /\ (Standard__wide_wide_string___axiom.dynamic_invariant result True False True) ) }
 
 axiom wide_wide_exception_name__post_axiom :
  (forall id : Ada__exceptions__exception_id.exception_id [(Ada__exceptions__wide_wide_exception_name.wide_wide_exception_name id)].
   ( (Ada__exceptions__exception_id___axiom.dynamic_invariant id True True True) -> (let result = (Ada__exceptions__wide_wide_exception_name.wide_wide_exception_name id) in (
    (Standard__wide_wide_string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "wide_wide_exception_name__2" defined at a-except.ads:86, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__wide_wide_exception_name__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Standard__wide_wide_string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__wide_wide_exception_name__2

 val wide_wide_exception_name__2 #"a-except.ads" 86 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__wide_wide_string.wide_wide_string
  requires { true }
  ensures { ( (result = (Ada__exceptions__wide_wide_exception_name__2.wide_wide_exception_name__2 x)) /\ (Standard__wide_wide_string___axiom.dynamic_invariant result True False True) ) }
 
 axiom wide_wide_exception_name__2__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__wide_wide_exception_name__2.wide_wide_exception_name__2 x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__wide_wide_exception_name__2.wide_wide_exception_name__2 x) in (
    (Standard__wide_wide_string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "raise_exception" defined at a-except.ads:90, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__raise_exception___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 val raise_exception #"a-except.ads" 90 0 0# 
   (e : Ada__exceptions__exception_id.exception_id) (message : Standard__string.string) : unit
  requires { true }
  ensures { false }
 
 namespace No_Return
  val raise_exception #"a-except.ads" 90 0 0# 
    (e : Ada__exceptions__exception_id.exception_id) (message : Standard__string.string) : unit
   requires { false }
   ensures { false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "exception_message" defined at a-except.ads:94, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_message___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__exception_message

 val exception_message #"a-except.ads" 94 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__exceptions__exception_message.exception_message x)) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_message__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_message.exception_message x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_message.exception_message x) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "reraise_occurrence" defined at a-except.ads:96, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__reraise_occurrence___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val reraise_occurrence #"a-except.ads" 96 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "exception_identity" defined at a-except.ads:102, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_identity___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__exception_identity

 val exception_identity #"a-except.ads" 102 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Ada__exceptions__exception_id.exception_id
  requires { true }
  ensures { ( (result = (Ada__exceptions__exception_identity.exception_identity x)) /\ (Ada__exceptions__exception_id___axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_identity__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_identity.exception_identity x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_identity.exception_identity x) in (
    (Ada__exceptions__exception_id___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "exception_information" defined at a-except.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_information___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__exception_information

 val exception_information #"a-except.ads" 104 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__exceptions__exception_information.exception_information x)) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_information__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_information.exception_information x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_information.exception_information x) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "save_occurrence" defined at a-except.ads:123, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__save_occurrence___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom

 val save_occurrence #"a-except.ads" 123 0 0# 
   (target : Ada__exceptions__exception_occurrence.exception_occurrence__ref) (source : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { true }
  ensures { (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant target.Ada__exceptions__exception_occurrence.exception_occurrence__content True True True) }
  writes {target}

end

(* Module for declaring a program function (and possibly an axiom) for "eid_to_string" defined at a-except.ads:169, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__eid_to_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id___axiom
 use        Ada__exceptions__eid_to_string

 val eid_to_string #"a-except.ads" 169 0 0# 
   (x : Ada__exceptions__exception_id.exception_id) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__exceptions__eid_to_string.eid_to_string x)) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom eid_to_string__post_axiom :
  (forall x : Ada__exceptions__exception_id.exception_id [(Ada__exceptions__eid_to_string.eid_to_string x)].
   ( (Ada__exceptions__exception_id___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__eid_to_string.eid_to_string x) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "string_to_eid" defined at a-except.ads:170, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__string_to_eid___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id___axiom
 use        Ada__exceptions__string_to_eid

 val string_to_eid #"a-except.ads" 170 0 0# 
   (s : Standard__string.string) : Ada__exceptions__exception_id.exception_id
  requires { true }
  ensures { ( (result = (Ada__exceptions__string_to_eid.string_to_eid s)) /\ (Ada__exceptions__exception_id___axiom.dynamic_invariant result True False True) ) }
 
 axiom string_to_eid__post_axiom :
  (forall s : Standard__string.string [(Ada__exceptions__string_to_eid.string_to_eid s)].
   ( (Standard__string___axiom.dynamic_invariant s True True True) -> (let result = (Ada__exceptions__string_to_eid.string_to_eid s) in (
    (Ada__exceptions__exception_id___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "exception_name_simple" defined at a-except.ads:180, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_name_simple___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__exception_name_simple

 val exception_name_simple #"a-except.ads" 180 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__exceptions__exception_name_simple.exception_name_simple x)) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_name_simple__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_name_simple.exception_name_simple x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_name_simple.exception_name_simple x) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "raise_exception_always" defined at a-except.ads:188, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__raise_exception_always___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 val raise_exception_always #"a-except.ads" 188 0 0# 
   (e : Ada__exceptions__exception_id.exception_id) (message : Standard__string.string) : unit
  requires { true }
  ensures { false }
 
 namespace No_Return
  val raise_exception_always #"a-except.ads" 188 0 0# 
    (e : Ada__exceptions__exception_id.exception_id) (message : Standard__string.string) : unit
   requires { false }
   ensures { false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "raise_from_signal_handler" defined at a-except.ads:197, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__raise_from_signal_handler___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Ada__exceptions__exception_id

 val raise_from_signal_handler #"a-except.ads" 197 0 0# 
   (e : Ada__exceptions__exception_id.exception_id) (m : BV64.t) : unit
  requires { true }
  ensures { false }
 
 namespace No_Return
  val raise_from_signal_handler #"a-except.ads" 197 0 0# 
    (e : Ada__exceptions__exception_id.exception_id) (m : BV64.t) : unit
   requires { false }
   ensures { false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "raise_from_controlled_operation" defined at a-except.ads:215, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__raise_from_controlled_operation___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val raise_from_controlled_operation #"a-except.ads" 215 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { true }
  ensures { false }
 
 namespace No_Return
  val raise_from_controlled_operation #"a-except.ads" 215 0 0# 
    (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
   requires { false }
   ensures { false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "reraise_library_exception_if_any" defined at a-except.ads:224, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__reraise_library_exception_if_any___axiom
 use import "_gnatprove_standard".Main

 val reraise_library_exception_if_any #"a-except.ads" 224 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "reraise_occurrence_always" defined at a-except.ads:231, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__reraise_occurrence_always___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val reraise_occurrence_always #"a-except.ads" 231 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { true }
  ensures { false }
 
 namespace No_Return
  val reraise_occurrence_always #"a-except.ads" 231 0 0# 
    (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
   requires { false }
   ensures { false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "reraise_occurrence_no_defer" defined at a-except.ads:238, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__reraise_occurrence_no_defer___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val reraise_occurrence_no_defer #"a-except.ads" 238 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { true }
  ensures { false }
 
 namespace No_Return
  val reraise_occurrence_no_defer #"a-except.ads" 238 0 0# 
    (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
   requires { false }
   ensures { false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "triggered_by_abort" defined at a-except.ads:245, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__triggered_by_abort___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__triggered_by_abort

 val triggered_by_abort #"a-except.ads" 245 0 0# 
   (__void_param : unit) : bool
  requires { true }
  ensures { (result = (Ada__exceptions__triggered_by_abort.triggered_by_abort ())) }

end

(* Module for declaring a program function (and possibly an axiom) for "poll" defined at a-except.ads:270, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__poll___axiom
 use import "_gnatprove_standard".Main

 val poll #"a-except.ads" 270 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq" defined at a-except.ads:319, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__Oeq___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__Oeq

 val oeq #"a-except.ads" 319 0 0# 
   (left : Ada__exceptions__exception_occurrence.exception_occurrence) (right : Ada__exceptions__exception_occurrence.exception_occurrence) : bool
  requires { true }
  ensures { (result = (Ada__exceptions__Oeq.oeq left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_exception_machine_occurrence" defined at a-except.ads:325, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__get_exception_machine_occurrence___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__get_exception_machine_occurrence

 val get_exception_machine_occurrence #"a-except.ads" 325 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : BV64.t
  requires { true }
  ensures { ( (result = (Ada__exceptions__get_exception_machine_occurrence.get_exception_machine_occurrence x)) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_exception_machine_occurrence__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__get_exception_machine_occurrence.get_exception_machine_occurrence x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__get_exception_machine_occurrence.get_exception_machine_occurrence x) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "eo_to_string" defined at a-except.ads:334, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__eo_to_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__eo_to_string

 val eo_to_string #"a-except.ads" 334 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { true }
  ensures { ( (result = (Ada__exceptions__eo_to_string.eo_to_string x)) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom eo_to_string__post_axiom :
  (forall x : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__eo_to_string.eo_to_string x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__eo_to_string.eo_to_string x) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "string_to_eo" defined at a-except.ads:335, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__string_to_eo___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__string_to_eo

 val string_to_eo #"a-except.ads" 335 0 0# 
   (s : Standard__string.string) : Ada__exceptions__exception_occurrence.exception_occurrence
  requires { true }
  ensures { ( (result = (Ada__exceptions__string_to_eo.string_to_eo s)) /\ (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant result True False True) ) }
 
 axiom string_to_eo__post_axiom :
  (forall s : Standard__string.string [(Ada__exceptions__string_to_eo.string_to_eo s)].
   ( (Standard__string___axiom.dynamic_invariant s True True True) -> (let result = (Ada__exceptions__string_to_eo.string_to_eo s) in (
    (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd" defined at s-stoele.ads:76, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__storage_elements__Oadd___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__storage_elements__storage_offset
 use        System__storage_elements__Oadd

 val oadd #"s-stoele.ads" 76 0 0# 
   (left : BV64.t) (right : int) : BV64.t
  requires { true }
  ensures { ( (result = (System__storage_elements__Oadd.oadd left right)) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__post_axiom :
  (forall left : BV64.t.
  (forall right : int [(System__storage_elements__Oadd.oadd left right)].
   ( ( (System__address___axiom.dynamic_invariant left True True True) /\ (System__storage_elements__storage_offset.in_range right) ) -> (let result = (System__storage_elements__Oadd.oadd left right) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd__2" defined at s-stoele.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__storage_elements__Oadd__2___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__storage_elements__storage_offset
 use        System__storage_elements__Oadd__2

 val oadd__2 #"s-stoele.ads" 81 0 0# 
   (left : int) (right : BV64.t) : BV64.t
  requires { true }
  ensures { ( (result = (System__storage_elements__Oadd__2.oadd__2 left right)) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__2__post_axiom :
  (forall left : int.
  (forall right : BV64.t [(System__storage_elements__Oadd__2.oadd__2 left right)].
   ( ( (System__storage_elements__storage_offset.in_range left) /\ (System__address___axiom.dynamic_invariant right True True True) ) -> (let result = (System__storage_elements__Oadd__2.oadd__2 left right) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Osubtract" defined at s-stoele.ads:86, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__storage_elements__Osubtract___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__storage_elements__storage_offset
 use        System__storage_elements__Osubtract

 val osubtract #"s-stoele.ads" 86 0 0# 
   (left : BV64.t) (right : int) : BV64.t
  requires { true }
  ensures { ( (result = (System__storage_elements__Osubtract.osubtract left right)) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom osubtract__post_axiom :
  (forall left : BV64.t.
  (forall right : int [(System__storage_elements__Osubtract.osubtract left right)].
   ( ( (System__address___axiom.dynamic_invariant left True True True) /\ (System__storage_elements__storage_offset.in_range right) ) -> (let result = (System__storage_elements__Osubtract.osubtract left right) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Osubtract__2" defined at s-stoele.ads:91, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__storage_elements__Osubtract__2___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__storage_elements__storage_offset___axiom
 use        System__storage_elements__Osubtract__2

 val osubtract__2 #"s-stoele.ads" 91 0 0# 
   (left : BV64.t) (right : BV64.t) : int
  requires { true }
  ensures { ( (result = (System__storage_elements__Osubtract__2.osubtract__2 left right)) /\ (System__storage_elements__storage_offset___axiom.dynamic_invariant result True False True) ) }
 
 axiom osubtract__2__post_axiom :
  (forall left right : BV64.t [(System__storage_elements__Osubtract__2.osubtract__2 left right)].
   ( ( (System__address___axiom.dynamic_invariant left True True True) /\ (System__address___axiom.dynamic_invariant right True True True) ) -> (let result = (System__storage_elements__Osubtract__2.osubtract__2 left right) in (
    (System__storage_elements__storage_offset___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "Omod" defined at s-stoele.ads:96, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__storage_elements__Omod___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__storage_elements__storage_offset
 use        System__storage_elements__storage_offset___axiom
 use        System__storage_elements__Omod

 val omod #"s-stoele.ads" 96 0 0# 
   (left : BV64.t) (right : int) : int
  requires { true }
  ensures { ( (result = (System__storage_elements__Omod.omod left right)) /\ (System__storage_elements__storage_offset___axiom.dynamic_invariant result True False True) ) }
 
 axiom omod__post_axiom :
  (forall left : BV64.t.
  (forall right : int [(System__storage_elements__Omod.omod left right)].
   ( ( (System__address___axiom.dynamic_invariant left True True True) /\ (System__storage_elements__storage_offset.in_range right) ) -> (let result = (System__storage_elements__Omod.omod left right) in (
    (System__storage_elements__storage_offset___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_address" defined at s-stoele.ads:107, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__storage_elements__to_address___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__storage_elements__integer_address
 use        System__storage_elements__to_address

 val to_address #"s-stoele.ads" 107 0 0# 
   (value : BV64.t) : BV64.t
  requires { true }
  ensures { ( (result = (System__storage_elements__to_address.to_address value)) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_address__post_axiom :
  (forall value : BV64.t [(System__storage_elements__to_address.to_address value)].
   ( (System__storage_elements__integer_address.in_range value) -> (let result = (System__storage_elements__to_address.to_address value) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_integer" defined at s-stoele.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__storage_elements__to_integer___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__storage_elements__integer_address___axiom
 use        System__storage_elements__to_integer

 val to_integer #"s-stoele.ads" 112 0 0# 
   (value : BV64.t) : BV64.t
  requires { true }
  ensures { ( (result = (System__storage_elements__to_integer.to_integer value)) /\ (System__storage_elements__integer_address___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_integer__post_axiom :
  (forall value : BV64.t [(System__storage_elements__to_integer.to_integer value)].
   ( (System__address___axiom.dynamic_invariant value True True True) -> (let result = (System__storage_elements__to_integer.to_integer value) in (
    (System__storage_elements__integer_address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "current_target_exception" defined at s-soflin.ads:51, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__current_target_exception___axiom
 use import "_gnatprove_standard".Main
 use        System__soft_links__eo
 use        System__soft_links__eo___axiom
 use        System__soft_links__current_target_exception

 val current_target_exception #"s-soflin.ads" 51 0 0# 
   (__void_param : unit) : System__soft_links__eo.eo
  requires { true }
  ensures { ( (result = (System__soft_links__current_target_exception.current_target_exception ())) /\ (System__soft_links__eo___axiom.dynamic_invariant result True False True) ) }
 
 axiom current_target_exception__post_axiom :
  (forall __void_param : unit [(System__soft_links__current_target_exception.current_target_exception __void_param)].
   ( true -> (let result = (System__soft_links__current_target_exception.current_target_exception __void_param) in (
    (System__soft_links__eo___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "abort_defer_nt" defined at s-soflin.ads:136, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__abort_defer_nt___axiom
 use import "_gnatprove_standard".Main

 val abort_defer_nt #"s-soflin.ads" 136 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "abort_undefer_nt" defined at s-soflin.ads:139, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__abort_undefer_nt___axiom
 use import "_gnatprove_standard".Main

 val abort_undefer_nt #"s-soflin.ads" 139 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "abort_handler_nt" defined at s-soflin.ads:142, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__abort_handler_nt___axiom
 use import "_gnatprove_standard".Main

 val abort_handler_nt #"s-soflin.ads" 142 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "check_abort_status_nt" defined at s-soflin.ads:146, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__check_abort_status_nt___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer___axiom
 use        System__soft_links__check_abort_status_nt

 val check_abort_status_nt #"s-soflin.ads" 146 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (System__soft_links__check_abort_status_nt.check_abort_status_nt ())) /\ (Standard__integer___axiom.dynamic_invariant result True False True) ) }
 
 axiom check_abort_status_nt__post_axiom :
  (forall __void_param : unit [(System__soft_links__check_abort_status_nt.check_abort_status_nt __void_param)].
   ( true -> (let result = (System__soft_links__check_abort_status_nt.check_abort_status_nt __void_param) in (
    (Standard__integer___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "task_lock_nt" defined at s-soflin.ads:150, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__task_lock_nt___axiom
 use import "_gnatprove_standard".Main

 val task_lock_nt #"s-soflin.ads" 150 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "task_unlock_nt" defined at s-soflin.ads:153, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__task_unlock_nt___axiom
 use import "_gnatprove_standard".Main

 val task_unlock_nt #"s-soflin.ads" 153 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "task_termination_nt" defined at s-soflin.ads:156, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__task_termination_nt___axiom
 use import "_gnatprove_standard".Main
 use        System__soft_links__eo

 val task_termination_nt #"s-soflin.ads" 156 0 0# 
   (excep : System__soft_links__eo.eo) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "adafinal_nt" defined at s-soflin.ads:160, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__adafinal_nt___axiom
 use import "_gnatprove_standard".Main

 val adafinal_nt #"s-soflin.ads" 160 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "get_jmpbuf_address_nt" defined at s-soflin.ads:225, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__get_jmpbuf_address_nt___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__soft_links__get_jmpbuf_address_nt

 val get_jmpbuf_address_nt #"s-soflin.ads" 225 0 0# 
   (__void_param : unit) : BV64.t
  requires { true }
  ensures { ( (result = (System__soft_links__get_jmpbuf_address_nt.get_jmpbuf_address_nt ())) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_jmpbuf_address_nt__post_axiom :
  (forall __void_param : unit [(System__soft_links__get_jmpbuf_address_nt.get_jmpbuf_address_nt __void_param)].
   ( true -> (let result = (System__soft_links__get_jmpbuf_address_nt.get_jmpbuf_address_nt __void_param) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "set_jmpbuf_address_nt" defined at s-soflin.ads:226, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__set_jmpbuf_address_nt___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 val set_jmpbuf_address_nt #"s-soflin.ads" 226 0 0# 
   (addr : BV64.t) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "get_sec_stack_addr_nt" defined at s-soflin.ads:231, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__get_sec_stack_addr_nt___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__soft_links__get_sec_stack_addr_nt

 val get_sec_stack_addr_nt #"s-soflin.ads" 231 0 0# 
   (__void_param : unit) : BV64.t
  requires { true }
  ensures { ( (result = (System__soft_links__get_sec_stack_addr_nt.get_sec_stack_addr_nt ())) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_sec_stack_addr_nt__post_axiom :
  (forall __void_param : unit [(System__soft_links__get_sec_stack_addr_nt.get_sec_stack_addr_nt __void_param)].
   ( true -> (let result = (System__soft_links__get_sec_stack_addr_nt.get_sec_stack_addr_nt __void_param) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "set_sec_stack_addr_nt" defined at s-soflin.ads:232, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__set_sec_stack_addr_nt___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 val set_sec_stack_addr_nt #"s-soflin.ads" 232 0 0# 
   (addr : BV64.t) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "current_master_nt" defined at s-soflin.ads:253, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__current_master_nt___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer___axiom
 use        System__soft_links__current_master_nt

 val current_master_nt #"s-soflin.ads" 253 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (System__soft_links__current_master_nt.current_master_nt ())) /\ (Standard__integer___axiom.dynamic_invariant result True False True) ) }
 
 axiom current_master_nt__post_axiom :
  (forall __void_param : unit [(System__soft_links__current_master_nt.current_master_nt __void_param)].
   ( true -> (let result = (System__soft_links__current_master_nt.current_master_nt __void_param) in (
    (Standard__integer___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "enter_master_nt" defined at s-soflin.ads:254, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__enter_master_nt___axiom
 use import "_gnatprove_standard".Main

 val enter_master_nt #"s-soflin.ads" 254 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "complete_master_nt" defined at s-soflin.ads:255, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__complete_master_nt___axiom
 use import "_gnatprove_standard".Main

 val complete_master_nt #"s-soflin.ads" 255 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "task_name_nt" defined at s-soflin.ads:274, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__task_name_nt___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        System__soft_links__task_name_nt

 val task_name_nt #"s-soflin.ads" 274 0 0# 
   (__void_param : unit) : Standard__string.string
  requires { true }
  ensures { ( (result = (System__soft_links__task_name_nt.task_name_nt ())) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom task_name_nt__post_axiom :
  (forall __void_param : unit [(System__soft_links__task_name_nt.task_name_nt __void_param)].
   ( true -> (let result = (System__soft_links__task_name_nt.task_name_nt __void_param) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_gnat_exception" defined at s-soflin.ads:357, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__get_gnat_exception___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id___axiom
 use        System__soft_links__get_gnat_exception

 val get_gnat_exception #"s-soflin.ads" 357 0 0# 
   (__void_param : unit) : Ada__exceptions__exception_id.exception_id
  requires { true }
  ensures { ( (result = (System__soft_links__get_gnat_exception.get_gnat_exception ())) /\ (Ada__exceptions__exception_id___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_gnat_exception__post_axiom :
  (forall __void_param : unit [(System__soft_links__get_gnat_exception.get_gnat_exception __void_param)].
   ( true -> (let result = (System__soft_links__get_gnat_exception.get_gnat_exception __void_param) in (
    (Ada__exceptions__exception_id___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_jmpbuf_address_soft" defined at s-soflin.ads:368, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__get_jmpbuf_address_soft___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__soft_links__get_jmpbuf_address_soft

 val get_jmpbuf_address_soft #"s-soflin.ads" 368 0 0# 
   (__void_param : unit) : BV64.t
  requires { true }
  ensures { ( (result = (System__soft_links__get_jmpbuf_address_soft.get_jmpbuf_address_soft ())) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_jmpbuf_address_soft__post_axiom :
  (forall __void_param : unit [(System__soft_links__get_jmpbuf_address_soft.get_jmpbuf_address_soft __void_param)].
   ( true -> (let result = (System__soft_links__get_jmpbuf_address_soft.get_jmpbuf_address_soft __void_param) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "set_jmpbuf_address_soft" defined at s-soflin.ads:369, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__set_jmpbuf_address_soft___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 val set_jmpbuf_address_soft #"s-soflin.ads" 369 0 0# 
   (addr : BV64.t) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "get_sec_stack_addr_soft" defined at s-soflin.ads:373, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__get_sec_stack_addr_soft___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__soft_links__get_sec_stack_addr_soft

 val get_sec_stack_addr_soft #"s-soflin.ads" 373 0 0# 
   (__void_param : unit) : BV64.t
  requires { true }
  ensures { ( (result = (System__soft_links__get_sec_stack_addr_soft.get_sec_stack_addr_soft ())) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_sec_stack_addr_soft__post_axiom :
  (forall __void_param : unit [(System__soft_links__get_sec_stack_addr_soft.get_sec_stack_addr_soft __void_param)].
   ( true -> (let result = (System__soft_links__get_sec_stack_addr_soft.get_sec_stack_addr_soft __void_param) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "set_sec_stack_addr_soft" defined at s-soflin.ads:374, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__soft_links__set_sec_stack_addr_soft___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 val set_sec_stack_addr_soft #"s-soflin.ads" 374 0 0# 
   (addr : BV64.t) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "to_c" defined at i-c.ads:76, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c___axiom
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        Interfaces__c__char___axiom
 use        Interfaces__c__to_c

 val to_c #"i-c.ads" 76 0 0# 
   (item : int) : int
  requires { true }
  ensures { ( (result = (Interfaces__c__to_c.to_c item)) /\ (Interfaces__c__char___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__post_axiom :
  (forall item : int [(Interfaces__c__to_c.to_c item)].
   ( (Standard__character.in_range item) -> (let result = (Interfaces__c__to_c.to_c item) in (
    (Interfaces__c__char___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada" defined at i-c.ads:77, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada___axiom
 use import "_gnatprove_standard".Main
 use        Standard__character___axiom
 use        Interfaces__c__char
 use        Interfaces__c__to_ada

 val to_ada #"i-c.ads" 77 0 0# 
   (item : int) : int
  requires { true }
  ensures { ( (result = (Interfaces__c__to_ada.to_ada item)) /\ (Standard__character___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__post_axiom :
  (forall item : int [(Interfaces__c__to_ada.to_ada item)].
   ( (Interfaces__c__char.in_range item) -> (let result = (Interfaces__c__to_ada.to_ada item) in (
    (Standard__character___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_nul_terminated" defined at i-c.ads:82, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__is_nul_terminated___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char_array
 use        Interfaces__c__is_nul_terminated

 val is_nul_terminated #"i-c.ads" 82 0 0# 
   (item : Interfaces__c__char_array.char_array) : bool
  requires { true }
  ensures { (result = (Interfaces__c__is_nul_terminated.is_nul_terminated item)) }

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__2" defined at i-c.ads:84, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Interfaces__c__char_array
 use        Interfaces__c__char_array___axiom
 use        Interfaces__c__to_c__2

 val to_c__2 #"i-c.ads" 84 0 0# 
   (item : Standard__string.string) (append_nul : bool) : Interfaces__c__char_array.char_array
  requires { true }
  ensures { ( (result = (Interfaces__c__to_c__2.to_c__2 item append_nul)) /\ (Interfaces__c__char_array___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__2__post_axiom :
  (forall item : Standard__string.string.
  (forall append_nul : bool [(Interfaces__c__to_c__2.to_c__2 item append_nul)].
   ( (Standard__string___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_c__2.to_c__2 item append_nul) in (
    (Interfaces__c__char_array___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__2" defined at i-c.ads:88, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Interfaces__c__char_array
 use        Interfaces__c__char_array___axiom
 use        Interfaces__c__to_ada__2

 val to_ada__2 #"i-c.ads" 88 0 0# 
   (item : Interfaces__c__char_array.char_array) (trim_nul : bool) : Standard__string.string
  requires { true }
  ensures { ( (result = (Interfaces__c__to_ada__2.to_ada__2 item trim_nul)) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__2__post_axiom :
  (forall item : Interfaces__c__char_array.char_array.
  (forall trim_nul : bool [(Interfaces__c__to_ada__2.to_ada__2 item trim_nul)].
   ( (Interfaces__c__char_array___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_ada__2.to_ada__2 item trim_nul) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__3" defined at i-c.ads:92, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__3___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Standard__string
 use        Interfaces__c__size_t
 use        Interfaces__c__size_t___axiom
 use        Interfaces__c__char_array
 use        Array__BV64__Interfaces__c__char

 val to_c__3 #"i-c.ads" 92 0 0# 
   (item : Standard__string.string) (target : Array__BV64__Interfaces__c__char.map__ref) (target__first : BV64.t) (target__last : BV64.t) (count : BV64.t__ref) (append_nul : bool) : unit
  requires { true }
  ensures { ( (if (True) then (
   true) else (
   (Interfaces__c__char_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last target__first target__last))) /\ (Interfaces__c__size_t___axiom.dynamic_invariant count.BV64.t__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__3" defined at i-c.ads:98, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__3___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__natural___axiom
 use        Standard__positive
 use        Interfaces__c__char_array
 use        Array__Int__Standard__character

 val to_ada__3 #"i-c.ads" 98 0 0# 
   (item : Interfaces__c__char_array.char_array) (target : Array__Int__Standard__character.map__ref) (target__first : int) (target__last : int) (count : int__ref) (trim_nul : bool) : unit
  requires { true }
  ensures { ( (if (True) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last target__first target__last))) /\ (Standard__natural___axiom.dynamic_invariant count.int__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__4" defined at i-c.ads:113, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__4___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_character
 use        Interfaces__c__wchar_t___axiom
 use        Interfaces__c__to_c__4

 val to_c__4 #"i-c.ads" 113 0 0# 
   (item : int) : int
  requires { true }
  ensures { ( (result = (Interfaces__c__to_c__4.to_c__4 item)) /\ (Interfaces__c__wchar_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__4__post_axiom :
  (forall item : int [(Interfaces__c__to_c__4.to_c__4 item)].
   ( (Standard__wide_character.in_range item) -> (let result = (Interfaces__c__to_c__4.to_c__4 item) in (
    (Interfaces__c__wchar_t___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__4" defined at i-c.ads:114, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__4___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_character___axiom
 use        Interfaces__c__wchar_t
 use        Interfaces__c__to_ada__4

 val to_ada__4 #"i-c.ads" 114 0 0# 
   (item : int) : int
  requires { true }
  ensures { ( (result = (Interfaces__c__to_ada__4.to_ada__4 item)) /\ (Standard__wide_character___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__4__post_axiom :
  (forall item : int [(Interfaces__c__to_ada__4.to_ada__4 item)].
   ( (Interfaces__c__wchar_t.in_range item) -> (let result = (Interfaces__c__to_ada__4.to_ada__4 item) in (
    (Standard__wide_character___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_nul_terminated__2" defined at i-c.ads:118, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__is_nul_terminated__2___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c__wchar_array
 use        Interfaces__c__is_nul_terminated__2

 val is_nul_terminated__2 #"i-c.ads" 118 0 0# 
   (item : Interfaces__c__wchar_array.wchar_array) : bool
  requires { true }
  ensures { (result = (Interfaces__c__is_nul_terminated__2.is_nul_terminated__2 item)) }

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__5" defined at i-c.ads:120, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__5___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Standard__wide_string___axiom
 use        Interfaces__c__wchar_array
 use        Interfaces__c__wchar_array___axiom
 use        Interfaces__c__to_c__5

 val to_c__5 #"i-c.ads" 120 0 0# 
   (item : Standard__wide_string.wide_string) (append_nul : bool) : Interfaces__c__wchar_array.wchar_array
  requires { true }
  ensures { ( (result = (Interfaces__c__to_c__5.to_c__5 item append_nul)) /\ (Interfaces__c__wchar_array___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__5__post_axiom :
  (forall item : Standard__wide_string.wide_string.
  (forall append_nul : bool [(Interfaces__c__to_c__5.to_c__5 item append_nul)].
   ( (Standard__wide_string___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_c__5.to_c__5 item append_nul) in (
    (Interfaces__c__wchar_array___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__5" defined at i-c.ads:124, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__5___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Standard__wide_string___axiom
 use        Interfaces__c__wchar_array
 use        Interfaces__c__wchar_array___axiom
 use        Interfaces__c__to_ada__5

 val to_ada__5 #"i-c.ads" 124 0 0# 
   (item : Interfaces__c__wchar_array.wchar_array) (trim_nul : bool) : Standard__wide_string.wide_string
  requires { true }
  ensures { ( (result = (Interfaces__c__to_ada__5.to_ada__5 item trim_nul)) /\ (Standard__wide_string___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__5__post_axiom :
  (forall item : Interfaces__c__wchar_array.wchar_array.
  (forall trim_nul : bool [(Interfaces__c__to_ada__5.to_ada__5 item trim_nul)].
   ( (Interfaces__c__wchar_array___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_ada__5.to_ada__5 item trim_nul) in (
    (Standard__wide_string___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__6" defined at i-c.ads:128, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__6___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Standard__wide_string
 use        Interfaces__c__size_t
 use        Interfaces__c__size_t___axiom
 use        Interfaces__c__wchar_array
 use        Array__BV64__Interfaces__c__wchar_t

 val to_c__6 #"i-c.ads" 128 0 0# 
   (item : Standard__wide_string.wide_string) (target : Array__BV64__Interfaces__c__wchar_t.map__ref) (target__first : BV64.t) (target__last : BV64.t) (count : BV64.t__ref) (append_nul : bool) : unit
  requires { true }
  ensures { ( (if (True) then (
   true) else (
   (Interfaces__c__wchar_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last target__first target__last))) /\ (Interfaces__c__size_t___axiom.dynamic_invariant count.BV64.t__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__6" defined at i-c.ads:134, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__6___axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural___axiom
 use        Standard__positive
 use        Standard__wide_string
 use        Interfaces__c__wchar_array
 use        Array__Int__Standard__wide_character

 val to_ada__6 #"i-c.ads" 134 0 0# 
   (item : Interfaces__c__wchar_array.wchar_array) (target : Array__Int__Standard__wide_character.map__ref) (target__first : int) (target__last : int) (count : int__ref) (trim_nul : bool) : unit
  requires { true }
  ensures { ( (if (True) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last target__first target__last))) /\ (Standard__natural___axiom.dynamic_invariant count.int__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__7" defined at i-c.ads:152, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__7___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_character
 use        Interfaces__c__char16_t___axiom
 use        Interfaces__c__to_c__7

 val to_c__7 #"i-c.ads" 152 0 0# 
   (item : int) : int
  requires { true }
  ensures { ( (result = (Interfaces__c__to_c__7.to_c__7 item)) /\ (Interfaces__c__char16_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__7__post_axiom :
  (forall item : int [(Interfaces__c__to_c__7.to_c__7 item)].
   ( (Standard__wide_character.in_range item) -> (let result = (Interfaces__c__to_c__7.to_c__7 item) in (
    (Interfaces__c__char16_t___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__7" defined at i-c.ads:155, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__7___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_character___axiom
 use        Interfaces__c__char16_t
 use        Interfaces__c__to_ada__7

 val to_ada__7 #"i-c.ads" 155 0 0# 
   (item : int) : int
  requires { true }
  ensures { ( (result = (Interfaces__c__to_ada__7.to_ada__7 item)) /\ (Standard__wide_character___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__7__post_axiom :
  (forall item : int [(Interfaces__c__to_ada__7.to_ada__7 item)].
   ( (Interfaces__c__char16_t.in_range item) -> (let result = (Interfaces__c__to_ada__7.to_ada__7 item) in (
    (Standard__wide_character___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_nul_terminated__3" defined at i-c.ads:161, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__is_nul_terminated__3___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char16_array
 use        Interfaces__c__is_nul_terminated__3

 val is_nul_terminated__3 #"i-c.ads" 161 0 0# 
   (item : Interfaces__c__char16_array.char16_array) : bool
  requires { true }
  ensures { (result = (Interfaces__c__is_nul_terminated__3.is_nul_terminated__3 item)) }

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__8" defined at i-c.ads:164, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__8___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Standard__wide_string___axiom
 use        Interfaces__c__char16_array
 use        Interfaces__c__char16_array___axiom
 use        Interfaces__c__to_c__8

 val to_c__8 #"i-c.ads" 164 0 0# 
   (item : Standard__wide_string.wide_string) (append_nul : bool) : Interfaces__c__char16_array.char16_array
  requires { true }
  ensures { ( (result = (Interfaces__c__to_c__8.to_c__8 item append_nul)) /\ (Interfaces__c__char16_array___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__8__post_axiom :
  (forall item : Standard__wide_string.wide_string.
  (forall append_nul : bool [(Interfaces__c__to_c__8.to_c__8 item append_nul)].
   ( (Standard__wide_string___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_c__8.to_c__8 item append_nul) in (
    (Interfaces__c__char16_array___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__8" defined at i-c.ads:169, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__8___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Standard__wide_string___axiom
 use        Interfaces__c__char16_array
 use        Interfaces__c__char16_array___axiom
 use        Interfaces__c__to_ada__8

 val to_ada__8 #"i-c.ads" 169 0 0# 
   (item : Interfaces__c__char16_array.char16_array) (trim_nul : bool) : Standard__wide_string.wide_string
  requires { true }
  ensures { ( (result = (Interfaces__c__to_ada__8.to_ada__8 item trim_nul)) /\ (Standard__wide_string___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__8__post_axiom :
  (forall item : Interfaces__c__char16_array.char16_array.
  (forall trim_nul : bool [(Interfaces__c__to_ada__8.to_ada__8 item trim_nul)].
   ( (Interfaces__c__char16_array___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_ada__8.to_ada__8 item trim_nul) in (
    (Standard__wide_string___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__9" defined at i-c.ads:174, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__9___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Standard__wide_string
 use        Interfaces__c__size_t
 use        Interfaces__c__size_t___axiom
 use        Interfaces__c__char16_array
 use        Array__BV64__Interfaces__c__char16_t

 val to_c__9 #"i-c.ads" 174 0 0# 
   (item : Standard__wide_string.wide_string) (target : Array__BV64__Interfaces__c__char16_t.map__ref) (target__first : BV64.t) (target__last : BV64.t) (count : BV64.t__ref) (append_nul : bool) : unit
  requires { true }
  ensures { ( (if (True) then (
   true) else (
   (Interfaces__c__char16_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last target__first target__last))) /\ (Interfaces__c__size_t___axiom.dynamic_invariant count.BV64.t__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__9" defined at i-c.ads:181, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__9___axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural___axiom
 use        Standard__positive
 use        Standard__wide_string
 use        Interfaces__c__char16_array
 use        Array__Int__Standard__wide_character

 val to_ada__9 #"i-c.ads" 181 0 0# 
   (item : Interfaces__c__char16_array.char16_array) (target : Array__Int__Standard__wide_character.map__ref) (target__first : int) (target__last : int) (count : int__ref) (trim_nul : bool) : unit
  requires { true }
  ensures { ( (if (True) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last target__first target__last))) /\ (Standard__natural___axiom.dynamic_invariant count.int__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__10" defined at i-c.ads:194, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__10___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_character
 use        Interfaces__c__char32_t___axiom
 use        Interfaces__c__to_c__10

 val to_c__10 #"i-c.ads" 194 0 0# 
   (item : int) : int
  requires { true }
  ensures { ( (result = (Interfaces__c__to_c__10.to_c__10 item)) /\ (Interfaces__c__char32_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__10__post_axiom :
  (forall item : int [(Interfaces__c__to_c__10.to_c__10 item)].
   ( (Standard__wide_wide_character.in_range item) -> (let result = (Interfaces__c__to_c__10.to_c__10 item) in (
    (Interfaces__c__char32_t___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__10" defined at i-c.ads:197, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__10___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_character___axiom
 use        Interfaces__c__char32_t
 use        Interfaces__c__to_ada__10

 val to_ada__10 #"i-c.ads" 197 0 0# 
   (item : int) : int
  requires { true }
  ensures { ( (result = (Interfaces__c__to_ada__10.to_ada__10 item)) /\ (Standard__wide_wide_character___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__10__post_axiom :
  (forall item : int [(Interfaces__c__to_ada__10.to_ada__10 item)].
   ( (Interfaces__c__char32_t.in_range item) -> (let result = (Interfaces__c__to_ada__10.to_ada__10 item) in (
    (Standard__wide_wide_character___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_nul_terminated__4" defined at i-c.ads:203, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__is_nul_terminated__4___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char32_array
 use        Interfaces__c__is_nul_terminated__4

 val is_nul_terminated__4 #"i-c.ads" 203 0 0# 
   (item : Interfaces__c__char32_array.char32_array) : bool
  requires { true }
  ensures { (result = (Interfaces__c__is_nul_terminated__4.is_nul_terminated__4 item)) }

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__11" defined at i-c.ads:206, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__11___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Standard__wide_wide_string___axiom
 use        Interfaces__c__char32_array
 use        Interfaces__c__char32_array___axiom
 use        Interfaces__c__to_c__11

 val to_c__11 #"i-c.ads" 206 0 0# 
   (item : Standard__wide_wide_string.wide_wide_string) (append_nul : bool) : Interfaces__c__char32_array.char32_array
  requires { true }
  ensures { ( (result = (Interfaces__c__to_c__11.to_c__11 item append_nul)) /\ (Interfaces__c__char32_array___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__11__post_axiom :
  (forall item : Standard__wide_wide_string.wide_wide_string.
  (forall append_nul : bool [(Interfaces__c__to_c__11.to_c__11 item append_nul)].
   ( (Standard__wide_wide_string___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_c__11.to_c__11 item append_nul) in (
    (Interfaces__c__char32_array___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__11" defined at i-c.ads:211, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__11___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Standard__wide_wide_string___axiom
 use        Interfaces__c__char32_array
 use        Interfaces__c__char32_array___axiom
 use        Interfaces__c__to_ada__11

 val to_ada__11 #"i-c.ads" 211 0 0# 
   (item : Interfaces__c__char32_array.char32_array) (trim_nul : bool) : Standard__wide_wide_string.wide_wide_string
  requires { true }
  ensures { ( (result = (Interfaces__c__to_ada__11.to_ada__11 item trim_nul)) /\ (Standard__wide_wide_string___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__11__post_axiom :
  (forall item : Interfaces__c__char32_array.char32_array.
  (forall trim_nul : bool [(Interfaces__c__to_ada__11.to_ada__11 item trim_nul)].
   ( (Interfaces__c__char32_array___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_ada__11.to_ada__11 item trim_nul) in (
    (Standard__wide_wide_string___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__12" defined at i-c.ads:216, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__12___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Standard__wide_wide_string
 use        Interfaces__c__size_t
 use        Interfaces__c__size_t___axiom
 use        Interfaces__c__char32_array
 use        Array__BV64__Interfaces__c__char32_t

 val to_c__12 #"i-c.ads" 216 0 0# 
   (item : Standard__wide_wide_string.wide_wide_string) (target : Array__BV64__Interfaces__c__char32_t.map__ref) (target__first : BV64.t) (target__last : BV64.t) (count : BV64.t__ref) (append_nul : bool) : unit
  requires { true }
  ensures { ( (if (True) then (
   true) else (
   (Interfaces__c__char32_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last target__first target__last))) /\ (Interfaces__c__size_t___axiom.dynamic_invariant count.BV64.t__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__12" defined at i-c.ads:223, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__12___axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural___axiom
 use        Standard__positive
 use        Standard__wide_wide_string
 use        Interfaces__c__char32_array
 use        Array__Int__Standard__wide_wide_character

 val to_ada__12 #"i-c.ads" 223 0 0# 
   (item : Interfaces__c__char32_array.char32_array) (target : Array__Int__Standard__wide_wide_character.map__ref) (target__first : int) (target__last : int) (count : int__ref) (trim_nul : bool) : unit
  requires { true }
  ensures { ( (if (True) then (
   true) else (
   (Standard__wide_wide_string.dynamic_property Standard__positive.first Standard__positive.last target__first target__last))) /\ (Standard__natural___axiom.dynamic_invariant count.int__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "errno" defined at s-osinte.ads:61, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__errno___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__int___axiom
 use        System__os_interface__errno

 val errno #"s-osinte.ads" 61 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (System__os_interface__errno.errno ())) /\ (System__os_interface__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom errno__post_axiom :
  (forall __void_param : unit [(System__os_interface__errno.errno __void_param)].
   ( true -> (let result = (System__os_interface__errno.errno __void_param) in (
    (System__os_interface__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_duration" defined at s-osinte.ads:196, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__to_duration___axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration
 use        Standard__duration___axiom
 use        System__os_interface__timespec
 use        System__os_interface__timespec___axiom
 use        System__os_interface__to_duration

 val to_duration #"s-osinte.ads" 196 0 0# 
   (ts : System__os_interface__timespec.timespec) : Standard__duration.duration
  requires { true }
  ensures { ( (result = (System__os_interface__to_duration.to_duration ts)) /\ (Standard__duration___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_duration__post_axiom :
  (forall ts : System__os_interface__timespec.timespec [(System__os_interface__to_duration.to_duration ts)].
   ( (System__os_interface__timespec___axiom.dynamic_invariant ts True True True) -> (let result = (System__os_interface__to_duration.to_duration ts) in (
    (Standard__duration___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_timespec" defined at s-osinte.ads:199, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__to_timespec___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Standard__duration
 use        System__os_interface__timespec
 use        System__os_interface__timespec___axiom
 use        System__os_interface__to_timespec

 val to_timespec #"s-osinte.ads" 199 0 0# 
   (d : Main.__fixed) : System__os_interface__timespec.timespec
  requires { true }
  ensures { ( (result = (System__os_interface__to_timespec.to_timespec d)) /\ (System__os_interface__timespec___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_timespec__post_axiom :
  (forall d : Main.__fixed [(System__os_interface__to_timespec.to_timespec d)].
   ( (Standard__duration.in_range d) -> (let result = (System__os_interface__to_timespec.to_timespec d) in (
    (System__os_interface__timespec___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_target_priority" defined at s-osinte.ads:210, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__to_target_priority___axiom
 use import "_gnatprove_standard".Main
 use        System__any_priority
 use        Interfaces__c__int___axiom
 use        System__os_interface__to_target_priority

 val to_target_priority #"s-osinte.ads" 210 0 0# 
   (prio : int) : int
  requires { true }
  ensures { ( (result = (System__os_interface__to_target_priority.to_target_priority prio)) /\ (Interfaces__c__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_target_priority__post_axiom :
  (forall prio : int [(System__os_interface__to_target_priority.to_target_priority prio)].
   ( (System__any_priority.in_range prio) -> (let result = (System__os_interface__to_target_priority.to_target_priority prio) in (
    (Interfaces__c__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "kill" defined at s-osinte.ads:220, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__kill___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__int___axiom
 use        System__os_interface__signal
 use        System__os_interface__pid_t___axiom
 use        System__os_interface__kill

 val kill #"s-osinte.ads" 220 0 0# 
   (pid : int) (sig : int) : int
  requires { true }
  ensures { ( (result = (System__os_interface__kill.kill pid sig)) /\ (System__os_interface__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom kill__post_axiom :
  (forall pid sig : int [(System__os_interface__kill.kill pid sig)].
   ( ( (System__os_interface__pid_t___axiom.dynamic_invariant pid True True True) /\ (System__os_interface__signal.in_range sig) ) -> (let result = (System__os_interface__kill.kill pid sig) in (
    (System__os_interface__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "getpid" defined at s-osinte.ads:223, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__getpid___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__pid_t___axiom
 use        System__os_interface__getpid

 val getpid #"s-osinte.ads" 223 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (System__os_interface__getpid.getpid ())) /\ (System__os_interface__pid_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom getpid__post_axiom :
  (forall __void_param : unit [(System__os_interface__getpid.getpid __void_param)].
   ( true -> (let result = (System__os_interface__getpid.getpid __void_param) in (
    (System__os_interface__pid_t___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "lwp_self" defined at s-osinte.ads:230, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__lwp_self___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__os_interface__lwp_self

 val lwp_self #"s-osinte.ads" 230 0 0# 
   (__void_param : unit) : BV64.t
  requires { true }
  ensures { ( (result = (System__os_interface__lwp_self.lwp_self ())) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom lwp_self__post_axiom :
  (forall __void_param : unit [(System__os_interface__lwp_self.lwp_self __void_param)].
   ( true -> (let result = (System__os_interface__lwp_self.lwp_self __void_param) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_stack_base" defined at s-osinte.ads:298, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__get_stack_base___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__os_interface__pthread_t___axiom
 use        System__os_interface__get_stack_base

 val get_stack_base #"s-osinte.ads" 298 0 0# 
   (thread : BV64.t) : BV64.t
  requires { true }
  ensures { ( (result = (System__os_interface__get_stack_base.get_stack_base thread)) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_stack_base__post_axiom :
  (forall thread : BV64.t [(System__os_interface__get_stack_base.get_stack_base thread)].
   ( (System__os_interface__pthread_t___axiom.dynamic_invariant thread True True True) -> (let result = (System__os_interface__get_stack_base.get_stack_base thread) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_page_size" defined at s-osinte.ads:303, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__get_page_size___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__int___axiom
 use        System__os_interface__get_page_size

 val get_page_size #"s-osinte.ads" 303 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (System__os_interface__get_page_size.get_page_size ())) /\ (System__os_interface__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_page_size__post_axiom :
  (forall __void_param : unit [(System__os_interface__get_page_size.get_page_size __void_param)].
   ( true -> (let result = (System__os_interface__get_page_size.get_page_size __void_param) in (
    (System__os_interface__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "mprotect" defined at s-osinte.ads:316, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__mprotect___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__os_interface__int
 use        System__os_interface__int___axiom
 use        System__os_interface__size_t
 use        System__os_interface__mprotect

 val mprotect #"s-osinte.ads" 316 0 0# 
   (addr : BV64.t) (len : BV64.t) (prot : int) : int
  requires { true }
  ensures { ( (result = (System__os_interface__mprotect.mprotect addr len prot)) /\ (System__os_interface__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom mprotect__post_axiom :
  (forall addr len : BV64.t.
  (forall prot : int [(System__os_interface__mprotect.mprotect addr len prot)].
   ( ( ( (System__address___axiom.dynamic_invariant addr True True True) /\ (System__os_interface__size_t.in_range len) ) /\ (System__os_interface__int.in_range prot) ) -> (let result = (System__os_interface__mprotect.mprotect addr len prot) in (
    (System__os_interface__int___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "pthread_init" defined at s-osinte.ads:326, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__pthread_init___axiom
 use import "_gnatprove_standard".Main

 val pthread_init #"s-osinte.ads" 326 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "pthread_kill" defined at s-osinte.ads:335, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__pthread_kill___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__os_interface__int___axiom
 use        System__os_interface__signal
 use        System__os_interface__pthread_t___axiom
 use        System__os_interface__pthread_kill

 val pthread_kill #"s-osinte.ads" 335 0 0# 
   (thread : BV64.t) (sig : int) : int
  requires { true }
  ensures { ( (result = (System__os_interface__pthread_kill.pthread_kill thread sig)) /\ (System__os_interface__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom pthread_kill__post_axiom :
  (forall thread : BV64.t.
  (forall sig : int [(System__os_interface__pthread_kill.pthread_kill thread sig)].
   ( ( (System__os_interface__pthread_t___axiom.dynamic_invariant thread True True True) /\ (System__os_interface__signal.in_range sig) ) -> (let result = (System__os_interface__pthread_kill.pthread_kill thread sig) in (
    (System__os_interface__int___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "sched_yield" defined at s-osinte.ads:454, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__sched_yield___axiom
 use import "_gnatprove_standard".Main
 use        System__os_interface__int___axiom
 use        System__os_interface__sched_yield

 val sched_yield #"s-osinte.ads" 454 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (System__os_interface__sched_yield.sched_yield ())) /\ (System__os_interface__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom sched_yield__post_axiom :
  (forall __void_param : unit [(System__os_interface__sched_yield.sched_yield __void_param)].
   ( true -> (let result = (System__os_interface__sched_yield.sched_yield __void_param) in (
    (System__os_interface__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "pthread_exit" defined at s-osinte.ads:486, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__pthread_exit___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 val pthread_exit #"s-osinte.ads" 486 0 0# 
   (status : BV64.t) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "pthread_self" defined at s-osinte.ads:489, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__pthread_self___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__os_interface__pthread_t___axiom
 use        System__os_interface__pthread_self

 val pthread_self #"s-osinte.ads" 489 0 0# 
   (__void_param : unit) : BV64.t
  requires { true }
  ensures { ( (result = (System__os_interface__pthread_self.pthread_self ())) /\ (System__os_interface__pthread_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom pthread_self__post_axiom :
  (forall __void_param : unit [(System__os_interface__pthread_self.pthread_self __void_param)].
   ( true -> (let result = (System__os_interface__pthread_self.pthread_self __void_param) in (
    (System__os_interface__pthread_t___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "pthread_setspecific" defined at s-osinte.ads:496, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__pthread_setspecific___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__os_interface__int___axiom
 use        System__os_interface__pthread_key_t___axiom
 use        System__os_interface__pthread_setspecific

 val pthread_setspecific #"s-osinte.ads" 496 0 0# 
   (key : BV64.t) (value : BV64.t) : int
  requires { true }
  ensures { ( (result = (System__os_interface__pthread_setspecific.pthread_setspecific key value)) /\ (System__os_interface__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom pthread_setspecific__post_axiom :
  (forall key value : BV64.t [(System__os_interface__pthread_setspecific.pthread_setspecific key value)].
   ( ( (System__os_interface__pthread_key_t___axiom.dynamic_invariant key True True True) /\ (System__address___axiom.dynamic_invariant value True True True) ) -> (let result = (System__os_interface__pthread_setspecific.pthread_setspecific key value) in (
    (System__os_interface__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "pthread_getspecific" defined at s-osinte.ads:501, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__os_interface__pthread_getspecific___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address___axiom
 use        System__os_interface__pthread_key_t___axiom
 use        System__os_interface__pthread_getspecific

 val pthread_getspecific #"s-osinte.ads" 501 0 0# 
   (key : BV64.t) : BV64.t
  requires { true }
  ensures { ( (result = (System__os_interface__pthread_getspecific.pthread_getspecific key)) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom pthread_getspecific__post_axiom :
  (forall key : BV64.t [(System__os_interface__pthread_getspecific.pthread_getspecific key)].
   ( (System__os_interface__pthread_key_t___axiom.dynamic_invariant key True True True) -> (let result = (System__os_interface__pthread_getspecific.pthread_getspecific key) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "initialize" defined at s-stausa.ads:203, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__stack_usage__initialize___axiom
 use import "_gnatprove_standard".Main

 val initialize #"s-stausa.ads" 203 0 0# 
   (buffer_size : int) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "fill_stack" defined at s-stausa.ads:209, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__stack_usage__fill_stack___axiom
 use import "_gnatprove_standard".Main
 use        System__stack_usage__stack_analyzer
 use        System__stack_usage__stack_analyzer___axiom

 val fill_stack #"s-stausa.ads" 209 0 0# 
   (analyzer__split_fields : System__stack_usage__stack_analyzer.__split_fields__ref) : unit
  requires { true }
  ensures { (System__stack_usage__stack_analyzer___axiom.dynamic_invariant { System__stack_usage__stack_analyzer.__split_fields = analyzer__split_fields.System__stack_usage__stack_analyzer.__split_fields__content } True True True) }
  writes {analyzer__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "initialize_analyzer" defined at s-stausa.ads:225, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__stack_usage__initialize_analyzer___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        "_gnatprove_standard".BV64
 use        Standard__string
 use        System__stack_usage__stack_analyzer
 use        System__stack_usage__stack_analyzer___axiom

 val initialize_analyzer #"s-stausa.ads" 225 0 0# 
   (analyzer__split_fields : System__stack_usage__stack_analyzer.__split_fields__ref) (task_name : Standard__string.string) (stack_size : int) (stack_base : BV64.t) (pattern_size : int) (pattern : BV32.t) : unit
  requires { true }
  ensures { (System__stack_usage__stack_analyzer___axiom.dynamic_invariant { System__stack_usage__stack_analyzer.__split_fields = analyzer__split_fields.System__stack_usage__stack_analyzer.__split_fields__content } True True True) }
  writes {analyzer__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "compute_result" defined at s-stausa.ads:242, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__stack_usage__compute_result___axiom
 use import "_gnatprove_standard".Main
 use        System__stack_usage__stack_analyzer
 use        System__stack_usage__stack_analyzer___axiom

 val compute_result #"s-stausa.ads" 242 0 0# 
   (analyzer__split_fields : System__stack_usage__stack_analyzer.__split_fields__ref) : unit
  requires { true }
  ensures { (System__stack_usage__stack_analyzer___axiom.dynamic_invariant { System__stack_usage__stack_analyzer.__split_fields = analyzer__split_fields.System__stack_usage__stack_analyzer.__split_fields__content } True True True) }
  writes {analyzer__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "report_result" defined at s-stausa.ads:262, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__stack_usage__report_result___axiom
 use import "_gnatprove_standard".Main
 use        System__stack_usage__stack_analyzer

 val report_result #"s-stausa.ads" 262 0 0# 
   (analyzer : System__stack_usage__stack_analyzer.stack_analyzer) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "output_results" defined at s-stausa.ads:268, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__stack_usage__output_results___axiom
 use import "_gnatprove_standard".Main

 val output_results #"s-stausa.ads" 268 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "stack_size" defined at s-stausa.ads:330, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__stack_usage__stack_size___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Standard__natural___axiom
 use        System__stack_usage__stack_address
 use        System__stack_usage__stack_size

 val stack_size #"s-stausa.ads" 330 0 0# 
   (sp_low : BV64.t) (sp_high : BV64.t) : int
  requires { true }
  ensures { ( (result = (System__stack_usage__stack_size.stack_size sp_low sp_high)) /\ (Standard__natural___axiom.dynamic_invariant result True False True) ) }
 
 axiom stack_size__post_axiom :
  (forall sp_low sp_high : BV64.t [(System__stack_usage__stack_size.stack_size sp_low sp_high)].
   ( ( (System__stack_usage__stack_address.in_range sp_low) /\ (System__stack_usage__stack_address.in_range sp_high) ) -> (let result = (System__stack_usage__stack_size.stack_size sp_low sp_high) in (
    (Standard__natural___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "number_of_cpus" defined at s-multip.ads:25, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__multiprocessors__number_of_cpus___axiom
 use import "_gnatprove_standard".Main
 use        System__multiprocessors__cpu___axiom
 use        System__multiprocessors__number_of_cpus

 val number_of_cpus #"s-multip.ads" 25 0 0# 
   (__void_param : unit) : int
  requires { true }
  ensures { ( (result = (System__multiprocessors__number_of_cpus.number_of_cpus ())) /\ (System__multiprocessors__cpu___axiom.dynamic_invariant result True False True) ) }
 
 axiom number_of_cpus__post_axiom :
  (forall __void_param : unit [(System__multiprocessors__number_of_cpus.number_of_cpus __void_param)].
   ( true -> (let result = (System__multiprocessors__number_of_cpus.number_of_cpus __void_param) in (
    (System__multiprocessors__cpu___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "detect_blocking" defined at s-taskin.ads:447, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__tasking__detect_blocking___axiom
 use import "_gnatprove_standard".Main
 use        System__tasking__detect_blocking

 val detect_blocking #"s-taskin.ads" 447 0 0# 
   (__void_param : unit) : bool
  requires { true }
  ensures { (result = (System__tasking__detect_blocking.detect_blocking ())) }

end

(* Module for declaring a program function (and possibly an axiom) for "initialize" defined at s-taskin.ads:1155, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__tasking__initialize___axiom
 use import "_gnatprove_standard".Main

 val initialize #"s-taskin.ads" 1155 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "exit_task" defined at s-taprop.ads:84, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__task_primitives__operations__exit_task___axiom
 use import "_gnatprove_standard".Main

 val exit_task #"s-taprop.ads" 84 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "yield" defined at s-taprop.ads:314, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__task_primitives__operations__yield___axiom
 use import "_gnatprove_standard".Main

 val yield #"s-taprop.ads" 314 0 0# 
   (do_yield : bool) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "monotonic_clock" defined at s-taprop.ads:341, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__task_primitives__operations__monotonic_clock___axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration
 use        Standard__duration___axiom
 use        System__task_primitives__operations__monotonic_clock

 val monotonic_clock #"s-taprop.ads" 341 0 0# 
   (__void_param : unit) : Standard__duration.duration
  requires { true }
  ensures { ( (result = (System__task_primitives__operations__monotonic_clock.monotonic_clock ())) /\ (Standard__duration___axiom.dynamic_invariant result True False True) ) }
 
 axiom monotonic_clock__post_axiom :
  (forall __void_param : unit [(System__task_primitives__operations__monotonic_clock.monotonic_clock __void_param)].
   ( true -> (let result = (System__task_primitives__operations__monotonic_clock.monotonic_clock __void_param) in (
    (Standard__duration___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "rt_resolution" defined at s-taprop.ads:347, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__task_primitives__operations__rt_resolution___axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration
 use        Standard__duration___axiom
 use        System__task_primitives__operations__rt_resolution

 val rt_resolution #"s-taprop.ads" 347 0 0# 
   (__void_param : unit) : Standard__duration.duration
  requires { true }
  ensures { ( (result = (System__task_primitives__operations__rt_resolution.rt_resolution ())) /\ (Standard__duration___axiom.dynamic_invariant result True False True) ) }
 
 axiom rt_resolution__post_axiom :
  (forall __void_param : unit [(System__task_primitives__operations__rt_resolution.rt_resolution __void_param)].
   ( true -> (let result = (System__task_primitives__operations__rt_resolution.rt_resolution __void_param) in (
    (Standard__duration___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_valid_task" defined at s-taprop.ads:414, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__task_primitives__operations__is_valid_task___axiom
 use import "_gnatprove_standard".Main
 use        System__task_primitives__operations__is_valid_task

 val is_valid_task #"s-taprop.ads" 414 0 0# 
   (__void_param : unit) : bool
  requires { true }
  ensures { (result = (System__task_primitives__operations__is_valid_task.is_valid_task ())) }

end

(* Module for declaring a program function (and possibly an axiom) for "lock_rts" defined at s-taprop.ads:434, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__task_primitives__operations__lock_rts___axiom
 use import "_gnatprove_standard".Main

 val lock_rts #"s-taprop.ads" 434 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "unlock_rts" defined at s-taprop.ads:437, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__task_primitives__operations__unlock_rts___axiom
 use import "_gnatprove_standard".Main

 val unlock_rts #"s-taprop.ads" 437 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "current_state" defined at s-taprop.ads:490, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__task_primitives__operations__current_state___axiom
 use import "_gnatprove_standard".Main
 use        System__task_primitives__suspension_object
 use        System__task_primitives__operations__current_state

 val current_state #"s-taprop.ads" 490 0 0# 
   (s : System__task_primitives__suspension_object.suspension_object) : bool
  requires { true }
  ensures { (result = (System__task_primitives__operations__current_state.current_state s)) }

end

(* Module for declaring a program function (and possibly an axiom) for "set_false" defined at s-taprop.ads:493, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__task_primitives__operations__set_false___axiom
 use import "_gnatprove_standard".Main
 use        System__task_primitives__suspension_object
 use        System__task_primitives__suspension_object___axiom

 val set_false #"s-taprop.ads" 493 0 0# 
   (s__split_fields : System__task_primitives__suspension_object.__split_fields__ref) : unit
  requires { true }
  ensures { (System__task_primitives__suspension_object___axiom.dynamic_invariant { System__task_primitives__suspension_object.__split_fields = s__split_fields.System__task_primitives__suspension_object.__split_fields__content } True True True) }
  writes {s__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "set_true" defined at s-taprop.ads:496, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__task_primitives__operations__set_true___axiom
 use import "_gnatprove_standard".Main
 use        System__task_primitives__suspension_object
 use        System__task_primitives__suspension_object___axiom

 val set_true #"s-taprop.ads" 496 0 0# 
   (s__split_fields : System__task_primitives__suspension_object.__split_fields__ref) : unit
  requires { true }
  ensures { (System__task_primitives__suspension_object___axiom.dynamic_invariant { System__task_primitives__suspension_object.__split_fields = s__split_fields.System__task_primitives__suspension_object.__split_fields__content } True True True) }
  writes {s__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "suspend_until_true" defined at s-taprop.ads:501, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__task_primitives__operations__suspend_until_true___axiom
 use import "_gnatprove_standard".Main
 use        System__task_primitives__suspension_object
 use        System__task_primitives__suspension_object___axiom

 val suspend_until_true #"s-taprop.ads" 501 0 0# 
   (s__split_fields : System__task_primitives__suspension_object.__split_fields__ref) : unit
  requires { true }
  ensures { (System__task_primitives__suspension_object___axiom.dynamic_invariant { System__task_primitives__suspension_object.__split_fields = s__split_fields.System__task_primitives__suspension_object.__split_fields__content } True True True) }
  writes {s__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "initialize__2" defined at s-taprop.ads:508, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__task_primitives__operations__initialize__2___axiom
 use import "_gnatprove_standard".Main
 use        System__task_primitives__suspension_object
 use        System__task_primitives__suspension_object___axiom

 val initialize__2 #"s-taprop.ads" 508 0 0# 
   (s__split_fields : System__task_primitives__suspension_object.__split_fields__ref) : unit
  requires { true }
  ensures { (System__task_primitives__suspension_object___axiom.dynamic_invariant { System__task_primitives__suspension_object.__split_fields = s__split_fields.System__task_primitives__suspension_object.__split_fields__content } True True True) }
  writes {s__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "finalize" defined at s-taprop.ads:511, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__task_primitives__operations__finalize___axiom
 use import "_gnatprove_standard".Main
 use        System__task_primitives__suspension_object
 use        System__task_primitives__suspension_object___axiom

 val finalize #"s-taprop.ads" 511 0 0# 
   (s__split_fields : System__task_primitives__suspension_object.__split_fields__ref) : unit
  requires { true }
  ensures { (System__task_primitives__suspension_object___axiom.dynamic_invariant { System__task_primitives__suspension_object.__split_fields = s__split_fields.System__task_primitives__suspension_object.__split_fields__content } True True True) }
  writes {s__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "stop_all_tasks" defined at s-taprop.ads:546, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__task_primitives__operations__stop_all_tasks___axiom
 use import "_gnatprove_standard".Main

 val stop_all_tasks #"s-taprop.ads" 546 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }

end

(* Module for declaring a program function (and possibly an axiom) for "clock" defined at a-reatim.ads:63, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__clock___axiom
 use        Ada__real_time__clock_time
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__time___axiom

 val volatile__effect #"a-reatim.ads" 63 0 0#  : Main.__private__ref 
 
 val clock #"a-reatim.ads" 63 0 0# 
   (__void_param : unit) : Ada__real_time__time.time
  requires { true }
  ensures { (Ada__real_time__time___axiom.dynamic_invariant result True False True) }
  writes {volatile__effect}

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd" defined at a-reatim.ads:67, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Oadd___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__time___axiom
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Oadd

 val oadd #"a-reatim.ads" 67 0 0# 
   (left : Ada__real_time__time.time) (right : Ada__real_time__time_span.time_span) : Ada__real_time__time.time
  requires { true }
  ensures { ( (result = (Ada__real_time__Oadd.oadd left right)) /\ (Ada__real_time__time___axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__post_axiom :
  (forall left : Ada__real_time__time.time.
  (forall right : Ada__real_time__time_span.time_span [(Ada__real_time__Oadd.oadd left right)].
   ( ( (Ada__real_time__time___axiom.dynamic_invariant left True True True) /\ (Ada__real_time__time_span___axiom.dynamic_invariant right True True True) ) -> (let result = (Ada__real_time__Oadd.oadd left right) in (
    (Ada__real_time__time___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd__2" defined at a-reatim.ads:69, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Oadd__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__time___axiom
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Oadd__2

 val oadd__2 #"a-reatim.ads" 69 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time.time) : Ada__real_time__time.time
  requires { true }
  ensures { ( (result = (Ada__real_time__Oadd__2.oadd__2 left right)) /\ (Ada__real_time__time___axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__2__post_axiom :
  (forall left : Ada__real_time__time_span.time_span.
  (forall right : Ada__real_time__time.time [(Ada__real_time__Oadd__2.oadd__2 left right)].
   ( ( (Ada__real_time__time_span___axiom.dynamic_invariant left True True True) /\ (Ada__real_time__time___axiom.dynamic_invariant right True True True) ) -> (let result = (Ada__real_time__Oadd__2.oadd__2 left right) in (
    (Ada__real_time__time___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Osubtract" defined at a-reatim.ads:71, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Osubtract___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__time___axiom
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Osubtract

 val osubtract #"a-reatim.ads" 71 0 0# 
   (left : Ada__real_time__time.time) (right : Ada__real_time__time_span.time_span) : Ada__real_time__time.time
  requires { true }
  ensures { ( (result = (Ada__real_time__Osubtract.osubtract left right)) /\ (Ada__real_time__time___axiom.dynamic_invariant result True False True) ) }
 
 axiom osubtract__post_axiom :
  (forall left : Ada__real_time__time.time.
  (forall right : Ada__real_time__time_span.time_span [(Ada__real_time__Osubtract.osubtract left right)].
   ( ( (Ada__real_time__time___axiom.dynamic_invariant left True True True) /\ (Ada__real_time__time_span___axiom.dynamic_invariant right True True True) ) -> (let result = (Ada__real_time__Osubtract.osubtract left right) in (
    (Ada__real_time__time___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Osubtract__2" defined at a-reatim.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Osubtract__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__time___axiom
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Osubtract__2

 val osubtract__2 #"a-reatim.ads" 73 0 0# 
   (left : Ada__real_time__time.time) (right : Ada__real_time__time.time) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { ( (result = (Ada__real_time__Osubtract__2.osubtract__2 left right)) /\ (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) ) }
 
 axiom osubtract__2__post_axiom :
  (forall left right : Ada__real_time__time.time [(Ada__real_time__Osubtract__2.osubtract__2 left right)].
   ( ( (Ada__real_time__time___axiom.dynamic_invariant left True True True) /\ (Ada__real_time__time___axiom.dynamic_invariant right True True True) ) -> (let result = (Ada__real_time__Osubtract__2.osubtract__2 left right) in (
    (Ada__real_time__time_span___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "Olt" defined at a-reatim.ads:76, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Olt___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__Olt

 val olt #"a-reatim.ads" 76 0 0# 
   (left : Ada__real_time__time.time) (right : Ada__real_time__time.time) : bool
  requires { true }
  ensures { (result = (Ada__real_time__Olt.olt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ole" defined at a-reatim.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Ole___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__Ole

 val ole #"a-reatim.ads" 78 0 0# 
   (left : Ada__real_time__time.time) (right : Ada__real_time__time.time) : bool
  requires { true }
  ensures { (result = (Ada__real_time__Ole.ole left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ogt" defined at a-reatim.ads:80, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Ogt___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__Ogt

 val ogt #"a-reatim.ads" 80 0 0# 
   (left : Ada__real_time__time.time) (right : Ada__real_time__time.time) : bool
  requires { true }
  ensures { (result = (Ada__real_time__Ogt.ogt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oge" defined at a-reatim.ads:82, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Oge___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__Oge

 val oge #"a-reatim.ads" 82 0 0# 
   (left : Ada__real_time__time.time) (right : Ada__real_time__time.time) : bool
  requires { true }
  ensures { (result = (Ada__real_time__Oge.oge left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd__3" defined at a-reatim.ads:85, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Oadd__3___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Oadd__3

 val oadd__3 #"a-reatim.ads" 85 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time_span.time_span) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { ( (result = (Ada__real_time__Oadd__3.oadd__3 left right)) /\ (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__3__post_axiom :
  (forall left right : Ada__real_time__time_span.time_span [(Ada__real_time__Oadd__3.oadd__3 left right)].
   ( ( (Ada__real_time__time_span___axiom.dynamic_invariant left True True True) /\ (Ada__real_time__time_span___axiom.dynamic_invariant right True True True) ) -> (let result = (Ada__real_time__Oadd__3.oadd__3 left right) in (
    (Ada__real_time__time_span___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "Osubtract__3" defined at a-reatim.ads:87, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Osubtract__3___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Osubtract__3

 val osubtract__3 #"a-reatim.ads" 87 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time_span.time_span) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { ( (result = (Ada__real_time__Osubtract__3.osubtract__3 left right)) /\ (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) ) }
 
 axiom osubtract__3__post_axiom :
  (forall left right : Ada__real_time__time_span.time_span [(Ada__real_time__Osubtract__3.osubtract__3 left right)].
   ( ( (Ada__real_time__time_span___axiom.dynamic_invariant left True True True) /\ (Ada__real_time__time_span___axiom.dynamic_invariant right True True True) ) -> (let result = (Ada__real_time__Osubtract__3.osubtract__3 left right) in (
    (Ada__real_time__time_span___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "Osubtract__4" defined at a-reatim.ads:89, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Osubtract__4___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Osubtract__4

 val osubtract__4 #"a-reatim.ads" 89 0 0# 
   (right : Ada__real_time__time_span.time_span) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { ( (result = (Ada__real_time__Osubtract__4.osubtract__4 right)) /\ (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) ) }
 
 axiom osubtract__4__post_axiom :
  (forall right : Ada__real_time__time_span.time_span [(Ada__real_time__Osubtract__4.osubtract__4 right)].
   ( (Ada__real_time__time_span___axiom.dynamic_invariant right True True True) -> (let result = (Ada__real_time__Osubtract__4.osubtract__4 right) in (
    (Ada__real_time__time_span___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "Omultiply" defined at a-reatim.ads:91, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Omultiply___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Omultiply

 val omultiply #"a-reatim.ads" 91 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : int) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { ( (result = (Ada__real_time__Omultiply.omultiply left right)) /\ (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) ) }
 
 axiom omultiply__post_axiom :
  (forall left : Ada__real_time__time_span.time_span.
  (forall right : int [(Ada__real_time__Omultiply.omultiply left right)].
   ( ( (Ada__real_time__time_span___axiom.dynamic_invariant left True True True) /\ (Standard__integer.in_range right) ) -> (let result = (Ada__real_time__Omultiply.omultiply left right) in (
    (Ada__real_time__time_span___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Omultiply__2" defined at a-reatim.ads:93, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Omultiply__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Omultiply__2

 val omultiply__2 #"a-reatim.ads" 93 0 0# 
   (left : int) (right : Ada__real_time__time_span.time_span) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { ( (result = (Ada__real_time__Omultiply__2.omultiply__2 left right)) /\ (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) ) }
 
 axiom omultiply__2__post_axiom :
  (forall left : int.
  (forall right : Ada__real_time__time_span.time_span [(Ada__real_time__Omultiply__2.omultiply__2 left right)].
   ( ( (Standard__integer.in_range left) /\ (Ada__real_time__time_span___axiom.dynamic_invariant right True True True) ) -> (let result = (Ada__real_time__Omultiply__2.omultiply__2 left right) in (
    (Ada__real_time__time_span___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Odivide" defined at a-reatim.ads:95, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Odivide___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer___axiom
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Odivide

 val odivide #"a-reatim.ads" 95 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time_span.time_span) : int
  requires { true }
  ensures { ( (result = (Ada__real_time__Odivide.odivide left right)) /\ (Standard__integer___axiom.dynamic_invariant result True False True) ) }
 
 axiom odivide__post_axiom :
  (forall left right : Ada__real_time__time_span.time_span [(Ada__real_time__Odivide.odivide left right)].
   ( ( (Ada__real_time__time_span___axiom.dynamic_invariant left True True True) /\ (Ada__real_time__time_span___axiom.dynamic_invariant right True True True) ) -> (let result = (Ada__real_time__Odivide.odivide left right) in (
    (Standard__integer___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "Odivide__2" defined at a-reatim.ads:97, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Odivide__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Odivide__2

 val odivide__2 #"a-reatim.ads" 97 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : int) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { ( (result = (Ada__real_time__Odivide__2.odivide__2 left right)) /\ (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) ) }
 
 axiom odivide__2__post_axiom :
  (forall left : Ada__real_time__time_span.time_span.
  (forall right : int [(Ada__real_time__Odivide__2.odivide__2 left right)].
   ( ( (Ada__real_time__time_span___axiom.dynamic_invariant left True True True) /\ (Standard__integer.in_range right) ) -> (let result = (Ada__real_time__Odivide__2.odivide__2 left right) in (
    (Ada__real_time__time_span___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Oabs" defined at a-reatim.ads:100, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Oabs___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Oabs

 val oabs #"a-reatim.ads" 100 0 0# 
   (right : Ada__real_time__time_span.time_span) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { ( (result = (Ada__real_time__Oabs.oabs right)) /\ (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) ) }
 
 axiom oabs__post_axiom :
  (forall right : Ada__real_time__time_span.time_span [(Ada__real_time__Oabs.oabs right)].
   ( (Ada__real_time__time_span___axiom.dynamic_invariant right True True True) -> (let result = (Ada__real_time__Oabs.oabs right) in (
    (Ada__real_time__time_span___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "Olt__2" defined at a-reatim.ads:103, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Olt__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span
 use        Ada__real_time__Olt__2

 val olt__2 #"a-reatim.ads" 103 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time_span.time_span) : bool
  requires { true }
  ensures { (result = (Ada__real_time__Olt__2.olt__2 left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ole__2" defined at a-reatim.ads:105, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Ole__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span
 use        Ada__real_time__Ole__2

 val ole__2 #"a-reatim.ads" 105 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time_span.time_span) : bool
  requires { true }
  ensures { (result = (Ada__real_time__Ole__2.ole__2 left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ogt__2" defined at a-reatim.ads:107, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Ogt__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span
 use        Ada__real_time__Ogt__2

 val ogt__2 #"a-reatim.ads" 107 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time_span.time_span) : bool
  requires { true }
  ensures { (result = (Ada__real_time__Ogt__2.ogt__2 left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oge__2" defined at a-reatim.ads:109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__Oge__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time_span
 use        Ada__real_time__Oge__2

 val oge__2 #"a-reatim.ads" 109 0 0# 
   (left : Ada__real_time__time_span.time_span) (right : Ada__real_time__time_span.time_span) : bool
  requires { true }
  ensures { (result = (Ada__real_time__Oge__2.oge__2 left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "to_duration" defined at a-reatim.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__to_duration___axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration
 use        Standard__duration___axiom
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__to_duration

 val to_duration #"a-reatim.ads" 112 0 0# 
   (ts : Ada__real_time__time_span.time_span) : Standard__duration.duration
  requires { true }
  ensures { ( (result = (Ada__real_time__to_duration.to_duration ts)) /\ (Standard__duration___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_duration__post_axiom :
  (forall ts : Ada__real_time__time_span.time_span [(Ada__real_time__to_duration.to_duration ts)].
   ( (Ada__real_time__time_span___axiom.dynamic_invariant ts True True True) -> (let result = (Ada__real_time__to_duration.to_duration ts) in (
    (Standard__duration___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_time_span" defined at a-reatim.ads:114, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__to_time_span___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Standard__duration
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__to_time_span

 val to_time_span #"a-reatim.ads" 114 0 0# 
   (d : Main.__fixed) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { ( (result = (Ada__real_time__to_time_span.to_time_span d)) /\ (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_time_span__post_axiom :
  (forall d : Main.__fixed [(Ada__real_time__to_time_span.to_time_span d)].
   ( (Standard__duration.in_range d) -> (let result = (Ada__real_time__to_time_span.to_time_span d) in (
    (Ada__real_time__time_span___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "nanoseconds" defined at a-reatim.ads:117, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__nanoseconds___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__nanoseconds

 val nanoseconds #"a-reatim.ads" 117 0 0# 
   (ns : int) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { ( (result = (Ada__real_time__nanoseconds.nanoseconds ns)) /\ (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) ) }
 
 axiom nanoseconds__post_axiom :
  (forall ns : int [(Ada__real_time__nanoseconds.nanoseconds ns)].
   ( (Standard__integer.in_range ns) -> (let result = (Ada__real_time__nanoseconds.nanoseconds ns) in (
    (Ada__real_time__time_span___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "microseconds" defined at a-reatim.ads:119, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__microseconds___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__microseconds

 val microseconds #"a-reatim.ads" 119 0 0# 
   (us : int) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { ( (result = (Ada__real_time__microseconds.microseconds us)) /\ (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) ) }
 
 axiom microseconds__post_axiom :
  (forall us : int [(Ada__real_time__microseconds.microseconds us)].
   ( (Standard__integer.in_range us) -> (let result = (Ada__real_time__microseconds.microseconds us) in (
    (Ada__real_time__time_span___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "milliseconds" defined at a-reatim.ads:121, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__milliseconds___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__milliseconds

 val milliseconds #"a-reatim.ads" 121 0 0# 
   (ms : int) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { ( (result = (Ada__real_time__milliseconds.milliseconds ms)) /\ (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) ) }
 
 axiom milliseconds__post_axiom :
  (forall ms : int [(Ada__real_time__milliseconds.milliseconds ms)].
   ( (Standard__integer.in_range ms) -> (let result = (Ada__real_time__milliseconds.milliseconds ms) in (
    (Ada__real_time__time_span___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "seconds" defined at a-reatim.ads:124, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__seconds___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__seconds

 val seconds #"a-reatim.ads" 124 0 0# 
   (s : int) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { ( (result = (Ada__real_time__seconds.seconds s)) /\ (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) ) }
 
 axiom seconds__post_axiom :
  (forall s : int [(Ada__real_time__seconds.seconds s)].
   ( (Standard__integer.in_range s) -> (let result = (Ada__real_time__seconds.seconds s) in (
    (Ada__real_time__time_span___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "minutes" defined at a-reatim.ads:128, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__minutes___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__minutes

 val minutes #"a-reatim.ads" 128 0 0# 
   (m : int) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { ( (result = (Ada__real_time__minutes.minutes m)) /\ (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) ) }
 
 axiom minutes__post_axiom :
  (forall m : int [(Ada__real_time__minutes.minutes m)].
   ( (Standard__integer.in_range m) -> (let result = (Ada__real_time__minutes.minutes m) in (
    (Ada__real_time__time_span___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "split" defined at a-reatim.ads:141, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__split___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__seconds_count___axiom

 val split #"a-reatim.ads" 141 0 0# 
   (t : Ada__real_time__time.time) (sc : int__ref) (ts : Ada__real_time__time_span.time_span__ref) : unit
  requires { true }
  ensures { ( (Ada__real_time__seconds_count___axiom.dynamic_invariant sc.int__content True True True) /\ (Ada__real_time__time_span___axiom.dynamic_invariant ts.Ada__real_time__time_span.time_span__content True True True) ) }
  writes {sc, ts}

end

(* Module for declaring a program function (and possibly an axiom) for "time_of" defined at a-reatim.ads:144, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__real_time__time_of___axiom
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__time___axiom
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__seconds_count
 use        Ada__real_time__time_of

 val time_of #"a-reatim.ads" 144 0 0# 
   (sc : int) (ts : Ada__real_time__time_span.time_span) : Ada__real_time__time.time
  requires { true }
  ensures { ( (result = (Ada__real_time__time_of.time_of sc ts)) /\ (Ada__real_time__time___axiom.dynamic_invariant result True False True) ) }
 
 axiom time_of__post_axiom :
  (forall sc : int.
  (forall ts : Ada__real_time__time_span.time_span [(Ada__real_time__time_of.time_of sc ts)].
   ( ( (Ada__real_time__seconds_count.in_range sc) /\ (Ada__real_time__time_span___axiom.dynamic_invariant ts True True True) ) -> (let result = (Ada__real_time__time_of.time_of sc ts) in (
    (Ada__real_time__time___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "system_startup_time" defined at polyorb_hi-epoch.ads:43, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__epoch__system_startup_time___axiom
 use        Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main
 use        Ada__real_time__time
 use        Ada__real_time__time___axiom
 use        Polyorb_hi__epoch__elaborated_variables
 use        Polyorb_hi__epoch__elaborated_variables

 val system_startup_time #"polyorb_hi-epoch.ads" 43 0 0# 
   (sst : Ada__real_time__time.time__ref) : unit
  requires { true }
  ensures { (Ada__real_time__time___axiom.dynamic_invariant sst.Ada__real_time__time.time__content True True True) }
  reads {Polyorb_hi__epoch__elaborated_variables.elaborated_variables}
  writes {Polyorb_hi__epoch__elaborated_variables.elaborated_variables, sst}

end

(* Module for declaring a program function (and possibly an axiom) for "set_epoch" defined at polyorb_hi-epoch.ads:47, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__epoch__set_epoch___axiom
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__epoch__elaborated_variables
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables

 val set_epoch #"polyorb_hi-epoch.ads" 47 0 0# 
   (__void_param : unit) : unit
  requires { true }
  ensures { true }
  reads {Ada__real_time__clock_time.clock_time, Polyorb_hi__epoch__elaborated_variables.elaborated_variables}
  writes {Polyorb_hi__epoch__elaborated_variables.elaborated_variables}

end

(* Module for declaring a program function (and possibly an axiom) for "put_line" defined at polyorb_hi-output.ads:67, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__output__put_line___axiom
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__epoch__elaborated_variables
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables

 val put_line #"polyorb_hi-output.ads" 67 0 0# 
   (mode : int) (text : Standard__string.string) : unit
  requires { true }
  ensures { true }
  reads {Ada__real_time__clock_time.clock_time, Polyorb_hi__epoch__elaborated_variables.elaborated_variables}
  writes {Polyorb_hi__epoch__elaborated_variables.elaborated_variables}

end

(* Module for declaring a program function (and possibly an axiom) for "put" defined at polyorb_hi-output.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__output__put___axiom
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__epoch__elaborated_variables
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables

 val put #"polyorb_hi-output.ads" 73 0 0# 
   (mode : int) (text : Standard__string.string) : unit
  requires { true }
  ensures { true }
  reads {Ada__real_time__clock_time.clock_time, Polyorb_hi__epoch__elaborated_variables.elaborated_variables}
  writes {Polyorb_hi__epoch__elaborated_variables.elaborated_variables}

end

(* Module for declaring a program function (and possibly an axiom) for "put_line__2" defined at polyorb_hi-output.ads:79, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__output__put_line__2___axiom
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use        Polyorb_hi__output__lock
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__output__lockT
 use        Polyorb_hi__output__lockT___axiom
 use        Polyorb_hi__output__lock
 use        Polyorb_hi__epoch__elaborated_variables
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables

 val put_line__2 #"polyorb_hi-output.ads" 79 0 0# 
   (text : Standard__string.string) : unit
  requires { true }
  ensures { (Polyorb_hi__output__lockT___axiom.dynamic_invariant Polyorb_hi__output__lock.lock.Polyorb_hi__output__lockT.lockT__content True True True) }
  reads {Ada__real_time__clock_time.clock_time, Polyorb_hi__epoch__elaborated_variables.elaborated_variables, Polyorb_hi__output__lock.lock}
  writes {Polyorb_hi__epoch__elaborated_variables.elaborated_variables, Polyorb_hi__output__lock.lock}

end

(* Module for declaring a program function (and possibly an axiom) for "put__2" defined at polyorb_hi-output.ads:85, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__output__put__2___axiom
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use        Polyorb_hi__output__lock
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__output__lockT
 use        Polyorb_hi__output__lockT___axiom
 use        Polyorb_hi__output__lock
 use        Polyorb_hi__epoch__elaborated_variables
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables

 val put__2 #"polyorb_hi-output.ads" 85 0 0# 
   (text : Standard__string.string) : unit
  requires { true }
  ensures { (Polyorb_hi__output__lockT___axiom.dynamic_invariant Polyorb_hi__output__lock.lock.Polyorb_hi__output__lockT.lockT__content True True True) }
  reads {Ada__real_time__clock_time.clock_time, Polyorb_hi__epoch__elaborated_variables.elaborated_variables, Polyorb_hi__output__lock.lock}
  writes {Polyorb_hi__epoch__elaborated_variables.elaborated_variables, Polyorb_hi__output__lock.lock}

end

(* Module for declaring a program function (and possibly an axiom) for "dump" defined at polyorb_hi-output.ads:92, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__output__dump___axiom
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__streams__stream_element_array
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables

 val dump #"polyorb_hi-output.ads" 92 0 0# 
   (stream : Polyorb_hi__streams__stream_element_array.stream_element_array) (mode : int) : unit
  requires { true }
  ensures { true }
  reads {Ada__real_time__clock_time.clock_time, Polyorb_hi__epoch__elaborated_variables.elaborated_variables}

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd" defined at polyorb_hi-output.ads:97, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__output__Oadd___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        Standard__string___axiom
 use        Polyorb_hi__output__Oadd

 val oadd #"polyorb_hi-output.ads" 97 0 0# 
   (s1 : Standard__string.string) (s2 : Standard__string.string) : Standard__string.string
  requires { ( ((Standard__string.length s1) <= 255) /\ ((Standard__string.length s2) <= 255) ) }
  ensures { ( (result = (Polyorb_hi__output__Oadd.oadd s1 s2)) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__post_axiom :
  (forall s1 s2 : Standard__string.string [(Polyorb_hi__output__Oadd.oadd s1 s2)].
   ( ( ( (Standard__string___axiom.dynamic_invariant s1 True True True) /\ (Standard__string___axiom.dynamic_invariant s2 True True True) ) /\ ( ((Standard__string.length s1) <= 255) /\ ((Standard__string.length s2) <= 255) ) ) -> (let result = (Polyorb_hi__output__Oadd.oadd s1 s2) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "build_timestamp" defined at polyorb_hi-output.adb:43, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__output__build_timestamp___axiom
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom

 val volatile__effect #"polyorb_hi-output.adb" 43 0 0#  : Main.__private__ref 
 
 val build_timestamp #"polyorb_hi-output.adb" 43 0 0# 
   (__void_param : unit) : Ada__real_time__time_span.time_span
  requires { true }
  ensures { (Ada__real_time__time_span___axiom.dynamic_invariant result True False True) }
  writes {volatile__effect}

end

(* Module for declaring a program function (and possibly an axiom) for "put" defined at polyorb_hi-output.adb:55, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__output__lockT__put___axiom
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__output__lockT
 use        Polyorb_hi__epoch__elaborated_variables
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables

 val put #"polyorb_hi-output.adb" 55 0 0# 
   (self__ : Polyorb_hi__output__lockT.lockT) (text : Standard__string.string) : unit
  requires { true }
  ensures { true }
  reads {Ada__real_time__clock_time.clock_time, Polyorb_hi__epoch__elaborated_variables.elaborated_variables}
  writes {Polyorb_hi__epoch__elaborated_variables.elaborated_variables}

end

(* Module for declaring a program function (and possibly an axiom) for "put_line" defined at polyorb_hi-output.adb:60, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__output__lockT__put_line___axiom
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__output__lockT
 use        Polyorb_hi__epoch__elaborated_variables
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables

 val put_line #"polyorb_hi-output.adb" 60 0 0# 
   (self__ : Polyorb_hi__output__lockT.lockT) (text : Standard__string.string) : unit
  requires { true }
  ensures { true }
  reads {Ada__real_time__clock_time.clock_time, Polyorb_hi__epoch__elaborated_variables.elaborated_variables}
  writes {Polyorb_hi__epoch__elaborated_variables.elaborated_variables}

end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "output" defined at polyorb_hi-output.ads:39, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Polyorb_hi__output__package_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Polyorb_hi__output__verbosity___axiom
 use        Polyorb_hi__output__current_mode
 use        Polyorb_hi__output__lockT
 use        Polyorb_hi__output__lockT___axiom
 use        Polyorb_hi__output__lock
 use        Polyorb_hi__output__output_position
 use        Polyorb_hi__output__output_line___axiom
 use        Polyorb_hi__output__ThexD1
 use        Temp___167
 use        Polyorb_hi__output__T23b
 use        Polyorb_hi__output__nil
 use        Polyorb_hi__output__nil__aggregate_def
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Standard__character___axiom
 use        Polyorb_hi__output__lock___axiom
 use        Polyorb_hi__output__output_position___axiom
 use        Polyorb_hi__output__output_line___axiom
 use        Polyorb_hi__output__nil___axiom
 use        Polyorb_hi__output__verbosity___axiom
 use        Polyorb_hi__output__current_mode___axiom
 use        Polyorb_hi__output__lockT___axiom
 use        Polyorb_hi__output__ThexD1___axiom
 use        Polyorb_hi__output__T23b___axiom

 let def #"system.ads" 1 0 0# "GP_Subp:polyorb_hi-output.ads:39" "W:diverges:N" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( #"system.ads" 1 0 0# abstract ensures {true}(let _ = 1 in (
   ()))
   end ;
  #"polyorb_hi-output.ads" 51 0 0# assume { (Polyorb_hi__output__verbosity___axiom.dynamic_invariant Polyorb_hi__output__current_mode.current_mode True False True) };
  #"polyorb_hi-output.ads" 64 0 0# abstract ensures {true}(let _ = () in (
   ()))
   end ;
  #"polyorb_hi-output.adb" 52 0 0# assume { (Polyorb_hi__output__lockT___axiom.default_initial_assumption Polyorb_hi__output__lock.lock.Polyorb_hi__output__lockT.lockT__content False) };
  #"polyorb_hi-output.adb" 52 0 0# assume { (Polyorb_hi__output__lockT___axiom.dynamic_invariant Polyorb_hi__output__lock.lock.Polyorb_hi__output__lockT.lockT__content False False True) };
  #"polyorb_hi-output.adb" 52 0 0# abstract ensures {true}(let _ = ( #"polyorb_hi-output.adb" 171 0 0# assert { ( #"polyorb_hi-output.adb" 171 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Sloc:polyorb_hi-output.adb:171:51" "GP_Id:1" "comment:   Hex : constant array (0 .. 15) of Character := \"0123456789ABCDEF\";
                                                  ^ polyorb_hi-output.adb:171:51:VC_LENGTH_CHECK" "GP_Shape:hex_decl" ((if ((0 <= 15)) then (
   ((15 - 0) + 1)) else (
   0)) = (if ((Polyorb_hi__output__ThexD1.first <= Polyorb_hi__output__ThexD1.last)) then (
   ((Polyorb_hi__output__ThexD1.last - Polyorb_hi__output__ThexD1.first) + 1)) else (
   0))) ) };
  Temp___167.temp___167 ) in (
   ()))
   end ;
  (let polyorb_hi__output__nil__assume = ( #"polyorb_hi-output.adb" 172 0 0# assert { ( #"polyorb_hi-output.adb" 172 0 0# "model_vc" "keep_on_simp" "GP_Sloc:polyorb_hi-output.adb:172:34" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:0" "comment:   Nil : constant Output_Line := (Output_Line'Range => ' ');
                                 ^ polyorb_hi-output.adb:172:34:VC_LENGTH_CHECK" "GP_Shape:nil_decl__aggr" ((if ((Polyorb_hi__output__T23b.first <= Polyorb_hi__output__T23b.last)) then (
   ((Polyorb_hi__output__T23b.last - Polyorb_hi__output__T23b.first) + 1)) else (
   0)) = (if ((Polyorb_hi__output__output_position.first <= Polyorb_hi__output__output_position.last)) then (
   ((Polyorb_hi__output__output_position.last - Polyorb_hi__output__output_position.first) + 1)) else (
   0))) ) };
  ( #"polyorb_hi-output.adb" 172 0 0# abstract ensures {true}(let _ = (Boolean.andb((1 <= 0)) ((0 <= 48))) in (
   ()))
   end ;
  (Polyorb_hi__output__nil__aggregate_def.polyorb_hi__output__nil__aggregate_def(32)) ) ) in (
   #"polyorb_hi-output.adb" 172 0 0# assume { (polyorb_hi__output__nil__assume = Polyorb_hi__output__nil.nil) }))
  ;
  #"polyorb_hi-output.adb" 169 0 0# assume { (Polyorb_hi__output__output_line___axiom.dynamic_invariant Polyorb_hi__output__nil.nil True False True) };
  ( "GP_Sloc:polyorb_hi-output.adb:210:1" () ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "put_line" defined at polyorb_hi-output.ads:67, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__output__put_line__subprogram_def
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use        Polyorb_hi__output__lock
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string___axiom
 use        Polyorb_hi__output__verbosity___axiom
 use        Polyorb_hi__output__put_line__mode
 use        Polyorb_hi__output__put_line__text
 use        Polyorb_hi__output__put_line__2___axiom
 use        Standard__positive___axiom
 use        Standard__character___axiom
 use        Standard__string___axiom
 use        Standard__integer___axiom
 use        Polyorb_hi__output__lock___axiom
 use        Polyorb_hi__output__verbosity___axiom
 use        Polyorb_hi__output__put_line__mode___axiom
 use        Polyorb_hi__output__put_line__text___axiom
 use        Polyorb_hi__output__put_line__2___axiom
 use        Polyorb_hi__output__lockT___axiom

 let def #"polyorb_hi-output.adb" 172 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-output.ads:67" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-output.ads:67 *)
  ;
  #"polyorb_hi-output.ads" 51 0 0# assume { (Polyorb_hi__output__verbosity___axiom.dynamic_invariant Polyorb_hi__output__put_line__mode.mode True False True) };
  #"system.ads" 1 0 0# assume { (Standard__string___axiom.dynamic_invariant Polyorb_hi__output__put_line__text.text True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-output.ads:67 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-output.ads:67 *)
  ;
  #"polyorb_hi-output.ads" 67 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-output.ads:67 *)
  ;
  #"polyorb_hi-output.ads" 67 0 0# assume { true };
  () (* checking of pragma precondition polyorb_hi-output.ads:67 *)
  ;
  try
   ( ( "GP_Sloc:polyorb_hi-output.adb:130:7" () );
   ( "GP_Sloc:polyorb_hi-output.adb:134:7" (if ((Polyorb_hi__output__put_line__mode.mode >= 1)) then (
    ( ( "GP_Sloc:polyorb_hi-output.adb:135:10" () );
    ( "GP_Sloc:polyorb_hi-output.adb:136:10" (Polyorb_hi__output__put_line__2___axiom.put_line__2(Polyorb_hi__output__put_line__text.text)) ) )) else (
    ())) );
   #"polyorb_hi-output.adb" 128 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-output.ads:67 *)
  ;
  #"polyorb_hi-output.adb" 128 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "put" defined at polyorb_hi-output.ads:73, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__output__put__subprogram_def
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use        Polyorb_hi__output__lock
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string___axiom
 use        Polyorb_hi__output__verbosity___axiom
 use        Polyorb_hi__output__put__mode
 use        Polyorb_hi__output__put__text
 use        Polyorb_hi__output__put__2___axiom
 use        Standard__positive___axiom
 use        Standard__character___axiom
 use        Standard__string___axiom
 use        Standard__integer___axiom
 use        Polyorb_hi__output__lock___axiom
 use        Polyorb_hi__output__verbosity___axiom
 use        Polyorb_hi__output__put__mode___axiom
 use        Polyorb_hi__output__put__text___axiom
 use        Polyorb_hi__output__put__2___axiom
 use        Polyorb_hi__output__lockT___axiom

 let def #"polyorb_hi-output.adb" 128 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-output.ads:73" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-output.ads:73 *)
  ;
  #"polyorb_hi-output.ads" 51 0 0# assume { (Polyorb_hi__output__verbosity___axiom.dynamic_invariant Polyorb_hi__output__put__mode.mode True False True) };
  #"system.ads" 1 0 0# assume { (Standard__string___axiom.dynamic_invariant Polyorb_hi__output__put__text.text True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-output.ads:73 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-output.ads:73 *)
  ;
  #"polyorb_hi-output.ads" 73 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-output.ads:73 *)
  ;
  #"polyorb_hi-output.ads" 73 0 0# assume { true };
  () (* checking of pragma precondition polyorb_hi-output.ads:73 *)
  ;
  try
   ( ( "GP_Sloc:polyorb_hi-output.adb:152:7" () );
   ( "GP_Sloc:polyorb_hi-output.adb:156:7" (if ((Polyorb_hi__output__put__mode.mode >= 1)) then (
    ( ( "GP_Sloc:polyorb_hi-output.adb:157:10" () );
    ( "GP_Sloc:polyorb_hi-output.adb:158:10" (Polyorb_hi__output__put__2___axiom.put__2(Polyorb_hi__output__put__text.text)) ) )) else (
    ())) );
   #"polyorb_hi-output.adb" 150 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-output.ads:73 *)
  ;
  #"polyorb_hi-output.adb" 150 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "put_line__2" defined at polyorb_hi-output.ads:79, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__output__put_line__2__subprogram_def
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main
 use        Standard__string___axiom
 use        Polyorb_hi__output__put_line__2__text
 use        Polyorb_hi__output__lockT
 use        Polyorb_hi__output__lockT___axiom
 use        Polyorb_hi__output__lock
 use        Polyorb_hi__output__lockT__put_line___axiom
 use        Standard__positive___axiom
 use        Standard__character___axiom
 use        Standard__string___axiom
 use        Standard__integer___axiom
 use        Polyorb_hi__output__lock___axiom
 use        Polyorb_hi__output__lockT__put_line___axiom
 use        Polyorb_hi__output__put_line__2__text___axiom
 use        Polyorb_hi__output__lockT___axiom

 let def #"polyorb_hi-output.adb" 150 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-output.ads:79" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-output.ads:79 *)
  ;
  #"polyorb_hi-output.adb" 52 0 0# assume { (Polyorb_hi__output__lockT___axiom.dynamic_invariant Polyorb_hi__output__lock.lock.Polyorb_hi__output__lockT.lockT__content False False True) };
  #"system.ads" 1 0 0# assume { (Standard__string___axiom.dynamic_invariant Polyorb_hi__output__put_line__2__text.text True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-output.ads:79 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-output.ads:79 *)
  ;
  #"polyorb_hi-output.ads" 79 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-output.ads:79 *)
  ;
  #"polyorb_hi-output.ads" 79 0 0# assume { true };
  () (* checking of pragma precondition polyorb_hi-output.ads:79 *)
  ;
  try
   ( ( "GP_Sloc:polyorb_hi-output.adb:125:11" (Polyorb_hi__output__lockT__put_line___axiom.put_line(( (Polyorb_hi__output__lockT.lockT__havoc(Polyorb_hi__output__lock.lock));
   #"polyorb_hi-output.adb" 52 0 0# assume { (Polyorb_hi__output__lockT___axiom.dynamic_invariant Polyorb_hi__output__lock.lock.Polyorb_hi__output__lockT.lockT__content True True True) };
   Polyorb_hi__output__lock.lock.Polyorb_hi__output__lockT.lockT__content )) (Polyorb_hi__output__put_line__2__text.text)) );
   #"polyorb_hi-output.adb" 123 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-output.ads:79 *)
  ;
  #"polyorb_hi-output.adb" 123 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "put__2" defined at polyorb_hi-output.ads:85, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__output__put__2__subprogram_def
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main
 use        Standard__string___axiom
 use        Polyorb_hi__output__lockT
 use        Polyorb_hi__output__put__2__text
 use        Polyorb_hi__output__lockT___axiom
 use        Polyorb_hi__output__lock
 use        Polyorb_hi__output__lockT__put___axiom
 use        Standard__positive___axiom
 use        Standard__character___axiom
 use        Standard__string___axiom
 use        Standard__integer___axiom
 use        Polyorb_hi__output__lock___axiom
 use        Polyorb_hi__output__lockT__put___axiom
 use        Polyorb_hi__output__put__2__text___axiom
 use        Polyorb_hi__output__lockT___axiom

 let def #"polyorb_hi-output.adb" 123 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-output.ads:85" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-output.ads:85 *)
  ;
  #"polyorb_hi-output.adb" 52 0 0# assume { (Polyorb_hi__output__lockT___axiom.dynamic_invariant Polyorb_hi__output__lock.lock.Polyorb_hi__output__lockT.lockT__content False False True) };
  #"system.ads" 1 0 0# assume { (Standard__string___axiom.dynamic_invariant Polyorb_hi__output__put__2__text.text True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-output.ads:85 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-output.ads:85 *)
  ;
  #"polyorb_hi-output.ads" 85 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-output.ads:85 *)
  ;
  #"polyorb_hi-output.ads" 85 0 0# assume { true };
  () (* checking of pragma precondition polyorb_hi-output.ads:85 *)
  ;
  try
   ( ( "GP_Sloc:polyorb_hi-output.adb:147:11" (Polyorb_hi__output__lockT__put___axiom.put(( (Polyorb_hi__output__lockT.lockT__havoc(Polyorb_hi__output__lock.lock));
   #"polyorb_hi-output.adb" 52 0 0# assume { (Polyorb_hi__output__lockT___axiom.dynamic_invariant Polyorb_hi__output__lock.lock.Polyorb_hi__output__lockT.lockT__content True True True) };
   Polyorb_hi__output__lock.lock.Polyorb_hi__output__lockT.lockT__content )) (Polyorb_hi__output__put__2__text.text)) );
   #"polyorb_hi-output.adb" 145 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-output.ads:85 *)
  ;
  #"polyorb_hi-output.adb" 145 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "dump" defined at polyorb_hi-output.ads:92, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__output__dump__subprogram_def
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use        Ada__real_time__clock_time
 use        Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        "_gnatprove_standard".BV8
 use        Standard__string
 use        Standard__positive
 use        Standard__character
 use        Array__Int__Standard__character
 use        Standard__integer___axiom
 use        Polyorb_hi__streams__stream_element
 use        Array__Int__Polyorb_hi__streams__stream_element
 use        Polyorb_hi__streams__stream_element_array
 use        Polyorb_hi__streams__stream_element_array___axiom
 use        Polyorb_hi__output__verbosity___axiom
 use        Polyorb_hi__output__put_line___axiom
 use        Polyorb_hi__output__dump__stream
 use        Polyorb_hi__output__dump__mode
 use        Polyorb_hi__output__output_position
 use        Polyorb_hi__output__output_position___axiom
 use        Polyorb_hi__output__output_line___axiom
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__hex
 use        Temp___167
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__nil
 use        Polyorb_hi__output__nil__aggregate_def
 use        Polyorb_hi__output__dump__index
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__dump__output
 use        Polyorb_hi__output__dump__L_1
 use        Polyorb_hi__output__dump__L_1__j
 use        Polyorb_hi__output__dump__L_1__R27b
 use        Polyorb_hi__output__dump__L_1__R28b
 use        Polyorb_hi__output__dump__L_1__T30b
 use        Array__Int__Standard__character
 use        Array__Int__Polyorb_hi__streams__stream_element
 use        Array__Int__Polyorb_hi__streams__stream_element
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Standard__positive___axiom
 use        Standard__character___axiom
 use        Standard__string___axiom
 use        Standard__integer___axiom
 use        Polyorb_hi__output__output_position___axiom
 use        Polyorb_hi__output__output_line___axiom
 use        Polyorb_hi__output__hex___axiom
 use        Polyorb_hi__output__nil___axiom
 use        Polyorb_hi__output__dump__index___axiom
 use        Polyorb_hi__output__dump__output___axiom
 use        Polyorb_hi__output__dump__L_1__j___axiom
 use        Polyorb_hi__output__dump__L_1___axiom
 use        Polyorb_hi__output__verbosity___axiom
 use        Polyorb_hi__output__put_line___axiom
 use        Polyorb_hi__output__dump__stream___axiom
 use        Polyorb_hi__output__dump__mode___axiom
 use        Polyorb_hi__streams__stream_element___axiom
 use        Polyorb_hi__streams__stream_element_offset___axiom
 use        Polyorb_hi__streams__stream_element_array___axiom
 use        Polyorb_hi__streams__Tstream_element_offsetB___axiom
 use        Polyorb_hi__output__dump__L_1__R27b___axiom
 use        Polyorb_hi__output__dump__L_1__R28b___axiom
 use        Polyorb_hi__output__dump__L_1__T29b___axiom
 use        Polyorb_hi__output__dump__L_1__T30b___axiom

 let def #"polyorb_hi-output.adb" 145 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-output.ads:92" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( (let temp___1381 = Temp___167.temp___167 in (
   #"polyorb_hi-output.adb" 171 0 0# assume { (temp___1381 = Polyorb_hi__output__hex.hex) }))
  ;
  #"polyorb_hi-output.adb" 169 0 0# assume { (Polyorb_hi__output__output_line___axiom.dynamic_invariant Polyorb_hi__output__nil.nil True False True) };
  (let temp___1382 = (Polyorb_hi__output__nil__aggregate_def.polyorb_hi__output__nil__aggregate_def 32) in (
   #"polyorb_hi-output.adb" 172 0 0# assume { (temp___1382 = Polyorb_hi__output__nil.nil) }))
  ;
  () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-output.ads:92 *)
  ;
  #"polyorb_hi-streams.ads" 53 0 0# assume { (Polyorb_hi__streams__stream_element_array___axiom.dynamic_invariant Polyorb_hi__output__dump__stream.stream True False True) };
  #"polyorb_hi-output.ads" 51 0 0# assume { (Polyorb_hi__output__verbosity___axiom.dynamic_invariant Polyorb_hi__output__dump__mode.mode True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-output.ads:92 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-output.ads:92 *)
  ;
  #"polyorb_hi-output.ads" 92 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-output.ads:92 *)
  ;
  #"polyorb_hi-output.ads" 92 0 0# assume { true };
  () (* checking of pragma precondition polyorb_hi-output.ads:92 *)
  ;
  try
   ( #"polyorb_hi-output.adb" 178 0 0# Polyorb_hi__output__dump__index.index.int__content <- ( 1 );
   #"polyorb_hi-output.adb" 167 0 0# assume { (Polyorb_hi__output__output_position___axiom.dynamic_invariant Polyorb_hi__output__dump__index.index.int__content True False True) };
   #"polyorb_hi-output.adb" 179 0 0# Polyorb_hi__output__dump__output.output.Array__Int__Standard__character.map__content <- ( Polyorb_hi__output__nil.nil );
   #"polyorb_hi-output.adb" 169 0 0# assume { (Polyorb_hi__output__output_line___axiom.dynamic_invariant Polyorb_hi__output__dump__output.output.Array__Int__Standard__character.map__content True False True) };
   ( "GP_Sloc:polyorb_hi-output.adb:181:29" (let temp___1378 = ( #"polyorb_hi-output.adb" 181 0 0# abstract ensures {true}(let _ = Polyorb_hi__output__dump__stream.stream in (
    ()))
    end ;
   (Polyorb_hi__streams__stream_element_array.first(Polyorb_hi__output__dump__stream.stream)) ) in (
   (let temp___1379 = ( #"polyorb_hi-output.adb" 181 0 0# abstract ensures {true}(let _ = Polyorb_hi__output__dump__stream.stream in (
    ()))
    end ;
   (Polyorb_hi__streams__stream_element_array.last(Polyorb_hi__output__dump__stream.stream)) ) in (
    ( #"polyorb_hi-output.ads" 92 0 0# Polyorb_hi__output__dump__L_1__j.j.int__content <- ( temp___1378 );
    () (* Translation of an Ada loop from polyorb_hi-output.adb:181 *)
    ;
    (if ((Boolean.andb((temp___1378 <= Polyorb_hi__output__dump__L_1__j.j.int__content)) ((Polyorb_hi__output__dump__L_1__j.j.int__content <= temp___1379)))) then (
     try
      ( #"polyorb_hi-output.adb" 181 0 0# abstract ensures {true}(let _ = Polyorb_hi__output__dump__output.output.Array__Int__Standard__character.map__content in (
       ()))
       end ;
      (let temp___1377 = #"polyorb_hi-output.adb" 179 0 0# (any Array__Int__Standard__character.map
      ensures {(result = Polyorb_hi__output__dump__output.output.Array__Int__Standard__character.map__content)} 
      ) in (
       ( #"polyorb_hi-output.adb" 169 0 0# abstract ensures {true}(let _ = Polyorb_hi__output__dump__index.index.int__content in (
        ()))
        end ;
       (let temp___1376 = #"polyorb_hi-output.adb" 178 0 0# (any int
       ensures {(result = Polyorb_hi__output__dump__index.index.int__content)} 
       ) in (
        ( () (* First unroling of the loop statements appearing before the loop invariant of loop polyorb_hi-output.adb:181 *)
        ;
        () (* While loop translating the Ada loop from polyorb_hi-output.adb:181 *)
        ;
        #"polyorb_hi-output.adb" 181 0 0# while True do
         ( () (* Assume implicit invariants from the loop polyorb_hi-output.adb:181 *)
         ;
         #"polyorb_hi-output.adb" 181 0 0# assume { (Boolean.andb(( ( ( ( true /\ (Polyorb_hi__output__output_position___axiom.dynamic_invariant Polyorb_hi__output__dump__index.index.int__content False True True) ) /\ true ) /\ (Polyorb_hi__output__output_line___axiom.dynamic_invariant Polyorb_hi__output__dump__output.output.Array__Int__Standard__character.map__content False True True) ) /\ true )) (( ((Polyorb_hi__streams__stream_element_array.first Polyorb_hi__output__dump__stream.stream) <= Polyorb_hi__output__dump__L_1__j.j.int__content) /\ (Polyorb_hi__output__dump__L_1__j.j.int__content <= (Polyorb_hi__streams__stream_element_array.last Polyorb_hi__output__dump__stream.stream)) ))) };
         () (* Check for absence of RTE in the invariant of loop polyorb_hi-output.adb:181 *)
         ;
         () (* Loop statements appearing after the loop invariant of loop polyorb_hi-output.adb:181 *)
         ;
         ( "GP_Sloc:polyorb_hi-output.adb:182:10" (if (((Polyorb_hi__output__dump__index.index.int__content + 3) <= 48)) then (
          ( ( "GP_Sloc:polyorb_hi-output.adb:183:21" ( (let polyorb_hi__output__dump__L_1__R27b__assume = Polyorb_hi__output__dump__index.index.int__content in (
           #"polyorb_hi-output.adb" 183 0 0# assume { (polyorb_hi__output__dump__L_1__R27b__assume = Polyorb_hi__output__dump__L_1__R27b.r27b) }))
          ;
          #"polyorb_hi-output.adb" 167 0 0# assume { (Polyorb_hi__output__output_position___axiom.dynamic_invariant Polyorb_hi__output__dump__L_1__R27b.r27b True False True) } ) );
          ( "GP_Sloc:polyorb_hi-output.adb:183:36" ( (let polyorb_hi__output__dump__L_1__R28b__assume = (Polyorb_hi__output__dump__index.index.int__content + 2) in (
           #"polyorb_hi-output.adb" 183 0 0# assume { (polyorb_hi__output__dump__L_1__R28b__assume = Polyorb_hi__output__dump__L_1__R28b.r28b) }))
          ;
          #"system.ads" 1 0 0# assume { (Standard__integer___axiom.dynamic_invariant Polyorb_hi__output__dump__L_1__R28b.r28b True False True) } ) );
          ( "GP_Sloc:polyorb_hi-output.adb:183:41" #"polyorb_hi-output.adb" 183 0 0# Polyorb_hi__output__dump__output.output.Array__Int__Standard__character.map__content <- ( (let temp___1374 = (let temp___1372 = (let temp___1371 = (let temp___1370 = (Standard__character.to_rep((Array__Int__Standard__character.get(Polyorb_hi__output__hex.hex) ((BV8.to_uint(( #"polyorb_hi-output.adb" 185 0 0# "model_vc" "keep_on_simp" "GP_Sloc:polyorb_hi-output.adb:185:42" "GP_Reason:VC_DIVISION_CHECK" "GP_Id:2" "comment:              & Hex (Natural (Stream (J) mod 16));
                                         ^ polyorb_hi-output.adb:185:42:VC_DIVISION_CHECK" "GP_Shape:L_1_while__if__output_assign__concat__ixdcomp__typeconv__mod" (BV8.urem_((Polyorb_hi__streams__stream_element.to_rep((Array__Int__Polyorb_hi__streams__stream_element.get((Polyorb_hi__streams__stream_element_array.to_array(Polyorb_hi__output__dump__stream.stream))) (Polyorb_hi__output__dump__L_1__j.j.int__content))))) (( BV8.of_int 16 ))) ))))))) in (
          (let temp___1369 = (let temp___1368 = (Standard__character.to_rep((Array__Int__Standard__character.get(Polyorb_hi__output__hex.hex) ((BV8.to_uint(( #"polyorb_hi-output.adb" 184 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Sloc:polyorb_hi-output.adb:184:42" "GP_Id:3" "comment:              & Hex (Natural (Stream (J) / 16))
                                         ^ polyorb_hi-output.adb:184:42:VC_DIVISION_CHECK" "GP_Shape:L_1_while__if__output_assign__concat__concat__ixdcomp__typeconv__div" (BV8.udiv_((Polyorb_hi__streams__stream_element.to_rep((Array__Int__Polyorb_hi__streams__stream_element.get((Polyorb_hi__streams__stream_element_array.to_array(Polyorb_hi__output__dump__stream.stream))) (Polyorb_hi__output__dump__L_1__j.j.int__content))))) (( BV8.of_int 16 ))) ))))))) in (
          (let temp___1367 = 32 in (
           (Standard__string.of_array((Array__Int__Standard__character.concat((Array__Int__Standard__character.singleton((Standard__character.of_rep(temp___1367))) (Standard__positive.first))) (Standard__positive.first) (Standard__positive.first) ((Array__Int__Standard__character.singleton((Standard__character.of_rep(temp___1368))) (1))) (1) (1))) (Standard__positive.first) (( #"polyorb_hi-output.adb" 183 0 0# "model_vc" "keep_on_simp" "GP_Sloc:polyorb_hi-output.adb:184:15" "GP_Reason:VC_RANGE_CHECK" "GP_Id:4" "comment:              & Hex (Natural (Stream (J) / 16))
              ^ polyorb_hi-output.adb:184:15:VC_RANGE_CHECK" "GP_Shape:L_1_while__if__output_assign__concat__concat" (Standard__positive.range_check_(((Standard__positive.first + (1 + 1)) - 1))) )))))
          ))
           in (
           (if (((Standard__string.length(temp___1369)) = 0)) then (
            (Standard__string.of_array((Array__Int__Standard__character.singleton((Standard__character.of_rep(temp___1370))) (Standard__positive.first))) (Standard__positive.first) (Standard__positive.first))) else (
            (Standard__string.of_array((Array__Int__Standard__character.concat((Standard__string.to_array(temp___1369))) ((Standard__string.first(temp___1369))) ((Standard__string.last(temp___1369))) ((Array__Int__Standard__character.singleton((Standard__character.of_rep(temp___1370))) (1))) (1) (1))) ((Standard__string.first(temp___1369))) (( #"polyorb_hi-output.adb" 183 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:polyorb_hi-output.adb:185:15" "GP_Id:5" "comment:              & Hex (Natural (Stream (J) mod 16));
              ^ polyorb_hi-output.adb:185:15:VC_RANGE_CHECK" "GP_Shape:L_1_while__if__output_assign__concat" (Standard__positive.range_check_((((Standard__string.first(temp___1369)) + ((if (((Standard__string.first(temp___1369)) <= (Standard__string.last(temp___1369)))) then (
             (((Standard__string.last(temp___1369)) - (Standard__string.first(temp___1369))) + 1)) else (
             0)) + 1)) - 1))) )))))))
          ))
           in (
           ( #"polyorb_hi-output.adb" 183 0 0# assert { ( #"polyorb_hi-output.adb" 183 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Sloc:polyorb_hi-output.adb:185:15" "GP_Shape:L_1_while__if__output_assign__concat" "GP_Id:6" "comment:              & Hex (Natural (Stream (J) mod 16));
              ^ polyorb_hi-output.adb:185:15:VC_LENGTH_CHECK" ((if (((Standard__string.first(temp___1371)) <= (Standard__string.last(temp___1371)))) then (
            (((Standard__string.last(temp___1371)) - (Standard__string.first(temp___1371))) + 1)) else (
            0)) = (if ((Polyorb_hi__output__dump__L_1__R27b.r27b <= Polyorb_hi__output__dump__L_1__R28b.r28b)) then (
            ((Polyorb_hi__output__dump__L_1__R28b.r28b - Polyorb_hi__output__dump__L_1__R27b.r27b) + 1)) else (
            0))) ) };
           (Polyorb_hi__output__dump__L_1__T30b.of_array((Array__Int__Standard__character.slide((Standard__string.to_array(temp___1371))) ((Standard__string.first(temp___1371))) (Polyorb_hi__output__dump__L_1__R27b.r27b))) (Polyorb_hi__output__dump__L_1__R27b.r27b) (Polyorb_hi__output__dump__L_1__R28b.r28b)) )))
           in (
          (let temp___1373 = (Polyorb_hi__output__dump__L_1__T30b.of_array Polyorb_hi__output__dump__output.output.Array__Int__Standard__character.map__content Polyorb_hi__output__dump__L_1__R27b.r27b Polyorb_hi__output__dump__L_1__R28b.r28b) in (
           ( #"polyorb_hi-output.adb" 183 0 0# assert { ( #"polyorb_hi-output.adb" 183 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Sloc:polyorb_hi-output.adb:183:41" "GP_Id:7" "comment:            Output (Index .. Index + 2) := ' '
                                        ^ polyorb_hi-output.adb:183:41:VC_LENGTH_CHECK" "GP_Shape:L_1_while__if__output_assign" ((if (((Polyorb_hi__output__dump__L_1__T30b.first temp___1372) <= (Polyorb_hi__output__dump__L_1__T30b.last temp___1372))) then (
            (((Polyorb_hi__output__dump__L_1__T30b.last temp___1372) - (Polyorb_hi__output__dump__L_1__T30b.first temp___1372)) + 1)) else (
            0)) = (if (((Polyorb_hi__output__dump__L_1__T30b.first temp___1373) <= (Polyorb_hi__output__dump__L_1__T30b.last temp___1373))) then (
            (((Polyorb_hi__output__dump__L_1__T30b.last temp___1373) - (Polyorb_hi__output__dump__L_1__T30b.first temp___1373)) + 1)) else (
            0))) ) };
           temp___1372 )))
          ))
           in (
           #"polyorb_hi-output.adb" 183 0 0# (any Array__Int__Standard__character.map
           ensures {( ( ( true /\ (Polyorb_hi__output__output_position.first = Polyorb_hi__output__output_position.first) ) /\ (Polyorb_hi__output__output_position.last = Polyorb_hi__output__output_position.last) ) /\ (forall temp___1375 : int.
            (if (( (Polyorb_hi__output__dump__L_1__R27b.r27b <= temp___1375) /\ (temp___1375 <= Polyorb_hi__output__dump__L_1__R28b.r28b) )) then (
             ((Array__Int__Standard__character.get result temp___1375) = (Array__Int__Standard__character.get (Polyorb_hi__output__dump__L_1__T30b.to_array temp___1374) temp___1375))) else (
             ((Array__Int__Standard__character.get result temp___1375) = (Array__Int__Standard__character.get Polyorb_hi__output__dump__output.output.Array__Int__Standard__character.map__content temp___1375))))) )} 
           )))
           ) );
          ( "GP_Sloc:polyorb_hi-output.adb:186:19" #"polyorb_hi-output.adb" 186 0 0# Polyorb_hi__output__dump__index.index.int__content <- ( ( #"polyorb_hi-output.adb" 186 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:polyorb_hi-output.adb:186:28" "GP_Id:8" "comment:            Index := Index + 3;
                           ^ polyorb_hi-output.adb:186:28:VC_RANGE_CHECK" "GP_Shape:L_1_while__if__index_assign__add" (Polyorb_hi__output__output_position.range_check_((Polyorb_hi__output__dump__index.index.int__content + 3))) ) ) ) )) else (
          ( ( "GP_Sloc:polyorb_hi-output.adb:188:13" (Polyorb_hi__output__put_line___axiom.put_line(Polyorb_hi__output__dump__mode.mode) ((Standard__string.of_array(Polyorb_hi__output__dump__output.output.Array__Int__Standard__character.map__content) (Polyorb_hi__output__output_position.first) (Polyorb_hi__output__output_position.last)))) );
          ( "GP_Sloc:polyorb_hi-output.adb:189:19" #"polyorb_hi-output.adb" 189 0 0# Polyorb_hi__output__dump__index.index.int__content <- ( 1 ) );
          ( "GP_Sloc:polyorb_hi-output.adb:190:20" #"polyorb_hi-output.adb" 190 0 0# Polyorb_hi__output__dump__output.output.Array__Int__Standard__character.map__content <- ( Polyorb_hi__output__nil.nil ) ) ))) );
         () (* Check for the exit condition and loop statements appearing before the loop invariant of loop polyorb_hi-output.adb:181 *)
         ;
         (if ((Polyorb_hi__output__dump__L_1__j.j.int__content = temp___1379)) then (
          #"polyorb_hi-output.adb" 181 0 0# raise Polyorb_hi__output__dump__L_1.L_1));
         #"polyorb_hi-output.adb" 181 0 0# Polyorb_hi__output__dump__L_1__j.j.int__content <- ( (Polyorb_hi__output__dump__L_1__j.j.int__content + 1) ) )
        done )))
        )))
       )
     with
      Polyorb_hi__output__dump__L_1.L_1 -> ()
     end)) )))
   ))
    );
   ( "GP_Sloc:polyorb_hi-output.adb:194:7" (Polyorb_hi__output__put_line___axiom.put_line(Polyorb_hi__output__dump__mode.mode) ((Standard__string.of_array(Polyorb_hi__output__dump__output.output.Array__Int__Standard__character.map__content) (Polyorb_hi__output__output_position.first) (Polyorb_hi__output__output_position.last)))) );
   #"polyorb_hi-output.adb" 174 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-output.ads:92 *)
  ;
  #"polyorb_hi-output.adb" 174 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "Oadd" defined at polyorb_hi-output.ads:97, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__output__Oadd__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__string
 use        Standard__integer
 use        Standard__positive
 use        Standard__character
 use        Array__Int__Standard__character
 use        Standard__string___axiom
 use        Polyorb_hi__output__Oadd__s1
 use        Polyorb_hi__output__Oadd__s2
 use        Polyorb_hi__output__Oadd__TsS
 use        Polyorb_hi__output__Oadd__T34b
 use        Array__Int__Standard__character
 use        Polyorb_hi__output__Oadd__s
 use        Polyorb_hi__output__Oadd__T36b
 use        Polyorb_hi__output__Oadd__T38b
 use        Polyorb_hi__output__Oadd__T40b
 use        Polyorb_hi__output__Oadd__T42b
 use        Polyorb_hi__output__Oadd__s__aggregate_def
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Standard__positive___axiom
 use        Standard__character___axiom
 use        Standard__string___axiom
 use        Standard__integer___axiom
 use        Polyorb_hi__output__Oadd__s___axiom
 use        Polyorb_hi__output__Oadd__s1___axiom
 use        Polyorb_hi__output__Oadd__s2___axiom
 use        Polyorb_hi__output__Oadd__TsS___axiom
 use        Polyorb_hi__output__Oadd__TTsSP1___axiom
 use        Polyorb_hi__output__Oadd__T33b___axiom
 use        Polyorb_hi__output__Oadd__T34b___axiom
 use        Polyorb_hi__output__Oadd__T35b___axiom
 use        Polyorb_hi__output__Oadd__T36b___axiom
 use        Polyorb_hi__output__Oadd__T37b___axiom
 use        Polyorb_hi__output__Oadd__T38b___axiom
 use        Polyorb_hi__output__Oadd__T39b___axiom
 use        Polyorb_hi__output__Oadd__T40b___axiom
 use        Polyorb_hi__output__Oadd__T41b___axiom
 use        Polyorb_hi__output__Oadd__T42b___axiom

 val polyorb_hi__output__Oadd__result #"polyorb_hi-output.adb" 174 0 0# "model_projected" "model_trace:3460@result"  : Standard__string.string__ref 
 
 let def #"system.ads" 1 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-output.ads:97" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-output.ads:97 *)
  ;
  #"system.ads" 1 0 0# assume { (Standard__string___axiom.dynamic_invariant Polyorb_hi__output__Oadd__s1.s1 True False True) };
  #"system.ads" 1 0 0# assume { (Standard__string___axiom.dynamic_invariant Polyorb_hi__output__Oadd__s2.s2 True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-output.ads:97 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-output.ads:97 *)
  ;
  #"polyorb_hi-output.ads" 97 0 0# abstract ensures {true}(let _ = (Boolean.andb((( #"polyorb_hi-output.ads" 97 0 0# abstract ensures {true}(let _ = Polyorb_hi__output__Oadd__s1.s1 in (
   ()))
   end ;
  (Standard__string.length(Polyorb_hi__output__Oadd__s1.s1)) ) <= 255)) ((( #"polyorb_hi-output.ads" 97 0 0# abstract ensures {true}(let _ = Polyorb_hi__output__Oadd__s2.s2 in (
   ()))
   end ;
  (Standard__string.length(Polyorb_hi__output__Oadd__s2.s2)) ) <= 255))) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-output.ads:97 *)
  ;
  #"polyorb_hi-output.ads" 97 0 0# assume { ( ((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) <= 255) /\ ((Standard__string.length Polyorb_hi__output__Oadd__s2.s2) <= 255) ) };
  () (* checking of pragma precondition polyorb_hi-output.ads:97 *)
  ;
  try
   ( #"polyorb_hi-output.ads" 97 0 0# abstract ensures {true}(let _ = ( #"polyorb_hi-output.adb" 202 0 0# "model_vc" "keep_on_simp" "GP_Sloc:polyorb_hi-output.adb:202:34" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Id:10" "comment:      S : String (1 .. S1'Length + S2'Length) := (others => ' ');
                                 ^ polyorb_hi-output.adb:202:34:VC_OVERFLOW_CHECK" "GP_Shape:TsS_def__string_ind__range__add" (Standard__integer.range_check_((( #"polyorb_hi-output.adb" 202 0 0# abstract ensures {true}(let _ = Polyorb_hi__output__Oadd__s1.s1 in (
    ()))
    end ;
   (Standard__string.length(Polyorb_hi__output__Oadd__s1.s1)) ) + ( #"polyorb_hi-output.ads" 97 0 0# abstract ensures {true}(let _ = Polyorb_hi__output__Oadd__s2.s2 in (
    ()))
    end ;
   (Standard__string.length(Polyorb_hi__output__Oadd__s2.s2)) )))) ) in (
    ()))
    end ;
   ( #"polyorb_hi-output.adb" 202 0 0# "[no name]" "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:polyorb_hi-output.adb:202:7" "GP_Id:9" "comment:      S : String (1 .. S1'Length + S2'Length) := (others => ' ');
      ^ polyorb_hi-output.adb:202:7:VC_RANGE_CHECK" #"polyorb_hi-output.adb" 202 0 0# (any unit
   requires {( (1 <= ((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + (Standard__string.length Polyorb_hi__output__Oadd__s2.s2))) -> ( (1 >= Standard__positive.first) /\ (((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + (Standard__string.length Polyorb_hi__output__Oadd__s2.s2)) <= Standard__positive.last) ) )} 
   ensures {true} 
   ) );
   (let polyorb_hi__output__Oadd__s__assume = (let temp___1387 = (let temp___1386 = (Polyorb_hi__output__Oadd__s__aggregate_def.polyorb_hi__output__Oadd__s__aggregate_def(32)) in (
    ( #"polyorb_hi-output.adb" 202 0 0# assume { ((Polyorb_hi__output__Oadd__T34b.first temp___1386) = 1) };
    #"polyorb_hi-output.adb" 202 0 0# assume { ((Polyorb_hi__output__Oadd__T34b.last temp___1386) = ((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + (Standard__string.length Polyorb_hi__output__Oadd__s2.s2))) };
    temp___1386 )))
    in (
    ( #"polyorb_hi-output.adb" 202 0 0# assert { ( #"polyorb_hi-output.adb" 202 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Sloc:polyorb_hi-output.adb:202:50" "GP_Id:11" "comment:      S : String (1 .. S1'Length + S2'Length) := (others => ' ');
                                                 ^ polyorb_hi-output.adb:202:50:VC_LENGTH_CHECK" "GP_Shape:s_decl__aggr" ((if (((Polyorb_hi__output__Oadd__T34b.first(temp___1387)) <= (Polyorb_hi__output__Oadd__T34b.last(temp___1387)))) then (
     (((Polyorb_hi__output__Oadd__T34b.last(temp___1387)) - (Polyorb_hi__output__Oadd__T34b.first(temp___1387))) + 1)) else (
     0)) = (if ((1 <= ((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + (Standard__string.length Polyorb_hi__output__Oadd__s2.s2)))) then (
     ((((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + (Standard__string.length Polyorb_hi__output__Oadd__s2.s2)) - 1) + 1)) else (
     0))) ) };
    (Polyorb_hi__output__Oadd__TsS.of_array((Polyorb_hi__output__Oadd__T34b.to_array(temp___1387))) ((Polyorb_hi__output__Oadd__T34b.first(temp___1387))) ((Polyorb_hi__output__Oadd__T34b.last(temp___1387)))) )))
    in (
    ( #"polyorb_hi-output.adb" 202 0 0# Polyorb_hi__output__Oadd__s.s.Array__Int__Standard__character.map__content <- ( (Polyorb_hi__output__Oadd__TsS.to_array(polyorb_hi__output__Oadd__s__assume)) );
    #"polyorb_hi-output.adb" 202 0 0# assume { ((Standard__integer.to_rep(Polyorb_hi__output__Oadd__s.s__first)) = (Polyorb_hi__output__Oadd__TsS.first(polyorb_hi__output__Oadd__s__assume))) };
    #"polyorb_hi-output.adb" 202 0 0# assume { ((Standard__integer.to_rep(Polyorb_hi__output__Oadd__s.s__last)) = (Polyorb_hi__output__Oadd__TsS.last(polyorb_hi__output__Oadd__s__assume))) } )))
   ;
   #"polyorb_hi-output.adb" 202 0 0# assume { (if (False) then (
    true) else (
    ( (Polyorb_hi__output__Oadd__TsS.dynamic_property 1 ((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + (Standard__string.length Polyorb_hi__output__Oadd__s2.s2)) (Standard__integer.to_rep Polyorb_hi__output__Oadd__s.s__first) (Standard__integer.to_rep Polyorb_hi__output__Oadd__s.s__last)) /\ ( ((Standard__integer.to_rep Polyorb_hi__output__Oadd__s.s__first) = 1) /\ ((Standard__integer.to_rep Polyorb_hi__output__Oadd__s.s__last) = ((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + (Standard__string.length Polyorb_hi__output__Oadd__s2.s2))) ) ))) };
   ( "GP_Sloc:polyorb_hi-output.adb:204:32" #"polyorb_hi-output.adb" 204 0 0# Polyorb_hi__output__Oadd__s.s.Array__Int__Standard__character.map__content <- ( (let temp___1396 = (let temp___1392 = (let temp___1391 = (let temp___1390 = ( #"polyorb_hi-output.adb" 202 0 0# abstract ensures {true}(let _ = Polyorb_hi__output__Oadd__s1.s1 in (
    ()))
    end ;
   (Standard__string.last(Polyorb_hi__output__Oadd__s1.s1)) ) in (
   (let temp___1389 = ( #"polyorb_hi-output.ads" 97 0 0# abstract ensures {true}(let _ = Polyorb_hi__output__Oadd__s1.s1 in (
    ()))
    end ;
   (Standard__string.first(Polyorb_hi__output__Oadd__s1.s1)) ) in (
    (Polyorb_hi__output__Oadd__T38b.of_array(( #"polyorb_hi-output.adb" 204 0 0# assert { ( #"polyorb_hi-output.adb" 204 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:polyorb_hi-output.adb:204:35" "GP_Id:12" "comment:      S (S'First .. S1'Length) := S1 (S1'First .. S1'Last);
                                  ^ polyorb_hi-output.adb:204:35:VC_RANGE_CHECK" "GP_Shape:s_assign__slice" ( (temp___1389 <= temp___1390) -> ( ( ((Standard__string.first Polyorb_hi__output__Oadd__s1.s1) <= temp___1389) /\ (temp___1389 <= (Standard__string.last Polyorb_hi__output__Oadd__s1.s1)) ) /\ ( ((Standard__string.first Polyorb_hi__output__Oadd__s1.s1) <= temp___1390) /\ (temp___1390 <= (Standard__string.last Polyorb_hi__output__Oadd__s1.s1)) ) ) ) ) };
    (Standard__string.to_array(Polyorb_hi__output__Oadd__s1.s1)) )) (temp___1389) (temp___1390))))
   ))
    in (
    ( #"polyorb_hi-output.adb" 204 0 0# assert { ( #"polyorb_hi-output.adb" 204 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Sloc:polyorb_hi-output.adb:204:35" "GP_Shape:s_assign__slice" "GP_Id:13" "comment:      S (S'First .. S1'Length) := S1 (S1'First .. S1'Last);
                                  ^ polyorb_hi-output.adb:204:35:VC_LENGTH_CHECK" ((if (((Polyorb_hi__output__Oadd__T38b.first(temp___1391)) <= (Polyorb_hi__output__Oadd__T38b.last(temp___1391)))) then (
     (((Polyorb_hi__output__Oadd__T38b.last(temp___1391)) - (Polyorb_hi__output__Oadd__T38b.first(temp___1391))) + 1)) else (
     0)) = (if ((1 <= (Standard__string.length Polyorb_hi__output__Oadd__s1.s1))) then (
     (((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) - 1) + 1)) else (
     0))) ) };
    (Polyorb_hi__output__Oadd__T36b.of_array((Array__Int__Standard__character.slide((Polyorb_hi__output__Oadd__T38b.to_array(temp___1391))) ((Polyorb_hi__output__Oadd__T38b.first(temp___1391))) (1))) (1) ((Standard__string.length Polyorb_hi__output__Oadd__s1.s1))) )))
    in (
   (let temp___1395 = (let temp___1394 = (Standard__string.length Polyorb_hi__output__Oadd__s1.s1) in (
   (let temp___1393 = 1 in (
    (Polyorb_hi__output__Oadd__T36b.of_array Polyorb_hi__output__Oadd__s.s.Array__Int__Standard__character.map__content temp___1393 temp___1394)))
   ))
    in (
    ( #"polyorb_hi-output.adb" 204 0 0# assert { ( #"polyorb_hi-output.adb" 204 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Sloc:polyorb_hi-output.adb:204:32" "GP_Id:14" "comment:      S (S'First .. S1'Length) := S1 (S1'First .. S1'Last);
                               ^ polyorb_hi-output.adb:204:32:VC_LENGTH_CHECK" "GP_Shape:s_assign" ((if (((Polyorb_hi__output__Oadd__T36b.first temp___1392) <= (Polyorb_hi__output__Oadd__T36b.last temp___1392))) then (
     (((Polyorb_hi__output__Oadd__T36b.last temp___1392) - (Polyorb_hi__output__Oadd__T36b.first temp___1392)) + 1)) else (
     0)) = (if (((Polyorb_hi__output__Oadd__T36b.first temp___1395) <= (Polyorb_hi__output__Oadd__T36b.last temp___1395))) then (
     (((Polyorb_hi__output__Oadd__T36b.last temp___1395) - (Polyorb_hi__output__Oadd__T36b.first temp___1395)) + 1)) else (
     0))) ) };
    temp___1392 )))
   ))
    in (
    #"polyorb_hi-output.adb" 204 0 0# (any Array__Int__Standard__character.map
    ensures {(forall temp___1397 : int.
     (if (( (1 <= temp___1397) /\ (temp___1397 <= (Standard__string.length Polyorb_hi__output__Oadd__s1.s1)) )) then (
      ((Array__Int__Standard__character.get result temp___1397) = (Array__Int__Standard__character.get (Polyorb_hi__output__Oadd__T36b.to_array temp___1396) temp___1397))) else (
      ((Array__Int__Standard__character.get result temp___1397) = (Array__Int__Standard__character.get Polyorb_hi__output__Oadd__s.s.Array__Int__Standard__character.map__content temp___1397)))))} 
    )))
    ) );
   ( "GP_Sloc:polyorb_hi-output.adb:205:35" #"polyorb_hi-output.adb" 205 0 0# Polyorb_hi__output__Oadd__s.s.Array__Int__Standard__character.map__content <- ( (let temp___1405 = (let temp___1401 = (let temp___1400 = (let temp___1399 = ( #"polyorb_hi-output.adb" 202 0 0# abstract ensures {true}(let _ = Polyorb_hi__output__Oadd__s2.s2 in (
    ()))
    end ;
   (Standard__string.last(Polyorb_hi__output__Oadd__s2.s2)) ) in (
   (let temp___1398 = ( #"polyorb_hi-output.ads" 97 0 0# abstract ensures {true}(let _ = Polyorb_hi__output__Oadd__s2.s2 in (
    ()))
    end ;
   (Standard__string.first(Polyorb_hi__output__Oadd__s2.s2)) ) in (
    (Polyorb_hi__output__Oadd__T42b.of_array(( #"polyorb_hi-output.adb" 205 0 0# assert { ( #"polyorb_hi-output.adb" 205 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:s_assign__slice" "GP_Sloc:polyorb_hi-output.adb:205:38" "GP_Id:15" "comment:      S (S1'Length + 1 .. S'Last) := S2 (S2'First .. S2'Last);
                                     ^ polyorb_hi-output.adb:205:38:VC_RANGE_CHECK" ( (temp___1398 <= temp___1399) -> ( ( ((Standard__string.first Polyorb_hi__output__Oadd__s2.s2) <= temp___1398) /\ (temp___1398 <= (Standard__string.last Polyorb_hi__output__Oadd__s2.s2)) ) /\ ( ((Standard__string.first Polyorb_hi__output__Oadd__s2.s2) <= temp___1399) /\ (temp___1399 <= (Standard__string.last Polyorb_hi__output__Oadd__s2.s2)) ) ) ) ) };
    (Standard__string.to_array(Polyorb_hi__output__Oadd__s2.s2)) )) (temp___1398) (temp___1399))))
   ))
    in (
    ( #"polyorb_hi-output.adb" 205 0 0# assert { ( #"polyorb_hi-output.adb" 205 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Shape:s_assign__slice" "GP_Sloc:polyorb_hi-output.adb:205:38" "GP_Id:16" "comment:      S (S1'Length + 1 .. S'Last) := S2 (S2'First .. S2'Last);
                                     ^ polyorb_hi-output.adb:205:38:VC_LENGTH_CHECK" ((if (((Polyorb_hi__output__Oadd__T42b.first(temp___1400)) <= (Polyorb_hi__output__Oadd__T42b.last(temp___1400)))) then (
     (((Polyorb_hi__output__Oadd__T42b.last(temp___1400)) - (Polyorb_hi__output__Oadd__T42b.first(temp___1400))) + 1)) else (
     0)) = (if ((((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + 1) <= (Standard__integer.to_rep Polyorb_hi__output__Oadd__s.s__last))) then (
     (((Standard__integer.to_rep Polyorb_hi__output__Oadd__s.s__last) - ((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + 1)) + 1)) else (
     0))) ) };
    (Polyorb_hi__output__Oadd__T40b.of_array((Array__Int__Standard__character.slide((Polyorb_hi__output__Oadd__T42b.to_array(temp___1400))) ((Polyorb_hi__output__Oadd__T42b.first(temp___1400))) (((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + 1)))) (((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + 1)) ((Standard__integer.to_rep Polyorb_hi__output__Oadd__s.s__last))) )))
    in (
   (let temp___1404 = (let temp___1403 = (Standard__integer.to_rep Polyorb_hi__output__Oadd__s.s__last) in (
   (let temp___1402 = ((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + 1) in (
    (Polyorb_hi__output__Oadd__T40b.of_array Polyorb_hi__output__Oadd__s.s.Array__Int__Standard__character.map__content temp___1402 temp___1403)))
   ))
    in (
    ( #"polyorb_hi-output.adb" 205 0 0# assert { ( #"polyorb_hi-output.adb" 205 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Shape:s_assign" "GP_Sloc:polyorb_hi-output.adb:205:35" "GP_Id:17" "comment:      S (S1'Length + 1 .. S'Last) := S2 (S2'First .. S2'Last);
                                  ^ polyorb_hi-output.adb:205:35:VC_LENGTH_CHECK" ((if (((Polyorb_hi__output__Oadd__T40b.first temp___1401) <= (Polyorb_hi__output__Oadd__T40b.last temp___1401))) then (
     (((Polyorb_hi__output__Oadd__T40b.last temp___1401) - (Polyorb_hi__output__Oadd__T40b.first temp___1401)) + 1)) else (
     0)) = (if (((Polyorb_hi__output__Oadd__T40b.first temp___1404) <= (Polyorb_hi__output__Oadd__T40b.last temp___1404))) then (
     (((Polyorb_hi__output__Oadd__T40b.last temp___1404) - (Polyorb_hi__output__Oadd__T40b.first temp___1404)) + 1)) else (
     0))) ) };
    temp___1401 )))
   ))
    in (
    #"polyorb_hi-output.adb" 205 0 0# (any Array__Int__Standard__character.map
    ensures {(forall temp___1406 : int.
     (if (( (((Standard__string.length Polyorb_hi__output__Oadd__s1.s1) + 1) <= temp___1406) /\ (temp___1406 <= (Standard__integer.to_rep Polyorb_hi__output__Oadd__s.s__last)) )) then (
      ((Array__Int__Standard__character.get result temp___1406) = (Array__Int__Standard__character.get (Polyorb_hi__output__Oadd__T40b.to_array temp___1405) temp___1406))) else (
      ((Array__Int__Standard__character.get result temp___1406) = (Array__Int__Standard__character.get Polyorb_hi__output__Oadd__s.s.Array__Int__Standard__character.map__content temp___1406)))))} 
    )))
    ) );
   ( "GP_Sloc:polyorb_hi-output.adb:207:7" ( #"polyorb_hi-output.adb" 207 0 0# polyorb_hi__output__Oadd__result.Standard__string.string__content <- ( (Standard__string.of_array(Polyorb_hi__output__Oadd__s.s.Array__Int__Standard__character.map__content) ((Standard__integer.to_rep(Polyorb_hi__output__Oadd__s.s__first))) ((Standard__integer.to_rep(Polyorb_hi__output__Oadd__s.s__last)))) );
   #"polyorb_hi-output.adb" 207 0 0# raise Return__exc ) );
   #"polyorb_hi-output.adb" 201 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-output.ads:97 *)
  ;
  #"polyorb_hi-output.adb" 201 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  polyorb_hi__output__Oadd__result.Standard__string.string__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "build_timestamp" defined at polyorb_hi-output.adb:43, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__output__build_timestamp__subprogram_def
 use        Polyorb_hi__epoch__elaborated_variables
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__real_time__time
 use        Ada__real_time__time___axiom
 use        Ada__real_time__time_first
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__clock___axiom
 use        Ada__real_time__Osubtract__2___axiom
 use        Ada__real_time__to_time_span___axiom
 use        Polyorb_hi__epoch__system_startup_time___axiom
 use        Polyorb_hi__output__build_timestamp__start_time
 use        Polyorb_hi__output__build_timestamp__elapsed
 use        Polyorb_hi__output__build_timestamp__now
 use        Standard__duration___axiom
 use        Polyorb_hi__output__build_timestamp__start_time___axiom
 use        Polyorb_hi__output__build_timestamp__elapsed___axiom
 use        Polyorb_hi__output__build_timestamp__now___axiom
 use        Ada__real_time__time___axiom
 use        Ada__real_time__time_first___axiom
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__clock___axiom
 use        Ada__real_time__Osubtract__2___axiom
 use        Ada__real_time__to_time_span___axiom
 use        Polyorb_hi__epoch__system_startup_time___axiom

 val polyorb_hi__output__build_timestamp__result #"system.ads" 1 0 0#  : Ada__real_time__time_span.time_span__ref 
 
 let def #"a-reatim.ads" 56 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-output.adb:43" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( #"a-reatim.ads" 51 0 0# assume { (Ada__real_time__time___axiom.dynamic_invariant Ada__real_time__time_first.time_first True False True) };
  () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-output.adb:43 *)
  ;
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-output.adb:43 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-output.adb:43 *)
  ;
  #"a-reatim.ads" 52 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-output.adb:43 *)
  ;
  #"a-reatim.ads" 52 0 0# assume { true };
  () (* checking of pragma precondition polyorb_hi-output.adb:43 *)
  ;
  try
   ( #"a-reatim.ads" 52 0 0# abstract ensures {true}(let _ = () in (
    ()))
    end ;
   #"polyorb_hi-output.adb" 106 0 0# assume { (Ada__real_time__time___axiom.default_initial_assumption Polyorb_hi__output__build_timestamp__start_time.start_time.Ada__real_time__time.time__content False) };
   #"a-reatim.ads" 51 0 0# assume { (Ada__real_time__time___axiom.dynamic_invariant Polyorb_hi__output__build_timestamp__start_time.start_time.Ada__real_time__time.time__content False False True) };
   #"a-reatim.ads" 51 0 0# abstract ensures {true}(let _ = () in (
    ()))
    end ;
   #"polyorb_hi-output.adb" 107 0 0# assume { (Ada__real_time__time_span___axiom.default_initial_assumption Polyorb_hi__output__build_timestamp__elapsed.elapsed.Ada__real_time__time_span.time_span__content False) };
   #"a-reatim.ads" 56 0 0# assume { (Ada__real_time__time_span___axiom.dynamic_invariant Polyorb_hi__output__build_timestamp__elapsed.elapsed.Ada__real_time__time_span.time_span__content False False True) };
   (let polyorb_hi__output__build_timestamp__now__assume = (Ada__real_time__clock___axiom.clock(())) in (
    #"polyorb_hi-output.adb" 108 0 0# assume { (polyorb_hi__output__build_timestamp__now__assume = Polyorb_hi__output__build_timestamp__now.now) }))
   ;
   #"a-reatim.ads" 51 0 0# assume { (Ada__real_time__time___axiom.dynamic_invariant Polyorb_hi__output__build_timestamp__now.now True False True) };
   ( "GP_Sloc:polyorb_hi-output.adb:110:7" (Polyorb_hi__epoch__system_startup_time___axiom.system_startup_time(Polyorb_hi__output__build_timestamp__start_time.start_time)) );
   ( "GP_Sloc:polyorb_hi-output.adb:111:7" (if ((Ada__real_time__time.bool_eq(Polyorb_hi__output__build_timestamp__start_time.start_time.Ada__real_time__time.time__content) (Ada__real_time__time_first.time_first))) then (
    ( "GP_Sloc:polyorb_hi-output.adb:112:18" #"polyorb_hi-output.adb" 112 0 0# Polyorb_hi__output__build_timestamp__elapsed.elapsed.Ada__real_time__time_span.time_span__content <- ( (Ada__real_time__to_time_span___axiom.to_time_span(0)) ) )) else (
    ( "GP_Sloc:polyorb_hi-output.adb:114:18" #"polyorb_hi-output.adb" 114 0 0# Polyorb_hi__output__build_timestamp__elapsed.elapsed.Ada__real_time__time_span.time_span__content <- ( (Ada__real_time__Osubtract__2___axiom.osubtract__2(Polyorb_hi__output__build_timestamp__now.now) (Polyorb_hi__output__build_timestamp__start_time.start_time.Ada__real_time__time.time__content)) ) ))) );
   ( "GP_Sloc:polyorb_hi-output.adb:116:7" ( #"polyorb_hi-output.adb" 116 0 0# polyorb_hi__output__build_timestamp__result.Ada__real_time__time_span.time_span__content <- ( Polyorb_hi__output__build_timestamp__elapsed.elapsed.Ada__real_time__time_span.time_span__content );
   #"polyorb_hi-output.adb" 116 0 0# raise Return__exc ) );
   #"polyorb_hi-output.adb" 105 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-output.adb:43 *)
  ;
  #"polyorb_hi-output.adb" 105 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  polyorb_hi__output__build_timestamp__result.Ada__real_time__time_span.time_span__content )
end

(* Module for various checks related to the protected type "lockT" defined at polyorb_hi-output.adb:52, created in Gnat2Why.Subprograms.Generate_VCs_For_Protected_Type *)
module Polyorb_hi__output__lockT__protected_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__any_priority
 use        Polyorb_hi__output__lockT
 use        System__any_priority___axiom
 use        Polyorb_hi__output__lockT___axiom

 function self__ #"polyorb_hi-output.adb" 52 0 0# 
   : Polyorb_hi__output__lockT.lockT
 
 let def #"polyorb_hi-output.adb" 52 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-output.adb:52" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  #"polyorb_hi-output.adb" 65 0 0# check { ( #"polyorb_hi-output.adb" 65 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:polyorb_hi-output.adb:65:39" "GP_Id:18" "comment:      pragma Priority (System.Priority'Last);
                                      ^ polyorb_hi-output.adb:65:39:VC_RANGE_CHECK" "GP_Shape:lockT_def__pragargs" ( (System__any_priority.first <= 62) /\ (62 <= System__any_priority.last) ) ) }
end

(* Module for checking contracts and absence of run-time errors in subprogram "put" defined at polyorb_hi-output.adb:55, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__output__lockT__put__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Standard__duration
 use        System__priority
 use        Polyorb_hi__output_low_level__put___axiom
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Omultiply___axiom
 use        Ada__real_time__to_duration___axiom
 use        Polyorb_hi__output__lockT
 use        Polyorb_hi__output__build_timestamp___axiom
 use        Polyorb_hi__output__lockT__put__text
 use        Polyorb_hi__output__lockT__put__elapsed
 use        Temp___1409
 use        Temp___1410
 use        Standard__integer___axiom
 use        Standard__positive___axiom
 use        Standard__character___axiom
 use        Standard__string___axiom
 use        Standard__duration___axiom
 use        Standard__integer___axiom
 use        Polyorb_hi__output__build_timestamp___axiom
 use        Polyorb_hi__output__lockT__put__text___axiom
 use        Polyorb_hi__output__lockT__put__elapsed___axiom
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Omultiply___axiom
 use        Ada__real_time__to_duration___axiom
 use        System__priority___axiom
 use        Polyorb_hi__output_low_level__put___axiom
 use        Polyorb_hi__output__lockT___axiom

 val self__ #"polyorb_hi-output.adb" 52 0 0#  : Polyorb_hi__output__lockT.lockT__ref 
 
 let def #"polyorb_hi-output.adb" 52 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-output.adb:55" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-output.adb:55 *)
  ;
  #"system.ads" 1 0 0# assume { (Standard__string___axiom.dynamic_invariant Polyorb_hi__output__lockT__put__text.text True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-output.adb:55 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-output.adb:55 *)
  ;
  #"polyorb_hi-output.adb" 55 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-output.adb:55 *)
  ;
  #"polyorb_hi-output.adb" 55 0 0# assume { true };
  () (* checking of pragma precondition polyorb_hi-output.adb:55 *)
  ;
  try
   ( #"polyorb_hi-output.adb" 55 0 0# check { ( #"polyorb_hi-output.adb" 55 0 0# "[no name]" "model_vc" "keep_on_simp" "GP_Sloc:polyorb_hi-output.adb:55:17" "GP_Reason:VC_CEILING_PRIORITY_PROTOCOL" "GP_Id:19" "comment:      procedure Put (Text : in String);
                ^ polyorb_hi-output.adb:55:17:VC_CEILING_PRIORITY_PROTOCOL" (62 <= System__priority.last) ) };
   (let polyorb_hi__output__lockT__put__elapsed__assume = (Polyorb_hi__output__build_timestamp___axiom.build_timestamp(())) in (
    #"polyorb_hi-output.adb" 90 0 0# assume { (polyorb_hi__output__lockT__put__elapsed__assume = Polyorb_hi__output__lockT__put__elapsed.elapsed) }))
   ;
   #"a-reatim.ads" 56 0 0# assume { (Ada__real_time__time_span___axiom.dynamic_invariant Polyorb_hi__output__lockT__put__elapsed.elapsed True False True) };
   ( "GP_Sloc:polyorb_hi-output.adb:92:37" (Polyorb_hi__output_low_level__put___axiom.put((Standard__string.of_array(Temp___1409.temp___1409) (1) (1)))) );
   ( "GP_Sloc:polyorb_hi-output.adb:93:37" (Polyorb_hi__output_low_level__put___axiom.put((Standard__string.to_string((Standard__duration.attr__ATTRIBUTE_IMAGE((Standard__duration.to_fixed((Ada__real_time__to_duration___axiom.to_duration((Ada__real_time__Omultiply___axiom.omultiply(Polyorb_hi__output__lockT__put__elapsed.elapsed) (1000)))))))))))) );
   ( "GP_Sloc:polyorb_hi-output.adb:95:37" (Polyorb_hi__output_low_level__put___axiom.put((Standard__string.of_array(Temp___1410.temp___1410) (1) (2)))) );
   ( "GP_Sloc:polyorb_hi-output.adb:96:37" (Polyorb_hi__output_low_level__put___axiom.put(Polyorb_hi__output__lockT__put__text.text)) );
   #"polyorb_hi-output.adb" 89 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-output.adb:55 *)
  ;
  #"polyorb_hi-output.adb" 89 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "put_line" defined at polyorb_hi-output.adb:60, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__output__lockT__put_line__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Standard__duration
 use        System__priority
 use        Polyorb_hi__output_low_level__new_line___axiom
 use        Polyorb_hi__output_low_level__put___axiom
 use        Ada__real_time__time_span
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Omultiply___axiom
 use        Ada__real_time__to_duration___axiom
 use        Polyorb_hi__output__lockT
 use        Polyorb_hi__output__build_timestamp___axiom
 use        Polyorb_hi__output__lockT__put_line__text
 use        Polyorb_hi__output__lockT__put_line__elapsed
 use        Temp___1411
 use        Temp___1412
 use        Standard__integer___axiom
 use        Standard__positive___axiom
 use        Standard__character___axiom
 use        Standard__string___axiom
 use        Standard__duration___axiom
 use        Standard__integer___axiom
 use        Polyorb_hi__output__build_timestamp___axiom
 use        Polyorb_hi__output__lockT__put_line__text___axiom
 use        Polyorb_hi__output__lockT__put_line__elapsed___axiom
 use        Ada__real_time__time_span___axiom
 use        Ada__real_time__Omultiply___axiom
 use        Ada__real_time__to_duration___axiom
 use        System__priority___axiom
 use        Polyorb_hi__output_low_level__new_line___axiom
 use        Polyorb_hi__output_low_level__put___axiom
 use        Polyorb_hi__output__lockT___axiom

 val self__ #"polyorb_hi-output.adb" 52 0 0#  : Polyorb_hi__output__lockT.lockT__ref 
 
 let def #"polyorb_hi-output.adb" 52 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-output.adb:60" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-output.adb:60 *)
  ;
  #"system.ads" 1 0 0# assume { (Standard__string___axiom.dynamic_invariant Polyorb_hi__output__lockT__put_line__text.text True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-output.adb:60 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-output.adb:60 *)
  ;
  #"polyorb_hi-output.adb" 60 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-output.adb:60 *)
  ;
  #"polyorb_hi-output.adb" 60 0 0# assume { true };
  () (* checking of pragma precondition polyorb_hi-output.adb:60 *)
  ;
  try
   ( #"polyorb_hi-output.adb" 60 0 0# check { ( #"polyorb_hi-output.adb" 60 0 0# "[no name]" "model_vc" "keep_on_simp" "GP_Reason:VC_CEILING_PRIORITY_PROTOCOL" "GP_Sloc:polyorb_hi-output.adb:60:17" "GP_Id:20" "comment:      procedure Put_Line (Text : in String);
                ^ polyorb_hi-output.adb:60:17:VC_CEILING_PRIORITY_PROTOCOL" (62 <= System__priority.last) ) };
   (let polyorb_hi__output__lockT__put_line__elapsed__assume = (Polyorb_hi__output__build_timestamp___axiom.build_timestamp(())) in (
    #"polyorb_hi-output.adb" 75 0 0# assume { (polyorb_hi__output__lockT__put_line__elapsed__assume = Polyorb_hi__output__lockT__put_line__elapsed.elapsed) }))
   ;
   #"a-reatim.ads" 56 0 0# assume { (Ada__real_time__time_span___axiom.dynamic_invariant Polyorb_hi__output__lockT__put_line__elapsed.elapsed True False True) };
   ( "GP_Sloc:polyorb_hi-output.adb:77:37" (Polyorb_hi__output_low_level__put___axiom.put((Standard__string.of_array(Temp___1411.temp___1411) (1) (1)))) );
   ( "GP_Sloc:polyorb_hi-output.adb:78:37" (Polyorb_hi__output_low_level__put___axiom.put((Standard__string.to_string((Standard__duration.attr__ATTRIBUTE_IMAGE((Standard__duration.to_fixed((Ada__real_time__to_duration___axiom.to_duration((Ada__real_time__Omultiply___axiom.omultiply(Polyorb_hi__output__lockT__put_line__elapsed.elapsed) (1000)))))))))))) );
   ( "GP_Sloc:polyorb_hi-output.adb:80:37" (Polyorb_hi__output_low_level__put___axiom.put((Standard__string.of_array(Temp___1412.temp___1412) (1) (2)))) );
   ( "GP_Sloc:polyorb_hi-output.adb:81:37" (Polyorb_hi__output_low_level__put___axiom.put(Polyorb_hi__output__lockT__put_line__text.text)) );
   ( "GP_Sloc:polyorb_hi-output.adb:82:37" (Polyorb_hi__output_low_level__new_line___axiom.new_line(())) );
   #"polyorb_hi-output.adb" 74 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-output.adb:60 *)
  ;
  #"polyorb_hi-output.adb" 74 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end
