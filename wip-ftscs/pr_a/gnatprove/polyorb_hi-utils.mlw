(* Module for axiomatizing type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_short_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -128 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  127
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short_short_integer__ref #"system.ads" 1 0 0# =
  { mutable short_short_integer__content "model_trace:" : short_short_integer }
 
 function short_short_integer__ref___projection #"system.ads" 1 0 0# 
   (a : short_short_integer__ref) : short_short_integer =
  a.short_short_integer__content
 
 meta "model_projection" function short_short_integer__ref___projection
 
 meta "inline : no" function short_short_integer__ref___projection
 
 val short_short_integer__havoc #"system.ads" 1 0 0# 
   (x : short_short_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -32768 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  32767
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type short_integer__ref #"system.ads" 1 0 0# =
  { mutable short_integer__content "model_trace:" : short_integer }
 
 function short_integer__ref___projection #"system.ads" 1 0 0# 
   (a : short_integer__ref) : short_integer =
  a.short_integer__content
 
 meta "model_projection" function short_integer__ref___projection
 
 meta "inline : no" function short_integer__ref___projection
 
 val short_integer__havoc #"system.ads" 1 0 0# 
   (x : short_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer__ref #"system.ads" 1 0 0# =
  { mutable integer__content "model_trace:" : integer }
 
 function integer__ref___projection #"system.ads" 1 0 0# 
   (a : integer__ref) : integer =
  a.integer__content
 
 meta "model_projection" function integer__ref___projection
 
 meta "inline : no" function integer__ref___projection
 
 val integer__havoc #"system.ads" 1 0 0# 
   (x : integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long_integer__ref #"system.ads" 1 0 0# =
  { mutable long_integer__content "model_trace:" : long_integer }
 
 function long_integer__ref___projection #"system.ads" 1 0 0# 
   (a : long_integer__ref) : long_integer =
  a.long_integer__content
 
 meta "model_projection" function long_integer__ref___projection
 
 meta "inline : no" function long_integer__ref___projection
 
 val long_integer__havoc #"system.ads" 1 0 0# 
   (x : long_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_long_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type long_long_integer__ref #"system.ads" 1 0 0# =
  { mutable long_long_integer__content "model_trace:" : long_long_integer }
 
 function long_long_integer__ref___projection #"system.ads" 1 0 0# 
   (a : long_long_integer__ref) : long_long_integer =
  a.long_long_integer__content
 
 meta "model_projection" function long_long_integer__ref___projection
 
 meta "inline : no" function long_long_integer__ref___projection
 
 val long_long_integer__havoc #"system.ads" 1 0 0# 
   (x : long_long_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
 use import "_gnatprove_standard".Main
 use import "int".Int

 type natural #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = natural, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type natural__ref #"system.ads" 1 0 0# =
  { mutable natural__content "model_trace:" : natural }
 
 function natural__ref___projection #"system.ads" 1 0 0# 
   (a : natural__ref) : natural =
  a.natural__content
 
 meta "model_projection" function natural__ref___projection
 
 meta "inline : no" function natural__ref___projection
 
 val natural__havoc #"system.ads" 1 0 0# 
   (x : natural__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type positive__ref #"system.ads" 1 0 0# =
  { mutable positive__content "model_trace:" : positive }
 
 function positive__ref___projection #"system.ads" 1 0 0# 
   (a : positive__ref) : positive =
  a.positive__content
 
 meta "model_projection" function positive__ref___projection
 
 meta "inline : no" function positive__ref___projection
 
 val positive__havoc #"system.ads" 1 0 0# 
   (x : positive__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type short_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = short_float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type short_float__ref #"system.ads" 1 0 0# =
  { mutable short_float__content "model_trace:" : short_float }
 
 function short_float__ref___projection #"system.ads" 1 0 0# 
   (a : short_float__ref) : short_float =
  a.short_float__content
 
 meta "model_projection" function short_float__ref___projection
 
 meta "inline : no" function short_float__ref___projection
 
 val short_float__havoc #"system.ads" 1 0 0# 
   (x : short_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type float__ref #"system.ads" 1 0 0# =
  { mutable float__content "model_trace:" : float }
 
 function float__ref___projection #"system.ads" 1 0 0# 
   (a : float__ref) : float =
  a.float__content
 
 meta "model_projection" function float__ref___projection
 
 meta "inline : no" function float__ref___projection
 
 val float__havoc #"system.ads" 1 0 0# 
   (x : float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type long_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_float, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type long_float__ref #"system.ads" 1 0 0# =
  { mutable long_float__content "model_trace:" : long_float }
 
 function long_float__ref___projection #"system.ads" 1 0 0# 
   (a : long_float__ref) : long_float =
  a.long_float__content
 
 meta "model_projection" function long_float__ref___projection
 
 meta "inline : no" function long_float__ref___projection
 
 val long_float__havoc #"system.ads" 1 0 0# 
   (x : long_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "long_long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type long_long_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_long_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type long_long_float__ref #"system.ads" 1 0 0# =
  { mutable long_long_float__content "model_trace:" : long_long_float }
 
 function long_long_float__ref___projection #"system.ads" 1 0 0# 
   (a : long_long_float__ref) : long_long_float =
  a.long_long_float__content
 
 meta "model_projection" function long_long_float__ref___projection
 
 meta "inline : no" function long_long_float__ref___projection
 
 val long_long_float__havoc #"system.ads" 1 0 0# 
   (x : long_long_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  255
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type character__ref #"system.ads" 1 0 0# =
  { mutable character__content "model_trace:" : character }
 
 function character__ref___projection #"system.ads" 1 0 0# 
   (a : character__ref) : character =
  a.character__content
 
 meta "model_projection" function character__ref___projection
 
 meta "inline : no" function character__ref___projection
 
 val character__havoc #"system.ads" 1 0 0# 
   (x : character__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  65535
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wide_character__ref #"system.ads" 1 0 0# =
  { mutable wide_character__content "model_trace:" : wide_character }
 
 function wide_character__ref___projection #"system.ads" 1 0 0# 
   (a : wide_character__ref) : wide_character =
  a.wide_character__content
 
 meta "model_projection" function wide_character__ref___projection
 
 meta "inline : no" function wide_character__ref___projection
 
 val wide_character__havoc #"system.ads" 1 0 0# 
   (x : wide_character__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_wide_character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type wide_wide_character__ref #"system.ads" 1 0 0# =
  { mutable wide_wide_character__content "model_trace:" : wide_wide_character }
 
 function wide_wide_character__ref___projection #"system.ads" 1 0 0# 
   (a : wide_wide_character__ref) : wide_wide_character =
  a.wide_wide_character__content
 
 meta "model_projection" function wide_wide_character__ref___projection
 
 meta "inline : no" function wide_wide_character__ref___projection
 
 val wide_wide_character__havoc #"system.ads" 1 0 0# 
   (x : wide_wide_character__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__integer
 use        Standard__positive
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 function to_string #"system.ads" 1 0 0# 
   (x : Main.__image) : string
 
 function from_string #"system.ads" 1 0 0# 
   (x : string) : Main.__image
 
 type string__ref #"system.ads" 1 0 0# =
  { mutable string__content "model_trace:" : string }
 
 function string__ref___projection #"system.ads" 1 0 0# 
   (a : string__ref) : string =
  a.string__content
 
 meta "model_projection" function string__ref___projection
 
 meta "inline : no" function string__ref___projection
 
 val string__havoc #"system.ads" 1 0 0# 
   (x : string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__wide_character.wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_character
 use        Array__Int__Standard__wide_character

 type component_type #"system.ads" 1 0 0# =
  Standard__wide_character.wide_character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_string__ref #"system.ads" 1 0 0# =
  { mutable wide_string__content "model_trace:" : wide_string }
 
 function wide_string__ref___projection #"system.ads" 1 0 0# 
   (a : wide_string__ref) : wide_string =
  a.wide_string__content
 
 meta "model_projection" function wide_string__ref___projection
 
 meta "inline : no" function wide_string__ref___projection
 
 val wide_string__havoc #"system.ads" 1 0 0# 
   (x : wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__wide_wide_character.wide_wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_wide_character.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wide_wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_wide_character
 use        Array__Int__Standard__wide_wide_character

 type component_type #"system.ads" 1 0 0# =
  Standard__wide_wide_character.wide_wide_character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_wide_string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_wide_string__ref #"system.ads" 1 0 0# =
  { mutable wide_wide_string__content "model_trace:" : wide_wide_string }
 
 function wide_wide_string__ref___projection #"system.ads" 1 0 0# 
   (a : wide_wide_string__ref) : wide_wide_string =
  a.wide_wide_string__content
 
 meta "model_projection" function wide_wide_string__ref___projection
 
 meta "inline : no" function wide_wide_string__ref___projection
 
 val wide_wide_string__havoc #"system.ads" 1 0 0# 
   (x : wide_wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type duration #"system.ads" 1 0 0# 
 
 function inv_small #"system.ads" 1 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"system.ads" 1 0 0# 
   : Main.__fixed =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : Main.__fixed =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type duration__ref #"system.ads" 1 0 0# =
  { mutable duration__content "model_trace:" : duration }
 
 function duration__ref___projection #"system.ads" 1 0 0# 
   (a : duration__ref) : duration =
  a.duration__content
 
 meta "model_projection" function duration__ref___projection
 
 meta "inline : no" function duration__ref___projection
 
 val duration__havoc #"system.ads" 1 0 0# 
   (x : duration__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -128 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  127
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_8__ref #"system.ads" 1 0 0# =
  { mutable integer_8__content "model_trace:" : integer_8 }
 
 function integer_8__ref___projection #"system.ads" 1 0 0# 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref___projection
 
 meta "inline : no" function integer_8__ref___projection
 
 val integer_8__havoc #"system.ads" 1 0 0# 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -32768 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  32767
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_16__ref #"system.ads" 1 0 0# =
  { mutable integer_16__content "model_trace:" : integer_16 }
 
 function integer_16__ref___projection #"system.ads" 1 0 0# 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref___projection
 
 meta "inline : no" function integer_16__ref___projection
 
 val integer_16__havoc #"system.ads" 1 0 0# 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_32__ref #"system.ads" 1 0 0# =
  { mutable integer_32__content "model_trace:" : integer_32 }
 
 function integer_32__ref___projection #"system.ads" 1 0 0# 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref___projection
 
 meta "inline : no" function integer_32__ref___projection
 
 val integer_32__havoc #"system.ads" 1 0 0# 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_64__ref #"system.ads" 1 0 0# =
  { mutable integer_64__content "model_trace:" : integer_64 }
 
 function integer_64__ref___projection #"system.ads" 1 0 0# 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref___projection
 
 meta "inline : no" function integer_64__ref___projection
 
 val integer_64__havoc #"system.ads" 1 0 0# 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type universal_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = universal_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type universal_integer__ref #"system.ads" 1 0 0# =
  { mutable universal_integer__content "model_trace:" : universal_integer }
 
 function universal_integer__ref___projection #"system.ads" 1 0 0# 
   (a : universal_integer__ref) : universal_integer =
  a.universal_integer__content
 
 meta "model_projection" function universal_integer__ref___projection
 
 meta "inline : no" function universal_integer__ref___projection
 
 val universal_integer__havoc #"system.ads" 1 0 0# 
   (x : universal_integer__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "universal_real", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_real
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type universal_real #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"system.ads" 1 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = universal_real, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type universal_real__ref #"system.ads" 1 0 0# =
  { mutable universal_real__content "model_trace:" : universal_real }
 
 function universal_real__ref___projection #"system.ads" 1 0 0# 
   (a : universal_real__ref) : universal_real =
  a.universal_real__content
 
 meta "model_projection" function universal_real__ref___projection
 
 meta "inline : no" function universal_real__ref___projection
 
 val universal_real__havoc #"system.ads" 1 0 0# 
   (x : universal_real__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tinteger_8B" defined at interfac.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_8B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_8B #"interfac.ads" 46 0 0# 
 
 function first #"interfac.ads" 46 0 0# 
   : int =
  ( -128 )
 
 function last #"interfac.ads" 46 0 0# 
   : int =
  127
 
 predicate in_range #"interfac.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_8B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tinteger_8B__ref #"interfac.ads" 46 0 0# =
  { mutable tinteger_8B__content "model_trace:" : tinteger_8B }
 
 function tinteger_8B__ref___projection #"interfac.ads" 46 0 0# 
   (a : tinteger_8B__ref) : tinteger_8B =
  a.tinteger_8B__content
 
 meta "model_projection" function tinteger_8B__ref___projection
 
 meta "inline : no" function tinteger_8B__ref___projection
 
 val tinteger_8B__havoc #"interfac.ads" 46 0 0# 
   (x : tinteger_8B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_8" defined at interfac.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 #"interfac.ads" 46 0 0# 
 
 function first #"interfac.ads" 46 0 0# 
   : int =
  ( -128 )
 
 function last #"interfac.ads" 46 0 0# 
   : int =
  127
 
 predicate in_range #"interfac.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_8__ref #"interfac.ads" 46 0 0# =
  { mutable integer_8__content "model_trace:" : integer_8 }
 
 function integer_8__ref_2__projection #"interfac.ads" 46 0 0# 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref_2__projection
 
 meta "inline : no" function integer_8__ref_2__projection
 
 val integer_8__havoc #"interfac.ads" 46 0 0# 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tinteger_16B" defined at interfac.ads:49, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_16B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_16B #"interfac.ads" 49 0 0# 
 
 function first #"interfac.ads" 49 0 0# 
   : int =
  ( -32768 )
 
 function last #"interfac.ads" 49 0 0# 
   : int =
  32767
 
 predicate in_range #"interfac.ads" 49 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_16B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tinteger_16B__ref #"interfac.ads" 49 0 0# =
  { mutable tinteger_16B__content "model_trace:" : tinteger_16B }
 
 function tinteger_16B__ref___projection #"interfac.ads" 49 0 0# 
   (a : tinteger_16B__ref) : tinteger_16B =
  a.tinteger_16B__content
 
 meta "model_projection" function tinteger_16B__ref___projection
 
 meta "inline : no" function tinteger_16B__ref___projection
 
 val tinteger_16B__havoc #"interfac.ads" 49 0 0# 
   (x : tinteger_16B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_16" defined at interfac.ads:49, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 #"interfac.ads" 49 0 0# 
 
 function first #"interfac.ads" 49 0 0# 
   : int =
  ( -32768 )
 
 function last #"interfac.ads" 49 0 0# 
   : int =
  32767
 
 predicate in_range #"interfac.ads" 49 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_16__ref #"interfac.ads" 49 0 0# =
  { mutable integer_16__content "model_trace:" : integer_16 }
 
 function integer_16__ref_2__projection #"interfac.ads" 49 0 0# 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref_2__projection
 
 meta "inline : no" function integer_16__ref_2__projection
 
 val integer_16__havoc #"interfac.ads" 49 0 0# 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tinteger_32B" defined at interfac.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_32B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_32B #"interfac.ads" 52 0 0# 
 
 function first #"interfac.ads" 52 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"interfac.ads" 52 0 0# 
   : int =
  2147483647
 
 predicate in_range #"interfac.ads" 52 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_32B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tinteger_32B__ref #"interfac.ads" 52 0 0# =
  { mutable tinteger_32B__content "model_trace:" : tinteger_32B }
 
 function tinteger_32B__ref___projection #"interfac.ads" 52 0 0# 
   (a : tinteger_32B__ref) : tinteger_32B =
  a.tinteger_32B__content
 
 meta "model_projection" function tinteger_32B__ref___projection
 
 meta "inline : no" function tinteger_32B__ref___projection
 
 val tinteger_32B__havoc #"interfac.ads" 52 0 0# 
   (x : tinteger_32B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_32" defined at interfac.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 #"interfac.ads" 52 0 0# 
 
 function first #"interfac.ads" 52 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"interfac.ads" 52 0 0# 
   : int =
  2147483647
 
 predicate in_range #"interfac.ads" 52 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_32__ref #"interfac.ads" 52 0 0# =
  { mutable integer_32__content "model_trace:" : integer_32 }
 
 function integer_32__ref_2__projection #"interfac.ads" 52 0 0# 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref_2__projection
 
 meta "inline : no" function integer_32__ref_2__projection
 
 val integer_32__havoc #"interfac.ads" 52 0 0# 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tinteger_64B" defined at interfac.ads:55, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_64B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_64B #"interfac.ads" 55 0 0# 
 
 function first #"interfac.ads" 55 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"interfac.ads" 55 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"interfac.ads" 55 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_64B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tinteger_64B__ref #"interfac.ads" 55 0 0# =
  { mutable tinteger_64B__content "model_trace:" : tinteger_64B }
 
 function tinteger_64B__ref___projection #"interfac.ads" 55 0 0# 
   (a : tinteger_64B__ref) : tinteger_64B =
  a.tinteger_64B__content
 
 meta "model_projection" function tinteger_64B__ref___projection
 
 meta "inline : no" function tinteger_64B__ref___projection
 
 val tinteger_64B__havoc #"interfac.ads" 55 0 0# 
   (x : tinteger_64B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_64" defined at interfac.ads:55, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 #"interfac.ads" 55 0 0# 
 
 function first #"interfac.ads" 55 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"interfac.ads" 55 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"interfac.ads" 55 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type integer_64__ref #"interfac.ads" 55 0 0# =
  { mutable integer_64__content "model_trace:" : integer_64 }
 
 function integer_64__ref_2__projection #"interfac.ads" 55 0 0# 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref_2__projection
 
 meta "inline : no" function integer_64__ref_2__projection
 
 val integer_64__havoc #"interfac.ads" 55 0 0# 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_8" defined at interfac.ads:63, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_8
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type unsigned_8 #"interfac.ads" 63 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 63 0 0# 
   : BV8.t
 
 function first #"interfac.ads" 63 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"interfac.ads" 63 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"interfac.ads" 63 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 63 0 0# 
   : int =
  255
 
 predicate in_range #"interfac.ads" 63 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"interfac.ads" 63 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = unsigned_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_8__ref #"interfac.ads" 63 0 0# =
  { mutable unsigned_8__content "model_trace:" : unsigned_8 }
 
 function unsigned_8__ref___projection #"interfac.ads" 63 0 0# 
   (a : unsigned_8__ref) : unsigned_8 =
  a.unsigned_8__content
 
 meta "model_projection" function unsigned_8__ref___projection
 
 meta "inline : no" function unsigned_8__ref___projection
 
 val unsigned_8__havoc #"interfac.ads" 63 0 0# 
   (x : unsigned_8__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_16" defined at interfac.ads:66, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_16
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV16

 type unsigned_16 #"interfac.ads" 66 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 66 0 0# 
   : BV16.t
 
 function first #"interfac.ads" 66 0 0# 
   : BV16.t =
  ( BV16.of_int 0 )
 
 function last #"interfac.ads" 66 0 0# 
   : BV16.t =
  ( BV16.of_int 65535 )
 
 function first_int #"interfac.ads" 66 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 66 0 0# 
   : int =
  65535
 
 predicate in_range #"interfac.ads" 66 0 0# 
   (x : BV16.t)  =
  true
 
 predicate in_range_int #"interfac.ads" 66 0 0# 
   (x : int)  =
  BV16.uint_in_range x
 
 clone export "ada__model".Static_Modular_16 with
 type t = unsigned_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_16__ref #"interfac.ads" 66 0 0# =
  { mutable unsigned_16__content "model_trace:" : unsigned_16 }
 
 function unsigned_16__ref___projection #"interfac.ads" 66 0 0# 
   (a : unsigned_16__ref) : unsigned_16 =
  a.unsigned_16__content
 
 meta "model_projection" function unsigned_16__ref___projection
 
 meta "inline : no" function unsigned_16__ref___projection
 
 val unsigned_16__havoc #"interfac.ads" 66 0 0# 
   (x : unsigned_16__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_24" defined at interfac.ads:69, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_24
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type unsigned_24 #"interfac.ads" 69 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 69 0 0# 
   : BV32.t =
  ( BV32.of_int 16777216 )
 
 function first #"interfac.ads" 69 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"interfac.ads" 69 0 0# 
   : BV32.t =
  ( BV32.of_int 16777215 )
 
 function first_int #"interfac.ads" 69 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 69 0 0# 
   : int =
  16777215
 
 predicate in_range #"interfac.ads" 69 0 0# 
   (x : BV32.t)  =
  ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"interfac.ads" 69 0 0# 
   (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = unsigned_24, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_24__ref #"interfac.ads" 69 0 0# =
  { mutable unsigned_24__content "model_trace:" : unsigned_24 }
 
 function unsigned_24__ref___projection #"interfac.ads" 69 0 0# 
   (a : unsigned_24__ref) : unsigned_24 =
  a.unsigned_24__content
 
 meta "model_projection" function unsigned_24__ref___projection
 
 meta "inline : no" function unsigned_24__ref___projection
 
 val unsigned_24__havoc #"interfac.ads" 69 0 0# 
   (x : unsigned_24__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_32" defined at interfac.ads:74, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_32
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type unsigned_32 #"interfac.ads" 74 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 74 0 0# 
   : BV32.t
 
 function first #"interfac.ads" 74 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"interfac.ads" 74 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"interfac.ads" 74 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 74 0 0# 
   : int =
  4294967295
 
 predicate in_range #"interfac.ads" 74 0 0# 
   (x : BV32.t)  =
  true
 
 predicate in_range_int #"interfac.ads" 74 0 0# 
   (x : int)  =
  BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = unsigned_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_32__ref #"interfac.ads" 74 0 0# =
  { mutable unsigned_32__content "model_trace:" : unsigned_32 }
 
 function unsigned_32__ref___projection #"interfac.ads" 74 0 0# 
   (a : unsigned_32__ref) : unsigned_32 =
  a.unsigned_32__content
 
 meta "model_projection" function unsigned_32__ref___projection
 
 meta "inline : no" function unsigned_32__ref___projection
 
 val unsigned_32__havoc #"interfac.ads" 74 0 0# 
   (x : unsigned_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "unsigned_64" defined at interfac.ads:77, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_64
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type unsigned_64 #"interfac.ads" 77 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 77 0 0# 
   : BV64.t
 
 function first #"interfac.ads" 77 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"interfac.ads" 77 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"interfac.ads" 77 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 77 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"interfac.ads" 77 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"interfac.ads" 77 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = unsigned_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type unsigned_64__ref #"interfac.ads" 77 0 0# =
  { mutable unsigned_64__content "model_trace:" : unsigned_64 }
 
 function unsigned_64__ref___projection #"interfac.ads" 77 0 0# 
   (a : unsigned_64__ref) : unsigned_64 =
  a.unsigned_64__content
 
 meta "model_projection" function unsigned_64__ref___projection
 
 meta "inline : no" function unsigned_64__ref___projection
 
 val unsigned_64__havoc #"interfac.ads" 77 0 0# 
   (x : unsigned_64__ref) : unit
  writes {x}

end

(* Module for defining the constant "value" defined at interfac.ads:82, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 82 0 0# "model" "model_trace:3550" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:82, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 83 0 0# "model" "model_trace:3559" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:83, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 86 0 0# "model" "model_trace:3578" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 87 0 0# "model" "model_trace:3587" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 90 0 0# "model" "model_trace:3606" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 91 0 0# "model" "model_trace:3615" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 94 0 0# "model" "model_trace:3634" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 95 0 0# "model" "model_trace:3643" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 98 0 0# "model" "model_trace:3662" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 99 0 0# "model" "model_trace:3671" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 102 0 0# "model" "model_trace:3690" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 103 0 0# "model" "model_trace:3699" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 106 0 0# "model" "model_trace:3718" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 107 0 0# "model" "model_trace:3727" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 110 0 0# "model" "model_trace:3746" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:110, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 111 0 0# "model" "model_trace:3755" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:111, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 114 0 0# "model" "model_trace:3774" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 115 0 0# "model" "model_trace:3783" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 118 0 0# "model" "model_trace:3802" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 119 0 0# "model" "model_trace:3811" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 122 0 0# "model" "model_trace:3830" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:122, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 123 0 0# "model" "model_trace:3839" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:123, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 126 0 0# "model" "model_trace:3858" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:126, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 127 0 0# "model" "model_trace:3867" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:127, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 130 0 0# "model" "model_trace:3886" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 131 0 0# "model" "model_trace:3895" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 134 0 0# "model" "model_trace:3914" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 135 0 0# "model" "model_trace:3923" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:135, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 138 0 0# "model" "model_trace:3942" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 139 0 0# "model" "model_trace:3951" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:139, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 142 0 0# "model" "model_trace:3970" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 143 0 0# "model" "model_trace:3979" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:143, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 146 0 0# "model" "model_trace:3998" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:146, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:147, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 147 0 0# "model" "model_trace:4007" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:147, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 150 0 0# "model" "model_trace:4026" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:150, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:151, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 151 0 0# "model" "model_trace:4035" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:151, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 154 0 0# "model" "model_trace:4054" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:154, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 155 0 0# "model" "model_trace:4063" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:155, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:158, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 158 0 0# "model" "model_trace:4082" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:158, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:159, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 159 0 0# "model" "model_trace:4091" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:159, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tieee_float_32B" defined at interfac.ads:169, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_float_32B
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type tieee_float_32B #"interfac.ads" 169 0 0# 
 
 function first #"interfac.ads" 169 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"interfac.ads" 169 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"interfac.ads" 169 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_float_32B, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type tieee_float_32B__ref #"interfac.ads" 169 0 0# =
  { mutable tieee_float_32B__content "model_trace:" : tieee_float_32B }
 
 function tieee_float_32B__ref___projection #"interfac.ads" 169 0 0# 
   (a : tieee_float_32B__ref) : tieee_float_32B =
  a.tieee_float_32B__content
 
 meta "model_projection" function tieee_float_32B__ref___projection
 
 meta "inline : no" function tieee_float_32B__ref___projection
 
 val tieee_float_32B__havoc #"interfac.ads" 169 0 0# 
   (x : tieee_float_32B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ieee_float_32" defined at interfac.ads:169, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_float_32
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type ieee_float_32 #"interfac.ads" 169 0 0# 
 
 function first #"interfac.ads" 169 0 0# 
   : real =
  (-.340282346638528859811704183484516925440.0)
 
 function last #"interfac.ads" 169 0 0# 
   : real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range #"interfac.ads" 169 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_float_32, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type ieee_float_32__ref #"interfac.ads" 169 0 0# =
  { mutable ieee_float_32__content "model_trace:" : ieee_float_32 }
 
 function ieee_float_32__ref___projection #"interfac.ads" 169 0 0# 
   (a : ieee_float_32__ref) : ieee_float_32 =
  a.ieee_float_32__content
 
 meta "model_projection" function ieee_float_32__ref___projection
 
 meta "inline : no" function ieee_float_32__ref___projection
 
 val ieee_float_32__havoc #"interfac.ads" 169 0 0# 
   (x : ieee_float_32__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tieee_float_64B" defined at interfac.ads:172, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_float_64B
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type tieee_float_64B #"interfac.ads" 172 0 0# 
 
 function first #"interfac.ads" 172 0 0# 
   : real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last #"interfac.ads" 172 0 0# 
   : real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range #"interfac.ads" 172 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_float_64B, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type tieee_float_64B__ref #"interfac.ads" 172 0 0# =
  { mutable tieee_float_64B__content "model_trace:" : tieee_float_64B }
 
 function tieee_float_64B__ref___projection #"interfac.ads" 172 0 0# 
   (a : tieee_float_64B__ref) : tieee_float_64B =
  a.tieee_float_64B__content
 
 meta "model_projection" function tieee_float_64B__ref___projection
 
 meta "inline : no" function tieee_float_64B__ref___projection
 
 val tieee_float_64B__havoc #"interfac.ads" 172 0 0# 
   (x : tieee_float_64B__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ieee_float_64" defined at interfac.ads:172, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_float_64
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type ieee_float_64 #"interfac.ads" 172 0 0# 
 
 function first #"interfac.ads" 172 0 0# 
   : real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last #"interfac.ads" 172 0 0# 
   : real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range #"interfac.ads" 172 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_float_64, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type ieee_float_64__ref #"interfac.ads" 172 0 0# =
  { mutable ieee_float_64__content "model_trace:" : ieee_float_64 }
 
 function ieee_float_64__ref___projection #"interfac.ads" 172 0 0# 
   (a : ieee_float_64__ref) : ieee_float_64 =
  a.ieee_float_64__content
 
 meta "model_projection" function ieee_float_64__ref___projection
 
 meta "inline : no" function ieee_float_64__ref___projection
 
 val ieee_float_64__havoc #"interfac.ads" 172 0 0# 
   (x : ieee_float_64__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tieee_extended_floatB" defined at interfac.ads:182, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_extended_floatB
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type tieee_extended_floatB #"interfac.ads" 182 0 0# 
 
 function first #"interfac.ads" 182 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"interfac.ads" 182 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"interfac.ads" 182 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_extended_floatB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type tieee_extended_floatB__ref #"interfac.ads" 182 0 0# =
  { mutable tieee_extended_floatB__content "model_trace:" : tieee_extended_floatB }
 
 function tieee_extended_floatB__ref___projection #"interfac.ads" 182 0 0# 
   (a : tieee_extended_floatB__ref) : tieee_extended_floatB =
  a.tieee_extended_floatB__content
 
 meta "model_projection" function tieee_extended_floatB__ref___projection
 
 meta "inline : no" function tieee_extended_floatB__ref___projection
 
 val tieee_extended_floatB__havoc #"interfac.ads" 182 0 0# 
   (x : tieee_extended_floatB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ieee_extended_float" defined at interfac.ads:182, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_extended_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type ieee_extended_float #"interfac.ads" 182 0 0# 
 
 function first #"interfac.ads" 182 0 0# 
   : real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last #"interfac.ads" 182 0 0# 
   : real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range #"interfac.ads" 182 0 0# 
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_extended_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_real
 
 meta "inline : no" function to_real
 
 type ieee_extended_float__ref #"interfac.ads" 182 0 0# =
  { mutable ieee_extended_float__content "model_trace:" : ieee_extended_float }
 
 function ieee_extended_float__ref___projection #"interfac.ads" 182 0 0# 
   (a : ieee_extended_float__ref) : ieee_extended_float =
  a.ieee_extended_float__content
 
 meta "model_projection" function ieee_extended_float__ref___projection
 
 meta "inline : no" function ieee_extended_float__ref___projection
 
 val ieee_extended_float__havoc #"interfac.ads" 182 0 0# 
   (x : ieee_extended_float__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "name" defined at system.ads:46, created in Gnat2Why.Types.Translate_Type *)
module System__name
 use import "_gnatprove_standard".Main
 use import "int".Int

 type name #"system.ads" 46 0 0# 
 
 function first #"system.ads" 46 0 0# 
   : int =
  0
 
 function last #"system.ads" 46 0 0# 
   : int =
  0
 
 predicate in_range #"system.ads" 46 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = name, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type name__ref #"system.ads" 46 0 0# =
  { mutable name__content "model_trace:" : name }
 
 function name__ref___projection #"system.ads" 46 0 0# 
   (a : name__ref) : name =
  a.name__content
 
 meta "model_projection" function name__ref___projection
 
 meta "inline : no" function name__ref___projection
 
 val name__havoc #"system.ads" 46 0 0# 
   (x : name__ref) : unit
  writes {x}

end

(* Module for defining the constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module System__system_name
 use import "_gnatprove_standard".Main

 function system_name #"system.ads" 47 0 0# "model" "model_trace:4211" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 46 0 0# 
   : int

end

(* Module for axiomatizing type "address" defined at system.ads:134, created in Gnat2Why.Types.Translate_Type *)
module System__address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type address #"system.ads" 134 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"system.ads" 134 0 0# 
   : BV64.t
 
 function first #"system.ads" 134 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"system.ads" 134 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"system.ads" 134 0 0# 
   : int =
  0
 
 function last_int #"system.ads" 134 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"system.ads" 134 0 0# 
   (x : BV64.t)  =
  true
 
 predicate in_range_int #"system.ads" 134 0 0# 
   (x : int)  =
  BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type address__ref #"system.ads" 134 0 0# =
  { mutable address__content "model_trace:" : address }
 
 function address__ref___projection #"system.ads" 134 0 0# 
   (a : address__ref) : address =
  a.address__content
 
 meta "model_projection" function address__ref___projection
 
 meta "inline : no" function address__ref___projection
 
 val address__havoc #"system.ads" 134 0 0# 
   (x : address__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_address" defined at system.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module System__null_address
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function null_address #"system.ads" 69 0 0# "model" "model_trace:4333" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module for defining the constant "left" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function left #"system.ads" 77 0 0# "model" "model_trace:4378" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function right #"system.ads" 77 0 0# "model" "model_trace:4385" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Olt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function olt #"system.ads" 77 0 0# 
   (left : BV64.t) (right : BV64.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function left #"system.ads" 78 0 0# "model" "model_trace:4405" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function right #"system.ads" 78 0 0# "model" "model_trace:4412" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ole
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function ole #"system.ads" 78 0 0# 
   (left : BV64.t) (right : BV64.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function left #"system.ads" 79 0 0# "model" "model_trace:4432" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function right #"system.ads" 79 0 0# "model" "model_trace:4439" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ogt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function ogt #"system.ads" 79 0 0# 
   (left : BV64.t) (right : BV64.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function left #"system.ads" 80 0 0# "model" "model_trace:4459" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function right #"system.ads" 80 0 0# "model" "model_trace:4466" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oge
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function oge #"system.ads" 80 0 0# 
   (left : BV64.t) (right : BV64.t) : bool

end

(* Module for defining the constant "left" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function left #"system.ads" 81 0 0# "model" "model_trace:4486" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function right #"system.ads" 81 0 0# "model" "model_trace:4493" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oeq
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function oeq #"system.ads" 81 0 0# 
   (left : BV64.t) (right : BV64.t) : bool

end

(* Module for axiomatizing type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Translate_Type *)
module System__bit_order
 use import "_gnatprove_standard".Main
 use import "int".Int

 type bit_order #"system.ads" 91 0 0# 
 
 function first #"system.ads" 91 0 0# 
   : int =
  0
 
 function last #"system.ads" 91 0 0# 
   : int =
  1
 
 predicate in_range #"system.ads" 91 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = bit_order, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type bit_order__ref #"system.ads" 91 0 0# =
  { mutable bit_order__content "model_trace:" : bit_order }
 
 function bit_order__ref___projection #"system.ads" 91 0 0# 
   (a : bit_order__ref) : bit_order =
  a.bit_order__content
 
 meta "model_projection" function bit_order__ref___projection
 
 meta "inline : no" function bit_order__ref___projection
 
 val bit_order__havoc #"system.ads" 91 0 0# 
   (x : bit_order__ref) : unit
  writes {x}

end

(* Module for defining the constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_bit_order
 use import "_gnatprove_standard".Main

 function default_bit_order #"system.ads" 92 0 0# "model" "model_trace:4560" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 91 0 0# 
   : int

end

(* Module for defining the constant "max_interrupt_priority" defined at system.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_interrupt_priority
 use import "_gnatprove_standard".Main

 function max_interrupt_priority #"system.ads" 121 0 0# "model" "model_trace:4576" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "max_priority" defined at system.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_priority
 use import "_gnatprove_standard".Main

 function max_priority #"system.ads" 122 0 0# "model" "model_trace:4586" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "any_priority" defined at system.ads:124, created in Gnat2Why.Types.Translate_Type *)
module System__any_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type any_priority #"system.ads" 124 0 0# 
 
 function first #"system.ads" 124 0 0# 
   : int =
  0
 
 function last #"system.ads" 124 0 0# 
   : int =
  63
 
 predicate in_range #"system.ads" 124 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = any_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type any_priority__ref #"system.ads" 124 0 0# =
  { mutable any_priority__content "model_trace:" : any_priority }
 
 function any_priority__ref___projection #"system.ads" 124 0 0# 
   (a : any_priority__ref) : any_priority =
  a.any_priority__content
 
 meta "model_projection" function any_priority__ref___projection
 
 meta "inline : no" function any_priority__ref___projection
 
 val any_priority__havoc #"system.ads" 124 0 0# 
   (x : any_priority__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "priority" defined at system.ads:125, created in Gnat2Why.Types.Translate_Type *)
module System__priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type priority #"system.ads" 125 0 0# 
 
 function first #"system.ads" 125 0 0# 
   : int =
  0
 
 function last #"system.ads" 125 0 0# 
   : int =
  62
 
 predicate in_range #"system.ads" 125 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type priority__ref #"system.ads" 125 0 0# =
  { mutable priority__content "model_trace:" : priority }
 
 function priority__ref___projection #"system.ads" 125 0 0# 
   (a : priority__ref) : priority =
  a.priority__content
 
 meta "model_projection" function priority__ref___projection
 
 meta "inline : no" function priority__ref___projection
 
 val priority__havoc #"system.ads" 125 0 0# 
   (x : priority__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "interrupt_priority" defined at system.ads:126, created in Gnat2Why.Types.Translate_Type *)
module System__interrupt_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type interrupt_priority #"system.ads" 126 0 0# 
 
 function first #"system.ads" 126 0 0# 
   : int =
  63
 
 function last #"system.ads" 126 0 0# 
   : int =
  63
 
 predicate in_range #"system.ads" 126 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = interrupt_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type interrupt_priority__ref #"system.ads" 126 0 0# =
  { mutable interrupt_priority__content "model_trace:" : interrupt_priority }
 
 function interrupt_priority__ref___projection #"system.ads" 126 0 0# 
   (a : interrupt_priority__ref) : interrupt_priority =
  a.interrupt_priority__content
 
 meta "model_projection" function interrupt_priority__ref___projection
 
 meta "inline : no" function interrupt_priority__ref___projection
 
 val interrupt_priority__havoc #"system.ads" 126 0 0# 
   (x : interrupt_priority__ref) : unit
  writes {x}

end

(* Module for defining the constant "default_priority" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_priority
 use import "_gnatprove_standard".Main

 function default_priority #"system.ads" 129 0 0# "model" "model_trace:4644" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 125 0 0# 
   : int

end

(* Module for defining the constant "backend_divide_checks" defined at system.ads:147, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_divide_checks
 use import "_gnatprove_standard".Main

 function backend_divide_checks #"system.ads" 147 0 0# "model" "model_trace:4682" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 147 0 0# 
   : int

end

(* Module for defining the constant "backend_overflow_checks" defined at system.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_overflow_checks
 use import "_gnatprove_standard".Main

 function backend_overflow_checks #"system.ads" 148 0 0# "model" "model_trace:4692" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 148 0 0# 
   : int

end

(* Module for defining the constant "command_line_args" defined at system.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module System__command_line_args
 use import "_gnatprove_standard".Main

 function command_line_args #"system.ads" 149 0 0# "model" "model_trace:4702" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 149 0 0# 
   : int

end

(* Module for defining the constant "configurable_run_time" defined at system.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module System__configurable_run_time
 use import "_gnatprove_standard".Main

 function configurable_run_time #"system.ads" 150 0 0# "model" "model_trace:4712" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 150 0 0# 
   : int

end

(* Module for defining the constant "denorm" defined at system.ads:151, created in Gnat2Why.Decls.Translate_Constant *)
module System__denorm
 use import "_gnatprove_standard".Main

 function denorm #"system.ads" 151 0 0# "model" "model_trace:4722" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 151 0 0# 
   : int

end

(* Module for defining the constant "duration_32_bits" defined at system.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module System__duration_32_bits
 use import "_gnatprove_standard".Main

 function duration_32_bits #"system.ads" 152 0 0# "model" "model_trace:4732" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 152 0 0# 
   : int

end

(* Module for defining the constant "exit_status_supported" defined at system.ads:153, created in Gnat2Why.Decls.Translate_Constant *)
module System__exit_status_supported
 use import "_gnatprove_standard".Main

 function exit_status_supported #"system.ads" 153 0 0# "model" "model_trace:4742" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 153 0 0# 
   : int

end

(* Module for defining the constant "fractional_fixed_ops" defined at system.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module System__fractional_fixed_ops
 use import "_gnatprove_standard".Main

 function fractional_fixed_ops #"system.ads" 154 0 0# "model" "model_trace:4752" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 154 0 0# 
   : int

end

(* Module for defining the constant "frontend_layout" defined at system.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_layout
 use import "_gnatprove_standard".Main

 function frontend_layout #"system.ads" 155 0 0# "model" "model_trace:4762" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 155 0 0# 
   : int

end

(* Module for defining the constant "machine_overflows" defined at system.ads:156, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_overflows
 use import "_gnatprove_standard".Main

 function machine_overflows #"system.ads" 156 0 0# "model" "model_trace:4772" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 156 0 0# 
   : int

end

(* Module for defining the constant "machine_rounds" defined at system.ads:157, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_rounds
 use import "_gnatprove_standard".Main

 function machine_rounds #"system.ads" 157 0 0# "model" "model_trace:4782" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 157 0 0# 
   : int

end

(* Module for defining the constant "preallocated_stacks" defined at system.ads:158, created in Gnat2Why.Decls.Translate_Constant *)
module System__preallocated_stacks
 use import "_gnatprove_standard".Main

 function preallocated_stacks #"system.ads" 158 0 0# "model" "model_trace:4792" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 158 0 0# 
   : int

end

(* Module for defining the constant "signed_zeros" defined at system.ads:159, created in Gnat2Why.Decls.Translate_Constant *)
module System__signed_zeros
 use import "_gnatprove_standard".Main

 function signed_zeros #"system.ads" 159 0 0# "model" "model_trace:4802" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 159 0 0# 
   : int

end

(* Module for defining the constant "stack_check_default" defined at system.ads:160, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_default
 use import "_gnatprove_standard".Main

 function stack_check_default #"system.ads" 160 0 0# "model" "model_trace:4812" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 160 0 0# 
   : int

end

(* Module for defining the constant "stack_check_probes" defined at system.ads:161, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_probes
 use import "_gnatprove_standard".Main

 function stack_check_probes #"system.ads" 161 0 0# "model" "model_trace:4822" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 161 0 0# 
   : int

end

(* Module for defining the constant "stack_check_limits" defined at system.ads:162, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_limits
 use import "_gnatprove_standard".Main

 function stack_check_limits #"system.ads" 162 0 0# "model" "model_trace:4832" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 162 0 0# 
   : int

end

(* Module for defining the constant "support_aggregates" defined at system.ads:163, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_aggregates
 use import "_gnatprove_standard".Main

 function support_aggregates #"system.ads" 163 0 0# "model" "model_trace:4842" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 163 0 0# 
   : int

end

(* Module for defining the constant "support_atomic_primitives" defined at system.ads:164, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_atomic_primitives
 use import "_gnatprove_standard".Main

 function support_atomic_primitives #"system.ads" 164 0 0# "model" "model_trace:4852" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 164 0 0# 
   : int

end

(* Module for defining the constant "support_composite_assign" defined at system.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_assign
 use import "_gnatprove_standard".Main

 function support_composite_assign #"system.ads" 165 0 0# "model" "model_trace:4862" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 165 0 0# 
   : int

end

(* Module for defining the constant "support_composite_compare" defined at system.ads:166, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_compare
 use import "_gnatprove_standard".Main

 function support_composite_compare #"system.ads" 166 0 0# "model" "model_trace:4872" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 166 0 0# 
   : int

end

(* Module for defining the constant "support_long_shifts" defined at system.ads:167, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_long_shifts
 use import "_gnatprove_standard".Main

 function support_long_shifts #"system.ads" 167 0 0# "model" "model_trace:4882" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 167 0 0# 
   : int

end

(* Module for defining the constant "always_compatible_rep" defined at system.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module System__always_compatible_rep
 use import "_gnatprove_standard".Main

 function always_compatible_rep #"system.ads" 168 0 0# "model" "model_trace:4892" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 168 0 0# 
   : int

end

(* Module for defining the constant "suppress_standard_library" defined at system.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module System__suppress_standard_library
 use import "_gnatprove_standard".Main

 function suppress_standard_library #"system.ads" 169 0 0# "model" "model_trace:4902" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 169 0 0# 
   : int

end

(* Module for defining the constant "use_ada_main_program_name" defined at system.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module System__use_ada_main_program_name
 use import "_gnatprove_standard".Main

 function use_ada_main_program_name #"system.ads" 170 0 0# "model" "model_trace:4912" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 170 0 0# 
   : int

end

(* Module for defining the constant "frontend_exceptions" defined at system.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_exceptions
 use import "_gnatprove_standard".Main

 function frontend_exceptions #"system.ads" 171 0 0# "model" "model_trace:4922" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 171 0 0# 
   : int

end

(* Module for defining the constant "zcx_by_default" defined at system.ads:172, created in Gnat2Why.Decls.Translate_Constant *)
module System__zcx_by_default
 use import "_gnatprove_standard".Main

 function zcx_by_default #"system.ads" 172 0 0# "model" "model_trace:4932" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 172 0 0# 
   : int

end

(* Module for axiomatizing type "node_type" defined at polyorb_hi_generated-deployment.ads:16, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__node_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type node_type #"polyorb_hi_generated-deployment.ads" 16 0 0# 
 
 function first #"polyorb_hi_generated-deployment.ads" 16 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 16 0 0# 
   : int =
  1
 
 predicate in_range #"polyorb_hi_generated-deployment.ads" 16 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = node_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type node_type__ref #"polyorb_hi_generated-deployment.ads" 16 0 0# =
  { mutable node_type__content "model_trace:" : node_type }
 
 function node_type__ref___projection #"polyorb_hi_generated-deployment.ads" 16 0 0# 
   (a : node_type__ref) : node_type =
  a.node_type__content
 
 meta "model_projection" function node_type__ref___projection
 
 meta "inline : no" function node_type__ref___projection
 
 val node_type__havoc #"polyorb_hi_generated-deployment.ads" 16 0 0# 
   (x : node_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "max_node_image_size" defined at polyorb_hi_generated-deployment.ads:32, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi_generated__deployment__max_node_image_size
 use import "_gnatprove_standard".Main

 function max_node_image_size #"polyorb_hi_generated-deployment.ads" 32 0 0# "model" "model_trace:5026" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "ut_deployment_pr_a_node_type_range" defined at polyorb_hi_generated-deployment.ads:39, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_type_range
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ut_deployment_pr_a_node_type_range #"polyorb_hi_generated-deployment.ads" 39 0 0# 
 
 function first #"polyorb_hi_generated-deployment.ads" 39 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 39 0 0# 
   : int =
  1
 
 predicate in_range #"polyorb_hi_generated-deployment.ads" 39 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ut_deployment_pr_a_node_type_range, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ut_deployment_pr_a_node_type_range__ref #"polyorb_hi_generated-deployment.ads" 39 0 0# =
  { mutable ut_deployment_pr_a_node_type_range__content "model_trace:" : ut_deployment_pr_a_node_type_range }
 
 function ut_deployment_pr_a_node_type_range__ref___projection #"polyorb_hi_generated-deployment.ads" 39 0 0# 
   (a : ut_deployment_pr_a_node_type_range__ref) : ut_deployment_pr_a_node_type_range =
  a.ut_deployment_pr_a_node_type_range__content
 
 meta "model_projection" function ut_deployment_pr_a_node_type_range__ref___projection
 
 meta "inline : no" function ut_deployment_pr_a_node_type_range__ref___projection
 
 val ut_deployment_pr_a_node_type_range__havoc #"polyorb_hi_generated-deployment.ads" 39 0 0# 
   (x : ut_deployment_pr_a_node_type_range__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ut_deployment_pr_a_1_max_node_image_size" defined at polyorb_hi_generated-deployment.ads:42, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_node_image_size
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ut_deployment_pr_a_1_max_node_image_size #"polyorb_hi_generated-deployment.ads" 42 0 0# 
 
 function first #"polyorb_hi_generated-deployment.ads" 42 0 0# 
   : int =
  1
 
 function last #"polyorb_hi_generated-deployment.ads" 42 0 0# 
   : int =
  6
 
 predicate in_range #"polyorb_hi_generated-deployment.ads" 42 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ut_deployment_pr_a_1_max_node_image_size, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ut_deployment_pr_a_1_max_node_image_size__ref #"polyorb_hi_generated-deployment.ads" 42 0 0# =
  { mutable ut_deployment_pr_a_1_max_node_image_size__content "model_trace:" : ut_deployment_pr_a_1_max_node_image_size }
 
 function ut_deployment_pr_a_1_max_node_image_size__ref___projection #"polyorb_hi_generated-deployment.ads" 42 0 0# 
   (a : ut_deployment_pr_a_1_max_node_image_size__ref) : ut_deployment_pr_a_1_max_node_image_size =
  a.ut_deployment_pr_a_1_max_node_image_size__content
 
 meta "model_projection" function ut_deployment_pr_a_1_max_node_image_size__ref___projection
 
 meta "inline : no" function ut_deployment_pr_a_1_max_node_image_size__ref___projection
 
 val ut_deployment_pr_a_1_max_node_image_size__havoc #"polyorb_hi_generated-deployment.ads" 42 0 0# 
   (x : ut_deployment_pr_a_1_max_node_image_size__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ut_deployment_pr_a_node_image_component" defined at polyorb_hi_generated-deployment.ads:45, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 42 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the array theory associated to type "Tut_deployment_pr_a_node_image_arrayB" defined at polyorb_hi_generated-deployment.ads:49, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Standard__character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Array__Int__Standard__character.map
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "Tut_deployment_pr_a_node_image_arrayB" defined at polyorb_hi_generated-deployment.ads:49, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__Tut_deployment_pr_a_node_image_arrayB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__node_type
 use        Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_type_range
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 45 0 0# =
  Array__Int__Standard__character.map
 
 function index_1_id #"polyorb_hi_generated-deployment.ads" 45 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component.bool_eq, 
 type index_base_type = Polyorb_hi_generated__deployment__node_type.node_type, 
 type index_rep_type = int, 
 function to_rep = Polyorb_hi_generated__deployment__node_type.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Polyorb_hi_generated__deployment__node_type.in_range, 
 predicate index_dynamic_property = Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_type_range.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tut_deployment_pr_a_node_image_arrayB #"polyorb_hi_generated-deployment.ads" 49 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tut_deployment_pr_a_node_image_arrayB__ref #"polyorb_hi_generated-deployment.ads" 49 0 0# =
  { mutable tut_deployment_pr_a_node_image_arrayB__content "model_trace:" : tut_deployment_pr_a_node_image_arrayB }
 
 function tut_deployment_pr_a_node_image_arrayB__ref___projection #"polyorb_hi_generated-deployment.ads" 49 0 0# 
   (a : tut_deployment_pr_a_node_image_arrayB__ref) : tut_deployment_pr_a_node_image_arrayB =
  a.tut_deployment_pr_a_node_image_arrayB__content
 
 meta "model_projection" function tut_deployment_pr_a_node_image_arrayB__ref___projection
 
 meta "inline : no" function tut_deployment_pr_a_node_image_arrayB__ref___projection
 
 val tut_deployment_pr_a_node_image_arrayB__havoc #"polyorb_hi_generated-deployment.ads" 49 0 0# 
   (x : tut_deployment_pr_a_node_image_arrayB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ut_deployment_pr_a_node_image_array" defined at polyorb_hi_generated-deployment.ads:49, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 49 0 0# =
  Array__Int__Standard__character.map
 
 function first #"polyorb_hi_generated-deployment.ads" 45 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 45 0 0# 
   : int =
  1
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T5s" defined at polyorb_hi_generated-deployment.ads:55, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t5s #"polyorb_hi_generated-deployment.ads" 55 0 0# 
 
 function first #"polyorb_hi_generated-deployment.ads" 55 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 55 0 0# 
   : int =
  1
 
 predicate in_range #"polyorb_hi_generated-deployment.ads" 55 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t5s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t5s__ref #"polyorb_hi_generated-deployment.ads" 55 0 0# =
  { mutable t5s__content "model_trace:" : t5s }
 
 function t5s__ref___projection #"polyorb_hi_generated-deployment.ads" 55 0 0# 
   (a : t5s__ref) : t5s =
  a.t5s__content
 
 meta "model_projection" function t5s__ref___projection
 
 meta "inline : no" function t5s__ref___projection
 
 val t5s__havoc #"polyorb_hi_generated-deployment.ads" 55 0 0# 
   (x : t5s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T6s" defined at polyorb_hi_generated-deployment.ads:55, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T6s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 55 0 0# =
  Array__Int__Standard__character.map
 
 function first #"polyorb_hi_generated-deployment.ads" 45 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 45 0 0# 
   : int =
  1
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T3s" defined at polyorb_hi_generated-deployment.ads:56, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 45 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T4s" defined at polyorb_hi_generated-deployment.ads:58, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "node_image" defined at polyorb_hi_generated-deployment.ads:53, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi_generated__deployment__node_image
 use import "_gnatprove_standard".Main
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component

 function node_image #"polyorb_hi_generated-deployment.ads" 53 0 0# "model_projected" "model_trace:5096" 
   : Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component.map
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi_generated-deployment.ads" 49 0 0# 
   : int

end

(* Module for defining the constant "my_node" defined at polyorb_hi_generated-deployment.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi_generated__deployment__my_node
 use import "_gnatprove_standard".Main

 function my_node #"polyorb_hi_generated-deployment.ads" 60 0 0# "model" "model_trace:5114" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi_generated-deployment.ads" 16 0 0# 
   : int

end

(* Module for axiomatizing type "entity_type" defined at polyorb_hi_generated-deployment.ads:65, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__entity_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type entity_type #"polyorb_hi_generated-deployment.ads" 65 0 0# 
 
 function first #"polyorb_hi_generated-deployment.ads" 65 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 65 0 0# 
   : int =
  3
 
 predicate in_range #"polyorb_hi_generated-deployment.ads" 65 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = entity_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type entity_type__ref #"polyorb_hi_generated-deployment.ads" 65 0 0# =
  { mutable entity_type__content "model_trace:" : entity_type }
 
 function entity_type__ref___projection #"polyorb_hi_generated-deployment.ads" 65 0 0# 
   (a : entity_type__ref) : entity_type =
  a.entity_type__content
 
 meta "model_projection" function entity_type__ref___projection
 
 meta "inline : no" function entity_type__ref___projection
 
 val entity_type__havoc #"polyorb_hi_generated-deployment.ads" 65 0 0# 
   (x : entity_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ut_deployment_pr_a_entity_type_range" defined at polyorb_hi_generated-deployment.ads:89, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_type_range
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ut_deployment_pr_a_entity_type_range #"polyorb_hi_generated-deployment.ads" 89 0 0# 
 
 function first #"polyorb_hi_generated-deployment.ads" 89 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 89 0 0# 
   : int =
  3
 
 predicate in_range #"polyorb_hi_generated-deployment.ads" 89 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ut_deployment_pr_a_entity_type_range, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ut_deployment_pr_a_entity_type_range__ref #"polyorb_hi_generated-deployment.ads" 89 0 0# =
  { mutable ut_deployment_pr_a_entity_type_range__content "model_trace:" : ut_deployment_pr_a_entity_type_range }
 
 function ut_deployment_pr_a_entity_type_range__ref___projection #"polyorb_hi_generated-deployment.ads" 89 0 0# 
   (a : ut_deployment_pr_a_entity_type_range__ref) : ut_deployment_pr_a_entity_type_range =
  a.ut_deployment_pr_a_entity_type_range__content
 
 meta "model_projection" function ut_deployment_pr_a_entity_type_range__ref___projection
 
 meta "inline : no" function ut_deployment_pr_a_entity_type_range__ref___projection
 
 val ut_deployment_pr_a_entity_type_range__havoc #"polyorb_hi_generated-deployment.ads" 89 0 0# 
   (x : ut_deployment_pr_a_entity_type_range__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "Tut_deployment_pr_a_entity_table_arrayB" defined at polyorb_hi_generated-deployment.ads:92, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Polyorb_hi_generated__deployment__node_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__node_type

 function index_I1_one #"polyorb_hi_generated-deployment.ads" 89 0 0# 
   : int =
  1
 
 type component_type #"polyorb_hi_generated-deployment.ads" 89 0 0# =
  Polyorb_hi_generated__deployment__node_type.node_type
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"polyorb_hi_generated-deployment.ads" 16 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Polyorb_hi_generated__deployment__node_type.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "Tut_deployment_pr_a_entity_table_arrayB" defined at polyorb_hi_generated-deployment.ads:92, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__Tut_deployment_pr_a_entity_table_arrayB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__node_type
 use        Polyorb_hi_generated__deployment__entity_type
 use        Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_type_range
 use        Array__Int__Polyorb_hi_generated__deployment__node_type

 type component_type #"polyorb_hi_generated-deployment.ads" 16 0 0# =
  Polyorb_hi_generated__deployment__node_type.node_type
 
 function index_1_id #"polyorb_hi_generated-deployment.ads" 16 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__node_type.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__node_type.bool_eq, 
 type index_base_type = Polyorb_hi_generated__deployment__entity_type.entity_type, 
 type index_rep_type = int, 
 function to_rep = Polyorb_hi_generated__deployment__entity_type.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Polyorb_hi_generated__deployment__entity_type.in_range, 
 predicate index_dynamic_property = Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_type_range.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tut_deployment_pr_a_entity_table_arrayB #"polyorb_hi_generated-deployment.ads" 92 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tut_deployment_pr_a_entity_table_arrayB__ref #"polyorb_hi_generated-deployment.ads" 92 0 0# =
  { mutable tut_deployment_pr_a_entity_table_arrayB__content "model_trace:" : tut_deployment_pr_a_entity_table_arrayB }
 
 function tut_deployment_pr_a_entity_table_arrayB__ref___projection #"polyorb_hi_generated-deployment.ads" 92 0 0# 
   (a : tut_deployment_pr_a_entity_table_arrayB__ref) : tut_deployment_pr_a_entity_table_arrayB =
  a.tut_deployment_pr_a_entity_table_arrayB__content
 
 meta "model_projection" function tut_deployment_pr_a_entity_table_arrayB__ref___projection
 
 meta "inline : no" function tut_deployment_pr_a_entity_table_arrayB__ref___projection
 
 val tut_deployment_pr_a_entity_table_arrayB__havoc #"polyorb_hi_generated-deployment.ads" 92 0 0# 
   (x : tut_deployment_pr_a_entity_table_arrayB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ut_deployment_pr_a_entity_table_array" defined at polyorb_hi_generated-deployment.ads:92, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_table_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__node_type
 use        Array__Int__Polyorb_hi_generated__deployment__node_type

 type component_type #"polyorb_hi_generated-deployment.ads" 92 0 0# =
  Polyorb_hi_generated__deployment__node_type.node_type
 
 function first #"polyorb_hi_generated-deployment.ads" 16 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 16 0 0# 
   : int =
  3
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__node_type.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__node_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T9s" defined at polyorb_hi_generated-deployment.ads:98, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T9s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t9s #"polyorb_hi_generated-deployment.ads" 98 0 0# 
 
 function first #"polyorb_hi_generated-deployment.ads" 98 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 98 0 0# 
   : int =
  3
 
 predicate in_range #"polyorb_hi_generated-deployment.ads" 98 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t9s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t9s__ref #"polyorb_hi_generated-deployment.ads" 98 0 0# =
  { mutable t9s__content "model_trace:" : t9s }
 
 function t9s__ref___projection #"polyorb_hi_generated-deployment.ads" 98 0 0# 
   (a : t9s__ref) : t9s =
  a.t9s__content
 
 meta "model_projection" function t9s__ref___projection
 
 meta "inline : no" function t9s__ref___projection
 
 val t9s__havoc #"polyorb_hi_generated-deployment.ads" 98 0 0# 
   (x : t9s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T10s" defined at polyorb_hi_generated-deployment.ads:98, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T10s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__node_type
 use        Array__Int__Polyorb_hi_generated__deployment__node_type

 type component_type #"polyorb_hi_generated-deployment.ads" 98 0 0# =
  Polyorb_hi_generated__deployment__node_type.node_type
 
 function first #"polyorb_hi_generated-deployment.ads" 16 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 16 0 0# 
   : int =
  3
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__node_type.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__node_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "entity_table" defined at polyorb_hi_generated-deployment.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi_generated__deployment__entity_table
 use import "_gnatprove_standard".Main
 use        Array__Int__Polyorb_hi_generated__deployment__node_type

 function entity_table #"polyorb_hi_generated-deployment.ads" 96 0 0# "model_projected" "model_trace:5214" 
   : Array__Int__Polyorb_hi_generated__deployment__node_type.map
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi_generated-deployment.ads" 92 0 0# 
   : int

end

(* Module for defining the constant "max_entity_image_size" defined at polyorb_hi_generated-deployment.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi_generated__deployment__max_entity_image_size
 use import "_gnatprove_standard".Main

 function max_entity_image_size #"polyorb_hi_generated-deployment.ads" 107 0 0# "model" "model_trace:5238" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "ut_deployment_pr_a_1_max_entity_image_size" defined at polyorb_hi_generated-deployment.ads:114, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_entity_image_size
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ut_deployment_pr_a_1_max_entity_image_size #"polyorb_hi_generated-deployment.ads" 114 0 0# 
 
 function first #"polyorb_hi_generated-deployment.ads" 114 0 0# 
   : int =
  1
 
 function last #"polyorb_hi_generated-deployment.ads" 114 0 0# 
   : int =
  22
 
 predicate in_range #"polyorb_hi_generated-deployment.ads" 114 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ut_deployment_pr_a_1_max_entity_image_size, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ut_deployment_pr_a_1_max_entity_image_size__ref #"polyorb_hi_generated-deployment.ads" 114 0 0# =
  { mutable ut_deployment_pr_a_1_max_entity_image_size__content "model_trace:" : ut_deployment_pr_a_1_max_entity_image_size }
 
 function ut_deployment_pr_a_1_max_entity_image_size__ref___projection #"polyorb_hi_generated-deployment.ads" 114 0 0# 
   (a : ut_deployment_pr_a_1_max_entity_image_size__ref) : ut_deployment_pr_a_1_max_entity_image_size =
  a.ut_deployment_pr_a_1_max_entity_image_size__content
 
 meta "model_projection" function ut_deployment_pr_a_1_max_entity_image_size__ref___projection
 
 meta "inline : no" function ut_deployment_pr_a_1_max_entity_image_size__ref___projection
 
 val ut_deployment_pr_a_1_max_entity_image_size__havoc #"polyorb_hi_generated-deployment.ads" 114 0 0# 
   (x : ut_deployment_pr_a_1_max_entity_image_size__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ut_deployment_pr_a_entity_image_component" defined at polyorb_hi_generated-deployment.ads:117, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 114 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  22
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the array theory associated to type "Tut_deployment_pr_a_entity_image_arrayB" defined at polyorb_hi_generated-deployment.ads:121, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Standard__character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Array__Int__Standard__character.map
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "Tut_deployment_pr_a_entity_image_arrayB" defined at polyorb_hi_generated-deployment.ads:121, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__Tut_deployment_pr_a_entity_image_arrayB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__entity_type
 use        Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_type_range
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 117 0 0# =
  Array__Int__Standard__character.map
 
 function index_1_id #"polyorb_hi_generated-deployment.ads" 117 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component.bool_eq, 
 type index_base_type = Polyorb_hi_generated__deployment__entity_type.entity_type, 
 type index_rep_type = int, 
 function to_rep = Polyorb_hi_generated__deployment__entity_type.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Polyorb_hi_generated__deployment__entity_type.in_range, 
 predicate index_dynamic_property = Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_type_range.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tut_deployment_pr_a_entity_image_arrayB #"polyorb_hi_generated-deployment.ads" 121 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tut_deployment_pr_a_entity_image_arrayB__ref #"polyorb_hi_generated-deployment.ads" 121 0 0# =
  { mutable tut_deployment_pr_a_entity_image_arrayB__content "model_trace:" : tut_deployment_pr_a_entity_image_arrayB }
 
 function tut_deployment_pr_a_entity_image_arrayB__ref___projection #"polyorb_hi_generated-deployment.ads" 121 0 0# 
   (a : tut_deployment_pr_a_entity_image_arrayB__ref) : tut_deployment_pr_a_entity_image_arrayB =
  a.tut_deployment_pr_a_entity_image_arrayB__content
 
 meta "model_projection" function tut_deployment_pr_a_entity_image_arrayB__ref___projection
 
 meta "inline : no" function tut_deployment_pr_a_entity_image_arrayB__ref___projection
 
 val tut_deployment_pr_a_entity_image_arrayB__havoc #"polyorb_hi_generated-deployment.ads" 121 0 0# 
   (x : tut_deployment_pr_a_entity_image_arrayB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ut_deployment_pr_a_entity_image_array" defined at polyorb_hi_generated-deployment.ads:121, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 121 0 0# =
  Array__Int__Standard__character.map
 
 function first #"polyorb_hi_generated-deployment.ads" 117 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 117 0 0# 
   : int =
  3
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T17s" defined at polyorb_hi_generated-deployment.ads:127, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T17s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t17s #"polyorb_hi_generated-deployment.ads" 127 0 0# 
 
 function first #"polyorb_hi_generated-deployment.ads" 127 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 127 0 0# 
   : int =
  3
 
 predicate in_range #"polyorb_hi_generated-deployment.ads" 127 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t17s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t17s__ref #"polyorb_hi_generated-deployment.ads" 127 0 0# =
  { mutable t17s__content "model_trace:" : t17s }
 
 function t17s__ref___projection #"polyorb_hi_generated-deployment.ads" 127 0 0# 
   (a : t17s__ref) : t17s =
  a.t17s__content
 
 meta "model_projection" function t17s__ref___projection
 
 meta "inline : no" function t17s__ref___projection
 
 val t17s__havoc #"polyorb_hi_generated-deployment.ads" 127 0 0# 
   (x : t17s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T18s" defined at polyorb_hi_generated-deployment.ads:127, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T18s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 127 0 0# =
  Array__Int__Standard__character.map
 
 function first #"polyorb_hi_generated-deployment.ads" 117 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 117 0 0# 
   : int =
  3
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T13s" defined at polyorb_hi_generated-deployment.ads:128, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T13s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 117 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  22
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T14s" defined at polyorb_hi_generated-deployment.ads:130, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T14s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  22
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T15s" defined at polyorb_hi_generated-deployment.ads:132, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T15s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  22
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T16s" defined at polyorb_hi_generated-deployment.ads:134, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T16s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  22
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "entity_image" defined at polyorb_hi_generated-deployment.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi_generated__deployment__entity_image
 use import "_gnatprove_standard".Main
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component

 function entity_image #"polyorb_hi_generated-deployment.ads" 125 0 0# "model_projected" "model_trace:5290" 
   : Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component.map
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi_generated-deployment.ads" 121 0 0# 
   : int

end

(* Module for axiomatizing type "port_type" defined at polyorb_hi_generated-deployment.ads:139, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__port_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type port_type #"polyorb_hi_generated-deployment.ads" 139 0 0# 
 
 function first #"polyorb_hi_generated-deployment.ads" 139 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 139 0 0# 
   : int =
  3
 
 predicate in_range #"polyorb_hi_generated-deployment.ads" 139 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = port_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type port_type__ref #"polyorb_hi_generated-deployment.ads" 139 0 0# =
  { mutable port_type__content "model_trace:" : port_type }
 
 function port_type__ref___projection #"polyorb_hi_generated-deployment.ads" 139 0 0# 
   (a : port_type__ref) : port_type =
  a.port_type__content
 
 meta "model_projection" function port_type__ref___projection
 
 meta "inline : no" function port_type__ref___projection
 
 val port_type__havoc #"polyorb_hi_generated-deployment.ads" 139 0 0# 
   (x : port_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ut_deployment_pr_a_port_type_range" defined at polyorb_hi_generated-deployment.ads:164, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_type_range
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ut_deployment_pr_a_port_type_range #"polyorb_hi_generated-deployment.ads" 164 0 0# 
 
 function first #"polyorb_hi_generated-deployment.ads" 164 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 164 0 0# 
   : int =
  3
 
 predicate in_range #"polyorb_hi_generated-deployment.ads" 164 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ut_deployment_pr_a_port_type_range, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type ut_deployment_pr_a_port_type_range__ref #"polyorb_hi_generated-deployment.ads" 164 0 0# =
  { mutable ut_deployment_pr_a_port_type_range__content "model_trace:" : ut_deployment_pr_a_port_type_range }
 
 function ut_deployment_pr_a_port_type_range__ref___projection #"polyorb_hi_generated-deployment.ads" 164 0 0# 
   (a : ut_deployment_pr_a_port_type_range__ref) : ut_deployment_pr_a_port_type_range =
  a.ut_deployment_pr_a_port_type_range__content
 
 meta "model_projection" function ut_deployment_pr_a_port_type_range__ref___projection
 
 meta "inline : no" function ut_deployment_pr_a_port_type_range__ref___projection
 
 val ut_deployment_pr_a_port_type_range__havoc #"polyorb_hi_generated-deployment.ads" 164 0 0# 
   (x : ut_deployment_pr_a_port_type_range__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "Tut_deployment_pr_a_port_table_arrayB" defined at polyorb_hi_generated-deployment.ads:167, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Polyorb_hi_generated__deployment__entity_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__entity_type

 function index_I1_one #"polyorb_hi_generated-deployment.ads" 164 0 0# 
   : int =
  1
 
 type component_type #"polyorb_hi_generated-deployment.ads" 164 0 0# =
  Polyorb_hi_generated__deployment__entity_type.entity_type
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function index_Index_one #"polyorb_hi_generated-deployment.ads" 65 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Polyorb_hi_generated__deployment__entity_type.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "Tut_deployment_pr_a_port_table_arrayB" defined at polyorb_hi_generated-deployment.ads:167, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__Tut_deployment_pr_a_port_table_arrayB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__entity_type
 use        Polyorb_hi_generated__deployment__port_type
 use        Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_type_range
 use        Array__Int__Polyorb_hi_generated__deployment__entity_type

 type component_type #"polyorb_hi_generated-deployment.ads" 65 0 0# =
  Polyorb_hi_generated__deployment__entity_type.entity_type
 
 function index_1_id #"polyorb_hi_generated-deployment.ads" 65 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__entity_type.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__entity_type.bool_eq, 
 type index_base_type = Polyorb_hi_generated__deployment__port_type.port_type, 
 type index_rep_type = int, 
 function to_rep = Polyorb_hi_generated__deployment__port_type.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Polyorb_hi_generated__deployment__port_type.in_range, 
 predicate index_dynamic_property = Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_type_range.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tut_deployment_pr_a_port_table_arrayB #"polyorb_hi_generated-deployment.ads" 167 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tut_deployment_pr_a_port_table_arrayB__ref #"polyorb_hi_generated-deployment.ads" 167 0 0# =
  { mutable tut_deployment_pr_a_port_table_arrayB__content "model_trace:" : tut_deployment_pr_a_port_table_arrayB }
 
 function tut_deployment_pr_a_port_table_arrayB__ref___projection #"polyorb_hi_generated-deployment.ads" 167 0 0# 
   (a : tut_deployment_pr_a_port_table_arrayB__ref) : tut_deployment_pr_a_port_table_arrayB =
  a.tut_deployment_pr_a_port_table_arrayB__content
 
 meta "model_projection" function tut_deployment_pr_a_port_table_arrayB__ref___projection
 
 meta "inline : no" function tut_deployment_pr_a_port_table_arrayB__ref___projection
 
 val tut_deployment_pr_a_port_table_arrayB__havoc #"polyorb_hi_generated-deployment.ads" 167 0 0# 
   (x : tut_deployment_pr_a_port_table_arrayB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ut_deployment_pr_a_port_table_array" defined at polyorb_hi_generated-deployment.ads:167, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_table_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__entity_type
 use        Array__Int__Polyorb_hi_generated__deployment__entity_type

 type component_type #"polyorb_hi_generated-deployment.ads" 167 0 0# =
  Polyorb_hi_generated__deployment__entity_type.entity_type
 
 function first #"polyorb_hi_generated-deployment.ads" 65 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 65 0 0# 
   : int =
  3
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__entity_type.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__entity_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T21s" defined at polyorb_hi_generated-deployment.ads:173, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T21s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t21s #"polyorb_hi_generated-deployment.ads" 173 0 0# 
 
 function first #"polyorb_hi_generated-deployment.ads" 173 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 173 0 0# 
   : int =
  3
 
 predicate in_range #"polyorb_hi_generated-deployment.ads" 173 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t21s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t21s__ref #"polyorb_hi_generated-deployment.ads" 173 0 0# =
  { mutable t21s__content "model_trace:" : t21s }
 
 function t21s__ref___projection #"polyorb_hi_generated-deployment.ads" 173 0 0# 
   (a : t21s__ref) : t21s =
  a.t21s__content
 
 meta "model_projection" function t21s__ref___projection
 
 meta "inline : no" function t21s__ref___projection
 
 val t21s__havoc #"polyorb_hi_generated-deployment.ads" 173 0 0# 
   (x : t21s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T22s" defined at polyorb_hi_generated-deployment.ads:173, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T22s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__entity_type
 use        Array__Int__Polyorb_hi_generated__deployment__entity_type

 type component_type #"polyorb_hi_generated-deployment.ads" 173 0 0# =
  Polyorb_hi_generated__deployment__entity_type.entity_type
 
 function first #"polyorb_hi_generated-deployment.ads" 65 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 65 0 0# 
   : int =
  3
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__entity_type.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__entity_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "port_table" defined at polyorb_hi_generated-deployment.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi_generated__deployment__port_table
 use import "_gnatprove_standard".Main
 use        Array__Int__Polyorb_hi_generated__deployment__entity_type

 function port_table #"polyorb_hi_generated-deployment.ads" 171 0 0# "model_projected" "model_trace:5404" 
   : Array__Int__Polyorb_hi_generated__deployment__entity_type.map
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi_generated-deployment.ads" 167 0 0# 
   : int

end

(* Module for defining the constant "max_port_image_size" defined at polyorb_hi_generated-deployment.ads:182, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi_generated__deployment__max_port_image_size
 use import "_gnatprove_standard".Main

 function max_port_image_size #"polyorb_hi_generated-deployment.ads" 182 0 0# "model" "model_trace:5428" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "Tport_sized_stringP1" defined at polyorb_hi_generated-deployment.ads:187, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__Tport_sized_stringP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tport_sized_stringP1 #"polyorb_hi_generated-deployment.ads" 187 0 0# 
 
 function first #"polyorb_hi_generated-deployment.ads" 187 0 0# 
   : int =
  1
 
 function last #"polyorb_hi_generated-deployment.ads" 187 0 0# 
   : int =
  34
 
 predicate in_range #"polyorb_hi_generated-deployment.ads" 187 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tport_sized_stringP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tport_sized_stringP1__ref #"polyorb_hi_generated-deployment.ads" 187 0 0# =
  { mutable tport_sized_stringP1__content "model_trace:" : tport_sized_stringP1 }
 
 function tport_sized_stringP1__ref___projection #"polyorb_hi_generated-deployment.ads" 187 0 0# 
   (a : tport_sized_stringP1__ref) : tport_sized_stringP1 =
  a.tport_sized_stringP1__content
 
 meta "model_projection" function tport_sized_stringP1__ref___projection
 
 meta "inline : no" function tport_sized_stringP1__ref___projection
 
 val tport_sized_stringP1__havoc #"polyorb_hi_generated-deployment.ads" 187 0 0# 
   (x : tport_sized_stringP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "port_sized_string" defined at polyorb_hi_generated-deployment.ads:187, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__port_sized_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 187 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  34
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the array theory associated to type "Tut_deployment_pr_a_port_image_arrayB" defined at polyorb_hi_generated-deployment.ads:193, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Polyorb_hi_generated__deployment__port_sized_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Standard__character

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Array__Int__Standard__character.map
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "Tut_deployment_pr_a_port_image_arrayB" defined at polyorb_hi_generated-deployment.ads:193, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__Tut_deployment_pr_a_port_image_arrayB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__port_type
 use        Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_type_range
 use        Array__Int__Polyorb_hi_generated__deployment__port_sized_string
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 187 0 0# =
  Array__Int__Standard__character.map
 
 function index_1_id #"polyorb_hi_generated-deployment.ads" 187 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__port_sized_string.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__port_sized_string.bool_eq, 
 type index_base_type = Polyorb_hi_generated__deployment__port_type.port_type, 
 type index_rep_type = int, 
 function to_rep = Polyorb_hi_generated__deployment__port_type.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Polyorb_hi_generated__deployment__port_type.in_range, 
 predicate index_dynamic_property = Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_type_range.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tut_deployment_pr_a_port_image_arrayB #"polyorb_hi_generated-deployment.ads" 193 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tut_deployment_pr_a_port_image_arrayB__ref #"polyorb_hi_generated-deployment.ads" 193 0 0# =
  { mutable tut_deployment_pr_a_port_image_arrayB__content "model_trace:" : tut_deployment_pr_a_port_image_arrayB }
 
 function tut_deployment_pr_a_port_image_arrayB__ref___projection #"polyorb_hi_generated-deployment.ads" 193 0 0# 
   (a : tut_deployment_pr_a_port_image_arrayB__ref) : tut_deployment_pr_a_port_image_arrayB =
  a.tut_deployment_pr_a_port_image_arrayB__content
 
 meta "model_projection" function tut_deployment_pr_a_port_image_arrayB__ref___projection
 
 meta "inline : no" function tut_deployment_pr_a_port_image_arrayB__ref___projection
 
 val tut_deployment_pr_a_port_image_arrayB__havoc #"polyorb_hi_generated-deployment.ads" 193 0 0# 
   (x : tut_deployment_pr_a_port_image_arrayB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "ut_deployment_pr_a_port_image_array" defined at polyorb_hi_generated-deployment.ads:193, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_image_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Polyorb_hi_generated__deployment__port_sized_string
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 193 0 0# =
  Array__Int__Standard__character.map
 
 function first #"polyorb_hi_generated-deployment.ads" 187 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 187 0 0# 
   : int =
  3
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__port_sized_string.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__port_sized_string.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T29s" defined at polyorb_hi_generated-deployment.ads:199, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T29s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t29s #"polyorb_hi_generated-deployment.ads" 199 0 0# 
 
 function first #"polyorb_hi_generated-deployment.ads" 199 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 199 0 0# 
   : int =
  3
 
 predicate in_range #"polyorb_hi_generated-deployment.ads" 199 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t29s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t29s__ref #"polyorb_hi_generated-deployment.ads" 199 0 0# =
  { mutable t29s__content "model_trace:" : t29s }
 
 function t29s__ref___projection #"polyorb_hi_generated-deployment.ads" 199 0 0# 
   (a : t29s__ref) : t29s =
  a.t29s__content
 
 meta "model_projection" function t29s__ref___projection
 
 meta "inline : no" function t29s__ref___projection
 
 val t29s__havoc #"polyorb_hi_generated-deployment.ads" 199 0 0# 
   (x : t29s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T30s" defined at polyorb_hi_generated-deployment.ads:199, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T30s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Polyorb_hi_generated__deployment__port_sized_string
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 199 0 0# =
  Array__Int__Standard__character.map
 
 function first #"polyorb_hi_generated-deployment.ads" 187 0 0# 
   : int =
  0
 
 function last #"polyorb_hi_generated-deployment.ads" 187 0 0# 
   : int =
  3
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Polyorb_hi_generated__deployment__port_sized_string.map, 
 function array_bool_eq = Array__Int__Polyorb_hi_generated__deployment__port_sized_string.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T25s" defined at polyorb_hi_generated-deployment.ads:200, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T25s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi_generated-deployment.ads" 187 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  34
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T26s" defined at polyorb_hi_generated-deployment.ads:202, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T26s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  34
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T27s" defined at polyorb_hi_generated-deployment.ads:204, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T27s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  34
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T28s" defined at polyorb_hi_generated-deployment.ads:206, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi_generated__deployment__T28s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  34
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "port_image" defined at polyorb_hi_generated-deployment.ads:197, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi_generated__deployment__port_image
 use import "_gnatprove_standard".Main
 use        Array__Int__Polyorb_hi_generated__deployment__port_sized_string

 function port_image #"polyorb_hi_generated-deployment.ads" 197 0 0# "model_projected" "model_trace:5472" 
   : Array__Int__Polyorb_hi_generated__deployment__port_sized_string.map
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi_generated-deployment.ads" 193 0 0# 
   : int

end

(* Module for defining the constant "max_payload_size" defined at polyorb_hi_generated-deployment.ads:210, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi_generated__deployment__max_payload_size
 use import "_gnatprove_standard".Main

 function max_payload_size #"polyorb_hi_generated-deployment.ads" 210 0 0# "model" "model_trace:5496" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "source" defined at a-unccon.ads:17 instantiated at polyorb_hi-utils.ads:62, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__internal_codeGP3220__source
 use import "_gnatprove_standard".Main
 use import "int".Int

 type source #"a-unccon.ads" 17 0 0# 
 
 function first #"a-unccon.ads" 17 0 0# 
   : int =
  0
 
 function last #"a-unccon.ads" 17 0 0# 
   : int =
  3
 
 predicate in_range #"a-unccon.ads" 17 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = source, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type source__ref #"a-unccon.ads" 17 0 0# =
  { mutable source__content "model_trace:" : source }
 
 function source__ref___projection #"a-unccon.ads" 17 0 0# 
   (a : source__ref) : source =
  a.source__content
 
 meta "model_projection" function source__ref___projection
 
 meta "inline : no" function source__ref___projection
 
 val source__havoc #"a-unccon.ads" 17 0 0# 
   (x : source__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "target" defined at a-unccon.ads:18 instantiated at polyorb_hi-utils.ads:62, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__internal_codeGP3220__target
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type target #"a-unccon.ads" 18 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-unccon.ads" 18 0 0# 
   : BV8.t
 
 function first #"a-unccon.ads" 18 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"a-unccon.ads" 18 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"a-unccon.ads" 18 0 0# 
   : int =
  0
 
 function last_int #"a-unccon.ads" 18 0 0# 
   : int =
  255
 
 predicate in_range #"a-unccon.ads" 18 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"a-unccon.ads" 18 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = target, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type target__ref #"a-unccon.ads" 18 0 0# =
  { mutable target__content "model_trace:" : target }
 
 function target__ref___projection #"a-unccon.ads" 18 0 0# 
   (a : target__ref) : target =
  a.target__content
 
 meta "model_projection" function target__ref___projection
 
 meta "inline : no" function target__ref___projection
 
 val target__havoc #"a-unccon.ads" 18 0 0# 
   (x : target__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at a-unccon.ads:20 instantiated at polyorb_hi-utils.ads:62, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__internal_codeGP3220__internal_code__s
 use import "_gnatprove_standard".Main

 function s #"a-unccon.ads" 20 0 0# "model" "model_trace:6767" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-unccon.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-unccon.ads:20 instantiated at polyorb_hi-utils.ads:62, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__internal_codeGP3220__internal_code__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "internal_code" defined at polyorb_hi-utils.ads:62, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__utils__internal_codeGP3220__internal_code
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function internal_code #"polyorb_hi-utils.ads" 62 0 0# 
   (s : int) : BV8.t

end

(* Module for axiomatizing type "source" defined at a-unccon.ads:17 instantiated at polyorb_hi-utils.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__corresponding_entityGP3310__source
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type source #"a-unccon.ads" 17 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-unccon.ads" 17 0 0# 
   : BV8.t
 
 function first #"a-unccon.ads" 17 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"a-unccon.ads" 17 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"a-unccon.ads" 17 0 0# 
   : int =
  0
 
 function last_int #"a-unccon.ads" 17 0 0# 
   : int =
  255
 
 predicate in_range #"a-unccon.ads" 17 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"a-unccon.ads" 17 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = source, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type source__ref #"a-unccon.ads" 17 0 0# =
  { mutable source__content "model_trace:" : source }
 
 function source__ref_2__projection #"a-unccon.ads" 17 0 0# 
   (a : source__ref) : source =
  a.source__content
 
 meta "model_projection" function source__ref_2__projection
 
 meta "inline : no" function source__ref_2__projection
 
 val source__havoc #"a-unccon.ads" 17 0 0# 
   (x : source__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "target" defined at a-unccon.ads:18 instantiated at polyorb_hi-utils.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__corresponding_entityGP3310__target
 use import "_gnatprove_standard".Main
 use import "int".Int

 type target #"a-unccon.ads" 18 0 0# 
 
 function first #"a-unccon.ads" 18 0 0# 
   : int =
  0
 
 function last #"a-unccon.ads" 18 0 0# 
   : int =
  3
 
 predicate in_range #"a-unccon.ads" 18 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = target, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type target__ref #"a-unccon.ads" 18 0 0# =
  { mutable target__content "model_trace:" : target }
 
 function target__ref_2__projection #"a-unccon.ads" 18 0 0# 
   (a : target__ref) : target =
  a.target__content
 
 meta "model_projection" function target__ref_2__projection
 
 meta "inline : no" function target__ref_2__projection
 
 val target__havoc #"a-unccon.ads" 18 0 0# 
   (x : target__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at a-unccon.ads:20 instantiated at polyorb_hi-utils.ads:64, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__corresponding_entityGP3310__corresponding_entity__s
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function s #"a-unccon.ads" 20 0 0# "model" "model_trace:6878" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"a-unccon.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-unccon.ads:20 instantiated at polyorb_hi-utils.ads:64, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__corresponding_entityGP3310__corresponding_entity__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "corresponding_entity" defined at polyorb_hi-utils.ads:64, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__utils__corresponding_entityGP3310__corresponding_entity
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function corresponding_entity #"polyorb_hi-utils.ads" 64 0 0# 
   (s : BV8.t) : int

end

(* Module for axiomatizing type "source" defined at a-unccon.ads:17 instantiated at polyorb_hi-utils.ads:67, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__internal_codeGP3408__source
 use import "_gnatprove_standard".Main
 use import "int".Int

 type source #"a-unccon.ads" 17 0 0# 
 
 function first #"a-unccon.ads" 17 0 0# 
   : int =
  0
 
 function last #"a-unccon.ads" 17 0 0# 
   : int =
  1
 
 predicate in_range #"a-unccon.ads" 17 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = source, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type source__ref #"a-unccon.ads" 17 0 0# =
  { mutable source__content "model_trace:" : source }
 
 function source__ref_3__projection #"a-unccon.ads" 17 0 0# 
   (a : source__ref) : source =
  a.source__content
 
 meta "model_projection" function source__ref_3__projection
 
 meta "inline : no" function source__ref_3__projection
 
 val source__havoc #"a-unccon.ads" 17 0 0# 
   (x : source__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "target" defined at a-unccon.ads:18 instantiated at polyorb_hi-utils.ads:67, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__internal_codeGP3408__target
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type target #"a-unccon.ads" 18 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-unccon.ads" 18 0 0# 
   : BV8.t
 
 function first #"a-unccon.ads" 18 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"a-unccon.ads" 18 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"a-unccon.ads" 18 0 0# 
   : int =
  0
 
 function last_int #"a-unccon.ads" 18 0 0# 
   : int =
  255
 
 predicate in_range #"a-unccon.ads" 18 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"a-unccon.ads" 18 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = target, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type target__ref #"a-unccon.ads" 18 0 0# =
  { mutable target__content "model_trace:" : target }
 
 function target__ref_3__projection #"a-unccon.ads" 18 0 0# 
   (a : target__ref) : target =
  a.target__content
 
 meta "model_projection" function target__ref_3__projection
 
 meta "inline : no" function target__ref_3__projection
 
 val target__havoc #"a-unccon.ads" 18 0 0# 
   (x : target__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at a-unccon.ads:20 instantiated at polyorb_hi-utils.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__internal_codeGP3408__internal_code__s
 use import "_gnatprove_standard".Main

 function s #"a-unccon.ads" 20 0 0# "model" "model_trace:6989" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-unccon.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-unccon.ads:20 instantiated at polyorb_hi-utils.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__internal_codeGP3408__internal_code__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "internal_code" defined at polyorb_hi-utils.ads:67, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__utils__internal_codeGP3408__internal_code
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function internal_code #"polyorb_hi-utils.ads" 67 0 0# 
   (s : int) : BV8.t

end

(* Module for axiomatizing type "source" defined at a-unccon.ads:17 instantiated at polyorb_hi-utils.ads:69, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__corresponding_nodeGP3496__source
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type source #"a-unccon.ads" 17 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-unccon.ads" 17 0 0# 
   : BV8.t
 
 function first #"a-unccon.ads" 17 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"a-unccon.ads" 17 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"a-unccon.ads" 17 0 0# 
   : int =
  0
 
 function last_int #"a-unccon.ads" 17 0 0# 
   : int =
  255
 
 predicate in_range #"a-unccon.ads" 17 0 0# 
   (x : BV8.t)  =
  true
 
 predicate in_range_int #"a-unccon.ads" 17 0 0# 
   (x : int)  =
  BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = source, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type source__ref #"a-unccon.ads" 17 0 0# =
  { mutable source__content "model_trace:" : source }
 
 function source__ref_4__projection #"a-unccon.ads" 17 0 0# 
   (a : source__ref) : source =
  a.source__content
 
 meta "model_projection" function source__ref_4__projection
 
 meta "inline : no" function source__ref_4__projection
 
 val source__havoc #"a-unccon.ads" 17 0 0# 
   (x : source__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "target" defined at a-unccon.ads:18 instantiated at polyorb_hi-utils.ads:69, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__corresponding_nodeGP3496__target
 use import "_gnatprove_standard".Main
 use import "int".Int

 type target #"a-unccon.ads" 18 0 0# 
 
 function first #"a-unccon.ads" 18 0 0# 
   : int =
  0
 
 function last #"a-unccon.ads" 18 0 0# 
   : int =
  1
 
 predicate in_range #"a-unccon.ads" 18 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = target, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type target__ref #"a-unccon.ads" 18 0 0# =
  { mutable target__content "model_trace:" : target }
 
 function target__ref_4__projection #"a-unccon.ads" 18 0 0# 
   (a : target__ref) : target =
  a.target__content
 
 meta "model_projection" function target__ref_4__projection
 
 meta "inline : no" function target__ref_4__projection
 
 val target__havoc #"a-unccon.ads" 18 0 0# 
   (x : target__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at a-unccon.ads:20 instantiated at polyorb_hi-utils.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__corresponding_nodeGP3496__corresponding_node__s
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function s #"a-unccon.ads" 20 0 0# "model" "model_trace:7100" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"a-unccon.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-unccon.ads:20 instantiated at polyorb_hi-utils.ads:69, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__corresponding_nodeGP3496__corresponding_node__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "corresponding_node" defined at polyorb_hi-utils.ads:69, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__utils__corresponding_nodeGP3496__corresponding_node
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function corresponding_node #"polyorb_hi-utils.ads" 69 0 0# 
   (s : BV8.t) : int

end

(* Module for defining the constant "p" defined at polyorb_hi-utils.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__internal_code__3__p
 use import "_gnatprove_standard".Main

 function p #"polyorb_hi-utils.ads" 72 0 0# "model" "model_trace:2845" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi_generated-deployment.ads" 139 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "p" defined at polyorb_hi-utils.ads:72, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__internal_code__3__p___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "internal_code__3" defined at polyorb_hi-utils.ads:72, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__utils__internal_code__3
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function internal_code__3 #"polyorb_hi-utils.ads" 72 0 0# 
   (p : int) : BV16.t

end

(* Module for defining the constant "i" defined at polyorb_hi-utils.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__corresponding_port__i
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function i #"polyorb_hi-utils.ads" 73 0 0# "model" "model_trace:2864" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "i" defined at polyorb_hi-utils.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__corresponding_port__i___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "corresponding_port" defined at polyorb_hi-utils.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__utils__corresponding_port
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function corresponding_port #"polyorb_hi-utils.ads" 73 0 0# 
   (i : BV16.t) : int

end

(* Module for defining the constant "b" defined at polyorb_hi-utils.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__swap_bytes__b
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function b #"polyorb_hi-utils.ads" 75 0 0# "model" "model_trace:2883" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "b" defined at polyorb_hi-utils.ads:75, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__swap_bytes__b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "swap_bytes" defined at polyorb_hi-utils.ads:75, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__utils__swap_bytes
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function swap_bytes #"polyorb_hi-utils.ads" 75 0 0# 
   (b : BV16.t) : BV16.t

end

(* Module for axiomatizing type "T7s" defined at polyorb_hi-utils.ads:125, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__hi_string__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t7s #"polyorb_hi-utils.ads" 125 0 0# 
 
 function first #"polyorb_hi-utils.ads" 125 0 0# 
   : int =
  1
 
 function last #"polyorb_hi-utils.ads" 125 0 0# 
   : int =
  80
 
 predicate in_range #"polyorb_hi-utils.ads" 125 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t7s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t7s__ref #"polyorb_hi-utils.ads" 125 0 0# =
  { mutable t7s__content "model_trace:" : t7s }
 
 function t7s__ref___projection #"polyorb_hi-utils.ads" 125 0 0# 
   (a : t7s__ref) : t7s =
  a.t7s__content
 
 meta "model_projection" function t7s__ref___projection
 
 meta "inline : no" function t7s__ref___projection
 
 val t7s__havoc #"polyorb_hi-utils.ads" 125 0 0# 
   (x : t7s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T8s" defined at polyorb_hi-utils.ads:125, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__hi_string__T8s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi-utils.ads" 125 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  80
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "hi_string" defined at polyorb_hi-utils.ads:124, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Polyorb_hi__utils__hi_string__rep
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Polyorb_hi__utils__hi_string__T8s
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 type __split_fields #"system.ads" 1 0 0# =
  { rec__polyorb_hi__utils__hi_string__s "model_trace:.3144" : Array__Int__Standard__character.map; rec__polyorb_hi__utils__hi_string__l "model_trace:.3159" : Standard__natural.natural }
 
 function __split_fields_S__projection #"system.ads" 1 0 0# "model_trace:.3144" 
   (a : __split_fields) : Array__Int__Standard__character.map =
  a.rec__polyorb_hi__utils__hi_string__s
 
 meta "model_projection" function __split_fields_S__projection
 
 meta "inline : no" function __split_fields_S__projection
 
 function __split_fields_L__projection #"polyorb_hi-utils.ads" 124 0 0# "model_trace:.3159" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__polyorb_hi__utils__hi_string__l
 
 meta "model_projection" function __split_fields_L__projection
 
 meta "inline : no" function __split_fields_L__projection
 
 type __split_fields__ref #"polyorb_hi-utils.ads" 124 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref___projection #"polyorb_hi-utils.ads" 124 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___projection
 
 meta "inline : no" function __split_fields__ref___projection
 
 val __split_fields__havoc #"polyorb_hi-utils.ads" 124 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"polyorb_hi-utils.ads" 124 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep___projection #"polyorb_hi-utils.ads" 124 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep___projection
 
 meta "inline : no" function __rep___projection
 
 function to_base #"polyorb_hi-utils.ads" 124 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"polyorb_hi-utils.ads" 124 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate polyorb_hi__utils__hi_string__s__pred #"polyorb_hi-utils.ads" 124 0 0# 
   (a : __rep)  =
  true
 
 val rec__polyorb_hi__utils__hi_string__s_ #"polyorb_hi-utils.ads" 124 0 0# 
   (a : __rep) : Array__Int__Standard__character.map
  requires { (polyorb_hi__utils__hi_string__s__pred a) }
  ensures { (result = a.__split_fields.rec__polyorb_hi__utils__hi_string__s) }
 
 predicate polyorb_hi__utils__hi_string__l__pred #"polyorb_hi-utils.ads" 124 0 0# 
   (a : __rep)  =
  true
 
 val rec__polyorb_hi__utils__hi_string__l_ #"polyorb_hi-utils.ads" 124 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { (polyorb_hi__utils__hi_string__l__pred a) }
  ensures { (result = a.__split_fields.rec__polyorb_hi__utils__hi_string__l) }
 
 function bool_eq #"polyorb_hi-utils.ads" 124 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ((Polyorb_hi__utils__hi_string__T8s.bool_eq a.__split_fields.rec__polyorb_hi__utils__hi_string__s b.__split_fields.rec__polyorb_hi__utils__hi_string__s) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__polyorb_hi__utils__hi_string__l) = (Standard__natural.to_rep b.__split_fields.rec__polyorb_hi__utils__hi_string__l)) )) then (
   True) else (
   False))
 
 function user_eq #"polyorb_hi-utils.ads" 124 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "hi_string" defined at polyorb_hi-utils.ads:124, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__hi_string
 use export Polyorb_hi__utils__hi_string__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type hi_string #"polyorb_hi-utils.ads" 124 0 0# =
  __rep
 
 function value__size #"polyorb_hi-utils.ads" 124 0 0# 
   : int
 
 function object__size #"polyorb_hi-utils.ads" 124 0 0# 
   (a : hi_string) : int
 
 function value__alignment #"polyorb_hi-utils.ads" 124 0 0# 
   : int
 
 function object__alignment #"polyorb_hi-utils.ads" 124 0 0# 
   (a : hi_string) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : hi_string.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : hi_string.
   ((object__alignment a) >= 0))
 
 function polyorb_hi__utils__hi_string__s__first__bit #"polyorb_hi-utils.ads" 124 0 0# 
   : int
 
 function polyorb_hi__utils__hi_string__s__last__bit #"polyorb_hi-utils.ads" 124 0 0# 
   : int
 
 function polyorb_hi__utils__hi_string__s__position #"polyorb_hi-utils.ads" 124 0 0# 
   : int
 
 axiom polyorb_hi__utils__hi_string__s__first__bit_axiom :
  ((polyorb_hi__utils__hi_string__s__first__bit ) >= 0)
 
 axiom polyorb_hi__utils__hi_string__s__last__bit_axiom :
  ((polyorb_hi__utils__hi_string__s__last__bit ) > (polyorb_hi__utils__hi_string__s__first__bit ))
 
 axiom polyorb_hi__utils__hi_string__s__position_axiom :
  ((polyorb_hi__utils__hi_string__s__position ) >= 0)
 
 function polyorb_hi__utils__hi_string__l__first__bit #"polyorb_hi-utils.ads" 125 0 0# 
   : int
 
 function polyorb_hi__utils__hi_string__l__last__bit #"polyorb_hi-utils.ads" 125 0 0# 
   : int
 
 function polyorb_hi__utils__hi_string__l__position #"polyorb_hi-utils.ads" 125 0 0# 
   : int
 
 axiom polyorb_hi__utils__hi_string__l__first__bit_axiom :
  ((polyorb_hi__utils__hi_string__l__first__bit ) >= 0)
 
 axiom polyorb_hi__utils__hi_string__l__last__bit_axiom :
  ((polyorb_hi__utils__hi_string__l__last__bit ) > (polyorb_hi__utils__hi_string__l__first__bit ))
 
 axiom polyorb_hi__utils__hi_string__l__position_axiom :
  ((polyorb_hi__utils__hi_string__l__position ) >= 0)
 
 function dummy #"polyorb_hi-utils.ads" 126 0 0# 
   : hi_string
 
 type hi_string__ref #"polyorb_hi-utils.ads" 124 0 0# =
  { mutable hi_string__content "model_trace:" : hi_string }
 
 function hi_string__ref___projection #"polyorb_hi-utils.ads" 124 0 0# 
   (a : hi_string__ref) : hi_string =
  a.hi_string__content
 
 meta "model_projection" function hi_string__ref___projection
 
 meta "inline : no" function hi_string__ref___projection
 
 val hi_string__havoc #"polyorb_hi-utils.ads" 124 0 0# 
   (x : hi_string__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at polyorb_hi-utils.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__to_hi_string__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"polyorb_hi-utils.ads" 88 0 0# "model_projected" "model_trace:2925" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at polyorb_hi-utils.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__to_hi_string__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "h" defined at polyorb_hi-utils.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__valid__h
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__utils__hi_string

 function h #"polyorb_hi-utils.ads" 97 0 0# "model_projected" "model_trace:3005" 
   : Polyorb_hi__utils__hi_string.hi_string
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-utils.ads" 124 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "h" defined at polyorb_hi-utils.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__valid__h___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "valid" defined at polyorb_hi-utils.ads:97, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__utils__valid
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__utils__hi_string

 function valid #"polyorb_hi-utils.ads" 97 0 0# 
   (h : Polyorb_hi__utils__hi_string.hi_string) : bool

end

(* Module for possibly declaring a logic function for "to_hi_string" defined at polyorb_hi-utils.ads:88, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__utils__to_hi_string
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__utils__hi_string

 function to_hi_string #"polyorb_hi-utils.ads" 88 0 0# 
   (s : Standard__string.string) : Polyorb_hi__utils__hi_string.hi_string

end

(* Module for defining the constant "h" defined at polyorb_hi-utils.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__to_string__h
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__utils__hi_string

 function h #"polyorb_hi-utils.ads" 91 0 0# "model_projected" "model_trace:2953" 
   : Polyorb_hi__utils__hi_string.hi_string
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-utils.ads" 124 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "h" defined at polyorb_hi-utils.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__to_string__h___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_string" defined at polyorb_hi-utils.ads:91, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__utils__to_string
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__utils__hi_string

 function to_string #"polyorb_hi-utils.ads" 91 0 0# 
   (h : Polyorb_hi__utils__hi_string.hi_string) : Standard__string.string

end

(* Module for defining the constant "h" defined at polyorb_hi-utils.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__length__h
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__utils__hi_string

 function h #"polyorb_hi-utils.ads" 94 0 0# "model_projected" "model_trace:2979" 
   : Polyorb_hi__utils__hi_string.hi_string
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-utils.ads" 124 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "h" defined at polyorb_hi-utils.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__length__h___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "length" defined at polyorb_hi-utils.ads:94, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__utils__length
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__utils__hi_string

 function length #"polyorb_hi-utils.ads" 94 0 0# 
   (h : Polyorb_hi__utils__hi_string.hi_string) : int

end

(* Module for defining the constant "s" defined at polyorb_hi-utils.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__parse_string__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"polyorb_hi-utils.ads" 99 0 0# "model_projected" "model_trace:3024" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at polyorb_hi-utils.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__parse_string__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "first" defined at polyorb_hi-utils.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__parse_string__first
 use import "_gnatprove_standard".Main

 function first #"polyorb_hi-utils.ads" 99 0 0# "model" "model_trace:3033" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "first" defined at polyorb_hi-utils.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__parse_string__first___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "delimiter" defined at polyorb_hi-utils.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__parse_string__delimiter
 use import "_gnatprove_standard".Main

 function delimiter #"polyorb_hi-utils.ads" 99 0 0# "model" "model_trace:3042" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "delimiter" defined at polyorb_hi-utils.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__parse_string__delimiter___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "parse_string" defined at polyorb_hi-utils.ads:99, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__utils__parse_string
 use import "_gnatprove_standard".Main
 use        Standard__string

 function parse_string #"polyorb_hi-utils.ads" 99 0 0# 
   (s : Standard__string.string) (first : int) (delimiter : int) : int

end

(* Module for axiomatizing the record theory associated to type "naming_entry" defined at polyorb_hi-utils.ads:113, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Polyorb_hi__utils__naming_entry__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Standard__natural
 use        System__address
 use        Polyorb_hi__utils__hi_string

 type __split_fields #"system.ads" 1 0 0# =
  { rec__polyorb_hi__utils__naming_entry__location "model_trace:.3079" : Polyorb_hi__utils__hi_string.hi_string; rec__polyorb_hi__utils__naming_entry__port "model_trace:.3093" : Standard__natural.natural; rec__polyorb_hi__utils__naming_entry__variable "model_trace:.3103" : System__address.address }
 
 function __split_fields_Location__projection #"system.ads" 134 0 0# "model_trace:.3079" 
   (a : __split_fields) : Polyorb_hi__utils__hi_string.hi_string =
  a.rec__polyorb_hi__utils__naming_entry__location
 
 meta "model_projection" function __split_fields_Location__projection
 
 meta "inline : no" function __split_fields_Location__projection
 
 function __split_fields_Port__projection #"polyorb_hi-utils.ads" 113 0 0# "model_trace:.3093" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__polyorb_hi__utils__naming_entry__port
 
 meta "model_projection" function __split_fields_Port__projection
 
 meta "inline : no" function __split_fields_Port__projection
 
 function __split_fields_Variable__projection #"polyorb_hi-utils.ads" 113 0 0# "model_trace:.3103" 
   (a : __split_fields) : System__address.address =
  a.rec__polyorb_hi__utils__naming_entry__variable
 
 meta "model_projection" function __split_fields_Variable__projection
 
 meta "inline : no" function __split_fields_Variable__projection
 
 type __split_fields__ref #"polyorb_hi-utils.ads" 113 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_2__projection #"polyorb_hi-utils.ads" 113 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_2__projection
 
 meta "inline : no" function __split_fields__ref_2__projection
 
 val __split_fields__havoc #"polyorb_hi-utils.ads" 113 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"polyorb_hi-utils.ads" 113 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_2__projection #"polyorb_hi-utils.ads" 113 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_2__projection
 
 meta "inline : no" function __rep_2__projection
 
 function to_base #"polyorb_hi-utils.ads" 113 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"polyorb_hi-utils.ads" 113 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate polyorb_hi__utils__naming_entry__location__pred #"polyorb_hi-utils.ads" 113 0 0# 
   (a : __rep)  =
  true
 
 val rec__polyorb_hi__utils__naming_entry__location_ #"polyorb_hi-utils.ads" 113 0 0# 
   (a : __rep) : Polyorb_hi__utils__hi_string.hi_string
  requires { (polyorb_hi__utils__naming_entry__location__pred a) }
  ensures { (result = a.__split_fields.rec__polyorb_hi__utils__naming_entry__location) }
 
 predicate polyorb_hi__utils__naming_entry__port__pred #"polyorb_hi-utils.ads" 113 0 0# 
   (a : __rep)  =
  true
 
 val rec__polyorb_hi__utils__naming_entry__port_ #"polyorb_hi-utils.ads" 113 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { (polyorb_hi__utils__naming_entry__port__pred a) }
  ensures { (result = a.__split_fields.rec__polyorb_hi__utils__naming_entry__port) }
 
 predicate polyorb_hi__utils__naming_entry__variable__pred #"polyorb_hi-utils.ads" 113 0 0# 
   (a : __rep)  =
  true
 
 val rec__polyorb_hi__utils__naming_entry__variable_ #"polyorb_hi-utils.ads" 113 0 0# 
   (a : __rep) : System__address.address
  requires { (polyorb_hi__utils__naming_entry__variable__pred a) }
  ensures { (result = a.__split_fields.rec__polyorb_hi__utils__naming_entry__variable) }
 
 function bool_eq #"polyorb_hi-utils.ads" 113 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ((Polyorb_hi__utils__hi_string.bool_eq a.__split_fields.rec__polyorb_hi__utils__naming_entry__location b.__split_fields.rec__polyorb_hi__utils__naming_entry__location) = True) /\ ((Standard__natural.to_rep a.__split_fields.rec__polyorb_hi__utils__naming_entry__port) = (Standard__natural.to_rep b.__split_fields.rec__polyorb_hi__utils__naming_entry__port)) ) /\ ((System__address.to_rep a.__split_fields.rec__polyorb_hi__utils__naming_entry__variable) = (System__address.to_rep b.__split_fields.rec__polyorb_hi__utils__naming_entry__variable)) )) then (
   True) else (
   False))
 
 function user_eq #"polyorb_hi-utils.ads" 113 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "naming_entry" defined at polyorb_hi-utils.ads:113, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__naming_entry
 use export Polyorb_hi__utils__naming_entry__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type naming_entry #"polyorb_hi-utils.ads" 113 0 0# =
  __rep
 
 function value__size #"polyorb_hi-utils.ads" 113 0 0# 
   : int
 
 function object__size #"polyorb_hi-utils.ads" 113 0 0# 
   (a : naming_entry) : int
 
 function value__alignment #"polyorb_hi-utils.ads" 113 0 0# 
   : int
 
 function object__alignment #"polyorb_hi-utils.ads" 113 0 0# 
   (a : naming_entry) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a : naming_entry.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a : naming_entry.
   ((object__alignment a) >= 0))
 
 function polyorb_hi__utils__naming_entry__location__first__bit #"polyorb_hi-utils.ads" 113 0 0# 
   : int
 
 function polyorb_hi__utils__naming_entry__location__last__bit #"polyorb_hi-utils.ads" 113 0 0# 
   : int
 
 function polyorb_hi__utils__naming_entry__location__position #"polyorb_hi-utils.ads" 113 0 0# 
   : int
 
 axiom polyorb_hi__utils__naming_entry__location__first__bit_axiom :
  ((polyorb_hi__utils__naming_entry__location__first__bit ) >= 0)
 
 axiom polyorb_hi__utils__naming_entry__location__last__bit_axiom :
  ((polyorb_hi__utils__naming_entry__location__last__bit ) > (polyorb_hi__utils__naming_entry__location__first__bit ))
 
 axiom polyorb_hi__utils__naming_entry__location__position_axiom :
  ((polyorb_hi__utils__naming_entry__location__position ) >= 0)
 
 function polyorb_hi__utils__naming_entry__port__first__bit #"polyorb_hi-utils.ads" 114 0 0# 
   : int
 
 function polyorb_hi__utils__naming_entry__port__last__bit #"polyorb_hi-utils.ads" 114 0 0# 
   : int
 
 function polyorb_hi__utils__naming_entry__port__position #"polyorb_hi-utils.ads" 114 0 0# 
   : int
 
 axiom polyorb_hi__utils__naming_entry__port__first__bit_axiom :
  ((polyorb_hi__utils__naming_entry__port__first__bit ) >= 0)
 
 axiom polyorb_hi__utils__naming_entry__port__last__bit_axiom :
  ((polyorb_hi__utils__naming_entry__port__last__bit ) > (polyorb_hi__utils__naming_entry__port__first__bit ))
 
 axiom polyorb_hi__utils__naming_entry__port__position_axiom :
  ((polyorb_hi__utils__naming_entry__port__position ) >= 0)
 
 function polyorb_hi__utils__naming_entry__variable__first__bit #"polyorb_hi-utils.ads" 115 0 0# 
   : int
 
 function polyorb_hi__utils__naming_entry__variable__last__bit #"polyorb_hi-utils.ads" 115 0 0# 
   : int
 
 function polyorb_hi__utils__naming_entry__variable__position #"polyorb_hi-utils.ads" 115 0 0# 
   : int
 
 axiom polyorb_hi__utils__naming_entry__variable__first__bit_axiom :
  ((polyorb_hi__utils__naming_entry__variable__first__bit ) >= 0)
 
 axiom polyorb_hi__utils__naming_entry__variable__last__bit_axiom :
  ((polyorb_hi__utils__naming_entry__variable__last__bit ) > (polyorb_hi__utils__naming_entry__variable__first__bit ))
 
 axiom polyorb_hi__utils__naming_entry__variable__position_axiom :
  ((polyorb_hi__utils__naming_entry__variable__position ) >= 0)
 
 function dummy #"polyorb_hi-utils.ads" 116 0 0# 
   : naming_entry
 
 type naming_entry__ref #"polyorb_hi-utils.ads" 113 0 0# =
  { mutable naming_entry__content "model_trace:" : naming_entry }
 
 function naming_entry__ref___projection #"polyorb_hi-utils.ads" 113 0 0# 
   (a : naming_entry__ref) : naming_entry =
  a.naming_entry__content
 
 meta "model_projection" function naming_entry__ref___projection
 
 meta "inline : no" function naming_entry__ref___projection
 
 val naming_entry__havoc #"polyorb_hi-utils.ads" 113 0 0# 
   (x : naming_entry__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "Tnaming_table_typeB" defined at polyorb_hi-utils.ads:119, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Polyorb_hi__utils__naming_entry
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__utils__naming_entry

 function index_I1_one #"polyorb_hi-utils.ads" 113 0 0# 
   : int =
  1
 
 type component_type #"polyorb_hi-utils.ads" 113 0 0# =
  Polyorb_hi__utils__naming_entry.naming_entry
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type

end

(* Module for axiomatizing type "Tnaming_table_typeB" defined at polyorb_hi-utils.ads:119, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__Tnaming_table_typeB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__node_type
 use        Polyorb_hi__utils__naming_entry
 use        Array__Int__Polyorb_hi__utils__naming_entry

 type component_type #"polyorb_hi-utils.ads" 113 0 0# =
  Polyorb_hi__utils__naming_entry.naming_entry
 
 function index_1_id #"polyorb_hi-utils.ads" 113 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Polyorb_hi__utils__naming_entry.map, 
 function array_bool_eq = Array__Int__Polyorb_hi__utils__naming_entry.bool_eq, 
 type index_base_type = Polyorb_hi_generated__deployment__node_type.node_type, 
 type index_rep_type = int, 
 function to_rep = Polyorb_hi_generated__deployment__node_type.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Polyorb_hi_generated__deployment__node_type.in_range, 
 predicate index_dynamic_property = Polyorb_hi_generated__deployment__node_type.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tnaming_table_typeB #"polyorb_hi-utils.ads" 119 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tnaming_table_typeB__ref #"polyorb_hi-utils.ads" 119 0 0# =
  { mutable tnaming_table_typeB__content "model_trace:" : tnaming_table_typeB }
 
 function tnaming_table_typeB__ref___projection #"polyorb_hi-utils.ads" 119 0 0# 
   (a : tnaming_table_typeB__ref) : tnaming_table_typeB =
  a.tnaming_table_typeB__content
 
 meta "model_projection" function tnaming_table_typeB__ref___projection
 
 meta "inline : no" function tnaming_table_typeB__ref___projection
 
 val tnaming_table_typeB__havoc #"polyorb_hi-utils.ads" 119 0 0# 
   (x : tnaming_table_typeB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "naming_table_type" defined at polyorb_hi-utils.ads:119, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__naming_table_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__utils__naming_entry
 use        Array__Int__Polyorb_hi__utils__naming_entry

 type component_type #"polyorb_hi-utils.ads" 119 0 0# =
  Polyorb_hi__utils__naming_entry.naming_entry
 
 function first #"polyorb_hi-utils.ads" 113 0 0# 
   : int =
  0
 
 function last #"polyorb_hi-utils.ads" 113 0 0# 
   : int =
  1
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Polyorb_hi__utils__naming_entry.map, 
 function array_bool_eq = Array__Int__Polyorb_hi__utils__naming_entry.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T12s" defined at polyorb_hi-utils.ads:138, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_string__T12s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t12s #"polyorb_hi-utils.ads" 138 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t12s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t12s__ref #"polyorb_hi-utils.ads" 138 0 0# =
  { mutable t12s__content "model_trace:" : t12s }
 
 function t12s__ref___projection #"polyorb_hi-utils.ads" 138 0 0# 
   (a : t12s__ref) : t12s =
  a.t12s__content
 
 meta "model_projection" function t12s__ref___projection
 
 meta "inline : no" function t12s__ref___projection
 
 val t12s__havoc #"polyorb_hi-utils.ads" 138 0 0# 
   (x : t12s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T13s" defined at polyorb_hi-utils.ads:138, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_string__T13s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__utils__to_string__T12s

 type component_type #"polyorb_hi-utils.ads" 138 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__utils__to_string__T12s.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t13s #"polyorb_hi-utils.ads" 138 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t13s__ref #"polyorb_hi-utils.ads" 138 0 0# =
  { mutable t13s__content "model_trace:" : t13s }
 
 function t13s__ref___projection #"polyorb_hi-utils.ads" 138 0 0# 
   (a : t13s__ref) : t13s =
  a.t13s__content
 
 meta "model_projection" function t13s__ref___projection
 
 meta "inline : no" function t13s__ref___projection
 
 val t13s__havoc #"polyorb_hi-utils.ads" 138 0 0# 
   (x : t13s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TS1bP1" defined at polyorb_hi-utils.adb:38, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_hi_string__TS1bP1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type tS1bP1 #"polyorb_hi-utils.adb" 38 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = tS1bP1, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type tS1bP1__ref #"polyorb_hi-utils.adb" 38 0 0# =
  { mutable tS1bP1__content "model_trace:" : tS1bP1 }
 
 function tS1bP1__ref___projection #"polyorb_hi-utils.adb" 38 0 0# 
   (a : tS1bP1__ref) : tS1bP1 =
  a.tS1bP1__content
 
 meta "model_projection" function tS1bP1__ref___projection
 
 meta "inline : no" function tS1bP1__ref___projection
 
 val tS1bP1__havoc #"polyorb_hi-utils.adb" 38 0 0# 
   (x : tS1bP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "S1b" defined at polyorb_hi-utils.adb:38, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_hi_string__S1b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__utils__to_hi_string__TS1bP1

 type component_type #"polyorb_hi-utils.adb" 38 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__utils__to_hi_string__TS1bP1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type s1b #"polyorb_hi-utils.adb" 38 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type s1b__ref #"polyorb_hi-utils.adb" 38 0 0# =
  { mutable s1b__content "model_trace:" : s1b }
 
 function s1b__ref___projection #"polyorb_hi-utils.adb" 38 0 0# 
   (a : s1b__ref) : s1b =
  a.s1b__content
 
 meta "model_projection" function s1b__ref___projection
 
 meta "inline : no" function s1b__ref___projection
 
 val s1b__havoc #"polyorb_hi-utils.adb" 38 0 0# 
   (x : s1b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TTrSP1" defined at polyorb_hi-utils.adb:39, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_hi_string__TTrSP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tTrSP1 #"polyorb_hi-utils.adb" 39 0 0# 
 
 function first #"polyorb_hi-utils.adb" 39 0 0# 
   : int =
  1
 
 function last #"polyorb_hi-utils.adb" 39 0 0# 
   : int =
  80
 
 predicate in_range #"polyorb_hi-utils.adb" 39 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tTrSP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type tTrSP1__ref #"polyorb_hi-utils.adb" 39 0 0# =
  { mutable tTrSP1__content "model_trace:" : tTrSP1 }
 
 function tTrSP1__ref___projection #"polyorb_hi-utils.adb" 39 0 0# 
   (a : tTrSP1__ref) : tTrSP1 =
  a.tTrSP1__content
 
 meta "model_projection" function tTrSP1__ref___projection
 
 meta "inline : no" function tTrSP1__ref___projection
 
 val tTrSP1__havoc #"polyorb_hi-utils.adb" 39 0 0# 
   (x : tTrSP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "TrS" defined at polyorb_hi-utils.adb:39, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_hi_string__TrS
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi-utils.adb" 39 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  80
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T2b" defined at polyorb_hi-utils.adb:39, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_hi_string__T2b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t2b #"polyorb_hi-utils.adb" 39 0 0# 
 
 function first #"polyorb_hi-utils.adb" 39 0 0# 
   : int =
  1
 
 function last #"polyorb_hi-utils.adb" 39 0 0# 
   : int =
  80
 
 predicate in_range #"polyorb_hi-utils.adb" 39 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t2b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t2b__ref #"polyorb_hi-utils.adb" 39 0 0# =
  { mutable t2b__content "model_trace:" : t2b }
 
 function t2b__ref___projection #"polyorb_hi-utils.adb" 39 0 0# 
   (a : t2b__ref) : t2b =
  a.t2b__content
 
 meta "model_projection" function t2b__ref___projection
 
 meta "inline : no" function t2b__ref___projection
 
 val t2b__havoc #"polyorb_hi-utils.adb" 39 0 0# 
   (x : t2b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T3b" defined at polyorb_hi-utils.adb:39, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_hi_string__T3b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi-utils.adb" 39 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  80
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T5b" defined at polyorb_hi-utils.adb:46, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_hi_string__T5b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t5b #"polyorb_hi-utils.adb" 46 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t5b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t5b__ref #"polyorb_hi-utils.adb" 46 0 0# =
  { mutable t5b__content "model_trace:" : t5b }
 
 function t5b__ref___projection #"polyorb_hi-utils.adb" 46 0 0# 
   (a : t5b__ref) : t5b =
  a.t5b__content
 
 meta "model_projection" function t5b__ref___projection
 
 meta "inline : no" function t5b__ref___projection
 
 val t5b__havoc #"polyorb_hi-utils.adb" 46 0 0# 
   (x : t5b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T6b" defined at polyorb_hi-utils.adb:46, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_hi_string__T6b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__utils__to_hi_string__T5b

 type component_type #"polyorb_hi-utils.adb" 46 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__utils__to_hi_string__T5b.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t6b #"polyorb_hi-utils.adb" 46 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t6b__ref #"polyorb_hi-utils.adb" 46 0 0# =
  { mutable t6b__content "model_trace:" : t6b }
 
 function t6b__ref___projection #"polyorb_hi-utils.adb" 46 0 0# 
   (a : t6b__ref) : t6b =
  a.t6b__content
 
 meta "model_projection" function t6b__ref___projection
 
 meta "inline : no" function t6b__ref___projection
 
 val t6b__havoc #"polyorb_hi-utils.adb" 46 0 0# 
   (x : t6b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T7b" defined at polyorb_hi-utils.adb:46, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_hi_string__T7b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t7b #"polyorb_hi-utils.adb" 46 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t7b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t7b__ref #"polyorb_hi-utils.adb" 46 0 0# =
  { mutable t7b__content "model_trace:" : t7b }
 
 function t7b__ref___projection #"polyorb_hi-utils.adb" 46 0 0# 
   (a : t7b__ref) : t7b =
  a.t7b__content
 
 meta "model_projection" function t7b__ref___projection
 
 meta "inline : no" function t7b__ref___projection
 
 val t7b__havoc #"polyorb_hi-utils.adb" 46 0 0# 
   (x : t7b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T8b" defined at polyorb_hi-utils.adb:46, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_hi_string__T8b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__utils__to_hi_string__T7b

 type component_type #"polyorb_hi-utils.adb" 46 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__utils__to_hi_string__T7b.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t8b #"polyorb_hi-utils.adb" 46 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t8b__ref #"polyorb_hi-utils.adb" 46 0 0# =
  { mutable t8b__content "model_trace:" : t8b }
 
 function t8b__ref___projection #"polyorb_hi-utils.adb" 46 0 0# 
   (a : t8b__ref) : t8b =
  a.t8b__content
 
 meta "model_projection" function t8b__ref___projection
 
 meta "inline : no" function t8b__ref___projection
 
 val t8b__havoc #"polyorb_hi-utils.adb" 46 0 0# 
   (x : t8b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T10b" defined at polyorb_hi-utils.adb:52, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_hi_string__T10b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t10b #"polyorb_hi-utils.adb" 52 0 0# 
 
 function first #"polyorb_hi-utils.adb" 52 0 0# 
   : int =
  1
 
 function last #"polyorb_hi-utils.adb" 52 0 0# 
   : int =
  80
 
 predicate in_range #"polyorb_hi-utils.adb" 52 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t10b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type t10b__ref #"polyorb_hi-utils.adb" 52 0 0# =
  { mutable t10b__content "model_trace:" : t10b }
 
 function t10b__ref___projection #"polyorb_hi-utils.adb" 52 0 0# 
   (a : t10b__ref) : t10b =
  a.t10b__content
 
 meta "model_projection" function t10b__ref___projection
 
 meta "inline : no" function t10b__ref___projection
 
 val t10b__havoc #"polyorb_hi-utils.adb" 52 0 0# 
   (x : t10b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T11b" defined at polyorb_hi-utils.adb:52, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_hi_string__T11b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"polyorb_hi-utils.adb" 52 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  80
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T12b" defined at polyorb_hi-utils.adb:52, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_hi_string__T12b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t12b #"polyorb_hi-utils.adb" 52 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t12b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t12b__ref #"polyorb_hi-utils.adb" 52 0 0# =
  { mutable t12b__content "model_trace:" : t12b }
 
 function t12b__ref___projection #"polyorb_hi-utils.adb" 52 0 0# 
   (a : t12b__ref) : t12b =
  a.t12b__content
 
 meta "model_projection" function t12b__ref___projection
 
 meta "inline : no" function t12b__ref___projection
 
 val t12b__havoc #"polyorb_hi-utils.adb" 52 0 0# 
   (x : t12b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T13b" defined at polyorb_hi-utils.adb:52, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__to_hi_string__T13b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__utils__to_hi_string__T12b

 type component_type #"polyorb_hi-utils.adb" 52 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__utils__to_hi_string__T12b.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t13b #"polyorb_hi-utils.adb" 52 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t13b__ref #"polyorb_hi-utils.adb" 52 0 0# =
  { mutable t13b__content "model_trace:" : t13b }
 
 function t13b__ref___projection #"polyorb_hi-utils.adb" 52 0 0# 
   (a : t13b__ref) : t13b =
  a.t13b__content
 
 meta "model_projection" function t13b__ref___projection
 
 meta "inline : no" function t13b__ref___projection
 
 val t13b__havoc #"polyorb_hi-utils.adb" 52 0 0# 
   (x : t13b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "source" defined at a-unccon.ads:17 instantiated at polyorb_hi-utils.adb:91, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__source
 use import "_gnatprove_standard".Main
 use import "int".Int

 type source #"a-unccon.ads" 17 0 0# 
 
 function first #"a-unccon.ads" 17 0 0# 
   : int =
  0
 
 function last #"a-unccon.ads" 17 0 0# 
   : int =
  3
 
 predicate in_range #"a-unccon.ads" 17 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = source, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type source__ref #"a-unccon.ads" 17 0 0# =
  { mutable source__content "model_trace:" : source }
 
 function source__ref_5__projection #"a-unccon.ads" 17 0 0# 
   (a : source__ref) : source =
  a.source__content
 
 meta "model_projection" function source__ref_5__projection
 
 meta "inline : no" function source__ref_5__projection
 
 val source__havoc #"a-unccon.ads" 17 0 0# 
   (x : source__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "target" defined at a-unccon.ads:18 instantiated at polyorb_hi-utils.adb:91, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__target
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV16

 type target #"a-unccon.ads" 18 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-unccon.ads" 18 0 0# 
   : BV16.t
 
 function first #"a-unccon.ads" 18 0 0# 
   : BV16.t =
  ( BV16.of_int 0 )
 
 function last #"a-unccon.ads" 18 0 0# 
   : BV16.t =
  ( BV16.of_int 65535 )
 
 function first_int #"a-unccon.ads" 18 0 0# 
   : int =
  0
 
 function last_int #"a-unccon.ads" 18 0 0# 
   : int =
  65535
 
 predicate in_range #"a-unccon.ads" 18 0 0# 
   (x : BV16.t)  =
  true
 
 predicate in_range_int #"a-unccon.ads" 18 0 0# 
   (x : int)  =
  BV16.uint_in_range x
 
 clone export "ada__model".Static_Modular_16 with
 type t = target, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type target__ref #"a-unccon.ads" 18 0 0# =
  { mutable target__content "model_trace:" : target }
 
 function target__ref_5__projection #"a-unccon.ads" 18 0 0# 
   (a : target__ref) : target =
  a.target__content
 
 meta "model_projection" function target__ref_5__projection
 
 meta "inline : no" function target__ref_5__projection
 
 val target__havoc #"a-unccon.ads" 18 0 0# 
   (x : target__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at a-unccon.ads:20 instantiated at polyorb_hi-utils.adb:91, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code__s
 use import "_gnatprove_standard".Main

 function s #"a-unccon.ads" 20 0 0# "model" "model_trace:7743" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-unccon.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-unccon.ads:20 instantiated at polyorb_hi-utils.adb:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_internal_code" defined at polyorb_hi-utils.adb:91, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function to_internal_code #"polyorb_hi-utils.adb" 91 0 0# 
   (s : int) : BV16.t

end

(* Module for axiomatizing type "source" defined at a-unccon.ads:17 instantiated at polyorb_hi-utils.adb:102, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__source
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV16

 type source #"a-unccon.ads" 17 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-unccon.ads" 17 0 0# 
   : BV16.t
 
 function first #"a-unccon.ads" 17 0 0# 
   : BV16.t =
  ( BV16.of_int 0 )
 
 function last #"a-unccon.ads" 17 0 0# 
   : BV16.t =
  ( BV16.of_int 65535 )
 
 function first_int #"a-unccon.ads" 17 0 0# 
   : int =
  0
 
 function last_int #"a-unccon.ads" 17 0 0# 
   : int =
  65535
 
 predicate in_range #"a-unccon.ads" 17 0 0# 
   (x : BV16.t)  =
  true
 
 predicate in_range_int #"a-unccon.ads" 17 0 0# 
   (x : int)  =
  BV16.uint_in_range x
 
 clone export "ada__model".Static_Modular_16 with
 type t = source, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type source__ref #"a-unccon.ads" 17 0 0# =
  { mutable source__content "model_trace:" : source }
 
 function source__ref_6__projection #"a-unccon.ads" 17 0 0# 
   (a : source__ref) : source =
  a.source__content
 
 meta "model_projection" function source__ref_6__projection
 
 meta "inline : no" function source__ref_6__projection
 
 val source__havoc #"a-unccon.ads" 17 0 0# 
   (x : source__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "target" defined at a-unccon.ads:18 instantiated at polyorb_hi-utils.adb:102, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__target
 use import "_gnatprove_standard".Main
 use import "int".Int

 type target #"a-unccon.ads" 18 0 0# 
 
 function first #"a-unccon.ads" 18 0 0# 
   : int =
  0
 
 function last #"a-unccon.ads" 18 0 0# 
   : int =
  3
 
 predicate in_range #"a-unccon.ads" 18 0 0# 
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = target, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 type target__ref #"a-unccon.ads" 18 0 0# =
  { mutable target__content "model_trace:" : target }
 
 function target__ref_6__projection #"a-unccon.ads" 18 0 0# 
   (a : target__ref) : target =
  a.target__content
 
 meta "model_projection" function target__ref_6__projection
 
 meta "inline : no" function target__ref_6__projection
 
 val target__havoc #"a-unccon.ads" 18 0 0# 
   (x : target__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at a-unccon.ads:20 instantiated at polyorb_hi-utils.adb:102, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port__s
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function s #"a-unccon.ads" 20 0 0# "model" "model_trace:7861" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"a-unccon.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-unccon.ads:20 instantiated at polyorb_hi-utils.adb:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_corresponding_port" defined at polyorb_hi-utils.adb:102, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function to_corresponding_port #"polyorb_hi-utils.adb" 102 0 0# 
   (s : BV16.t) : int

end

(* Module for axiomatizing type "TS19bP1" defined at polyorb_hi-utils.adb:112, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__parse_string__TS19bP1
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type tS19bP1 #"polyorb_hi-utils.adb" 112 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = tS19bP1, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type tS19bP1__ref #"polyorb_hi-utils.adb" 112 0 0# =
  { mutable tS19bP1__content "model_trace:" : tS19bP1 }
 
 function tS19bP1__ref___projection #"polyorb_hi-utils.adb" 112 0 0# 
   (a : tS19bP1__ref) : tS19bP1 =
  a.tS19bP1__content
 
 meta "model_projection" function tS19bP1__ref___projection
 
 meta "inline : no" function tS19bP1__ref___projection
 
 val tS19bP1__havoc #"polyorb_hi-utils.adb" 112 0 0# 
   (x : tS19bP1__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "S19b" defined at polyorb_hi-utils.adb:112, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__parse_string__S19b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Polyorb_hi__utils__parse_string__TS19bP1

 type component_type #"polyorb_hi-utils.adb" 112 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Polyorb_hi__utils__parse_string__TS19bP1.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type s19b #"polyorb_hi-utils.adb" 112 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type s19b__ref #"polyorb_hi-utils.adb" 112 0 0# =
  { mutable s19b__content "model_trace:" : s19b }
 
 function s19b__ref___projection #"polyorb_hi-utils.adb" 112 0 0# 
   (a : s19b__ref) : s19b =
  a.s19b__content
 
 meta "model_projection" function s19b__ref___projection
 
 meta "inline : no" function s19b__ref___projection
 
 val s19b__havoc #"polyorb_hi-utils.adb" 112 0 0# 
   (x : s19b__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T20b" defined at polyorb_hi-utils.adb:117, created in Gnat2Why.Types.Translate_Type *)
module Polyorb_hi__utils__parse_string__L_1__T20b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 type t20b #"polyorb_hi-utils.adb" 117 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t20b, 
 type rep_type = int, 
 function base_to_rep = Standard__integer.to_rep, 
 function base_of_rep = Standard__integer.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t20b__ref #"polyorb_hi-utils.adb" 117 0 0# =
  { mutable t20b__content "model_trace:" : t20b }
 
 function t20b__ref___projection #"polyorb_hi-utils.adb" 117 0 0# 
   (a : t20b__ref) : t20b =
  a.t20b__content
 
 meta "model_projection" function t20b__ref___projection
 
 meta "inline : no" function t20b__ref___projection
 
 val t20b__havoc #"polyorb_hi-utils.adb" 117 0 0# 
   (x : t20b__ref) : unit
  writes {x}

end
(* Module for defining a ref holding the value of variable "r" defined at polyorb_hi-utils.adb:39, created in Gnat2Why.Decls.Translate_Variable *)
module Polyorb_hi__utils__to_hi_string__r
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 val r #"polyorb_hi-utils.adb" 39 0 0# "model_projected" "model_trace:2401"  : Array__Int__Standard__character.map__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-utils.adb" 39 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at polyorb_hi-utils.adb:39, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__to_hi_string__r___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at polyorb_hi-utils.adb:115, created in Gnat2Why.Decls.Translate_Variable *)
module Polyorb_hi__utils__parse_string__last
 use import "_gnatprove_standard".Main

 val last #"polyorb_hi-utils.adb" 115 0 0# "model_projected" "model_trace:2681"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "last" defined at polyorb_hi-utils.adb:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__parse_string__last___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "j" defined at polyorb_hi-utils.adb:117, created in Gnat2Why.Decls.Translate_Variable *)
module Polyorb_hi__utils__parse_string__L_1__j
 use import "_gnatprove_standard".Main

 val j #"polyorb_hi-utils.adb" 117 0 0# "model_projected" "model_trace:2696"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"polyorb_hi-utils.adb" 117 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "j" defined at polyorb_hi-utils.adb:117, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__parse_string__L_1__j___axiom
 use import "_gnatprove_standard".Main


end
(* Module giving axioms for type "short_short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_short_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_short_integer

 predicate dynamic_invariant #"polyorb_hi-utils.adb" 117 0 0# "inline" 
   (temp___expr_3 : int) (temp___is_init_0 : bool) (temp___do_constant_1 : bool) (temp___do_toplevel_2 : bool)  =
  (if (( temp___is_init_0 \/ (Standard__short_short_integer.first <= Standard__short_short_integer.last) )) then (
   (Standard__short_short_integer.dynamic_property Standard__short_short_integer.first Standard__short_short_integer.last temp___expr_3)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___4 : int) (temp___5 : bool)  =
  true

end

(* Module giving axioms for type "short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_9 : int) (temp___is_init_6 : bool) (temp___do_constant_7 : bool) (temp___do_toplevel_8 : bool)  =
  (if (( temp___is_init_6 \/ (Standard__short_integer.first <= Standard__short_integer.last) )) then (
   (Standard__short_integer.dynamic_property Standard__short_integer.first Standard__short_integer.last temp___expr_9)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___10 : int) (temp___11 : bool)  =
  true

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_15 : int) (temp___is_init_12 : bool) (temp___do_constant_13 : bool) (temp___do_toplevel_14 : bool)  =
  (if (( temp___is_init_12 \/ (Standard__integer.first <= Standard__integer.last) )) then (
   (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last temp___expr_15)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___16 : int) (temp___17 : bool)  =
  true

end

(* Module giving axioms for type "long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_21 : int) (temp___is_init_18 : bool) (temp___do_constant_19 : bool) (temp___do_toplevel_20 : bool)  =
  (if (( temp___is_init_18 \/ (Standard__long_integer.first <= Standard__long_integer.last) )) then (
   (Standard__long_integer.dynamic_property Standard__long_integer.first Standard__long_integer.last temp___expr_21)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___22 : int) (temp___23 : bool)  =
  true

end

(* Module giving axioms for type "long_long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_long_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_27 : int) (temp___is_init_24 : bool) (temp___do_constant_25 : bool) (temp___do_toplevel_26 : bool)  =
  (if (( temp___is_init_24 \/ (Standard__long_long_integer.first <= Standard__long_long_integer.last) )) then (
   (Standard__long_long_integer.dynamic_property Standard__long_long_integer.first Standard__long_long_integer.last temp___expr_27)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___28 : int) (temp___29 : bool)  =
  true

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_33 : int) (temp___is_init_30 : bool) (temp___do_constant_31 : bool) (temp___do_toplevel_32 : bool)  =
  (if (( temp___is_init_30 \/ (Standard__natural.first <= Standard__natural.last) )) then (
   (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last temp___expr_33)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___34 : int) (temp___35 : bool)  =
  true

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_39 : int) (temp___is_init_36 : bool) (temp___do_constant_37 : bool) (temp___do_toplevel_38 : bool)  =
  (if (( temp___is_init_36 \/ (Standard__positive.first <= Standard__positive.last) )) then (
   (Standard__positive.dynamic_property Standard__positive.first Standard__positive.last temp___expr_39)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___40 : int) (temp___41 : bool)  =
  true

end

(* Module giving axioms for type "short_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_float___axiom
 use import "_gnatprove_standard".Main
 use        Standard__short_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_45 : Standard__short_float.short_float) (temp___is_init_42 : bool) (temp___do_constant_43 : bool) (temp___do_toplevel_44 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___46 : Standard__short_float.short_float) (temp___47 : bool)  =
  true

end

(* Module giving axioms for type "float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__float___axiom
 use import "_gnatprove_standard".Main
 use        Standard__float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_51 : Standard__float.float) (temp___is_init_48 : bool) (temp___do_constant_49 : bool) (temp___do_toplevel_50 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___52 : Standard__float.float) (temp___53 : bool)  =
  true

end

(* Module giving axioms for type "long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_float___axiom
 use import "_gnatprove_standard".Main
 use        Standard__long_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_57 : Standard__long_float.long_float) (temp___is_init_54 : bool) (temp___do_constant_55 : bool) (temp___do_toplevel_56 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___58 : Standard__long_float.long_float) (temp___59 : bool)  =
  true

end

(* Module giving axioms for type "long_long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_float___axiom
 use import "_gnatprove_standard".Main
 use        Standard__long_long_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_63 : Standard__long_long_float.long_long_float) (temp___is_init_60 : bool) (temp___do_constant_61 : bool) (temp___do_toplevel_62 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___64 : Standard__long_long_float.long_long_float) (temp___65 : bool)  =
  true

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_69 : int) (temp___is_init_66 : bool) (temp___do_constant_67 : bool) (temp___do_toplevel_68 : bool)  =
  (if (( temp___is_init_66 \/ (Standard__character.first <= Standard__character.last) )) then (
   (Standard__character.dynamic_property Standard__character.first Standard__character.last temp___expr_69)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___70 : int) (temp___71 : bool)  =
  true

end

(* Module giving axioms for type "wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_75 : int) (temp___is_init_72 : bool) (temp___do_constant_73 : bool) (temp___do_toplevel_74 : bool)  =
  (if (( temp___is_init_72 \/ (Standard__wide_character.first <= Standard__wide_character.last) )) then (
   (Standard__wide_character.dynamic_property Standard__wide_character.first Standard__wide_character.last temp___expr_75)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___76 : int) (temp___77 : bool)  =
  true

end

(* Module giving axioms for type "wide_wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_81 : int) (temp___is_init_78 : bool) (temp___do_constant_79 : bool) (temp___do_toplevel_80 : bool)  =
  (if (( temp___is_init_78 \/ (Standard__wide_wide_character.first <= Standard__wide_wide_character.last) )) then (
   (Standard__wide_wide_character.dynamic_property Standard__wide_wide_character.first Standard__wide_wide_character.last temp___expr_81)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___82 : int) (temp___83 : bool)  =
  true

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_87 : Standard__string.string) (temp___is_init_84 : bool) (temp___do_constant_85 : bool) (temp___do_toplevel_86 : bool)  =
  (if (temp___do_constant_85) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first temp___expr_87) (Standard__string.last temp___expr_87))))

end

(* Module giving axioms for type "wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_string

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_92 : Standard__wide_string.wide_string) (temp___is_init_89 : bool) (temp___do_constant_90 : bool) (temp___do_toplevel_91 : bool)  =
  (if (temp___do_constant_90) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_string.first temp___expr_92) (Standard__wide_string.last temp___expr_92))))

end

(* Module giving axioms for type "wide_wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_wide_string

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_97 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_94 : bool) (temp___do_constant_95 : bool) (temp___do_toplevel_96 : bool)  =
  (if (temp___do_constant_95) then (
   true) else (
   (Standard__wide_wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_wide_string.first temp___expr_97) (Standard__wide_wide_string.last temp___expr_97))))

end

(* Module giving axioms for type "duration", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__duration___axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_102 : Standard__duration.duration) (temp___is_init_99 : bool) (temp___do_constant_100 : bool) (temp___do_toplevel_101 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___103 : Standard__duration.duration) (temp___104 : bool)  =
  true

end

(* Module giving axioms for type "integer_8", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_8___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_8

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_108 : int) (temp___is_init_105 : bool) (temp___do_constant_106 : bool) (temp___do_toplevel_107 : bool)  =
  (if (( temp___is_init_105 \/ (Standard__integer_8.first <= Standard__integer_8.last) )) then (
   (Standard__integer_8.dynamic_property Standard__integer_8.first Standard__integer_8.last temp___expr_108)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___109 : int) (temp___110 : bool)  =
  true

end

(* Module giving axioms for type "integer_16", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_16___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_16

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_114 : int) (temp___is_init_111 : bool) (temp___do_constant_112 : bool) (temp___do_toplevel_113 : bool)  =
  (if (( temp___is_init_111 \/ (Standard__integer_16.first <= Standard__integer_16.last) )) then (
   (Standard__integer_16.dynamic_property Standard__integer_16.first Standard__integer_16.last temp___expr_114)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___115 : int) (temp___116 : bool)  =
  true

end

(* Module giving axioms for type "integer_32", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_32___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_32

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_120 : int) (temp___is_init_117 : bool) (temp___do_constant_118 : bool) (temp___do_toplevel_119 : bool)  =
  (if (( temp___is_init_117 \/ (Standard__integer_32.first <= Standard__integer_32.last) )) then (
   (Standard__integer_32.dynamic_property Standard__integer_32.first Standard__integer_32.last temp___expr_120)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___121 : int) (temp___122 : bool)  =
  true

end

(* Module giving axioms for type "integer_64", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_64___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_64

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_126 : int) (temp___is_init_123 : bool) (temp___do_constant_124 : bool) (temp___do_toplevel_125 : bool)  =
  (if (( temp___is_init_123 \/ (Standard__integer_64.first <= Standard__integer_64.last) )) then (
   (Standard__integer_64.dynamic_property Standard__integer_64.first Standard__integer_64.last temp___expr_126)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___127 : int) (temp___128 : bool)  =
  true

end

(* Module giving axioms for type "universal_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__universal_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_132 : int) (temp___is_init_129 : bool) (temp___do_constant_130 : bool) (temp___do_toplevel_131 : bool)  =
  (if (( temp___is_init_129 \/ (Standard__universal_integer.first <= Standard__universal_integer.last) )) then (
   (Standard__universal_integer.dynamic_property Standard__universal_integer.first Standard__universal_integer.last temp___expr_132)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___133 : int) (temp___134 : bool)  =
  true

end

(* Module giving axioms for type "universal_real", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_real___axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_138 : Standard__universal_real.universal_real) (temp___is_init_135 : bool) (temp___do_constant_136 : bool) (temp___do_toplevel_137 : bool)  =
  true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___139 : Standard__universal_real.universal_real) (temp___140 : bool)  =
  true

end

(* Module for defining the constant "min_int" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant *)
module System__min_int
 use import "_gnatprove_standard".Main

 function min_int #"system.ads" 51 0 0# "model" "model_trace:4221" 
   : int

end

(* Module for defining the constant "max_int" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_int
 use import "_gnatprove_standard".Main

 function max_int #"system.ads" 52 0 0# "model" "model_trace:4232" 
   : int

end

(* Module for defining the constant "max_binary_modulus" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_binary_modulus
 use import "_gnatprove_standard".Main

 function max_binary_modulus #"system.ads" 54 0 0# "model" "model_trace:4243" 
   : int

end

(* Module for defining the constant "max_nonbinary_modulus" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_nonbinary_modulus
 use import "_gnatprove_standard".Main

 function max_nonbinary_modulus #"system.ads" 55 0 0# "model" "model_trace:4256" 
   : int

end

(* Module for defining the constant "max_base_digits" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_base_digits
 use import "_gnatprove_standard".Main

 function max_base_digits #"system.ads" 57 0 0# "model" "model_trace:4271" 
   : int

end

(* Module for defining the constant "max_digits" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_digits
 use import "_gnatprove_standard".Main

 function max_digits #"system.ads" 58 0 0# "model" "model_trace:4281" 
   : int

end

(* Module for defining the constant "max_mantissa" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_mantissa
 use import "_gnatprove_standard".Main

 function max_mantissa #"system.ads" 60 0 0# "model" "model_trace:4291" 
   : int

end

(* Module for defining the constant "fine_delta" defined at system.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module System__fine_delta
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function fine_delta #"system.ads" 61 0 0# 
   : Standard__universal_real.universal_real

end

(* Module for defining the constant "tick" defined at system.ads:63, created in Gnat2Why.Decls.Translate_Constant *)
module System__tick
 use import "_gnatprove_standard".Main
 use        Standard__universal_real

 function tick #"system.ads" 63 0 0# 
   : Standard__universal_real.universal_real

end

(* Module for defining the constant "storage_unit" defined at system.ads:71, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_unit
 use import "_gnatprove_standard".Main

 function storage_unit #"system.ads" 71 0 0# "model" "model_trace:4342" 
   : int

end

(* Module for defining the constant "word_size" defined at system.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module System__word_size
 use import "_gnatprove_standard".Main

 function word_size #"system.ads" 72 0 0# "model" "model_trace:4351" 
   : int

end

(* Module for defining the constant "memory_size" defined at system.ads:73, created in Gnat2Why.Decls.Translate_Constant *)
module System__memory_size
 use import "_gnatprove_standard".Main

 function memory_size #"system.ads" 73 0 0# "model" "model_trace:4360" 
   : int

end

(* Module for defining the value of the aggregate at polyorb_hi_generated-deployment.ads:55, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Polyorb_hi_generated__deployment__node_image__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function polyorb_hi_generated__deployment__node_image__aggregate_def #"polyorb_hi_generated-deployment.ads" 55 0 0# 
   (temp___142 : Array__Int__Standard__character.map) (temp___143 : Array__Int__Standard__character.map) : Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component.map
 
 axiom def_axiom :
  (forall temp___142 temp___143 : Array__Int__Standard__character.map.
   (let temp___141 = (polyorb_hi_generated__deployment__node_image__aggregate_def temp___142 temp___143) in (
    ( ((Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component.get temp___141 0) = temp___142) /\ ((Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component.get temp___141 1) = temp___143) )))
  )

end

(* Module for defining a value for string literal  defined at polyorb_hi_generated-deployment.ads:56, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___145
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___145 #"polyorb_hi_generated-deployment.ads" 56 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at polyorb_hi_generated-deployment.ads:58, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___146
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___146 #"polyorb_hi_generated-deployment.ads" 58 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining the value of the aggregate at polyorb_hi_generated-deployment.ads:98, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Polyorb_hi_generated__deployment__entity_table__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__node_type
 use        Array__Int__Polyorb_hi_generated__deployment__node_type
 use        Array__Int__Polyorb_hi_generated__deployment__node_type
 use        Array__Int__Polyorb_hi_generated__deployment__node_type

 function polyorb_hi_generated__deployment__entity_table__aggregate_def #"polyorb_hi_generated-deployment.ads" 98 0 0# 
   (temp___148 : int) (temp___149 : int) (temp___150 : int) (temp___151 : int) : Array__Int__Polyorb_hi_generated__deployment__node_type.map
 
 axiom def_axiom :
  (forall temp___148 temp___149 temp___150 temp___151 : int.
   (let temp___147 = (polyorb_hi_generated__deployment__entity_table__aggregate_def temp___148 temp___149 temp___150 temp___151) in (
    ( ( ( ((Array__Int__Polyorb_hi_generated__deployment__node_type.get temp___147 0) = (Polyorb_hi_generated__deployment__node_type.of_rep temp___148)) /\ ((Array__Int__Polyorb_hi_generated__deployment__node_type.get temp___147 1) = (Polyorb_hi_generated__deployment__node_type.of_rep temp___149)) ) /\ ((Array__Int__Polyorb_hi_generated__deployment__node_type.get temp___147 2) = (Polyorb_hi_generated__deployment__node_type.of_rep temp___150)) ) /\ ((Array__Int__Polyorb_hi_generated__deployment__node_type.get temp___147 3) = (Polyorb_hi_generated__deployment__node_type.of_rep temp___151)) )))
  )

end

(* Module for defining the value of the aggregate at polyorb_hi_generated-deployment.ads:127, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Polyorb_hi_generated__deployment__entity_image__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function polyorb_hi_generated__deployment__entity_image__aggregate_def #"polyorb_hi_generated-deployment.ads" 127 0 0# 
   (temp___154 : Array__Int__Standard__character.map) (temp___155 : Array__Int__Standard__character.map) (temp___156 : Array__Int__Standard__character.map) (temp___157 : Array__Int__Standard__character.map) : Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component.map
 
 axiom def_axiom :
  (forall temp___154 temp___155 temp___156 temp___157 : Array__Int__Standard__character.map.
   (let temp___153 = (polyorb_hi_generated__deployment__entity_image__aggregate_def temp___154 temp___155 temp___156 temp___157) in (
    ( ( ( ((Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component.get temp___153 0) = temp___154) /\ ((Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component.get temp___153 1) = temp___155) ) /\ ((Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component.get temp___153 2) = temp___156) ) /\ ((Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component.get temp___153 3) = temp___157) )))
  )

end

(* Module for defining a value for string literal  defined at polyorb_hi_generated-deployment.ads:128, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___159
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___159 #"polyorb_hi_generated-deployment.ads" 128 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at polyorb_hi_generated-deployment.ads:130, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___160
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___160 #"polyorb_hi_generated-deployment.ads" 130 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at polyorb_hi_generated-deployment.ads:132, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___161
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___161 #"polyorb_hi_generated-deployment.ads" 132 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at polyorb_hi_generated-deployment.ads:134, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___162
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___162 #"polyorb_hi_generated-deployment.ads" 134 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining the value of the aggregate at polyorb_hi_generated-deployment.ads:173, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Polyorb_hi_generated__deployment__port_table__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__entity_type
 use        Array__Int__Polyorb_hi_generated__deployment__entity_type
 use        Array__Int__Polyorb_hi_generated__deployment__entity_type
 use        Array__Int__Polyorb_hi_generated__deployment__entity_type

 function polyorb_hi_generated__deployment__port_table__aggregate_def #"polyorb_hi_generated-deployment.ads" 173 0 0# 
   (temp___164 : int) (temp___165 : int) (temp___166 : int) (temp___167 : int) : Array__Int__Polyorb_hi_generated__deployment__entity_type.map
 
 axiom def_axiom :
  (forall temp___164 temp___165 temp___166 temp___167 : int.
   (let temp___163 = (polyorb_hi_generated__deployment__port_table__aggregate_def temp___164 temp___165 temp___166 temp___167) in (
    ( ( ( ((Array__Int__Polyorb_hi_generated__deployment__entity_type.get temp___163 0) = (Polyorb_hi_generated__deployment__entity_type.of_rep temp___164)) /\ ((Array__Int__Polyorb_hi_generated__deployment__entity_type.get temp___163 1) = (Polyorb_hi_generated__deployment__entity_type.of_rep temp___165)) ) /\ ((Array__Int__Polyorb_hi_generated__deployment__entity_type.get temp___163 2) = (Polyorb_hi_generated__deployment__entity_type.of_rep temp___166)) ) /\ ((Array__Int__Polyorb_hi_generated__deployment__entity_type.get temp___163 3) = (Polyorb_hi_generated__deployment__entity_type.of_rep temp___167)) )))
  )

end

(* Module for defining the value of the aggregate at polyorb_hi_generated-deployment.ads:199, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Polyorb_hi_generated__deployment__port_image__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int__Polyorb_hi_generated__deployment__port_sized_string
 use        Array__Int__Polyorb_hi_generated__deployment__port_sized_string
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Polyorb_hi_generated__deployment__port_sized_string
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function polyorb_hi_generated__deployment__port_image__aggregate_def #"polyorb_hi_generated-deployment.ads" 199 0 0# 
   (temp___170 : Array__Int__Standard__character.map) (temp___171 : Array__Int__Standard__character.map) (temp___172 : Array__Int__Standard__character.map) (temp___173 : Array__Int__Standard__character.map) : Array__Int__Polyorb_hi_generated__deployment__port_sized_string.map
 
 axiom def_axiom :
  (forall temp___170 temp___171 temp___172 temp___173 : Array__Int__Standard__character.map.
   (let temp___169 = (polyorb_hi_generated__deployment__port_image__aggregate_def temp___170 temp___171 temp___172 temp___173) in (
    ( ( ( ((Array__Int__Polyorb_hi_generated__deployment__port_sized_string.get temp___169 0) = temp___170) /\ ((Array__Int__Polyorb_hi_generated__deployment__port_sized_string.get temp___169 1) = temp___171) ) /\ ((Array__Int__Polyorb_hi_generated__deployment__port_sized_string.get temp___169 2) = temp___172) ) /\ ((Array__Int__Polyorb_hi_generated__deployment__port_sized_string.get temp___169 3) = temp___173) )))
  )

end

(* Module for defining a value for string literal  defined at polyorb_hi_generated-deployment.ads:200, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___175
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___175 #"polyorb_hi_generated-deployment.ads" 200 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at polyorb_hi_generated-deployment.ads:202, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___176
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___176 #"polyorb_hi_generated-deployment.ads" 202 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at polyorb_hi_generated-deployment.ads:204, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___177
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___177 #"polyorb_hi_generated-deployment.ads" 204 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining a value for string literal  defined at polyorb_hi_generated-deployment.ads:206, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___178
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___178 #"polyorb_hi_generated-deployment.ads" 206 0 0# 
   : Array__Int__Standard__character.map

end

(* Module for defining the constant "hi_string_size" defined at polyorb_hi-utils.ads:84, created in Gnat2Why.Decls.Translate_Constant *)
module Polyorb_hi__utils__hi_string_size
 use import "_gnatprove_standard".Main

 function hi_string_size #"polyorb_hi-utils.ads" 84 0 0# "model" "model_trace:2901" 
   : int

end

(* Module for defining the loop exit exception for the loop "L_1" defined at polyorb_hi-utils.adb:117, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Polyorb_hi__utils__parse_string__L_1
 use import "_gnatprove_standard".Main

 exception L_1

end

(* Module giving an empty axiom for the entity "L_1" defined at polyorb_hi-utils.adb:117, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Polyorb_hi__utils__parse_string__L_1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Tinteger_8B" defined at interfac.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_8B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_8" defined at interfac.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_8___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_8

 predicate dynamic_invariant #"polyorb_hi-utils.adb" 117 0 0# "inline" 
   (temp___expr_182 : int) (temp___is_init_179 : bool) (temp___do_constant_180 : bool) (temp___do_toplevel_181 : bool)  =
  (if (( temp___is_init_179 \/ (Interfaces__integer_8.first <= Interfaces__integer_8.last) )) then (
   (Interfaces__integer_8.dynamic_property Interfaces__integer_8.first Interfaces__integer_8.last temp___expr_182)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 46 0 0# "inline" 
   (temp___183 : int) (temp___184 : bool)  =
  true

end

(* Module giving axioms for type "Tinteger_16B" defined at interfac.ads:49, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_16B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_16" defined at interfac.ads:49, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_16___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_16

 predicate dynamic_invariant #"interfac.ads" 46 0 0# "inline" 
   (temp___expr_188 : int) (temp___is_init_185 : bool) (temp___do_constant_186 : bool) (temp___do_toplevel_187 : bool)  =
  (if (( temp___is_init_185 \/ (Interfaces__integer_16.first <= Interfaces__integer_16.last) )) then (
   (Interfaces__integer_16.dynamic_property Interfaces__integer_16.first Interfaces__integer_16.last temp___expr_188)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 49 0 0# "inline" 
   (temp___189 : int) (temp___190 : bool)  =
  true

end

(* Module giving axioms for type "Tinteger_32B" defined at interfac.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_32B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_32" defined at interfac.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_32___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_32

 predicate dynamic_invariant #"interfac.ads" 49 0 0# "inline" 
   (temp___expr_194 : int) (temp___is_init_191 : bool) (temp___do_constant_192 : bool) (temp___do_toplevel_193 : bool)  =
  (if (( temp___is_init_191 \/ (Interfaces__integer_32.first <= Interfaces__integer_32.last) )) then (
   (Interfaces__integer_32.dynamic_property Interfaces__integer_32.first Interfaces__integer_32.last temp___expr_194)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 52 0 0# "inline" 
   (temp___195 : int) (temp___196 : bool)  =
  true

end

(* Module giving axioms for type "Tinteger_64B" defined at interfac.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_64B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_64" defined at interfac.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_64___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_64

 predicate dynamic_invariant #"interfac.ads" 52 0 0# "inline" 
   (temp___expr_200 : int) (temp___is_init_197 : bool) (temp___do_constant_198 : bool) (temp___do_toplevel_199 : bool)  =
  (if (( temp___is_init_197 \/ (Interfaces__integer_64.first <= Interfaces__integer_64.last) )) then (
   (Interfaces__integer_64.dynamic_property Interfaces__integer_64.first Interfaces__integer_64.last temp___expr_200)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 55 0 0# "inline" 
   (temp___201 : int) (temp___202 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_8" defined at interfac.ads:63, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_8___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Interfaces__unsigned_8

 predicate dynamic_invariant #"interfac.ads" 55 0 0# "inline" 
   (temp___expr_206 : BV8.t) (temp___is_init_203 : bool) (temp___do_constant_204 : bool) (temp___do_toplevel_205 : bool)  =
  (if (( temp___is_init_203 \/ (BV8.ule Interfaces__unsigned_8.first Interfaces__unsigned_8.last) )) then (
   (Interfaces__unsigned_8.dynamic_property Interfaces__unsigned_8.first Interfaces__unsigned_8.last temp___expr_206)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 63 0 0# "inline" 
   (temp___207 : BV8.t) (temp___208 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_16" defined at interfac.ads:66, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_16___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Interfaces__unsigned_16

 predicate dynamic_invariant #"interfac.ads" 63 0 0# "inline" 
   (temp___expr_212 : BV16.t) (temp___is_init_209 : bool) (temp___do_constant_210 : bool) (temp___do_toplevel_211 : bool)  =
  (if (( temp___is_init_209 \/ (BV16.ule Interfaces__unsigned_16.first Interfaces__unsigned_16.last) )) then (
   (Interfaces__unsigned_16.dynamic_property Interfaces__unsigned_16.first Interfaces__unsigned_16.last temp___expr_212)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 66 0 0# "inline" 
   (temp___213 : BV16.t) (temp___214 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_24" defined at interfac.ads:69, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_24___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__unsigned_24

 predicate dynamic_invariant #"interfac.ads" 66 0 0# "inline" 
   (temp___expr_218 : BV32.t) (temp___is_init_215 : bool) (temp___do_constant_216 : bool) (temp___do_toplevel_217 : bool)  =
  (if (( temp___is_init_215 \/ (BV32.ule Interfaces__unsigned_24.first Interfaces__unsigned_24.last) )) then (
   (Interfaces__unsigned_24.dynamic_property Interfaces__unsigned_24.first Interfaces__unsigned_24.last temp___expr_218)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 69 0 0# "inline" 
   (temp___219 : BV32.t) (temp___220 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_32" defined at interfac.ads:74, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_32___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__unsigned_32

 predicate dynamic_invariant #"interfac.ads" 69 0 0# "inline" 
   (temp___expr_224 : BV32.t) (temp___is_init_221 : bool) (temp___do_constant_222 : bool) (temp___do_toplevel_223 : bool)  =
  (if (( temp___is_init_221 \/ (BV32.ule Interfaces__unsigned_32.first Interfaces__unsigned_32.last) )) then (
   (Interfaces__unsigned_32.dynamic_property Interfaces__unsigned_32.first Interfaces__unsigned_32.last temp___expr_224)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 74 0 0# "inline" 
   (temp___225 : BV32.t) (temp___226 : bool)  =
  true

end

(* Module giving axioms for type "unsigned_64" defined at interfac.ads:77, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_64___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__unsigned_64

 predicate dynamic_invariant #"interfac.ads" 74 0 0# "inline" 
   (temp___expr_230 : BV64.t) (temp___is_init_227 : bool) (temp___do_constant_228 : bool) (temp___do_toplevel_229 : bool)  =
  (if (( temp___is_init_227 \/ (BV64.ule Interfaces__unsigned_64.first Interfaces__unsigned_64.last) )) then (
   (Interfaces__unsigned_64.dynamic_property Interfaces__unsigned_64.first Interfaces__unsigned_64.last temp___expr_230)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 77 0 0# "inline" 
   (temp___231 : BV64.t) (temp___232 : bool)  =
  true

end

(* Module giving axioms for type "Tieee_float_32B" defined at interfac.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_float_32B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ieee_float_32" defined at interfac.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_float_32___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__ieee_float_32

 predicate dynamic_invariant #"interfac.ads" 77 0 0# "inline" 
   (temp___expr_236 : Interfaces__ieee_float_32.ieee_float_32) (temp___is_init_233 : bool) (temp___do_constant_234 : bool) (temp___do_toplevel_235 : bool)  =
  true
 
 predicate default_initial_assumption #"interfac.ads" 169 0 0# "inline" 
   (temp___237 : Interfaces__ieee_float_32.ieee_float_32) (temp___238 : bool)  =
  true

end

(* Module giving axioms for type "Tieee_float_64B" defined at interfac.ads:172, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_float_64B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ieee_float_64" defined at interfac.ads:172, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_float_64___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__ieee_float_64

 predicate dynamic_invariant #"interfac.ads" 169 0 0# "inline" 
   (temp___expr_242 : Interfaces__ieee_float_64.ieee_float_64) (temp___is_init_239 : bool) (temp___do_constant_240 : bool) (temp___do_toplevel_241 : bool)  =
  true
 
 predicate default_initial_assumption #"interfac.ads" 172 0 0# "inline" 
   (temp___243 : Interfaces__ieee_float_64.ieee_float_64) (temp___244 : bool)  =
  true

end

(* Module giving axioms for type "Tieee_extended_floatB" defined at interfac.ads:182, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_extended_floatB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ieee_extended_float" defined at interfac.ads:182, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_extended_float___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__ieee_extended_float

 predicate dynamic_invariant #"interfac.ads" 172 0 0# "inline" 
   (temp___expr_248 : Interfaces__ieee_extended_float.ieee_extended_float) (temp___is_init_245 : bool) (temp___do_constant_246 : bool) (temp___do_toplevel_247 : bool)  =
  true
 
 predicate default_initial_assumption #"interfac.ads" 182 0 0# "inline" 
   (temp___249 : Interfaces__ieee_extended_float.ieee_extended_float) (temp___250 : bool)  =
  true

end

(* Module giving axioms for type "name" defined at system.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__name

 predicate dynamic_invariant #"interfac.ads" 182 0 0# "inline" 
   (temp___expr_254 : int) (temp___is_init_251 : bool) (temp___do_constant_252 : bool) (temp___do_toplevel_253 : bool)  =
  (if (( temp___is_init_251 \/ (System__name.first <= System__name.last) )) then (
   (System__name.dynamic_property System__name.first System__name.last temp___expr_254)) else true)
 
 predicate default_initial_assumption #"system.ads" 46 0 0# "inline" 
   (temp___255 : int) (temp___256 : bool)  =
  true

end

(* Module giving axioms for type "address" defined at system.ads:134, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__address___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__address

 predicate dynamic_invariant #"system.ads" 46 0 0# "inline" 
   (temp___expr_260 : BV64.t) (temp___is_init_257 : bool) (temp___do_constant_258 : bool) (temp___do_toplevel_259 : bool)  =
  (if (( temp___is_init_257 \/ (BV64.ule System__address.first System__address.last) )) then (
   (System__address.dynamic_property System__address.first System__address.last temp___expr_260)) else true)
 
 predicate default_initial_assumption #"system.ads" 134 0 0# "inline" 
   (temp___261 : BV64.t) (temp___262 : bool)  =
  true

end

(* Module giving axioms for type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__bit_order___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__bit_order

 predicate dynamic_invariant #"system.ads" 134 0 0# "inline" 
   (temp___expr_266 : int) (temp___is_init_263 : bool) (temp___do_constant_264 : bool) (temp___do_toplevel_265 : bool)  =
  (if (( temp___is_init_263 \/ (System__bit_order.first <= System__bit_order.last) )) then (
   (System__bit_order.dynamic_property System__bit_order.first System__bit_order.last temp___expr_266)) else true)
 
 predicate default_initial_assumption #"system.ads" 91 0 0# "inline" 
   (temp___267 : int) (temp___268 : bool)  =
  true

end

(* Module giving axioms for type "any_priority" defined at system.ads:124, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__any_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__any_priority

 predicate dynamic_invariant #"system.ads" 91 0 0# "inline" 
   (temp___expr_272 : int) (temp___is_init_269 : bool) (temp___do_constant_270 : bool) (temp___do_toplevel_271 : bool)  =
  (if (( temp___is_init_269 \/ (System__any_priority.first <= System__any_priority.last) )) then (
   (System__any_priority.dynamic_property System__any_priority.first System__any_priority.last temp___expr_272)) else true)
 
 predicate default_initial_assumption #"system.ads" 124 0 0# "inline" 
   (temp___273 : int) (temp___274 : bool)  =
  true

end

(* Module giving axioms for type "priority" defined at system.ads:125, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__priority

 predicate dynamic_invariant #"system.ads" 124 0 0# "inline" 
   (temp___expr_278 : int) (temp___is_init_275 : bool) (temp___do_constant_276 : bool) (temp___do_toplevel_277 : bool)  =
  (if (( temp___is_init_275 \/ (System__priority.first <= System__priority.last) )) then (
   (System__priority.dynamic_property System__priority.first System__priority.last temp___expr_278)) else true)
 
 predicate default_initial_assumption #"system.ads" 125 0 0# "inline" 
   (temp___279 : int) (temp___280 : bool)  =
  true

end

(* Module giving axioms for type "interrupt_priority" defined at system.ads:126, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__interrupt_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__interrupt_priority

 predicate dynamic_invariant #"system.ads" 125 0 0# "inline" 
   (temp___expr_284 : int) (temp___is_init_281 : bool) (temp___do_constant_282 : bool) (temp___do_toplevel_283 : bool)  =
  (if (( temp___is_init_281 \/ (System__interrupt_priority.first <= System__interrupt_priority.last) )) then (
   (System__interrupt_priority.dynamic_property System__interrupt_priority.first System__interrupt_priority.last temp___expr_284)) else true)
 
 predicate default_initial_assumption #"system.ads" 126 0 0# "inline" 
   (temp___285 : int) (temp___286 : bool)  =
  true

end

(* Module giving axioms for type "node_type" defined at polyorb_hi_generated-deployment.ads:16, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__node_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__node_type

 predicate dynamic_invariant #"system.ads" 126 0 0# "inline" 
   (temp___expr_290 : int) (temp___is_init_287 : bool) (temp___do_constant_288 : bool) (temp___do_toplevel_289 : bool)  =
  (if (( temp___is_init_287 \/ (Polyorb_hi_generated__deployment__node_type.first <= Polyorb_hi_generated__deployment__node_type.last) )) then (
   (Polyorb_hi_generated__deployment__node_type.dynamic_property Polyorb_hi_generated__deployment__node_type.first Polyorb_hi_generated__deployment__node_type.last temp___expr_290)) else true)
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 16 0 0# "inline" 
   (temp___291 : int) (temp___292 : bool)  =
  true

end

(* Module giving axioms for type "ut_deployment_pr_a_node_type_range" defined at polyorb_hi_generated-deployment.ads:39, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_type_range___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_type_range

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 16 0 0# "inline" 
   (temp___expr_296 : int) (temp___is_init_293 : bool) (temp___do_constant_294 : bool) (temp___do_toplevel_295 : bool)  =
  (if (( temp___is_init_293 \/ (Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_type_range.first <= Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_type_range.last) )) then (
   (Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_type_range.dynamic_property Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_type_range.first Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_type_range.last temp___expr_296)) else true)
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 39 0 0# "inline" 
   (temp___297 : int) (temp___298 : bool)  =
  true

end

(* Module giving axioms for type "ut_deployment_pr_a_1_max_node_image_size" defined at polyorb_hi_generated-deployment.ads:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_node_image_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_node_image_size

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 39 0 0# "inline" 
   (temp___expr_302 : int) (temp___is_init_299 : bool) (temp___do_constant_300 : bool) (temp___do_toplevel_301 : bool)  =
  (if (( temp___is_init_299 \/ (Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_node_image_size.first <= Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_node_image_size.last) )) then (
   (Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_node_image_size.dynamic_property Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_node_image_size.first Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_node_image_size.last temp___expr_302)) else true)
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 42 0 0# "inline" 
   (temp___303 : int) (temp___304 : bool)  =
  true

end

(* Module giving axioms for type "ut_deployment_pr_a_node_image_component" defined at polyorb_hi_generated-deployment.ads:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 42 0 0# "inline" 
   (temp___expr_308 : Array__Int__Standard__character.map) (temp___is_init_305 : bool) (temp___do_constant_306 : bool) (temp___do_toplevel_307 : bool)  =
  true
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 45 0 0# "inline" 
   (temp___310 : Array__Int__Standard__character.map) (temp___311 : bool)  =
  true

end

(* Module giving axioms for type "Tut_deployment_pr_a_node_image_arrayB" defined at polyorb_hi_generated-deployment.ads:49, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__Tut_deployment_pr_a_node_image_arrayB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ut_deployment_pr_a_node_image_array" defined at polyorb_hi_generated-deployment.ads:49, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_array___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 45 0 0# "inline" 
   (temp___expr_317 : Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component.map) (temp___is_init_314 : bool) (temp___do_constant_315 : bool) (temp___do_toplevel_316 : bool)  =
  true
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 49 0 0# "inline" 
   (temp___320 : Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component.map) (temp___321 : bool)  =
  true

end

(* Module giving axioms for type "T5s" defined at polyorb_hi_generated-deployment.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T5s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6s" defined at polyorb_hi_generated-deployment.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T6s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T3s" defined at polyorb_hi_generated-deployment.ads:56, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T3s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at polyorb_hi_generated-deployment.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T4s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "entity_type" defined at polyorb_hi_generated-deployment.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__entity_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__entity_type

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 49 0 0# "inline" 
   (temp___expr_329 : int) (temp___is_init_326 : bool) (temp___do_constant_327 : bool) (temp___do_toplevel_328 : bool)  =
  (if (( temp___is_init_326 \/ (Polyorb_hi_generated__deployment__entity_type.first <= Polyorb_hi_generated__deployment__entity_type.last) )) then (
   (Polyorb_hi_generated__deployment__entity_type.dynamic_property Polyorb_hi_generated__deployment__entity_type.first Polyorb_hi_generated__deployment__entity_type.last temp___expr_329)) else true)
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 65 0 0# "inline" 
   (temp___330 : int) (temp___331 : bool)  =
  true

end

(* Module giving axioms for type "ut_deployment_pr_a_entity_type_range" defined at polyorb_hi_generated-deployment.ads:89, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_type_range___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_type_range

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 65 0 0# "inline" 
   (temp___expr_335 : int) (temp___is_init_332 : bool) (temp___do_constant_333 : bool) (temp___do_toplevel_334 : bool)  =
  (if (( temp___is_init_332 \/ (Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_type_range.first <= Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_type_range.last) )) then (
   (Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_type_range.dynamic_property Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_type_range.first Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_type_range.last temp___expr_335)) else true)
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 89 0 0# "inline" 
   (temp___336 : int) (temp___337 : bool)  =
  true

end

(* Module giving axioms for type "Tut_deployment_pr_a_entity_table_arrayB" defined at polyorb_hi_generated-deployment.ads:92, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__Tut_deployment_pr_a_entity_table_arrayB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ut_deployment_pr_a_entity_table_array" defined at polyorb_hi_generated-deployment.ads:92, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_table_array___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Polyorb_hi_generated__deployment__node_type
 use        Array__Int__Polyorb_hi_generated__deployment__node_type

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 89 0 0# "inline" 
   (temp___expr_341 : Array__Int__Polyorb_hi_generated__deployment__node_type.map) (temp___is_init_338 : bool) (temp___do_constant_339 : bool) (temp___do_toplevel_340 : bool)  =
  true
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 92 0 0# "inline" 
   (temp___343 : Array__Int__Polyorb_hi_generated__deployment__node_type.map) (temp___344 : bool)  =
  true

end

(* Module giving axioms for type "T9s" defined at polyorb_hi_generated-deployment.ads:98, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T9s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T10s" defined at polyorb_hi_generated-deployment.ads:98, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T10s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ut_deployment_pr_a_1_max_entity_image_size" defined at polyorb_hi_generated-deployment.ads:114, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_entity_image_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_entity_image_size

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 92 0 0# "inline" 
   (temp___expr_350 : int) (temp___is_init_347 : bool) (temp___do_constant_348 : bool) (temp___do_toplevel_349 : bool)  =
  (if (( temp___is_init_347 \/ (Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_entity_image_size.first <= Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_entity_image_size.last) )) then (
   (Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_entity_image_size.dynamic_property Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_entity_image_size.first Polyorb_hi_generated__deployment__ut_deployment_pr_a_1_max_entity_image_size.last temp___expr_350)) else true)
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 114 0 0# "inline" 
   (temp___351 : int) (temp___352 : bool)  =
  true

end

(* Module giving axioms for type "ut_deployment_pr_a_entity_image_component" defined at polyorb_hi_generated-deployment.ads:117, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 114 0 0# "inline" 
   (temp___expr_356 : Array__Int__Standard__character.map) (temp___is_init_353 : bool) (temp___do_constant_354 : bool) (temp___do_toplevel_355 : bool)  =
  true
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 117 0 0# "inline" 
   (temp___358 : Array__Int__Standard__character.map) (temp___359 : bool)  =
  true

end

(* Module giving axioms for type "Tut_deployment_pr_a_entity_image_arrayB" defined at polyorb_hi_generated-deployment.ads:121, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__Tut_deployment_pr_a_entity_image_arrayB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ut_deployment_pr_a_entity_image_array" defined at polyorb_hi_generated-deployment.ads:121, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_array___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 117 0 0# "inline" 
   (temp___expr_365 : Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component.map) (temp___is_init_362 : bool) (temp___do_constant_363 : bool) (temp___do_toplevel_364 : bool)  =
  true
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 121 0 0# "inline" 
   (temp___368 : Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component.map) (temp___369 : bool)  =
  true

end

(* Module giving axioms for type "T17s" defined at polyorb_hi_generated-deployment.ads:127, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T17s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T18s" defined at polyorb_hi_generated-deployment.ads:127, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T18s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T13s" defined at polyorb_hi_generated-deployment.ads:128, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T13s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T14s" defined at polyorb_hi_generated-deployment.ads:130, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T14s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T15s" defined at polyorb_hi_generated-deployment.ads:132, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T15s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T16s" defined at polyorb_hi_generated-deployment.ads:134, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T16s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "port_type" defined at polyorb_hi_generated-deployment.ads:139, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__port_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__port_type

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 121 0 0# "inline" 
   (temp___expr_377 : int) (temp___is_init_374 : bool) (temp___do_constant_375 : bool) (temp___do_toplevel_376 : bool)  =
  (if (( temp___is_init_374 \/ (Polyorb_hi_generated__deployment__port_type.first <= Polyorb_hi_generated__deployment__port_type.last) )) then (
   (Polyorb_hi_generated__deployment__port_type.dynamic_property Polyorb_hi_generated__deployment__port_type.first Polyorb_hi_generated__deployment__port_type.last temp___expr_377)) else true)
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 139 0 0# "inline" 
   (temp___378 : int) (temp___379 : bool)  =
  true

end

(* Module giving axioms for type "ut_deployment_pr_a_port_type_range" defined at polyorb_hi_generated-deployment.ads:164, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_type_range___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_type_range

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 139 0 0# "inline" 
   (temp___expr_383 : int) (temp___is_init_380 : bool) (temp___do_constant_381 : bool) (temp___do_toplevel_382 : bool)  =
  (if (( temp___is_init_380 \/ (Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_type_range.first <= Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_type_range.last) )) then (
   (Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_type_range.dynamic_property Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_type_range.first Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_type_range.last temp___expr_383)) else true)
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 164 0 0# "inline" 
   (temp___384 : int) (temp___385 : bool)  =
  true

end

(* Module giving axioms for type "Tut_deployment_pr_a_port_table_arrayB" defined at polyorb_hi_generated-deployment.ads:167, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__Tut_deployment_pr_a_port_table_arrayB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ut_deployment_pr_a_port_table_array" defined at polyorb_hi_generated-deployment.ads:167, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_table_array___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Polyorb_hi_generated__deployment__entity_type
 use        Array__Int__Polyorb_hi_generated__deployment__entity_type

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 164 0 0# "inline" 
   (temp___expr_389 : Array__Int__Polyorb_hi_generated__deployment__entity_type.map) (temp___is_init_386 : bool) (temp___do_constant_387 : bool) (temp___do_toplevel_388 : bool)  =
  true
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 167 0 0# "inline" 
   (temp___391 : Array__Int__Polyorb_hi_generated__deployment__entity_type.map) (temp___392 : bool)  =
  true

end

(* Module giving axioms for type "T21s" defined at polyorb_hi_generated-deployment.ads:173, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T21s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T22s" defined at polyorb_hi_generated-deployment.ads:173, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T22s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Tport_sized_stringP1" defined at polyorb_hi_generated-deployment.ads:187, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__Tport_sized_stringP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "port_sized_string" defined at polyorb_hi_generated-deployment.ads:187, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__port_sized_string___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 167 0 0# "inline" 
   (temp___expr_398 : Array__Int__Standard__character.map) (temp___is_init_395 : bool) (temp___do_constant_396 : bool) (temp___do_toplevel_397 : bool)  =
  true
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 187 0 0# "inline" 
   (temp___400 : Array__Int__Standard__character.map) (temp___401 : bool)  =
  true

end

(* Module giving axioms for type "Tut_deployment_pr_a_port_image_arrayB" defined at polyorb_hi_generated-deployment.ads:193, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__Tut_deployment_pr_a_port_image_arrayB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ut_deployment_pr_a_port_image_array" defined at polyorb_hi_generated-deployment.ads:193, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__ut_deployment_pr_a_port_image_array___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Polyorb_hi_generated__deployment__port_sized_string
 use        Array__Int__Polyorb_hi_generated__deployment__port_sized_string

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 187 0 0# "inline" 
   (temp___expr_407 : Array__Int__Polyorb_hi_generated__deployment__port_sized_string.map) (temp___is_init_404 : bool) (temp___do_constant_405 : bool) (temp___do_toplevel_406 : bool)  =
  true
 
 predicate default_initial_assumption #"polyorb_hi_generated-deployment.ads" 193 0 0# "inline" 
   (temp___410 : Array__Int__Polyorb_hi_generated__deployment__port_sized_string.map) (temp___411 : bool)  =
  true

end

(* Module giving axioms for type "T29s" defined at polyorb_hi_generated-deployment.ads:199, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T29s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T30s" defined at polyorb_hi_generated-deployment.ads:199, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T30s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T25s" defined at polyorb_hi_generated-deployment.ads:200, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T25s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T26s" defined at polyorb_hi_generated-deployment.ads:202, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T26s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T27s" defined at polyorb_hi_generated-deployment.ads:204, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T27s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T28s" defined at polyorb_hi_generated-deployment.ads:206, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi_generated__deployment__T28s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "source" defined at a-unccon.ads:17 instantiated at polyorb_hi-utils.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__internal_codeGP3220__source___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__utils__internal_codeGP3220__source

 predicate dynamic_invariant #"polyorb_hi_generated-deployment.ads" 193 0 0# "inline" 
   (temp___expr_419 : int) (temp___is_init_416 : bool) (temp___do_constant_417 : bool) (temp___do_toplevel_418 : bool)  =
  (if (( temp___is_init_416 \/ (Polyorb_hi__utils__internal_codeGP3220__source.first <= Polyorb_hi__utils__internal_codeGP3220__source.last) )) then (
   (Polyorb_hi__utils__internal_codeGP3220__source.dynamic_property Polyorb_hi__utils__internal_codeGP3220__source.first Polyorb_hi__utils__internal_codeGP3220__source.last temp___expr_419)) else true)
 
 predicate default_initial_assumption #"a-unccon.ads" 17 0 0# "inline" 
   (temp___420 : int) (temp___421 : bool)  =
  true

end

(* Module giving axioms for type "target" defined at a-unccon.ads:18 instantiated at polyorb_hi-utils.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__internal_codeGP3220__target___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Polyorb_hi__utils__internal_codeGP3220__target

 predicate dynamic_invariant #"a-unccon.ads" 17 0 0# "inline" 
   (temp___expr_425 : BV8.t) (temp___is_init_422 : bool) (temp___do_constant_423 : bool) (temp___do_toplevel_424 : bool)  =
  (if (( temp___is_init_422 \/ (BV8.ule Polyorb_hi__utils__internal_codeGP3220__target.first Polyorb_hi__utils__internal_codeGP3220__target.last) )) then (
   (Polyorb_hi__utils__internal_codeGP3220__target.dynamic_property Polyorb_hi__utils__internal_codeGP3220__target.first Polyorb_hi__utils__internal_codeGP3220__target.last temp___expr_425)) else true)
 
 predicate default_initial_assumption #"a-unccon.ads" 18 0 0# "inline" 
   (temp___426 : BV8.t) (temp___427 : bool)  =
  true

end

(* Module giving axioms for type "source" defined at a-unccon.ads:17 instantiated at polyorb_hi-utils.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__corresponding_entityGP3310__source___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Polyorb_hi__utils__corresponding_entityGP3310__source

 predicate dynamic_invariant #"a-unccon.ads" 18 0 0# "inline" 
   (temp___expr_431 : BV8.t) (temp___is_init_428 : bool) (temp___do_constant_429 : bool) (temp___do_toplevel_430 : bool)  =
  (if (( temp___is_init_428 \/ (BV8.ule Polyorb_hi__utils__corresponding_entityGP3310__source.first Polyorb_hi__utils__corresponding_entityGP3310__source.last) )) then (
   (Polyorb_hi__utils__corresponding_entityGP3310__source.dynamic_property Polyorb_hi__utils__corresponding_entityGP3310__source.first Polyorb_hi__utils__corresponding_entityGP3310__source.last temp___expr_431)) else true)
 
 predicate default_initial_assumption #"a-unccon.ads" 17 0 0# "inline" 
   (temp___432 : BV8.t) (temp___433 : bool)  =
  true

end

(* Module giving axioms for type "target" defined at a-unccon.ads:18 instantiated at polyorb_hi-utils.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__corresponding_entityGP3310__target___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__utils__corresponding_entityGP3310__target

 predicate dynamic_invariant #"a-unccon.ads" 17 0 0# "inline" 
   (temp___expr_437 : int) (temp___is_init_434 : bool) (temp___do_constant_435 : bool) (temp___do_toplevel_436 : bool)  =
  (if (( temp___is_init_434 \/ (Polyorb_hi__utils__corresponding_entityGP3310__target.first <= Polyorb_hi__utils__corresponding_entityGP3310__target.last) )) then (
   (Polyorb_hi__utils__corresponding_entityGP3310__target.dynamic_property Polyorb_hi__utils__corresponding_entityGP3310__target.first Polyorb_hi__utils__corresponding_entityGP3310__target.last temp___expr_437)) else true)
 
 predicate default_initial_assumption #"a-unccon.ads" 18 0 0# "inline" 
   (temp___438 : int) (temp___439 : bool)  =
  true

end

(* Module giving axioms for type "source" defined at a-unccon.ads:17 instantiated at polyorb_hi-utils.ads:67, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__internal_codeGP3408__source___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__utils__internal_codeGP3408__source

 predicate dynamic_invariant #"a-unccon.ads" 18 0 0# "inline" 
   (temp___expr_443 : int) (temp___is_init_440 : bool) (temp___do_constant_441 : bool) (temp___do_toplevel_442 : bool)  =
  (if (( temp___is_init_440 \/ (Polyorb_hi__utils__internal_codeGP3408__source.first <= Polyorb_hi__utils__internal_codeGP3408__source.last) )) then (
   (Polyorb_hi__utils__internal_codeGP3408__source.dynamic_property Polyorb_hi__utils__internal_codeGP3408__source.first Polyorb_hi__utils__internal_codeGP3408__source.last temp___expr_443)) else true)
 
 predicate default_initial_assumption #"a-unccon.ads" 17 0 0# "inline" 
   (temp___444 : int) (temp___445 : bool)  =
  true

end

(* Module giving axioms for type "target" defined at a-unccon.ads:18 instantiated at polyorb_hi-utils.ads:67, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__internal_codeGP3408__target___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Polyorb_hi__utils__internal_codeGP3408__target

 predicate dynamic_invariant #"a-unccon.ads" 17 0 0# "inline" 
   (temp___expr_449 : BV8.t) (temp___is_init_446 : bool) (temp___do_constant_447 : bool) (temp___do_toplevel_448 : bool)  =
  (if (( temp___is_init_446 \/ (BV8.ule Polyorb_hi__utils__internal_codeGP3408__target.first Polyorb_hi__utils__internal_codeGP3408__target.last) )) then (
   (Polyorb_hi__utils__internal_codeGP3408__target.dynamic_property Polyorb_hi__utils__internal_codeGP3408__target.first Polyorb_hi__utils__internal_codeGP3408__target.last temp___expr_449)) else true)
 
 predicate default_initial_assumption #"a-unccon.ads" 18 0 0# "inline" 
   (temp___450 : BV8.t) (temp___451 : bool)  =
  true

end

(* Module giving axioms for type "source" defined at a-unccon.ads:17 instantiated at polyorb_hi-utils.ads:69, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__corresponding_nodeGP3496__source___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Polyorb_hi__utils__corresponding_nodeGP3496__source

 predicate dynamic_invariant #"a-unccon.ads" 18 0 0# "inline" 
   (temp___expr_455 : BV8.t) (temp___is_init_452 : bool) (temp___do_constant_453 : bool) (temp___do_toplevel_454 : bool)  =
  (if (( temp___is_init_452 \/ (BV8.ule Polyorb_hi__utils__corresponding_nodeGP3496__source.first Polyorb_hi__utils__corresponding_nodeGP3496__source.last) )) then (
   (Polyorb_hi__utils__corresponding_nodeGP3496__source.dynamic_property Polyorb_hi__utils__corresponding_nodeGP3496__source.first Polyorb_hi__utils__corresponding_nodeGP3496__source.last temp___expr_455)) else true)
 
 predicate default_initial_assumption #"a-unccon.ads" 17 0 0# "inline" 
   (temp___456 : BV8.t) (temp___457 : bool)  =
  true

end

(* Module giving axioms for type "target" defined at a-unccon.ads:18 instantiated at polyorb_hi-utils.ads:69, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__corresponding_nodeGP3496__target___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__utils__corresponding_nodeGP3496__target

 predicate dynamic_invariant #"a-unccon.ads" 17 0 0# "inline" 
   (temp___expr_461 : int) (temp___is_init_458 : bool) (temp___do_constant_459 : bool) (temp___do_toplevel_460 : bool)  =
  (if (( temp___is_init_458 \/ (Polyorb_hi__utils__corresponding_nodeGP3496__target.first <= Polyorb_hi__utils__corresponding_nodeGP3496__target.last) )) then (
   (Polyorb_hi__utils__corresponding_nodeGP3496__target.dynamic_property Polyorb_hi__utils__corresponding_nodeGP3496__target.first Polyorb_hi__utils__corresponding_nodeGP3496__target.last temp___expr_461)) else true)
 
 predicate default_initial_assumption #"a-unccon.ads" 18 0 0# "inline" 
   (temp___462 : int) (temp___463 : bool)  =
  true

end

(* Module giving axioms for type "T7s" defined at polyorb_hi-utils.ads:125, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__hi_string__T7s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T8s" defined at polyorb_hi-utils.ads:125, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__hi_string__T8s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "hi_string" defined at polyorb_hi-utils.ads:124, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__hi_string___axiom
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__utils__hi_string

 predicate dynamic_invariant #"a-unccon.ads" 18 0 0# "inline" 
   (temp___expr_467 : Polyorb_hi__utils__hi_string.hi_string) (temp___is_init_464 : bool) (temp___do_constant_465 : bool) (temp___do_toplevel_466 : bool)  =
  true
 
 predicate default_initial_assumption #"polyorb_hi-utils.ads" 124 0 0# "inline" 
   (temp___469 : Polyorb_hi__utils__hi_string.hi_string) (temp___470 : bool)  =
  true

end

(* Module giving axioms for type "naming_entry" defined at polyorb_hi-utils.ads:113, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__naming_entry___axiom
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__utils__naming_entry

 predicate dynamic_invariant #"polyorb_hi-utils.ads" 124 0 0# "inline" 
   (temp___expr_486 : Polyorb_hi__utils__naming_entry.naming_entry) (temp___is_init_483 : bool) (temp___do_constant_484 : bool) (temp___do_toplevel_485 : bool)  =
  true
 
 predicate default_initial_assumption #"polyorb_hi-utils.ads" 113 0 0# "inline" 
   (temp___488 : Polyorb_hi__utils__naming_entry.naming_entry) (temp___489 : bool)  =
  true

end

(* Module giving axioms for type "Tnaming_table_typeB" defined at polyorb_hi-utils.ads:119, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__Tnaming_table_typeB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "naming_table_type" defined at polyorb_hi-utils.ads:119, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__naming_table_type___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Polyorb_hi__utils__naming_entry
 use        Array__Int__Polyorb_hi__utils__naming_entry

 predicate dynamic_invariant #"polyorb_hi-utils.ads" 113 0 0# "inline" 
   (temp___expr_500 : Array__Int__Polyorb_hi__utils__naming_entry.map) (temp___is_init_497 : bool) (temp___do_constant_498 : bool) (temp___do_toplevel_499 : bool)  =
  true
 
 predicate default_initial_assumption #"polyorb_hi-utils.ads" 119 0 0# "inline" 
   (temp___503 : Array__Int__Polyorb_hi__utils__naming_entry.map) (temp___504 : bool)  =
  true

end

(* Module giving axioms for type "T12s" defined at polyorb_hi-utils.ads:138, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_string__T12s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T13s" defined at polyorb_hi-utils.ads:138, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_string__T13s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TS1bP1" defined at polyorb_hi-utils.adb:38, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_hi_string__TS1bP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S1b" defined at polyorb_hi-utils.adb:38, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_hi_string__S1b___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__utils__to_hi_string__s
 use        Polyorb_hi__utils__to_hi_string__S1b

 predicate dynamic_invariant #"polyorb_hi-utils.ads" 119 0 0# "inline" 
   (temp___expr_517 : Polyorb_hi__utils__to_hi_string__S1b.s1b) (temp___is_init_514 : bool) (temp___do_constant_515 : bool) (temp___do_toplevel_516 : bool)  =
  (if (temp___do_constant_515) then (
   true) else (
   ( (Polyorb_hi__utils__to_hi_string__S1b.dynamic_property (Standard__string.first Polyorb_hi__utils__to_hi_string__s.s) (Standard__string.last Polyorb_hi__utils__to_hi_string__s.s) (Polyorb_hi__utils__to_hi_string__S1b.first temp___expr_517) (Polyorb_hi__utils__to_hi_string__S1b.last temp___expr_517)) /\ ( ((Polyorb_hi__utils__to_hi_string__S1b.first temp___expr_517) = (Standard__string.first Polyorb_hi__utils__to_hi_string__s.s)) /\ ((Polyorb_hi__utils__to_hi_string__S1b.last temp___expr_517) = (Standard__string.last Polyorb_hi__utils__to_hi_string__s.s)) ) )))
 
 predicate default_initial_assumption #"polyorb_hi-utils.ads" 88 0 0# "inline" 
   (temp___519 : Polyorb_hi__utils__to_hi_string__S1b.s1b) (temp___520 : bool)  =
  true

end

(* Module giving axioms for type "TTrSP1" defined at polyorb_hi-utils.adb:39, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_hi_string__TTrSP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "TrS" defined at polyorb_hi-utils.adb:39, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_hi_string__TrS___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 predicate dynamic_invariant #"polyorb_hi-utils.adb" 38 0 0# "inline" 
   (temp___expr_526 : Array__Int__Standard__character.map) (temp___is_init_523 : bool) (temp___do_constant_524 : bool) (temp___do_toplevel_525 : bool)  =
  true
 
 predicate default_initial_assumption #"polyorb_hi-utils.adb" 39 0 0# "inline" 
   (temp___528 : Array__Int__Standard__character.map) (temp___529 : bool)  =
  true

end

(* Module giving axioms for type "T2b" defined at polyorb_hi-utils.adb:39, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_hi_string__T2b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T3b" defined at polyorb_hi-utils.adb:39, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_hi_string__T3b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T5b" defined at polyorb_hi-utils.adb:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_hi_string__T5b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6b" defined at polyorb_hi-utils.adb:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_hi_string__T6b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7b" defined at polyorb_hi-utils.adb:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_hi_string__T7b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T8b" defined at polyorb_hi-utils.adb:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_hi_string__T8b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T10b" defined at polyorb_hi-utils.adb:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_hi_string__T10b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T11b" defined at polyorb_hi-utils.adb:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_hi_string__T11b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T12b" defined at polyorb_hi-utils.adb:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_hi_string__T12b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T13b" defined at polyorb_hi-utils.adb:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__to_hi_string__T13b___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "source" defined at a-unccon.ads:17 instantiated at polyorb_hi-utils.adb:91, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__source___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__source

 predicate dynamic_invariant #"polyorb_hi-utils.adb" 39 0 0# "inline" 
   (temp___expr_535 : int) (temp___is_init_532 : bool) (temp___do_constant_533 : bool) (temp___do_toplevel_534 : bool)  =
  (if (( temp___is_init_532 \/ (Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__source.first <= Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__source.last) )) then (
   (Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__source.dynamic_property Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__source.first Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__source.last temp___expr_535)) else true)
 
 predicate default_initial_assumption #"a-unccon.ads" 17 0 0# "inline" 
   (temp___536 : int) (temp___537 : bool)  =
  true

end

(* Module giving axioms for type "target" defined at a-unccon.ads:18 instantiated at polyorb_hi-utils.adb:91, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__target___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__target

 predicate dynamic_invariant #"a-unccon.ads" 17 0 0# "inline" 
   (temp___expr_541 : BV16.t) (temp___is_init_538 : bool) (temp___do_constant_539 : bool) (temp___do_toplevel_540 : bool)  =
  (if (( temp___is_init_538 \/ (BV16.ule Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__target.first Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__target.last) )) then (
   (Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__target.dynamic_property Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__target.first Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__target.last temp___expr_541)) else true)
 
 predicate default_initial_assumption #"a-unccon.ads" 18 0 0# "inline" 
   (temp___542 : BV16.t) (temp___543 : bool)  =
  true

end

(* Module giving axioms for type "source" defined at a-unccon.ads:17 instantiated at polyorb_hi-utils.adb:102, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__source___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__source

 predicate dynamic_invariant #"a-unccon.ads" 18 0 0# "inline" 
   (temp___expr_547 : BV16.t) (temp___is_init_544 : bool) (temp___do_constant_545 : bool) (temp___do_toplevel_546 : bool)  =
  (if (( temp___is_init_544 \/ (BV16.ule Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__source.first Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__source.last) )) then (
   (Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__source.dynamic_property Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__source.first Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__source.last temp___expr_547)) else true)
 
 predicate default_initial_assumption #"a-unccon.ads" 17 0 0# "inline" 
   (temp___548 : BV16.t) (temp___549 : bool)  =
  true

end

(* Module giving axioms for type "target" defined at a-unccon.ads:18 instantiated at polyorb_hi-utils.adb:102, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__target___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__target

 predicate dynamic_invariant #"a-unccon.ads" 17 0 0# "inline" 
   (temp___expr_553 : int) (temp___is_init_550 : bool) (temp___do_constant_551 : bool) (temp___do_toplevel_552 : bool)  =
  (if (( temp___is_init_550 \/ (Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__target.first <= Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__target.last) )) then (
   (Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__target.dynamic_property Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__target.first Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__target.last temp___expr_553)) else true)
 
 predicate default_initial_assumption #"a-unccon.ads" 18 0 0# "inline" 
   (temp___554 : int) (temp___555 : bool)  =
  true

end

(* Module giving axioms for type "TS19bP1" defined at polyorb_hi-utils.adb:112, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__parse_string__TS19bP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "S19b" defined at polyorb_hi-utils.adb:112, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__parse_string__S19b___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Polyorb_hi__utils__parse_string__s
 use        Polyorb_hi__utils__parse_string__S19b

 predicate dynamic_invariant #"a-unccon.ads" 18 0 0# "inline" 
   (temp___expr_559 : Polyorb_hi__utils__parse_string__S19b.s19b) (temp___is_init_556 : bool) (temp___do_constant_557 : bool) (temp___do_toplevel_558 : bool)  =
  (if (temp___do_constant_557) then (
   true) else (
   ( (Polyorb_hi__utils__parse_string__S19b.dynamic_property (Standard__string.first Polyorb_hi__utils__parse_string__s.s) (Standard__string.last Polyorb_hi__utils__parse_string__s.s) (Polyorb_hi__utils__parse_string__S19b.first temp___expr_559) (Polyorb_hi__utils__parse_string__S19b.last temp___expr_559)) /\ ( ((Polyorb_hi__utils__parse_string__S19b.first temp___expr_559) = (Standard__string.first Polyorb_hi__utils__parse_string__s.s)) /\ ((Polyorb_hi__utils__parse_string__S19b.last temp___expr_559) = (Standard__string.last Polyorb_hi__utils__parse_string__s.s)) ) )))
 
 predicate default_initial_assumption #"polyorb_hi-utils.ads" 99 0 0# "inline" 
   (temp___561 : Polyorb_hi__utils__parse_string__S19b.s19b) (temp___562 : bool)  =
  true

end

(* Module giving axioms for type "T20b" defined at polyorb_hi-utils.adb:117, created in Gnat2Why.Types.Generate_Type_Completion *)
module Polyorb_hi__utils__parse_string__L_1__T20b___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of the aggregate at polyorb_hi-utils.adb:39, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Polyorb_hi__utils__to_hi_string__r__aggregate_def
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function polyorb_hi__utils__to_hi_string__r__aggregate_def #"polyorb_hi-utils.adb" 39 0 0# 
   (temp___566 : int) : Array__Int__Standard__character.map
 
 axiom def_axiom :
  (forall temp___566 : int.
   (let temp___565 = (polyorb_hi__utils__to_hi_string__r__aggregate_def temp___566) in (
    (forall temp___567 : int.
     ((Array__Int__Standard__character.get temp___565 temp___567) = (Standard__character.of_rep temp___566)))))
  )

end
(* Module for defining the value of constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__system_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__system_name

 axiom system_name__def_axiom :
  ((System__system_name.system_name ) = 0)

end

(* Module for defining the value of constant "min_int" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__min_int___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__min_int

 axiom min_int__def_axiom :
  ((System__min_int.min_int ) = ( -9223372036854775808 ))

end

(* Module for defining the value of constant "max_int" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_int___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_int

 axiom max_int__def_axiom :
  ((System__max_int.max_int ) = 9223372036854775807)

end

(* Module for defining the value of constant "max_binary_modulus" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_binary_modulus___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_binary_modulus

 axiom max_binary_modulus__def_axiom :
  ((System__max_binary_modulus.max_binary_modulus ) = 18446744073709551616)

end

(* Module for defining the value of constant "max_nonbinary_modulus" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_nonbinary_modulus___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_nonbinary_modulus

 axiom max_nonbinary_modulus__def_axiom :
  ((System__max_nonbinary_modulus.max_nonbinary_modulus ) = 4294967295)

end

(* Module for defining the value of constant "max_base_digits" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_base_digits___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_base_digits

 axiom max_base_digits__def_axiom :
  ((System__max_base_digits.max_base_digits ) = 18)

end

(* Module for defining the value of constant "max_digits" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_digits___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_digits

 axiom max_digits__def_axiom :
  ((System__max_digits.max_digits ) = 18)

end

(* Module for defining the value of constant "max_mantissa" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_mantissa___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_mantissa

 axiom max_mantissa__def_axiom :
  ((System__max_mantissa.max_mantissa ) = 63)

end

(* Module for defining the value of constant "fine_delta" defined at system.ads:61, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fine_delta___axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        System__fine_delta

 axiom fine_delta__def_axiom :
  ((System__fine_delta.fine_delta ) = (Standard__universal_real.of_real (0.000000000000000000108420217248550443400745280086994171142578125)))

end

(* Module for defining the value of constant "tick" defined at system.ads:63, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tick___axiom
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        Standard__universal_real
 use        System__tick

 axiom tick__def_axiom :
  ((System__tick.tick ) = (Standard__universal_real.of_real (1.0E-2)))

end

(* Module for defining the value of constant "storage_unit" defined at system.ads:71, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__storage_unit___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_unit

 axiom storage_unit__def_axiom :
  ((System__storage_unit.storage_unit ) = 8)

end

(* Module for defining the value of constant "word_size" defined at system.ads:72, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__word_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__word_size

 axiom word_size__def_axiom :
  ((System__word_size.word_size ) = 64)

end

(* Module for defining the value of constant "memory_size" defined at system.ads:73, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__memory_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__memory_size

 axiom memory_size__def_axiom :
  ((System__memory_size.memory_size ) = 18446744073709551616)

end

(* Module for defining the value of constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_bit_order___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_bit_order

 axiom default_bit_order__def_axiom :
  ((System__default_bit_order.default_bit_order ) = 1)

end

(* Module for defining the value of constant "max_interrupt_priority" defined at system.ads:121, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_interrupt_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_interrupt_priority

 axiom max_interrupt_priority__def_axiom :
  ((System__max_interrupt_priority.max_interrupt_priority ) = 63)

end

(* Module for defining the value of constant "max_priority" defined at system.ads:122, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_priority

 axiom max_priority__def_axiom :
  ((System__max_priority.max_priority ) = 62)

end

(* Module for defining the value of constant "default_priority" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_priority

 axiom default_priority__def_axiom :
  ((System__default_priority.default_priority ) = 31)

end

(* Module for defining the value of constant "null_address" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__null_address___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64
 use        System__null_address

 axiom null_address__def_axiom :
  ((System__null_address.null_address ) = (BV64.of_int 0))

end

(* Module for defining the value of constant "backend_divide_checks" defined at system.ads:147, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_divide_checks___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_divide_checks

 axiom backend_divide_checks__def_axiom :
  ((System__backend_divide_checks.backend_divide_checks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "backend_overflow_checks" defined at system.ads:148, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_overflow_checks___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_overflow_checks

 axiom backend_overflow_checks__def_axiom :
  ((System__backend_overflow_checks.backend_overflow_checks ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "command_line_args" defined at system.ads:149, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__command_line_args___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__command_line_args

 axiom command_line_args__def_axiom :
  ((System__command_line_args.command_line_args ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "configurable_run_time" defined at system.ads:150, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__configurable_run_time___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__configurable_run_time

 axiom configurable_run_time__def_axiom :
  ((System__configurable_run_time.configurable_run_time ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "denorm" defined at system.ads:151, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__denorm___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__denorm

 axiom denorm__def_axiom :
  ((System__denorm.denorm ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "duration_32_bits" defined at system.ads:152, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__duration_32_bits___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__duration_32_bits

 axiom duration_32_bits__def_axiom :
  ((System__duration_32_bits.duration_32_bits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "exit_status_supported" defined at system.ads:153, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__exit_status_supported___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__exit_status_supported

 axiom exit_status_supported__def_axiom :
  ((System__exit_status_supported.exit_status_supported ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "fractional_fixed_ops" defined at system.ads:154, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fractional_fixed_ops___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__fractional_fixed_ops

 axiom fractional_fixed_ops__def_axiom :
  ((System__fractional_fixed_ops.fractional_fixed_ops ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_layout" defined at system.ads:155, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_layout___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_layout

 axiom frontend_layout__def_axiom :
  ((System__frontend_layout.frontend_layout ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_overflows" defined at system.ads:156, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_overflows___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_overflows

 axiom machine_overflows__def_axiom :
  ((System__machine_overflows.machine_overflows ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_rounds" defined at system.ads:157, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_rounds___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_rounds

 axiom machine_rounds__def_axiom :
  ((System__machine_rounds.machine_rounds ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "preallocated_stacks" defined at system.ads:158, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__preallocated_stacks___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__preallocated_stacks

 axiom preallocated_stacks__def_axiom :
  ((System__preallocated_stacks.preallocated_stacks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "signed_zeros" defined at system.ads:159, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__signed_zeros___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__signed_zeros

 axiom signed_zeros__def_axiom :
  ((System__signed_zeros.signed_zeros ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_default" defined at system.ads:160, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_default___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_default

 axiom stack_check_default__def_axiom :
  ((System__stack_check_default.stack_check_default ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "stack_check_probes" defined at system.ads:161, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_probes___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_probes

 axiom stack_check_probes__def_axiom :
  ((System__stack_check_probes.stack_check_probes ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_limits" defined at system.ads:162, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_limits___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_limits

 axiom stack_check_limits__def_axiom :
  ((System__stack_check_limits.stack_check_limits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "support_aggregates" defined at system.ads:163, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_aggregates___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_aggregates

 axiom support_aggregates__def_axiom :
  ((System__support_aggregates.support_aggregates ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_atomic_primitives" defined at system.ads:164, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_atomic_primitives___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_atomic_primitives

 axiom support_atomic_primitives__def_axiom :
  ((System__support_atomic_primitives.support_atomic_primitives ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_assign" defined at system.ads:165, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_assign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_assign

 axiom support_composite_assign__def_axiom :
  ((System__support_composite_assign.support_composite_assign ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_compare" defined at system.ads:166, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_compare___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_compare

 axiom support_composite_compare__def_axiom :
  ((System__support_composite_compare.support_composite_compare ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_long_shifts" defined at system.ads:167, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_long_shifts___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_long_shifts

 axiom support_long_shifts__def_axiom :
  ((System__support_long_shifts.support_long_shifts ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "always_compatible_rep" defined at system.ads:168, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__always_compatible_rep___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__always_compatible_rep

 axiom always_compatible_rep__def_axiom :
  ((System__always_compatible_rep.always_compatible_rep ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "suppress_standard_library" defined at system.ads:169, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__suppress_standard_library___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__suppress_standard_library

 axiom suppress_standard_library__def_axiom :
  ((System__suppress_standard_library.suppress_standard_library ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "use_ada_main_program_name" defined at system.ads:170, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__use_ada_main_program_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__use_ada_main_program_name

 axiom use_ada_main_program_name__def_axiom :
  ((System__use_ada_main_program_name.use_ada_main_program_name ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_exceptions" defined at system.ads:171, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_exceptions___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_exceptions

 axiom frontend_exceptions__def_axiom :
  ((System__frontend_exceptions.frontend_exceptions ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "zcx_by_default" defined at system.ads:172, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__zcx_by_default___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__zcx_by_default

 axiom zcx_by_default__def_axiom :
  ((System__zcx_by_default.zcx_by_default ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "max_node_image_size" defined at polyorb_hi_generated-deployment.ads:32, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi_generated__deployment__max_node_image_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__max_node_image_size

 axiom max_node_image_size__def_axiom :
  ((Polyorb_hi_generated__deployment__max_node_image_size.max_node_image_size ) = 6)

end

(* Module for defining the value of constant "node_image" defined at polyorb_hi_generated-deployment.ads:53, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi_generated__deployment__node_image___axiom
 use import "_gnatprove_standard".Main
 use        Polyorb_hi_generated__deployment__node_image
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component
 use        Polyorb_hi_generated__deployment__node_image__aggregate_def
 use        Array__Int__Standard__character
 use        Temp___145
 use        Array__Int__Standard__character
 use        Temp___146
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_node_image_component

 axiom node_image__def_axiom :
  ((Polyorb_hi_generated__deployment__node_image.node_image ) = (Polyorb_hi_generated__deployment__node_image__aggregate_def.polyorb_hi_generated__deployment__node_image__aggregate_def Temp___145.temp___145 Temp___146.temp___146))

end

(* Module for defining the value of constant "my_node" defined at polyorb_hi_generated-deployment.ads:60, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi_generated__deployment__my_node___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__my_node

 axiom my_node__def_axiom :
  ((Polyorb_hi_generated__deployment__my_node.my_node ) = 0)

end

(* Module for defining the value of constant "entity_table" defined at polyorb_hi_generated-deployment.ads:96, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi_generated__deployment__entity_table___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__entity_table
 use        Array__Int__Polyorb_hi_generated__deployment__node_type
 use        Polyorb_hi_generated__deployment__entity_table__aggregate_def
 use        Array__Int__Polyorb_hi_generated__deployment__node_type

 axiom entity_table__def_axiom :
  ((Polyorb_hi_generated__deployment__entity_table.entity_table ) = (Polyorb_hi_generated__deployment__entity_table__aggregate_def.polyorb_hi_generated__deployment__entity_table__aggregate_def 0 0 1 1))

end

(* Module for defining the value of constant "max_entity_image_size" defined at polyorb_hi_generated-deployment.ads:107, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi_generated__deployment__max_entity_image_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__max_entity_image_size

 axiom max_entity_image_size__def_axiom :
  ((Polyorb_hi_generated__deployment__max_entity_image_size.max_entity_image_size ) = 22)

end

(* Module for defining the value of constant "entity_image" defined at polyorb_hi_generated-deployment.ads:125, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi_generated__deployment__entity_image___axiom
 use import "_gnatprove_standard".Main
 use        Polyorb_hi_generated__deployment__entity_image
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component
 use        Polyorb_hi_generated__deployment__entity_image__aggregate_def
 use        Array__Int__Standard__character
 use        Temp___159
 use        Array__Int__Standard__character
 use        Temp___160
 use        Array__Int__Standard__character
 use        Temp___161
 use        Array__Int__Standard__character
 use        Temp___162
 use        Array__Int__Polyorb_hi_generated__deployment__ut_deployment_pr_a_entity_image_component

 axiom entity_image__def_axiom :
  ((Polyorb_hi_generated__deployment__entity_image.entity_image ) = (Polyorb_hi_generated__deployment__entity_image__aggregate_def.polyorb_hi_generated__deployment__entity_image__aggregate_def Temp___159.temp___159 Temp___160.temp___160 Temp___161.temp___161 Temp___162.temp___162))

end

(* Module for defining the value of constant "port_table" defined at polyorb_hi_generated-deployment.ads:171, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi_generated__deployment__port_table___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__port_table
 use        Array__Int__Polyorb_hi_generated__deployment__entity_type
 use        Polyorb_hi_generated__deployment__port_table__aggregate_def
 use        Array__Int__Polyorb_hi_generated__deployment__entity_type

 axiom port_table__def_axiom :
  ((Polyorb_hi_generated__deployment__port_table.port_table ) = (Polyorb_hi_generated__deployment__port_table__aggregate_def.polyorb_hi_generated__deployment__port_table__aggregate_def 0 1 2 3))

end

(* Module for defining the value of constant "max_port_image_size" defined at polyorb_hi_generated-deployment.ads:182, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi_generated__deployment__max_port_image_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__max_port_image_size

 axiom max_port_image_size__def_axiom :
  ((Polyorb_hi_generated__deployment__max_port_image_size.max_port_image_size ) = 34)

end

(* Module for defining the value of constant "port_image" defined at polyorb_hi_generated-deployment.ads:197, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi_generated__deployment__port_image___axiom
 use import "_gnatprove_standard".Main
 use        Polyorb_hi_generated__deployment__port_image
 use        Array__Int__Polyorb_hi_generated__deployment__port_sized_string
 use        Polyorb_hi_generated__deployment__port_image__aggregate_def
 use        Array__Int__Standard__character
 use        Temp___175
 use        Array__Int__Standard__character
 use        Temp___176
 use        Array__Int__Standard__character
 use        Temp___177
 use        Array__Int__Standard__character
 use        Temp___178
 use        Array__Int__Polyorb_hi_generated__deployment__port_sized_string

 axiom port_image__def_axiom :
  ((Polyorb_hi_generated__deployment__port_image.port_image ) = (Polyorb_hi_generated__deployment__port_image__aggregate_def.polyorb_hi_generated__deployment__port_image__aggregate_def Temp___175.temp___175 Temp___176.temp___176 Temp___177.temp___177 Temp___178.temp___178))

end

(* Module for defining the value of constant "max_payload_size" defined at polyorb_hi_generated-deployment.ads:210, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi_generated__deployment__max_payload_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi_generated__deployment__max_payload_size

 axiom max_payload_size__def_axiom :
  ((Polyorb_hi_generated__deployment__max_payload_size.max_payload_size ) = 112)

end

(* Module for defining the value of constant "hi_string_size" defined at polyorb_hi-utils.ads:84, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Polyorb_hi__utils__hi_string_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Polyorb_hi__utils__hi_string_size

 axiom hi_string_size__def_axiom :
  ((Polyorb_hi__utils__hi_string_size.hi_string_size ) = 80)

end

(* Module for declaring a program function (and possibly an axiom) for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Olt___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__Olt

 val olt #"system.ads" 77 0 0# 
   (left : BV64.t) (right : BV64.t) : bool
  requires { true }
  ensures { (result = (System__Olt.olt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ole___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__Ole

 val ole #"system.ads" 78 0 0# 
   (left : BV64.t) (right : BV64.t) : bool
  requires { true }
  ensures { (result = (System__Ole.ole left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ogt___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__Ogt

 val ogt #"system.ads" 79 0 0# 
   (left : BV64.t) (right : BV64.t) : bool
  requires { true }
  ensures { (result = (System__Ogt.ogt left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oge___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__Oge

 val oge #"system.ads" 80 0 0# 
   (left : BV64.t) (right : BV64.t) : bool
  requires { true }
  ensures { (result = (System__Oge.oge left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oeq___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        System__Oeq

 val oeq #"system.ads" 81 0 0# 
   (left : BV64.t) (right : BV64.t) : bool
  requires { true }
  ensures { (result = (System__Oeq.oeq left right)) }

end

(* Module for declaring a program function (and possibly an axiom) for "internal_code" defined at polyorb_hi-utils.ads:62, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__utils__internal_codeGP3220__internal_code___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Polyorb_hi__utils__internal_codeGP3220__source
 use        Polyorb_hi__utils__internal_codeGP3220__target___axiom
 use        Polyorb_hi__utils__internal_codeGP3220__internal_code

 val internal_code #"polyorb_hi-utils.ads" 62 0 0# 
   (s : int) : BV8.t
  requires { true }
  ensures { ( (result = (Polyorb_hi__utils__internal_codeGP3220__internal_code.internal_code s)) /\ (Polyorb_hi__utils__internal_codeGP3220__target___axiom.dynamic_invariant result True False True) ) }
 
 axiom internal_code__post_axiom :
  (forall s : int [(Polyorb_hi__utils__internal_codeGP3220__internal_code.internal_code s)].
   ( (Polyorb_hi__utils__internal_codeGP3220__source.in_range s) -> (let result = (Polyorb_hi__utils__internal_codeGP3220__internal_code.internal_code s) in (
    (Polyorb_hi__utils__internal_codeGP3220__target___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "corresponding_entity" defined at polyorb_hi-utils.ads:64, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__utils__corresponding_entityGP3310__corresponding_entity___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Polyorb_hi__utils__corresponding_entityGP3310__source
 use        Polyorb_hi__utils__corresponding_entityGP3310__target___axiom
 use        Polyorb_hi__utils__corresponding_entityGP3310__corresponding_entity

 val corresponding_entity #"polyorb_hi-utils.ads" 64 0 0# 
   (s : BV8.t) : int
  requires { true }
  ensures { ( (result = (Polyorb_hi__utils__corresponding_entityGP3310__corresponding_entity.corresponding_entity s)) /\ (Polyorb_hi__utils__corresponding_entityGP3310__target___axiom.dynamic_invariant result True False True) ) }
 
 axiom corresponding_entity__post_axiom :
  (forall s : BV8.t [(Polyorb_hi__utils__corresponding_entityGP3310__corresponding_entity.corresponding_entity s)].
   ( (Polyorb_hi__utils__corresponding_entityGP3310__source.in_range s) -> (let result = (Polyorb_hi__utils__corresponding_entityGP3310__corresponding_entity.corresponding_entity s) in (
    (Polyorb_hi__utils__corresponding_entityGP3310__target___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "internal_code" defined at polyorb_hi-utils.ads:67, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__utils__internal_codeGP3408__internal_code___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Polyorb_hi__utils__internal_codeGP3408__source
 use        Polyorb_hi__utils__internal_codeGP3408__target___axiom
 use        Polyorb_hi__utils__internal_codeGP3408__internal_code

 val internal_code #"polyorb_hi-utils.ads" 67 0 0# 
   (s : int) : BV8.t
  requires { true }
  ensures { ( (result = (Polyorb_hi__utils__internal_codeGP3408__internal_code.internal_code s)) /\ (Polyorb_hi__utils__internal_codeGP3408__target___axiom.dynamic_invariant result True False True) ) }
 
 axiom internal_code__post_axiom :
  (forall s : int [(Polyorb_hi__utils__internal_codeGP3408__internal_code.internal_code s)].
   ( (Polyorb_hi__utils__internal_codeGP3408__source.in_range s) -> (let result = (Polyorb_hi__utils__internal_codeGP3408__internal_code.internal_code s) in (
    (Polyorb_hi__utils__internal_codeGP3408__target___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "corresponding_node" defined at polyorb_hi-utils.ads:69, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__utils__corresponding_nodeGP3496__corresponding_node___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Polyorb_hi__utils__corresponding_nodeGP3496__source
 use        Polyorb_hi__utils__corresponding_nodeGP3496__target___axiom
 use        Polyorb_hi__utils__corresponding_nodeGP3496__corresponding_node

 val corresponding_node #"polyorb_hi-utils.ads" 69 0 0# 
   (s : BV8.t) : int
  requires { true }
  ensures { ( (result = (Polyorb_hi__utils__corresponding_nodeGP3496__corresponding_node.corresponding_node s)) /\ (Polyorb_hi__utils__corresponding_nodeGP3496__target___axiom.dynamic_invariant result True False True) ) }
 
 axiom corresponding_node__post_axiom :
  (forall s : BV8.t [(Polyorb_hi__utils__corresponding_nodeGP3496__corresponding_node.corresponding_node s)].
   ( (Polyorb_hi__utils__corresponding_nodeGP3496__source.in_range s) -> (let result = (Polyorb_hi__utils__corresponding_nodeGP3496__corresponding_node.corresponding_node s) in (
    (Polyorb_hi__utils__corresponding_nodeGP3496__target___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "internal_code__3" defined at polyorb_hi-utils.ads:72, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__utils__internal_code__3___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Interfaces__unsigned_16___axiom
 use        Polyorb_hi_generated__deployment__port_type
 use        Polyorb_hi__utils__internal_code__3

 val internal_code__3 #"polyorb_hi-utils.ads" 72 0 0# 
   (p : int) : BV16.t
  requires { true }
  ensures { ( (result = (Polyorb_hi__utils__internal_code__3.internal_code__3 p)) /\ (Interfaces__unsigned_16___axiom.dynamic_invariant result True False True) ) }
 
 axiom internal_code__3__post_axiom :
  (forall p : int [(Polyorb_hi__utils__internal_code__3.internal_code__3 p)].
   ( (Polyorb_hi_generated__deployment__port_type.in_range p) -> (let result = (Polyorb_hi__utils__internal_code__3.internal_code__3 p) in (
    (Interfaces__unsigned_16___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "corresponding_port" defined at polyorb_hi-utils.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__utils__corresponding_port___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Interfaces__unsigned_16
 use        Polyorb_hi_generated__deployment__port_type___axiom
 use        Polyorb_hi__utils__corresponding_port

 val corresponding_port #"polyorb_hi-utils.ads" 73 0 0# 
   (i : BV16.t) : int
  requires { true }
  ensures { ( (result = (Polyorb_hi__utils__corresponding_port.corresponding_port i)) /\ (Polyorb_hi_generated__deployment__port_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom corresponding_port__post_axiom :
  (forall i : BV16.t [(Polyorb_hi__utils__corresponding_port.corresponding_port i)].
   ( (Interfaces__unsigned_16.in_range i) -> (let result = (Polyorb_hi__utils__corresponding_port.corresponding_port i) in (
    (Polyorb_hi_generated__deployment__port_type___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "swap_bytes" defined at polyorb_hi-utils.ads:75, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__utils__swap_bytes___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Interfaces__unsigned_16
 use        Interfaces__unsigned_16___axiom
 use        Polyorb_hi__utils__swap_bytes

 val swap_bytes #"polyorb_hi-utils.ads" 75 0 0# 
   (b : BV16.t) : BV16.t
  requires { true }
  ensures { ( (result = (Polyorb_hi__utils__swap_bytes.swap_bytes b)) /\ (Interfaces__unsigned_16___axiom.dynamic_invariant result True False True) ) }
 
 axiom swap_bytes__post_axiom :
  (forall b : BV16.t [(Polyorb_hi__utils__swap_bytes.swap_bytes b)].
   ( (Interfaces__unsigned_16.in_range b) -> (let result = (Polyorb_hi__utils__swap_bytes.swap_bytes b) in (
    (Interfaces__unsigned_16___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module giving a program function and a defining axiom for the expression function "valid" defined at polyorb_hi-utils.ads:97, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Polyorb_hi__utils__valid___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Polyorb_hi__utils__hi_string
 use        Polyorb_hi__utils__valid

 val valid #"polyorb_hi-utils.ads" 97 0 0# 
   (h : Polyorb_hi__utils__hi_string.hi_string) : bool
  requires { true }
  ensures { ( (result = (Polyorb_hi__utils__valid.valid h)) /\ ( (result = True) <-> ((Standard__natural.to_rep (Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__l (Polyorb_hi__utils__hi_string.__split_fields h))) <= 80) ) ) }
 
 axiom valid__def_axiom :
  (forall h : Polyorb_hi__utils__hi_string.hi_string [(Polyorb_hi__utils__valid.valid h)].
   ( ((Polyorb_hi__utils__valid.valid h) = True) <-> ((Standard__natural.to_rep (Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__l (Polyorb_hi__utils__hi_string.__split_fields h))) <= 80) ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_hi_string" defined at polyorb_hi-utils.ads:88, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__utils__to_hi_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Polyorb_hi__utils__hi_string
 use        Polyorb_hi__utils__hi_string___axiom
 use        Polyorb_hi__utils__valid
 use        Polyorb_hi__utils__to_hi_string

 val to_hi_string #"polyorb_hi-utils.ads" 88 0 0# 
   (s : Standard__string.string) : Polyorb_hi__utils__hi_string.hi_string
  requires { true }
  ensures { ( (result = (Polyorb_hi__utils__to_hi_string.to_hi_string s)) /\ ( (Polyorb_hi__utils__hi_string___axiom.dynamic_invariant result True False True) /\ ((Polyorb_hi__utils__valid.valid result) = True) ) ) }
 
 axiom to_hi_string__post_axiom :
  (forall s : Standard__string.string [(Polyorb_hi__utils__to_hi_string.to_hi_string s)].
   ( (Standard__string___axiom.dynamic_invariant s True True True) -> (let result = (Polyorb_hi__utils__to_hi_string.to_hi_string s) in (
    ( ((Polyorb_hi__utils__valid.valid result) = True) /\ (Polyorb_hi__utils__hi_string___axiom.dynamic_invariant result True False True) )))
    ))

end

(* Module giving a program function and a defining axiom for the expression function "to_string" defined at polyorb_hi-utils.ads:91, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Polyorb_hi__utils__to_string___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        Standard__natural
 use        Standard__string___axiom
 use        Polyorb_hi__utils__hi_string
 use        Polyorb_hi__utils__hi_string___axiom
 use        Polyorb_hi__utils__valid
 use        Polyorb_hi__utils__to_string
 use        Polyorb_hi__utils__to_string__T13s
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 val to_string #"polyorb_hi-utils.ads" 91 0 0# 
   (h : Polyorb_hi__utils__hi_string.hi_string) : Standard__string.string
  requires { ((Polyorb_hi__utils__valid.valid h) = True) }
  ensures { ( (result = (Polyorb_hi__utils__to_string.to_string h)) /\ ( (Standard__string___axiom.dynamic_invariant result True False True) /\ (result = (let temp___478 = (let temp___476 = (Standard__natural.to_rep (Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__l (Polyorb_hi__utils__hi_string.__split_fields h))) in (
  (let temp___475 = 1 in (
  (let temp___477 = (Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__s (Polyorb_hi__utils__hi_string.__split_fields h)) in (
   (Polyorb_hi__utils__to_string__T13s.of_array temp___477 temp___475 temp___476)))
  ))
  ))
   in (
   (Standard__string.of_array (Polyorb_hi__utils__to_string__T13s.to_array temp___478) (Polyorb_hi__utils__to_string__T13s.first temp___478) (Polyorb_hi__utils__to_string__T13s.last temp___478))))
  ) ) ) }
 
 axiom to_string__post_axiom :
  (forall h : Polyorb_hi__utils__hi_string.hi_string [(Polyorb_hi__utils__to_string.to_string h)].
   ( ( (Polyorb_hi__utils__hi_string___axiom.dynamic_invariant h True True True) /\ ((Polyorb_hi__utils__valid.valid h) = True) ) -> (let result = (Polyorb_hi__utils__to_string.to_string h) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))
 
 axiom to_string__def_axiom :
  (forall h : Polyorb_hi__utils__hi_string.hi_string [(Polyorb_hi__utils__to_string.to_string h)].
   ( (Polyorb_hi__utils__hi_string___axiom.dynamic_invariant h True True True) -> ((Polyorb_hi__utils__to_string.to_string h) = (let temp___482 = (let temp___480 = (Standard__natural.to_rep (Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__l (Polyorb_hi__utils__hi_string.__split_fields h))) in (
   (let temp___479 = 1 in (
   (let temp___481 = (Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__s (Polyorb_hi__utils__hi_string.__split_fields h)) in (
    (Polyorb_hi__utils__to_string__T13s.of_array temp___481 temp___479 temp___480)))
   ))
   ))
    in (
    (Standard__string.of_array (Polyorb_hi__utils__to_string__T13s.to_array temp___482) (Polyorb_hi__utils__to_string__T13s.first temp___482) (Polyorb_hi__utils__to_string__T13s.last temp___482))))
   ) ))

end

(* Module giving a program function and a defining axiom for the expression function "length" defined at polyorb_hi-utils.ads:94, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Polyorb_hi__utils__length___axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Standard__natural___axiom
 use        Polyorb_hi__utils__hi_string
 use        Polyorb_hi__utils__hi_string___axiom
 use        Polyorb_hi__utils__valid
 use        Polyorb_hi__utils__length

 val length #"polyorb_hi-utils.ads" 94 0 0# 
   (h : Polyorb_hi__utils__hi_string.hi_string) : int
  requires { ((Polyorb_hi__utils__valid.valid h) = True) }
  ensures { ( (result = (Polyorb_hi__utils__length.length h)) /\ ( (Standard__natural___axiom.dynamic_invariant result True False True) /\ (result = (Standard__natural.to_rep (Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__l (Polyorb_hi__utils__hi_string.__split_fields h)))) ) ) }
 
 axiom length__post_axiom :
  (forall h : Polyorb_hi__utils__hi_string.hi_string [(Polyorb_hi__utils__length.length h)].
   ( ( (Polyorb_hi__utils__hi_string___axiom.dynamic_invariant h True True True) /\ ((Polyorb_hi__utils__valid.valid h) = True) ) -> (let result = (Polyorb_hi__utils__length.length h) in (
    (Standard__natural___axiom.dynamic_invariant result True False True)))
    ))
 
 axiom length__def_axiom :
  (forall h : Polyorb_hi__utils__hi_string.hi_string [(Polyorb_hi__utils__length.length h)].
   ( (Polyorb_hi__utils__hi_string___axiom.dynamic_invariant h True True True) -> ((Polyorb_hi__utils__length.length h) = (Standard__natural.to_rep (Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__l (Polyorb_hi__utils__hi_string.__split_fields h)))) ))

end

(* Module for declaring a program function (and possibly an axiom) for "parse_string" defined at polyorb_hi-utils.ads:99, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__utils__parse_string___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        Standard__integer
 use        Standard__integer___axiom
 use        Standard__character
 use        Standard__string___axiom
 use        Polyorb_hi__utils__parse_string

 val parse_string #"polyorb_hi-utils.ads" 99 0 0# 
   (s : Standard__string.string) (first : int) (delimiter : int) : int
  requires { ( (first >= (Standard__string.first s)) /\ (first <= (Standard__string.last s)) ) }
  ensures { ( (result = (Polyorb_hi__utils__parse_string.parse_string s first delimiter)) /\ (Standard__integer___axiom.dynamic_invariant result True False True) ) }
 
 axiom parse_string__post_axiom :
  (forall s : Standard__string.string.
  (forall first delimiter : int [(Polyorb_hi__utils__parse_string.parse_string s first delimiter)].
   ( ( ( ( (Standard__string___axiom.dynamic_invariant s True True True) /\ (Standard__integer.in_range first) ) /\ (Standard__character.in_range delimiter) ) /\ ( (first >= (Standard__string.first s)) /\ (first <= (Standard__string.last s)) ) ) -> (let result = (Polyorb_hi__utils__parse_string.parse_string s first delimiter) in (
    (Standard__integer___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_internal_code" defined at polyorb_hi-utils.adb:91, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__source
 use        Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__target___axiom
 use        Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code

 val to_internal_code #"polyorb_hi-utils.adb" 91 0 0# 
   (s : int) : BV16.t
  requires { true }
  ensures { ( (result = (Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code.to_internal_code s)) /\ (Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__target___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_internal_code__post_axiom :
  (forall s : int [(Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code.to_internal_code s)].
   ( (Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__source.in_range s) -> (let result = (Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code.to_internal_code s) in (
    (Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__target___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_corresponding_port" defined at polyorb_hi-utils.adb:102, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__source
 use        Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__target___axiom
 use        Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port

 val to_corresponding_port #"polyorb_hi-utils.adb" 102 0 0# 
   (s : BV16.t) : int
  requires { true }
  ensures { ( (result = (Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port.to_corresponding_port s)) /\ (Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__target___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_corresponding_port__post_axiom :
  (forall s : BV16.t [(Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port.to_corresponding_port s)].
   ( (Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__source.in_range s) -> (let result = (Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port.to_corresponding_port s) in (
    (Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__target___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "utils" defined at polyorb_hi-utils.ads:40, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Polyorb_hi__utils__package_def
 use import "_gnatprove_standard".Main

 let def #"a-unccon.ads" 20 0 0# "GP_Subp:polyorb_hi-utils.ads:40" "W:diverges:N" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( "GP_Sloc:polyorb_hi-utils.adb:127:1" () )
end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "internal_codeGP3220" defined at polyorb_hi-utils.ads:62, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Polyorb_hi__utils__internal_codeGP3220__package_def
 use import "_gnatprove_standard".Main

 let def #"a-unccon.ads" 20 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:62" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ()
end

(* Module for checking contracts and absence of run-time errors in subprogram "internal_code" defined at polyorb_hi-utils.ads:62, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__utils__internal_codeGP3220__internal_code__subprogram_def
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__utils__internal_codeGP3220__source___axiom
 use        Polyorb_hi__utils__internal_codeGP3220__internal_code__s
 use        Polyorb_hi__utils__internal_codeGP3220__internal_code__s___axiom
 use        Polyorb_hi__utils__internal_codeGP3220__source___axiom

 let def #"a-unccon.ads" 20 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:62" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-utils.ads:62 *)
  ;
  #"a-unccon.ads" 17 0 0# assume { (Polyorb_hi__utils__internal_codeGP3220__source___axiom.dynamic_invariant Polyorb_hi__utils__internal_codeGP3220__internal_code__s.s True False True) };
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-utils.ads:62 *)
  ;
  #"a-unccon.ads" 20 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-utils.ads:62 *)
  ;
  #"a-unccon.ads" 20 0 0# assume { true } )
end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "corresponding_entityGP3310" defined at polyorb_hi-utils.ads:64, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Polyorb_hi__utils__corresponding_entityGP3310__package_def
 use import "_gnatprove_standard".Main

 let def #"a-unccon.ads" 20 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:64" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ()
end

(* Module for checking contracts and absence of run-time errors in subprogram "corresponding_entity" defined at polyorb_hi-utils.ads:64, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__utils__corresponding_entityGP3310__corresponding_entity__subprogram_def
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__utils__corresponding_entityGP3310__source___axiom
 use        Polyorb_hi__utils__corresponding_entityGP3310__corresponding_entity__s
 use        Polyorb_hi__utils__corresponding_entityGP3310__corresponding_entity__s___axiom
 use        Polyorb_hi__utils__corresponding_entityGP3310__source___axiom

 let def #"a-unccon.ads" 20 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:64" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-utils.ads:64 *)
  ;
  #"a-unccon.ads" 17 0 0# assume { (Polyorb_hi__utils__corresponding_entityGP3310__source___axiom.dynamic_invariant Polyorb_hi__utils__corresponding_entityGP3310__corresponding_entity__s.s True False True) };
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-utils.ads:64 *)
  ;
  #"a-unccon.ads" 20 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-utils.ads:64 *)
  ;
  #"a-unccon.ads" 20 0 0# assume { true } )
end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "internal_codeGP3408" defined at polyorb_hi-utils.ads:67, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Polyorb_hi__utils__internal_codeGP3408__package_def
 use import "_gnatprove_standard".Main

 let def #"a-unccon.ads" 20 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:67" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ()
end

(* Module for checking contracts and absence of run-time errors in subprogram "internal_code" defined at polyorb_hi-utils.ads:67, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__utils__internal_codeGP3408__internal_code__subprogram_def
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__utils__internal_codeGP3408__source___axiom
 use        Polyorb_hi__utils__internal_codeGP3408__internal_code__s
 use        Polyorb_hi__utils__internal_codeGP3408__internal_code__s___axiom
 use        Polyorb_hi__utils__internal_codeGP3408__source___axiom

 let def #"a-unccon.ads" 20 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:67" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-utils.ads:67 *)
  ;
  #"a-unccon.ads" 17 0 0# assume { (Polyorb_hi__utils__internal_codeGP3408__source___axiom.dynamic_invariant Polyorb_hi__utils__internal_codeGP3408__internal_code__s.s True False True) };
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-utils.ads:67 *)
  ;
  #"a-unccon.ads" 20 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-utils.ads:67 *)
  ;
  #"a-unccon.ads" 20 0 0# assume { true } )
end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "corresponding_nodeGP3496" defined at polyorb_hi-utils.ads:69, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Polyorb_hi__utils__corresponding_nodeGP3496__package_def
 use import "_gnatprove_standard".Main

 let def #"a-unccon.ads" 20 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:69" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ()
end

(* Module for checking contracts and absence of run-time errors in subprogram "corresponding_node" defined at polyorb_hi-utils.ads:69, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__utils__corresponding_nodeGP3496__corresponding_node__subprogram_def
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__utils__corresponding_nodeGP3496__source___axiom
 use        Polyorb_hi__utils__corresponding_nodeGP3496__corresponding_node__s
 use        Polyorb_hi__utils__corresponding_nodeGP3496__corresponding_node__s___axiom
 use        Polyorb_hi__utils__corresponding_nodeGP3496__source___axiom

 let def #"a-unccon.ads" 20 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:69" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-utils.ads:69 *)
  ;
  #"a-unccon.ads" 17 0 0# assume { (Polyorb_hi__utils__corresponding_nodeGP3496__source___axiom.dynamic_invariant Polyorb_hi__utils__corresponding_nodeGP3496__corresponding_node__s.s True False True) };
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-utils.ads:69 *)
  ;
  #"a-unccon.ads" 20 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-utils.ads:69 *)
  ;
  #"a-unccon.ads" 20 0 0# assume { true } )
end

(* Module for checking contracts and absence of run-time errors in subprogram "internal_code__3" defined at polyorb_hi-utils.ads:72, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__utils__internal_code__3__subprogram_def
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Polyorb_hi_generated__deployment__port_type___axiom
 use        Polyorb_hi__utils__internal_code__3__p
 use        Polyorb_hi__utils__swap_bytes___axiom
 use        Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code___axiom
 use        Polyorb_hi__utils__internal_code__3__p___axiom
 use        Polyorb_hi__utils__swap_bytes___axiom
 use        Interfaces__unsigned_16___axiom
 use        Polyorb_hi_generated__deployment__port_type___axiom
 use        Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code___axiom
 use        Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__source___axiom
 use        Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__target___axiom

 val polyorb_hi__utils__internal_code__3__result #"a-unccon.ads" 20 0 0# "model" "model_trace:2838@result"  : BV16.t__ref 
 
 let def #"interfac.ads" 66 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:72" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-utils.ads:72 *)
  ;
  #"polyorb_hi_generated-deployment.ads" 139 0 0# assume { (Polyorb_hi_generated__deployment__port_type___axiom.dynamic_invariant Polyorb_hi__utils__internal_code__3__p.p True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-utils.ads:72 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-utils.ads:72 *)
  ;
  #"polyorb_hi-utils.ads" 72 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-utils.ads:72 *)
  ;
  #"polyorb_hi-utils.ads" 72 0 0# assume { true };
  () (* checking of pragma precondition polyorb_hi-utils.ads:72 *)
  ;
  try
   ( ( "GP_Sloc:polyorb_hi-utils.adb:94:7" ( #"polyorb_hi-utils.adb" 94 0 0# polyorb_hi__utils__internal_code__3__result.BV16.t__content <- ( (Polyorb_hi__utils__swap_bytes___axiom.swap_bytes((Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code___axiom.to_internal_code(Polyorb_hi__utils__internal_code__3__p.p)))) );
   #"polyorb_hi-utils.adb" 94 0 0# raise Return__exc ) );
   #"polyorb_hi-utils.adb" 90 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-utils.ads:72 *)
  ;
  #"polyorb_hi-utils.adb" 90 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  polyorb_hi__utils__internal_code__3__result.BV16.t__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "corresponding_port" defined at polyorb_hi-utils.ads:73, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__utils__corresponding_port__subprogram_def
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Interfaces__unsigned_16___axiom
 use        Polyorb_hi__utils__corresponding_port__i
 use        Polyorb_hi__utils__swap_bytes___axiom
 use        Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port___axiom
 use        Polyorb_hi__utils__corresponding_port__i___axiom
 use        Polyorb_hi__utils__swap_bytes___axiom
 use        Interfaces__unsigned_16___axiom
 use        Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port___axiom
 use        Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__source___axiom
 use        Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__target___axiom

 val polyorb_hi__utils__corresponding_port__result #"interfac.ads" 66 0 0# "model" "model_trace:2857@result"  : int__ref 
 
 let def #"polyorb_hi_generated-deployment.ads" 139 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:73" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-utils.ads:73 *)
  ;
  #"interfac.ads" 66 0 0# assume { (Interfaces__unsigned_16___axiom.dynamic_invariant Polyorb_hi__utils__corresponding_port__i.i True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-utils.ads:73 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-utils.ads:73 *)
  ;
  #"polyorb_hi-utils.ads" 73 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-utils.ads:73 *)
  ;
  #"polyorb_hi-utils.ads" 73 0 0# assume { true };
  () (* checking of pragma precondition polyorb_hi-utils.ads:73 *)
  ;
  try
   ( ( "GP_Sloc:polyorb_hi-utils.adb:105:7" ( #"polyorb_hi-utils.adb" 105 0 0# polyorb_hi__utils__corresponding_port__result.int__content <- ( (Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port___axiom.to_corresponding_port((Polyorb_hi__utils__swap_bytes___axiom.swap_bytes(Polyorb_hi__utils__corresponding_port__i.i)))) );
   #"polyorb_hi-utils.adb" 105 0 0# raise Return__exc ) );
   #"polyorb_hi-utils.adb" 101 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-utils.ads:73 *)
  ;
  #"polyorb_hi-utils.adb" 101 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  polyorb_hi__utils__corresponding_port__result.int__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "swap_bytes" defined at polyorb_hi-utils.ads:75, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__utils__swap_bytes__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        "_gnatprove_standard".BV16
 use        Interfaces__unsigned_16___axiom
 use        Polyorb_hi__utils__swap_bytes__b
 use        Polyorb_hi__utils__swap_bytes__b___axiom
 use        Interfaces__unsigned_16___axiom

 val polyorb_hi__utils__swap_bytes__result #"polyorb_hi_generated-deployment.ads" 139 0 0# "model" "model_trace:2876@result"  : BV16.t__ref 
 
 let def #"interfac.ads" 66 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:75" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-utils.ads:75 *)
  ;
  #"interfac.ads" 66 0 0# assume { (Interfaces__unsigned_16___axiom.dynamic_invariant Polyorb_hi__utils__swap_bytes__b.b True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-utils.ads:75 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-utils.ads:75 *)
  ;
  #"polyorb_hi-utils.ads" 75 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-utils.ads:75 *)
  ;
  #"polyorb_hi-utils.ads" 75 0 0# assume { true };
  () (* checking of pragma precondition polyorb_hi-utils.ads:75 *)
  ;
  try
   ( ( "GP_Sloc:polyorb_hi-utils.adb:70:7" () );
   ( "GP_Sloc:polyorb_hi-utils.adb:74:7" (if ((Boolean.of_int(0))) then (
    ( ( "GP_Sloc:polyorb_hi-utils.adb:75:10" ( #"polyorb_hi-utils.adb" 75 0 0# polyorb_hi__utils__swap_bytes__result.BV16.t__content <- ( Polyorb_hi__utils__swap_bytes__b.b );
    #"polyorb_hi-utils.adb" 75 0 0# raise Return__exc ) );
    ( "GP_Sloc:polyorb_hi-utils.adb:77:10" () ) )) else (
    ( "GP_Sloc:polyorb_hi-utils.adb:82:10" ( #"polyorb_hi-utils.adb" 82 0 0# polyorb_hi__utils__swap_bytes__result.BV16.t__content <- ( (BV16.add(( #"polyorb_hi-utils.adb" 82 0 0# "model_vc" "keep_on_simp" "GP_Sloc:polyorb_hi-utils.adb:82:20" "GP_Reason:VC_DIVISION_CHECK" "GP_Id:0" "comment:         return (B / 256) + (B mod 256) * 256;
                   ^ polyorb_hi-utils.adb:82:20:VC_DIVISION_CHECK" "GP_Shape:if__return__add__div" (BV16.udiv_(Polyorb_hi__utils__swap_bytes__b.b) (( BV16.of_int 256 ))) )) ((BV16.mul(( #"polyorb_hi-utils.adb" 82 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_DIVISION_CHECK" "GP_Sloc:polyorb_hi-utils.adb:82:32" "GP_Id:1" "comment:         return (B / 256) + (B mod 256) * 256;
                               ^ polyorb_hi-utils.adb:82:32:VC_DIVISION_CHECK" "GP_Shape:if__return__add__mult__mod" (BV16.urem_(Polyorb_hi__utils__swap_bytes__b.b) (( BV16.of_int 256 ))) )) (( BV16.of_int 256 ))))) );
    #"polyorb_hi-utils.adb" 82 0 0# raise Return__exc ) ))) );
   #"polyorb_hi-utils.adb" 64 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-utils.ads:75 *)
  ;
  #"polyorb_hi-utils.adb" 64 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  polyorb_hi__utils__swap_bytes__result.BV16.t__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "valid" defined at polyorb_hi-utils.ads:97, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__utils__valid__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Polyorb_hi__utils__hi_string
 use        Polyorb_hi__utils__hi_string___axiom
 use        Polyorb_hi__utils__valid__h
 use        Standard__natural___axiom
 use        Polyorb_hi__utils__valid__h___axiom
 use        Polyorb_hi__utils__hi_string___axiom

 val polyorb_hi__utils__valid__result #"interfac.ads" 66 0 0# "model" "model_trace:2998@result"  : bool__ref 
 
 let def #"interfac.ads" 66 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:97" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-utils.ads:97 *)
  ;
  #"polyorb_hi-utils.ads" 86 0 0# assume { (Polyorb_hi__utils__hi_string___axiom.dynamic_invariant Polyorb_hi__utils__valid__h.h True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-utils.ads:97 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-utils.ads:97 *)
  ;
  #"polyorb_hi-utils.ads" 97 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-utils.ads:97 *)
  ;
  #"polyorb_hi-utils.ads" 97 0 0# assume { true };
  () (* checking of pragma precondition polyorb_hi-utils.ads:97 *)
  ;
  try
   ( ( "GP_Sloc:polyorb_hi-utils.ads:135:12" ( #"polyorb_hi-utils.ads" 135 0 0# polyorb_hi__utils__valid__result.bool__content <- ( ((Standard__natural.to_rep((Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__l((Polyorb_hi__utils__hi_string.__split_fields(Polyorb_hi__utils__valid__h.h)))))) <= 80) );
   #"polyorb_hi-utils.ads" 135 0 0# raise Return__exc ) );
   #"polyorb_hi-utils.ads" 134 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-utils.ads:97 *)
  ;
  #"polyorb_hi-utils.ads" 134 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  polyorb_hi__utils__valid__result.bool__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "to_hi_string" defined at polyorb_hi-utils.ads:88, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__utils__to_hi_string__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        Standard__integer
 use        Standard__natural
 use        Standard__character
 use        Array__Int__Standard__character
 use        Standard__string___axiom
 use        Polyorb_hi__utils__hi_string__T7s
 use        Polyorb_hi__utils__hi_string
 use        Polyorb_hi__utils__to_hi_string__s
 use        Polyorb_hi__utils__valid
 use        Polyorb_hi__utils__valid___axiom
 use        Polyorb_hi__utils__to_hi_string__TTrSP1
 use        Polyorb_hi__utils__to_hi_string__TrS___axiom
 use        Polyorb_hi__utils__to_hi_string__T2b
 use        Array__Int__Standard__character
 use        Polyorb_hi__utils__to_hi_string__r
 use        Polyorb_hi__utils__to_hi_string__T6b
 use        Polyorb_hi__utils__to_hi_string__T8b
 use        Polyorb_hi__utils__to_hi_string__T10b
 use        Polyorb_hi__utils__to_hi_string__T13b
 use        Array__Int__Standard__character
 use        Polyorb_hi__utils__to_hi_string__r__aggregate_def
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Standard__natural___axiom
 use        Standard__positive___axiom
 use        Standard__character___axiom
 use        Standard__string___axiom
 use        Standard__integer___axiom
 use        Polyorb_hi__utils__to_hi_string__r___axiom
 use        Polyorb_hi__utils__to_hi_string__s___axiom
 use        Polyorb_hi__utils__valid___axiom
 use        Polyorb_hi__utils__hi_string___axiom
 use        Polyorb_hi__utils__hi_string__T7s___axiom
 use        Polyorb_hi__utils__to_hi_string__TrS___axiom
 use        Polyorb_hi__utils__to_hi_string__TTrSP1___axiom
 use        Polyorb_hi__utils__to_hi_string__T2b___axiom
 use        Polyorb_hi__utils__to_hi_string__T5b___axiom
 use        Polyorb_hi__utils__to_hi_string__T6b___axiom
 use        Polyorb_hi__utils__to_hi_string__T7b___axiom
 use        Polyorb_hi__utils__to_hi_string__T8b___axiom
 use        Polyorb_hi__utils__to_hi_string__T10b___axiom
 use        Polyorb_hi__utils__to_hi_string__T12b___axiom
 use        Polyorb_hi__utils__to_hi_string__T13b___axiom

 val polyorb_hi__utils__to_hi_string__result #"polyorb_hi-utils.ads" 134 0 0# "model_projected" "model_trace:2918@result"  : Polyorb_hi__utils__hi_string.hi_string__ref 
 
 let def #"polyorb_hi-utils.ads" 124 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:88" 
   (__void_param : unit)
  requires { true }
  ensures { ( #"polyorb_hi-utils.ads" 89 0 0# "model_vc_post" "keep_on_simp" "GP_Sloc:polyorb_hi-utils.ads:89:19" "GP_Reason:VC_POSTCONDITION" "GP_Id:12" "comment:     with Post => (Valid (To_Hi_String'Result));
                  ^ polyorb_hi-utils.ads:89:19:VC_POSTCONDITION" "GP_Shape:pragargs__call_valid" ( "GP_Pretty_Ada:7197" "GP_Sloc:polyorb_hi-utils.ads:89:19" ((Polyorb_hi__utils__valid.valid polyorb_hi__utils__to_hi_string__result.Polyorb_hi__utils__hi_string.hi_string__content) = True) ) ) }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-utils.ads:88 *)
  ;
  #"system.ads" 1 0 0# assume { (Standard__string___axiom.dynamic_invariant Polyorb_hi__utils__to_hi_string__s.s True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-utils.ads:88 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-utils.ads:88 *)
  ;
  #"polyorb_hi-utils.ads" 88 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-utils.ads:88 *)
  ;
  #"polyorb_hi-utils.ads" 88 0 0# assume { true };
  () (* checking of pragma precondition polyorb_hi-utils.ads:88 *)
  ;
  try
   ( #"polyorb_hi-utils.adb" 39 0 0# Polyorb_hi__utils__to_hi_string__r.r.Array__Int__Standard__character.map__content <- ( ( #"polyorb_hi-utils.adb" 39 0 0# assert { ( #"polyorb_hi-utils.adb" 39 0 0# "model_vc" "keep_on_simp" "GP_Sloc:polyorb_hi-utils.adb:39:43" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:2" "comment:      R : String (1 .. HI_String_Size) := (others => ' ');
                                          ^ polyorb_hi-utils.adb:39:43:VC_LENGTH_CHECK" "GP_Shape:r_decl__aggr" ((if ((Polyorb_hi__utils__to_hi_string__T2b.first <= Polyorb_hi__utils__to_hi_string__T2b.last)) then (
    ((Polyorb_hi__utils__to_hi_string__T2b.last - Polyorb_hi__utils__to_hi_string__T2b.first) + 1)) else (
    0)) = (if ((Polyorb_hi__utils__to_hi_string__TTrSP1.first <= Polyorb_hi__utils__to_hi_string__TTrSP1.last)) then (
    ((Polyorb_hi__utils__to_hi_string__TTrSP1.last - Polyorb_hi__utils__to_hi_string__TTrSP1.first) + 1)) else (
    0))) ) };
   (Polyorb_hi__utils__to_hi_string__r__aggregate_def.polyorb_hi__utils__to_hi_string__r__aggregate_def(32)) ) );
   #"polyorb_hi-utils.adb" 39 0 0# assume { (Polyorb_hi__utils__to_hi_string__TrS___axiom.dynamic_invariant Polyorb_hi__utils__to_hi_string__r.r.Array__Int__Standard__character.map__content True False True) };
   ( "GP_Sloc:polyorb_hi-utils.adb:41:7" (if ((( #"polyorb_hi-utils.adb" 39 0 0# abstract ensures {true}(let _ = Polyorb_hi__utils__to_hi_string__s.s in (
    ()))
    end ;
   (Standard__string.length(Polyorb_hi__utils__to_hi_string__s.s)) ) < 1)) then (
    ( "GP_Sloc:polyorb_hi-utils.adb:42:10" ( #"polyorb_hi-utils.adb" 42 0 0# polyorb_hi__utils__to_hi_string__result.Polyorb_hi__utils__hi_string.hi_string__content <- ( { Polyorb_hi__utils__hi_string.__split_fields = { Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__s = ( #"polyorb_hi-utils.adb" 42 0 0# assert { ( #"polyorb_hi-utils.adb" 42 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Shape:if__return__hi_string_qual__aggr" "GP_Sloc:polyorb_hi-utils.adb:42:33" "GP_Id:11" "comment:         return HI_String'(S => R,
                                ^ polyorb_hi-utils.adb:42:33:VC_LENGTH_CHECK" ((if ((Polyorb_hi__utils__to_hi_string__TTrSP1.first <= Polyorb_hi__utils__to_hi_string__TTrSP1.last)) then (
     ((Polyorb_hi__utils__to_hi_string__TTrSP1.last - Polyorb_hi__utils__to_hi_string__TTrSP1.first) + 1)) else (
     0)) = (if ((Polyorb_hi__utils__hi_string__T7s.first <= Polyorb_hi__utils__hi_string__T7s.last)) then (
     ((Polyorb_hi__utils__hi_string__T7s.last - Polyorb_hi__utils__hi_string__T7s.first) + 1)) else (
     0))) ) };
    Polyorb_hi__utils__to_hi_string__r.r.Array__Int__Standard__character.map__content ); Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__l = (Standard__natural.of_rep(0)) } } );
    #"polyorb_hi-utils.adb" 42 0 0# raise Return__exc ) )) else (
    ( "GP_Sloc:polyorb_hi-utils.adb:45:7" (if ((( #"polyorb_hi-utils.adb" 42 0 0# abstract ensures {true}(let _ = Polyorb_hi__utils__to_hi_string__s.s in (
     ()))
     end ;
    (Standard__string.length(Polyorb_hi__utils__to_hi_string__s.s)) ) <= 80)) then (
     ( ( "GP_Sloc:polyorb_hi-utils.adb:46:28" #"polyorb_hi-utils.adb" 46 0 0# Polyorb_hi__utils__to_hi_string__r.r.Array__Int__Standard__character.map__content <- ( (let temp___580 = (let temp___576 = (let temp___575 = (let temp___574 = ( #"polyorb_hi-utils.adb" 39 0 0# abstract ensures {true}(let _ = Polyorb_hi__utils__to_hi_string__s.s in (
      ()))
      end ;
     (Standard__string.last(Polyorb_hi__utils__to_hi_string__s.s)) ) in (
     (let temp___573 = ( #"polyorb_hi-utils.ads" 88 0 0# abstract ensures {true}(let _ = Polyorb_hi__utils__to_hi_string__s.s in (
      ()))
      end ;
     (Standard__string.first(Polyorb_hi__utils__to_hi_string__s.s)) ) in (
      (Polyorb_hi__utils__to_hi_string__T8b.of_array(( #"polyorb_hi-utils.adb" 46 0 0# assert { ( #"polyorb_hi-utils.adb" 46 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Shape:if__r_assign__slice" "GP_Sloc:polyorb_hi-utils.adb:46:31" "GP_Id:7" "comment:         R (1 .. S'Length) := S (S'First .. S'Last);
                              ^ polyorb_hi-utils.adb:46:31:VC_RANGE_CHECK" ( (temp___573 <= temp___574) -> ( ( ((Standard__string.first Polyorb_hi__utils__to_hi_string__s.s) <= temp___573) /\ (temp___573 <= (Standard__string.last Polyorb_hi__utils__to_hi_string__s.s)) ) /\ ( ((Standard__string.first Polyorb_hi__utils__to_hi_string__s.s) <= temp___574) /\ (temp___574 <= (Standard__string.last Polyorb_hi__utils__to_hi_string__s.s)) ) ) ) ) };
      (Standard__string.to_array(Polyorb_hi__utils__to_hi_string__s.s)) )) (temp___573) (temp___574))))
     ))
      in (
      ( #"polyorb_hi-utils.adb" 46 0 0# assert { ( #"polyorb_hi-utils.adb" 46 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Shape:if__r_assign__slice" "GP_Sloc:polyorb_hi-utils.adb:46:31" "GP_Id:8" "comment:         R (1 .. S'Length) := S (S'First .. S'Last);
                              ^ polyorb_hi-utils.adb:46:31:VC_LENGTH_CHECK" ((if (((Polyorb_hi__utils__to_hi_string__T8b.first(temp___575)) <= (Polyorb_hi__utils__to_hi_string__T8b.last(temp___575)))) then (
       (((Polyorb_hi__utils__to_hi_string__T8b.last(temp___575)) - (Polyorb_hi__utils__to_hi_string__T8b.first(temp___575))) + 1)) else (
       0)) = (if ((1 <= (Standard__string.length Polyorb_hi__utils__to_hi_string__s.s))) then (
       (((Standard__string.length Polyorb_hi__utils__to_hi_string__s.s) - 1) + 1)) else (
       0))) ) };
      (Polyorb_hi__utils__to_hi_string__T6b.of_array((Array__Int__Standard__character.slide((Polyorb_hi__utils__to_hi_string__T8b.to_array(temp___575))) ((Polyorb_hi__utils__to_hi_string__T8b.first(temp___575))) (1))) (1) ((Standard__string.length Polyorb_hi__utils__to_hi_string__s.s))) )))
      in (
     (let temp___579 = (let temp___578 = (Standard__string.length Polyorb_hi__utils__to_hi_string__s.s) in (
     (let temp___577 = 1 in (
      (Polyorb_hi__utils__to_hi_string__T6b.of_array Polyorb_hi__utils__to_hi_string__r.r.Array__Int__Standard__character.map__content temp___577 temp___578)))
     ))
      in (
      ( #"polyorb_hi-utils.adb" 46 0 0# assert { ( #"polyorb_hi-utils.adb" 46 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Sloc:polyorb_hi-utils.adb:46:28" "GP_Id:9" "comment:         R (1 .. S'Length) := S (S'First .. S'Last);
                           ^ polyorb_hi-utils.adb:46:28:VC_LENGTH_CHECK" "GP_Shape:if__r_assign" ((if (((Polyorb_hi__utils__to_hi_string__T6b.first temp___576) <= (Polyorb_hi__utils__to_hi_string__T6b.last temp___576))) then (
       (((Polyorb_hi__utils__to_hi_string__T6b.last temp___576) - (Polyorb_hi__utils__to_hi_string__T6b.first temp___576)) + 1)) else (
       0)) = (if (((Polyorb_hi__utils__to_hi_string__T6b.first temp___579) <= (Polyorb_hi__utils__to_hi_string__T6b.last temp___579))) then (
       (((Polyorb_hi__utils__to_hi_string__T6b.last temp___579) - (Polyorb_hi__utils__to_hi_string__T6b.first temp___579)) + 1)) else (
       0))) ) };
      temp___576 )))
     ))
      in (
      #"polyorb_hi-utils.adb" 46 0 0# (any Array__Int__Standard__character.map
      ensures {( ( ( true /\ (Polyorb_hi__utils__to_hi_string__TTrSP1.first = Polyorb_hi__utils__to_hi_string__TTrSP1.first) ) /\ (Polyorb_hi__utils__to_hi_string__TTrSP1.last = Polyorb_hi__utils__to_hi_string__TTrSP1.last) ) /\ (forall temp___581 : int.
       (if (( (1 <= temp___581) /\ (temp___581 <= (Standard__string.length Polyorb_hi__utils__to_hi_string__s.s)) )) then (
        ((Array__Int__Standard__character.get result temp___581) = (Array__Int__Standard__character.get (Polyorb_hi__utils__to_hi_string__T6b.to_array temp___580) temp___581))) else (
        ((Array__Int__Standard__character.get result temp___581) = (Array__Int__Standard__character.get Polyorb_hi__utils__to_hi_string__r.r.Array__Int__Standard__character.map__content temp___581))))) )} 
      )))
      ) );
     ( "GP_Sloc:polyorb_hi-utils.adb:48:10" ( #"polyorb_hi-utils.adb" 48 0 0# polyorb_hi__utils__to_hi_string__result.Polyorb_hi__utils__hi_string.hi_string__content <- ( { Polyorb_hi__utils__hi_string.__split_fields = { Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__s = ( #"polyorb_hi-utils.adb" 48 0 0# assert { ( #"polyorb_hi-utils.adb" 48 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Shape:if__return__hi_string_qual__aggr" "GP_Sloc:polyorb_hi-utils.adb:48:33" "GP_Id:10" "comment:         return HI_String'(S => R,
                                ^ polyorb_hi-utils.adb:48:33:VC_LENGTH_CHECK" ((if ((Polyorb_hi__utils__to_hi_string__TTrSP1.first <= Polyorb_hi__utils__to_hi_string__TTrSP1.last)) then (
      ((Polyorb_hi__utils__to_hi_string__TTrSP1.last - Polyorb_hi__utils__to_hi_string__TTrSP1.first) + 1)) else (
      0)) = (if ((Polyorb_hi__utils__hi_string__T7s.first <= Polyorb_hi__utils__hi_string__T7s.last)) then (
      ((Polyorb_hi__utils__hi_string__T7s.last - Polyorb_hi__utils__hi_string__T7s.first) + 1)) else (
      0))) ) };
     Polyorb_hi__utils__to_hi_string__r.r.Array__Int__Standard__character.map__content ); Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__l = (Standard__natural.of_rep(( #"polyorb_hi-utils.adb" 49 0 0# abstract ensures {true}(let _ = Polyorb_hi__utils__to_hi_string__s.s in (
      ()))
      end ;
     (Standard__string.length(Polyorb_hi__utils__to_hi_string__s.s)) ))) } } );
     #"polyorb_hi-utils.adb" 48 0 0# raise Return__exc ) ) )) else (
     ( ( "GP_Sloc:polyorb_hi-utils.adb:52:34" #"polyorb_hi-utils.adb" 52 0 0# Polyorb_hi__utils__to_hi_string__r.r.Array__Int__Standard__character.map__content <- ( (let temp___571 = (let temp___570 = (let temp___569 = (( #"polyorb_hi-utils.adb" 52 0 0# "model_vc" "keep_on_simp" "GP_Sloc:polyorb_hi-utils.adb:52:59" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Id:3" "comment:         R (1 .. HI_String_Size) := S (S'First .. S'First + HI_String_Size - 1);
                                                          ^ polyorb_hi-utils.adb:52:59:VC_OVERFLOW_CHECK" "GP_Shape:if__r_assign__slice__range__sub__add" (Standard__integer.range_check_((( #"polyorb_hi-utils.adb" 52 0 0# abstract ensures {true}(let _ = Polyorb_hi__utils__to_hi_string__s.s in (
      ()))
      end ;
     (Standard__string.first(Polyorb_hi__utils__to_hi_string__s.s)) ) + 80))) ) - 1) in (
     (let temp___568 = ( #"polyorb_hi-utils.ads" 88 0 0# abstract ensures {true}(let _ = Polyorb_hi__utils__to_hi_string__s.s in (
      ()))
      end ;
     (Standard__string.first(Polyorb_hi__utils__to_hi_string__s.s)) ) in (
      (Polyorb_hi__utils__to_hi_string__T13b.of_array(( #"polyorb_hi-utils.adb" 52 0 0# assert { ( #"polyorb_hi-utils.adb" 52 0 0# "model_vc" "keep_on_simp" "GP_Sloc:polyorb_hi-utils.adb:52:37" "GP_Reason:VC_RANGE_CHECK" "GP_Id:4" "comment:         R (1 .. HI_String_Size) := S (S'First .. S'First + HI_String_Size - 1);
                                    ^ polyorb_hi-utils.adb:52:37:VC_RANGE_CHECK" "GP_Shape:if__r_assign__slice" ( (temp___568 <= temp___569) -> ( ( ((Standard__string.first Polyorb_hi__utils__to_hi_string__s.s) <= temp___568) /\ (temp___568 <= (Standard__string.last Polyorb_hi__utils__to_hi_string__s.s)) ) /\ ( ((Standard__string.first Polyorb_hi__utils__to_hi_string__s.s) <= temp___569) /\ (temp___569 <= (Standard__string.last Polyorb_hi__utils__to_hi_string__s.s)) ) ) ) ) };
      (Standard__string.to_array(Polyorb_hi__utils__to_hi_string__s.s)) )) (temp___568) (temp___569))))
     ))
      in (
      ( #"polyorb_hi-utils.adb" 52 0 0# assert { ( #"polyorb_hi-utils.adb" 52 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Sloc:polyorb_hi-utils.adb:52:37" "GP_Shape:if__r_assign__slice" "GP_Id:5" "comment:         R (1 .. HI_String_Size) := S (S'First .. S'First + HI_String_Size - 1);
                                    ^ polyorb_hi-utils.adb:52:37:VC_LENGTH_CHECK" ((if (((Polyorb_hi__utils__to_hi_string__T13b.first(temp___570)) <= (Polyorb_hi__utils__to_hi_string__T13b.last(temp___570)))) then (
       (((Polyorb_hi__utils__to_hi_string__T13b.last(temp___570)) - (Polyorb_hi__utils__to_hi_string__T13b.first(temp___570))) + 1)) else (
       0)) = (if ((Polyorb_hi__utils__to_hi_string__T10b.first <= Polyorb_hi__utils__to_hi_string__T10b.last)) then (
       ((Polyorb_hi__utils__to_hi_string__T10b.last - Polyorb_hi__utils__to_hi_string__T10b.first) + 1)) else (
       0))) ) };
      (Array__Int__Standard__character.slide((Polyorb_hi__utils__to_hi_string__T13b.to_array(temp___570))) ((Polyorb_hi__utils__to_hi_string__T13b.first(temp___570))) (Polyorb_hi__utils__to_hi_string__T10b.first)) )))
      in (
      #"polyorb_hi-utils.adb" 52 0 0# (any Array__Int__Standard__character.map
      ensures {( ( ( true /\ (Polyorb_hi__utils__to_hi_string__TTrSP1.first = Polyorb_hi__utils__to_hi_string__TTrSP1.first) ) /\ (Polyorb_hi__utils__to_hi_string__TTrSP1.last = Polyorb_hi__utils__to_hi_string__TTrSP1.last) ) /\ (forall temp___572 : int.
       (if (( (1 <= temp___572) /\ (temp___572 <= 80) )) then (
        ((Array__Int__Standard__character.get result temp___572) = (Array__Int__Standard__character.get temp___571 temp___572))) else (
        ((Array__Int__Standard__character.get result temp___572) = (Array__Int__Standard__character.get Polyorb_hi__utils__to_hi_string__r.r.Array__Int__Standard__character.map__content temp___572))))) )} 
      )))
      ) );
     ( "GP_Sloc:polyorb_hi-utils.adb:53:10" ( #"polyorb_hi-utils.adb" 53 0 0# polyorb_hi__utils__to_hi_string__result.Polyorb_hi__utils__hi_string.hi_string__content <- ( { Polyorb_hi__utils__hi_string.__split_fields = { Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__s = ( #"polyorb_hi-utils.adb" 53 0 0# assert { ( #"polyorb_hi-utils.adb" 53 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Sloc:polyorb_hi-utils.adb:53:33" "GP_Id:6" "comment:         return HI_String'(S => R,
                                ^ polyorb_hi-utils.adb:53:33:VC_LENGTH_CHECK" "GP_Shape:if__return__hi_string_qual__aggr" ((if ((Polyorb_hi__utils__to_hi_string__TTrSP1.first <= Polyorb_hi__utils__to_hi_string__TTrSP1.last)) then (
      ((Polyorb_hi__utils__to_hi_string__TTrSP1.last - Polyorb_hi__utils__to_hi_string__TTrSP1.first) + 1)) else (
      0)) = (if ((Polyorb_hi__utils__hi_string__T7s.first <= Polyorb_hi__utils__hi_string__T7s.last)) then (
      ((Polyorb_hi__utils__hi_string__T7s.last - Polyorb_hi__utils__hi_string__T7s.first) + 1)) else (
      0))) ) };
     Polyorb_hi__utils__to_hi_string__r.r.Array__Int__Standard__character.map__content ); Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__l = (Standard__natural.of_rep(80)) } } );
     #"polyorb_hi-utils.adb" 53 0 0# raise Return__exc ) ) ))) ))) );
   #"polyorb_hi-utils.adb" 38 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-utils.ads:88 *)
  ;
  #"polyorb_hi-utils.adb" 38 0 0# abstract ensures {true}(let _ = (Polyorb_hi__utils__valid___axiom.valid(polyorb_hi__utils__to_hi_string__result.Polyorb_hi__utils__hi_string.hi_string__content)) in (
   ()))
   end ;
  polyorb_hi__utils__to_hi_string__result.Polyorb_hi__utils__hi_string.hi_string__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "to_string" defined at polyorb_hi-utils.ads:91, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__utils__to_string__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        Standard__natural
 use        Polyorb_hi__utils__hi_string__T7s
 use        Polyorb_hi__utils__hi_string
 use        Polyorb_hi__utils__hi_string___axiom
 use        Polyorb_hi__utils__valid
 use        Polyorb_hi__utils__valid___axiom
 use        Polyorb_hi__utils__to_string__h
 use        Polyorb_hi__utils__to_string__T13s
 use        Array__Int__Standard__character
 use        Standard__natural___axiom
 use        Standard__positive___axiom
 use        Standard__character___axiom
 use        Standard__string___axiom
 use        Standard__integer___axiom
 use        Polyorb_hi__utils__to_string__h___axiom
 use        Polyorb_hi__utils__valid___axiom
 use        Polyorb_hi__utils__hi_string___axiom
 use        Polyorb_hi__utils__hi_string__T7s___axiom
 use        Polyorb_hi__utils__to_string__T12s___axiom
 use        Polyorb_hi__utils__to_string__T13s___axiom

 val polyorb_hi__utils__to_string__result #"polyorb_hi-utils.ads" 124 0 0# "model_projected" "model_trace:2946@result"  : Standard__string.string__ref 
 
 let def #"system.ads" 1 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:91" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-utils.ads:91 *)
  ;
  #"polyorb_hi-utils.ads" 86 0 0# assume { (Polyorb_hi__utils__hi_string___axiom.dynamic_invariant Polyorb_hi__utils__to_string__h.h True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-utils.ads:91 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-utils.ads:91 *)
  ;
  #"polyorb_hi-utils.ads" 91 0 0# abstract ensures {true}(let _ = (Polyorb_hi__utils__valid___axiom.valid(Polyorb_hi__utils__to_string__h.h)) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-utils.ads:91 *)
  ;
  #"polyorb_hi-utils.ads" 91 0 0# assume { ((Polyorb_hi__utils__valid.valid Polyorb_hi__utils__to_string__h.h) = True) };
  () (* checking of pragma precondition polyorb_hi-utils.ads:91 *)
  ;
  try
   ( ( "GP_Sloc:polyorb_hi-utils.ads:138:9" ( #"polyorb_hi-utils.ads" 138 0 0# polyorb_hi__utils__to_string__result.Standard__string.string__content <- ( (let temp___585 = (let temp___583 = (Standard__natural.to_rep((Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__l((Polyorb_hi__utils__hi_string.__split_fields(Polyorb_hi__utils__to_string__h.h)))))) in (
   (let temp___582 = 1 in (
   (let temp___584 = (Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__s((Polyorb_hi__utils__hi_string.__split_fields(Polyorb_hi__utils__to_string__h.h)))) in (
    (Polyorb_hi__utils__to_string__T13s.of_array(( #"polyorb_hi-utils.ads" 138 0 0# assert { ( #"polyorb_hi-utils.ads" 138 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Sloc:polyorb_hi-utils.ads:138:9" "GP_Id:13" "comment:      (H.S (1 .. H.L));
        ^ polyorb_hi-utils.ads:138:9:VC_RANGE_CHECK" "GP_Shape:return__slice" ( (temp___582 <= temp___583) -> ( ( (Polyorb_hi__utils__hi_string__T7s.first <= temp___582) /\ (temp___582 <= Polyorb_hi__utils__hi_string__T7s.last) ) /\ ( (Polyorb_hi__utils__hi_string__T7s.first <= temp___583) /\ (temp___583 <= Polyorb_hi__utils__hi_string__T7s.last) ) ) ) ) };
    temp___584 )) (temp___582) (temp___583))))
   ))
   ))
    in (
    (Standard__string.of_array((Polyorb_hi__utils__to_string__T13s.to_array(temp___585))) ((Polyorb_hi__utils__to_string__T13s.first(temp___585))) ((Polyorb_hi__utils__to_string__T13s.last(temp___585))))))
    );
   #"polyorb_hi-utils.ads" 138 0 0# raise Return__exc ) );
   #"polyorb_hi-utils.ads" 137 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-utils.ads:91 *)
  ;
  #"polyorb_hi-utils.ads" 137 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  polyorb_hi__utils__to_string__result.Standard__string.string__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "length" defined at polyorb_hi-utils.ads:94, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__utils__length__subprogram_def
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Polyorb_hi__utils__hi_string
 use        Polyorb_hi__utils__hi_string___axiom
 use        Polyorb_hi__utils__valid
 use        Polyorb_hi__utils__valid___axiom
 use        Polyorb_hi__utils__length__h
 use        Standard__natural___axiom
 use        Polyorb_hi__utils__length__h___axiom
 use        Polyorb_hi__utils__valid___axiom
 use        Polyorb_hi__utils__hi_string___axiom

 val polyorb_hi__utils__length__result #"system.ads" 1 0 0# "model" "model_trace:2972@result"  : int__ref 
 
 let def #"system.ads" 1 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:94" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-utils.ads:94 *)
  ;
  #"polyorb_hi-utils.ads" 86 0 0# assume { (Polyorb_hi__utils__hi_string___axiom.dynamic_invariant Polyorb_hi__utils__length__h.h True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-utils.ads:94 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-utils.ads:94 *)
  ;
  #"polyorb_hi-utils.ads" 94 0 0# abstract ensures {true}(let _ = (Polyorb_hi__utils__valid___axiom.valid(Polyorb_hi__utils__length__h.h)) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-utils.ads:94 *)
  ;
  #"polyorb_hi-utils.ads" 94 0 0# assume { ((Polyorb_hi__utils__valid.valid Polyorb_hi__utils__length__h.h) = True) };
  () (* checking of pragma precondition polyorb_hi-utils.ads:94 *)
  ;
  try
   ( ( "GP_Sloc:polyorb_hi-utils.ads:132:9" ( #"polyorb_hi-utils.ads" 132 0 0# polyorb_hi__utils__length__result.int__content <- ( (Standard__natural.to_rep((Polyorb_hi__utils__hi_string.rec__polyorb_hi__utils__hi_string__l((Polyorb_hi__utils__hi_string.__split_fields(Polyorb_hi__utils__length__h.h)))))) );
   #"polyorb_hi-utils.ads" 132 0 0# raise Return__exc ) );
   #"polyorb_hi-utils.ads" 131 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-utils.ads:94 *)
  ;
  #"polyorb_hi-utils.ads" 131 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  polyorb_hi__utils__length__result.int__content )
end

(* Module for checking contracts and absence of run-time errors in subprogram "parse_string" defined at polyorb_hi-utils.ads:99, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__utils__parse_string__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__string
 use        Standard__integer
 use        Standard__integer___axiom
 use        Standard__character
 use        Standard__character___axiom
 use        Array__Int__Standard__character
 use        Standard__string___axiom
 use        Polyorb_hi__utils__parse_string__s
 use        Polyorb_hi__utils__parse_string__first
 use        Polyorb_hi__utils__parse_string__delimiter
 use        Polyorb_hi__utils__parse_string__last
 use        Polyorb_hi__utils__parse_string__L_1
 use        Polyorb_hi__utils__parse_string__L_1__j
 use        Array__Int__Standard__character
 use        Standard__integer___axiom
 use        Standard__positive___axiom
 use        Standard__character___axiom
 use        Standard__string___axiom
 use        Standard__integer___axiom
 use        Polyorb_hi__utils__parse_string__last___axiom
 use        Polyorb_hi__utils__parse_string__L_1__j___axiom
 use        Polyorb_hi__utils__parse_string__L_1___axiom
 use        Polyorb_hi__utils__parse_string__s___axiom
 use        Polyorb_hi__utils__parse_string__first___axiom
 use        Polyorb_hi__utils__parse_string__delimiter___axiom

 val polyorb_hi__utils__parse_string__result #"system.ads" 1 0 0# "model" "model_trace:3017@result"  : int__ref 
 
 let def #"system.ads" 1 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.ads:99" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-utils.ads:99 *)
  ;
  #"system.ads" 1 0 0# assume { (Standard__string___axiom.dynamic_invariant Polyorb_hi__utils__parse_string__s.s True False True) };
  #"system.ads" 1 0 0# assume { (Standard__integer___axiom.dynamic_invariant Polyorb_hi__utils__parse_string__first.first True False True) };
  #"system.ads" 1 0 0# assume { (Standard__character___axiom.dynamic_invariant Polyorb_hi__utils__parse_string__delimiter.delimiter True False True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram polyorb_hi-utils.ads:99 *)
  ;
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-utils.ads:99 *)
  ;
  #"polyorb_hi-utils.ads" 99 0 0# abstract ensures {true}(let _ = (Boolean.andb((Polyorb_hi__utils__parse_string__first.first >= ( #"polyorb_hi-utils.ads" 99 0 0# abstract ensures {true}(let _ = Polyorb_hi__utils__parse_string__s.s in (
   ()))
   end ;
  (Standard__string.first(Polyorb_hi__utils__parse_string__s.s)) ))) ((Polyorb_hi__utils__parse_string__first.first <= ( #"polyorb_hi-utils.ads" 99 0 0# abstract ensures {true}(let _ = Polyorb_hi__utils__parse_string__s.s in (
   ()))
   end ;
  (Standard__string.last(Polyorb_hi__utils__parse_string__s.s)) )))) in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-utils.ads:99 *)
  ;
  #"polyorb_hi-utils.ads" 99 0 0# assume { ( (Polyorb_hi__utils__parse_string__first.first >= (Standard__string.first Polyorb_hi__utils__parse_string__s.s)) /\ (Polyorb_hi__utils__parse_string__first.first <= (Standard__string.last Polyorb_hi__utils__parse_string__s.s)) ) };
  () (* checking of pragma precondition polyorb_hi-utils.ads:99 *)
  ;
  try
   ( #"polyorb_hi-utils.adb" 115 0 0# Polyorb_hi__utils__parse_string__last.last.int__content <- ( ( #"system.ads" 1 0 0# abstract ensures {true}(let _ = Polyorb_hi__utils__parse_string__s.s in (
    ()))
    end ;
   (Standard__string.last(Polyorb_hi__utils__parse_string__s.s)) ) );
   #"system.ads" 1 0 0# assume { (Standard__integer___axiom.dynamic_invariant Polyorb_hi__utils__parse_string__last.last.int__content True False True) };
   ( "GP_Sloc:polyorb_hi-utils.adb:117:32" (let temp___587 = Polyorb_hi__utils__parse_string__first.first in (
   (let temp___588 = ( #"polyorb_hi-utils.adb" 117 0 0# abstract ensures {true}(let _ = Polyorb_hi__utils__parse_string__s.s in (
    ()))
    end ;
   (Standard__string.last(Polyorb_hi__utils__parse_string__s.s)) ) in (
    ( #"polyorb_hi-utils.ads" 99 0 0# Polyorb_hi__utils__parse_string__L_1__j.j.int__content <- ( temp___587 );
    () (* Translation of an Ada loop from polyorb_hi-utils.adb:117 *)
    ;
    (if ((Boolean.andb((temp___587 <= Polyorb_hi__utils__parse_string__L_1__j.j.int__content)) ((Polyorb_hi__utils__parse_string__L_1__j.j.int__content <= temp___588)))) then (
     try
      ( #"polyorb_hi-utils.adb" 117 0 0# abstract ensures {true}(let _ = Polyorb_hi__utils__parse_string__last.last.int__content in (
       ()))
       end ;
      (let temp___586 = #"polyorb_hi-utils.adb" 115 0 0# (any int
      ensures {(result = Polyorb_hi__utils__parse_string__last.last.int__content)} 
      ) in (
       ( () (* First unroling of the loop statements appearing before the loop invariant of loop polyorb_hi-utils.adb:117 *)
       ;
       () (* While loop translating the Ada loop from polyorb_hi-utils.adb:117 *)
       ;
       #"polyorb_hi-utils.adb" 117 0 0# while True do
        ( () (* Assume implicit invariants from the loop polyorb_hi-utils.adb:117 *)
        ;
        #"polyorb_hi-utils.adb" 117 0 0# assume { (Boolean.andb(( ( true /\ (Standard__integer___axiom.dynamic_invariant Polyorb_hi__utils__parse_string__last.last.int__content False True True) ) /\ true )) (( (Polyorb_hi__utils__parse_string__first.first <= Polyorb_hi__utils__parse_string__L_1__j.j.int__content) /\ (Polyorb_hi__utils__parse_string__L_1__j.j.int__content <= (Standard__string.last Polyorb_hi__utils__parse_string__s.s)) ))) };
        () (* Check for absence of RTE in the invariant of loop polyorb_hi-utils.adb:117 *)
        ;
        () (* Loop statements appearing after the loop invariant of loop polyorb_hi-utils.adb:117 *)
        ;
        ( "GP_Sloc:polyorb_hi-utils.adb:118:10" (if (((Standard__character.to_rep((Array__Int__Standard__character.get((Standard__string.to_array(Polyorb_hi__utils__parse_string__s.s))) (( #"polyorb_hi-utils.adb" 118 0 0# assert { ( #"polyorb_hi-utils.adb" 118 0 0# "model_vc" "keep_on_simp" "GP_Sloc:polyorb_hi-utils.adb:118:16" "GP_Reason:VC_INDEX_CHECK" "GP_Id:15" "comment:         if S (J) = Delimiter then
               ^ polyorb_hi-utils.adb:118:16:VC_INDEX_CHECK" "GP_Shape:L_1_while__if__cmp__ixdcomp" ( ((Standard__string.first Polyorb_hi__utils__parse_string__s.s) <= Polyorb_hi__utils__parse_string__L_1__j.j.int__content) /\ (Polyorb_hi__utils__parse_string__L_1__j.j.int__content <= (Standard__string.last Polyorb_hi__utils__parse_string__s.s)) ) ) };
        Polyorb_hi__utils__parse_string__L_1__j.j.int__content ))))) = Polyorb_hi__utils__parse_string__delimiter.delimiter)) then (
         ( ( "GP_Sloc:polyorb_hi-utils.adb:119:18" #"polyorb_hi-utils.adb" 119 0 0# Polyorb_hi__utils__parse_string__last.last.int__content <- ( ( #"polyorb_hi-utils.adb" 119 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Sloc:polyorb_hi-utils.adb:119:23" "GP_Id:14" "comment:            Last := J - 1;
                      ^ polyorb_hi-utils.adb:119:23:VC_OVERFLOW_CHECK" "GP_Shape:L_1_while__if__last_assign__sub" (Standard__integer.range_check_((Polyorb_hi__utils__parse_string__L_1__j.j.int__content - 1))) ) ) );
         ( "GP_Sloc:polyorb_hi-utils.adb:120:13" #"polyorb_hi-utils.adb" 120 0 0# raise Polyorb_hi__utils__parse_string__L_1.L_1 ) )) else (
         ())) );
        () (* Check for the exit condition and loop statements appearing before the loop invariant of loop polyorb_hi-utils.adb:117 *)
        ;
        (if ((Polyorb_hi__utils__parse_string__L_1__j.j.int__content = temp___588)) then (
         #"polyorb_hi-utils.adb" 117 0 0# raise Polyorb_hi__utils__parse_string__L_1.L_1));
        #"polyorb_hi-utils.adb" 117 0 0# Polyorb_hi__utils__parse_string__L_1__j.j.int__content <- ( (Polyorb_hi__utils__parse_string__L_1__j.j.int__content + 1) ) )
       done )))
       )
     with
      Polyorb_hi__utils__parse_string__L_1.L_1 -> ()
     end)) )))
   ))
    );
   ( "GP_Sloc:polyorb_hi-utils.adb:124:7" ( #"polyorb_hi-utils.adb" 124 0 0# polyorb_hi__utils__parse_string__result.int__content <- ( Polyorb_hi__utils__parse_string__last.last.int__content );
   #"polyorb_hi-utils.adb" 124 0 0# raise Return__exc ) );
   #"polyorb_hi-utils.adb" 112 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* checking of pragma postcondition polyorb_hi-utils.ads:99 *)
  ;
  #"polyorb_hi-utils.adb" 112 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  polyorb_hi__utils__parse_string__result.int__content )
end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "to_internal_codeGP3886" defined at polyorb_hi-utils.adb:91, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__package_def
 use import "_gnatprove_standard".Main

 let def #"system.ads" 1 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.adb:91" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ()
end

(* Module for checking contracts and absence of run-time errors in subprogram "to_internal_code" defined at polyorb_hi-utils.adb:91, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code__subprogram_def
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__source___axiom
 use        Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code__s
 use        Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code__s___axiom
 use        Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__source___axiom

 let def #"system.ads" 1 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.adb:91" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-utils.adb:91 *)
  ;
  #"a-unccon.ads" 17 0 0# assume { (Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__source___axiom.dynamic_invariant Polyorb_hi__utils__internal_code__3__to_internal_codeGP3886__to_internal_code__s.s True False True) };
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-utils.adb:91 *)
  ;
  #"a-unccon.ads" 20 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-utils.adb:91 *)
  ;
  #"a-unccon.ads" 20 0 0# assume { true } )
end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "to_corresponding_portGP4218" defined at polyorb_hi-utils.adb:102, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__package_def
 use import "_gnatprove_standard".Main

 let def #"a-unccon.ads" 20 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.adb:102" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ()
end

(* Module for checking contracts and absence of run-time errors in subprogram "to_corresponding_port" defined at polyorb_hi-utils.adb:102, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port__subprogram_def
 use import "_gnatprove_standard".Main
 use        Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__source___axiom
 use        Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port__s
 use        Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port__s___axiom
 use        Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__source___axiom

 let def #"a-unccon.ads" 20 0 0# "W:diverges:N" "GP_Subp:polyorb_hi-utils.adb:102" 
   (__void_param : unit)
  requires { true }
  ensures { true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram polyorb_hi-utils.adb:102 *)
  ;
  #"a-unccon.ads" 17 0 0# assume { (Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__source___axiom.dynamic_invariant Polyorb_hi__utils__corresponding_port__to_corresponding_portGP4218__to_corresponding_port__s.s True False True) };
  () (* Check for RTE in the Pre of the subprogram polyorb_hi-utils.adb:102 *)
  ;
  #"a-unccon.ads" 20 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram polyorb_hi-utils.adb:102 *)
  ;
  #"a-unccon.ads" 20 0 0# assume { true } )
end
