pragma Style_Checks (Off); -- turn off style checks
-- Code automatically generated by asn1scc tool
-- Date was: 04/28/2011
-- Time was: 13:55:57

WITH Ada.Strings.Fixed;
USE ADA.Strings.Fixed;

WITH Interfaces;
USE Interfaces;

WITH Ada.Characters.latin_1;


WITH AdaAsn1RTL;
USE AdaAsn1RTL;

package POHICDRIVER_UART is


TYPE Baudrate_T IS (b9600, b19200, b38400, b57600, b115200, b230400);
for Baudrate_T use
	(b9600 => 0, b19200 => 1, b38400 => 2, b57600 => 3, b115200 => 4, b230400 => 5);
for Baudrate_T'Size use 32;

Baudrate_T_REQUIRED_BYTES_FOR_ENCODING:CONSTANT INTEGER := 1;
Baudrate_T_REQUIRED_BITS_FOR_ENCODING:CONSTANT INTEGER := 3;
Baudrate_T_REQUIRED_BYTES_FOR_ACN_ENCODING:CONSTANT INTEGER := 1;
Baudrate_T_REQUIRED_BITS_FOR_ACN_ENCODING:CONSTANT INTEGER := 3;

ERR_Baudrate_T_unknown_enumeration_value:CONSTANT INTEGER := 1000; -- invalid enumeration value 



TYPE Parity_T IS (even, odd);
for Parity_T use
	(even => 0, odd => 1);
for Parity_T'Size use 32;

Parity_T_REQUIRED_BYTES_FOR_ENCODING:CONSTANT INTEGER := 1;
Parity_T_REQUIRED_BITS_FOR_ENCODING:CONSTANT INTEGER := 1;
Parity_T_REQUIRED_BYTES_FOR_ACN_ENCODING:CONSTANT INTEGER := 1;
Parity_T_REQUIRED_BITS_FOR_ACN_ENCODING:CONSTANT INTEGER := 1;

ERR_Parity_T_unknown_enumeration_value:CONSTANT INTEGER := 1001; -- invalid enumeration value 



TYPE Serial_Conf_T_EXIST IS RECORD
	speed:BIT;
	parity:BIT;
	bits:BIT;
	use_paritybit:BIT;
END RECORD;
TYPE Serial_Conf_T IS RECORD
    devname : String(1..21);
    speed : Baudrate_T;
    parity : Parity_T;
    bits : Asn1Int:=7;
    use_paritybit : Asn1Boolean;
    Exist : Serial_Conf_T_EXIST;
END RECORD;

Serial_Conf_T_REQUIRED_BYTES_FOR_ENCODING:CONSTANT INTEGER := 20;
Serial_Conf_T_REQUIRED_BITS_FOR_ENCODING:CONSTANT INTEGER := 155;
Serial_Conf_T_REQUIRED_BYTES_FOR_ACN_ENCODING:CONSTANT INTEGER := 22;
Serial_Conf_T_REQUIRED_BITS_FOR_ACN_ENCODING:CONSTANT INTEGER := 175;

ERR_Serial_Conf_T_devname:CONSTANT INTEGER := 1002; -- (SIZE (1..20)) 
ERR_Serial_Conf_T_bits:CONSTANT INTEGER := 1003; -- (7..8) 




--END;
end POHICDRIVER_UART;
